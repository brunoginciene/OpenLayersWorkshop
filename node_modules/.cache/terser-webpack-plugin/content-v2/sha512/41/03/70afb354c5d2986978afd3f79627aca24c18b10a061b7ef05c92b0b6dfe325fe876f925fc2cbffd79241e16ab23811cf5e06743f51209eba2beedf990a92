{"map":"{\"version\":3,\"sources\":[\"webpack/bootstrap\",\"/workspace/OpenLayersWorkshop/node_modules/hashed/lib/util.js\",\"/workspace/OpenLayersWorkshop/node_modules/rbush/index.js\",\"/workspace/OpenLayersWorkshop/node_modules/hashed/lib/index.js\",\"/workspace/OpenLayersWorkshop/node_modules/util/util.js\",\"/workspace/OpenLayersWorkshop/node_modules/hashed/lib/serializers.js\",\"/workspace/OpenLayersWorkshop/node_modules/style-loader/index.js!/workspace/OpenLayersWorkshop/node_modules/css-loader/dist/cjs.js!/workspace/OpenLayersWorkshop/node_modules/ol/ol.css\",\"/workspace/OpenLayersWorkshop/node_modules/css-loader/dist/cjs.js!/workspace/OpenLayersWorkshop/node_modules/ol/ol.css\",\"/workspace/OpenLayersWorkshop/node_modules/css-loader/dist/runtime/api.js\",\"/workspace/OpenLayersWorkshop/node_modules/style-loader/lib/addStyles.js\",\"/workspace/OpenLayersWorkshop/node_modules/style-loader/lib/urls.js\",\"/workspace/OpenLayersWorkshop/node_modules/hashed/lib/store.js\",\"/workspace/OpenLayersWorkshop/node_modules/hashed/lib/schema.js\",\"/workspace/OpenLayersWorkshop/node_modules/hashed/lib/field.js\",\"/workspace/OpenLayersWorkshop/node_modules/process/browser.js\",\"/workspace/OpenLayersWorkshop/node_modules/util/support/isBufferBrowser.js\",\"/workspace/OpenLayersWorkshop/node_modules/inherits/inherits_browser.js\",\"/workspace/OpenLayersWorkshop/node_modules/hashed/lib/deserializers.js\",\"/workspace/OpenLayersWorkshop/node_modules/hashed/lib/hash.js\",\"/workspace/OpenLayersWorkshop/node_modules/quickselect/quickselect.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/util.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/AssertionError.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/CollectionEventType.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/ObjectEventType.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/obj.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/events.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/Disposable.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/functions.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/events/Event.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/events/Target.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/events/EventType.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/Observable.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/Object.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/Collection.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/MapEvent.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/MapBrowserEvent.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/has.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/MapBrowserEventType.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/MapBrowserPointerEvent.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/pointer/EventType.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/pointer/EventSource.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/pointer/MouseSource.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/pointer/MsSource.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/pointer/NativeSource.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/pointer/PointerEvent.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/array.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/pointer/TouchSource.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/pointer/PointerEventHandler.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/MapBrowserEventHandler.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/MapEventType.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/MapProperty.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/render/EventType.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/TileState.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/asserts.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/structs/PriorityQueue.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/TileQueue.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/tilegrid/common.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/math.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/centerconstraint.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/extent/Corner.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/extent/Relationship.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/extent.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/resolutionconstraint.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/rotationconstraint.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/ViewHint.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/ViewProperty.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/coordinate.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/easing.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/geom/GeometryType.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/geom/GeometryLayout.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/geom/flat/transform.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/sphere.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/proj/Units.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/proj/Projection.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/proj/epsg3857.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/proj/epsg4326.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/proj/projections.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/proj/transforms.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/proj.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/transform.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/geom/Geometry.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/geom/SimpleGeometry.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/geom/flat/area.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/geom/flat/closest.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/geom/flat/deflate.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/geom/flat/inflate.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/geom/flat/simplify.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/geom/LinearRing.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/geom/Point.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/geom/flat/contains.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/geom/flat/interiorpoint.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/geom/flat/segments.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/geom/flat/intersectsextent.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/geom/flat/reverse.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/geom/flat/orient.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/geom/Polygon.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/View.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/dom.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/layer/Property.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/layer/Base.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/source/State.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/layer/Group.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/size.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/PluggableMap.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/control/Control.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/css.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/layer/Layer.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/control/Attribution.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/control/Rotate.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/control/Zoom.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/Kinetic.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/interaction/Property.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/interaction/Interaction.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/interaction/DoubleClickZoom.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/events/condition.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/interaction/Pointer.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/interaction/DragPan.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/interaction/DragRotate.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/render/Box.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/interaction/DragBox.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/interaction/DragZoom.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/events/KeyCode.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/interaction/KeyboardPan.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/interaction/KeyboardZoom.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/interaction/MouseWheelZoom.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/interaction/PinchRotate.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/interaction/PinchZoom.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/render/Event.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/color.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/style/IconImageCache.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/renderer/Map.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/renderer/Composite.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/Map.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/control/util.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/interaction.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/layer/TileProperty.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/layer/BaseTile.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/TileRange.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/structs/LRUCache.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/render/canvas/LabelCache.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/render/canvas.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/ImageState.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/renderer/Layer.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/renderer/canvas/Layer.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/renderer/canvas/TileLayer.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/layer/Tile.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/colorlike.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/style/Image.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/style/RegularShape.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/style/Circle.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/style/Fill.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/style/Stroke.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/style/Style.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/layer/BaseVector.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/render/VectorContext.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/render/canvas/Instruction.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/render/canvas/Builder.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/render/canvas/ImageBuilder.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/render/canvas/LineStringBuilder.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/render/canvas/PolygonBuilder.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/geom/flat/straightchunk.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/style/TextPlacement.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/render/canvas/TextBuilder.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/render/canvas/BuilderGroup.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/render/canvas/BuilderType.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/geom/flat/length.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/geom/flat/textpath.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/render/canvas/Executor.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/render/canvas/ExecutorGroup.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/renderer/vector.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/renderer/canvas/VectorLayer.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/layer/Vector.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/reproj/common.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/Tile.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/ImageTile.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/tilecoord.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/TileCache.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/reproj.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/reproj/Triangulation.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/reproj/Tile.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/tileurlfunction.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/source/Source.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/tilegrid/TileGrid.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/tilegrid.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/source/Tile.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/source/TileEventType.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/source/UrlTile.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/source/TileImage.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/source/XYZ.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/format/FormatType.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/featureloader.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/loadingstrategy.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/source/VectorEventType.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/structs/RBush.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/source/Vector.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/Feature.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/format/Feature.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/format/JSONFeature.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/geom/GeometryCollection.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/geom/flat/interpolate.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/geom/LineString.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/geom/MultiLineString.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/geom/MultiPoint.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/geom/MultiPolygon.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/geom/flat/center.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/format/GeoJSON.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/xml.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/format/XMLFeature.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/format/xsd.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/style/IconAnchorUnits.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/style/IconImage.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/format/KML.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/style/IconOrigin.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/style/Icon.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/style/Text.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol-hashed/index.js\",\"/workspace/OpenLayersWorkshop/node_modules/ol/interaction/DragAndDrop.js\",\"/workspace/OpenLayersWorkshop/main.js\"],\"names\":[\"installedModules\",\"__webpack_require__\",\"moduleId\",\"exports\",\"module\",\"i\",\"l\",\"modules\",\"call\",\"m\",\"c\",\"d\",\"name\",\"getter\",\"o\",\"Object\",\"defineProperty\",\"enumerable\",\"get\",\"r\",\"Symbol\",\"toStringTag\",\"value\",\"t\",\"mode\",\"__esModule\",\"ns\",\"create\",\"key\",\"bind\",\"n\",\"object\",\"property\",\"prototype\",\"hasOwnProperty\",\"p\",\"s\",\"util\",\"typeOf\",\"type\",\"isArray\",\"isDate\",\"isRegExp\",\"isError\",\"extend\",\"dest\",\"source\",\"zip\",\"zipped\",\"count\",\"unzip\",\"array\",\"ii\",\"length\",\"rbush\",\"default\",\"quickselect\",\"maxEntries\",\"format\",\"this\",\"_maxEntries\",\"Math\",\"max\",\"_minEntries\",\"ceil\",\"_initFormat\",\"clear\",\"findItem\",\"item\",\"items\",\"equalsFn\",\"indexOf\",\"calcBBox\",\"node\",\"toBBox\",\"distBBox\",\"children\",\"k\",\"destNode\",\"createNode\",\"minX\",\"Infinity\",\"minY\",\"maxX\",\"maxY\",\"child\",\"leaf\",\"a\",\"b\",\"min\",\"compareNodeMinX\",\"compareNodeMinY\",\"bboxArea\",\"bboxMargin\",\"contains\",\"intersects\",\"height\",\"multiSelect\",\"arr\",\"left\",\"right\",\"compare\",\"mid\",\"stack\",\"pop\",\"push\",\"all\",\"_all\",\"data\",\"search\",\"bbox\",\"result\",\"len\",\"childBBox\",\"nodesToSearch\",\"collides\",\"load\",\"insert\",\"_build\",\"slice\",\"_splitRoot\",\"tmpNode\",\"_insert\",\"remove\",\"parent\",\"index\",\"goingUp\",\"path\",\"indexes\",\"splice\",\"_condense\",\"compareMinX\",\"compareMinY\",\"toJSON\",\"fromJSON\",\"apply\",\"N\",\"M\",\"log\",\"pow\",\"j\",\"right2\",\"right3\",\"N2\",\"N1\",\"sqrt\",\"_chooseSubtree\",\"level\",\"targetNode\",\"area\",\"enlargement\",\"minArea\",\"minEnlargement\",\"isNode\",\"insertPath\",\"_split\",\"_adjustParentBBoxes\",\"_chooseSplitAxis\",\"splitIndex\",\"_chooseSplitIndex\",\"newNode\",\"bbox1\",\"bbox2\",\"overlap\",\"minOverlap\",\"_allDistMargin\",\"sort\",\"leftBBox\",\"rightBBox\",\"margin\",\"siblings\",\"compareArr\",\"Function\",\"join\",\"Store\",\"hash\",\"store\",\"reset\",\"window\",\"removeEventListener\",\"update\",\"addEventListener\",\"deserialize\",\"location\",\"values\",\"defaults\",\"nonDefaults\",\"history\",\"pushState\",\"serialize\",\"register\",\"config\",\"callback\",\"unregister\",\"process\",\"getOwnPropertyDescriptors\",\"obj\",\"keys\",\"descriptors\",\"getOwnPropertyDescriptor\",\"formatRegExp\",\"f\",\"isString\",\"objects\",\"arguments\",\"inspect\",\"args\",\"str\",\"String\",\"replace\",\"x\",\"Number\",\"JSON\",\"stringify\",\"_\",\"isNull\",\"isObject\",\"deprecate\",\"fn\",\"msg\",\"noDeprecation\",\"warned\",\"throwDeprecation\",\"Error\",\"traceDeprecation\",\"console\",\"trace\",\"error\",\"debugEnviron\",\"debugs\",\"opts\",\"ctx\",\"seen\",\"stylize\",\"stylizeNoColor\",\"depth\",\"colors\",\"isBoolean\",\"showHidden\",\"_extend\",\"isUndefined\",\"customInspect\",\"stylizeWithColor\",\"formatValue\",\"styleType\",\"style\",\"styles\",\"recurseTimes\",\"isFunction\",\"constructor\",\"ret\",\"primitive\",\"simple\",\"isNumber\",\"formatPrimitive\",\"visibleKeys\",\"forEach\",\"val\",\"idx\",\"arrayToHash\",\"getOwnPropertyNames\",\"formatError\",\"RegExp\",\"toString\",\"Date\",\"output\",\"base\",\"braces\",\"toUTCString\",\"formatProperty\",\"match\",\"formatArray\",\"map\",\"reduce\",\"prev\",\"cur\",\"numLinesEst\",\"reduceToSingleString\",\"desc\",\"set\",\"split\",\"line\",\"substr\",\"ar\",\"Array\",\"arg\",\"re\",\"objectToString\",\"e\",\"pad\",\"debuglog\",\"env\",\"NODE_DEBUG\",\"toUpperCase\",\"test\",\"pid\",\"bold\",\"italic\",\"underline\",\"inverse\",\"white\",\"grey\",\"black\",\"blue\",\"cyan\",\"green\",\"magenta\",\"red\",\"yellow\",\"special\",\"number\",\"boolean\",\"undefined\",\"null\",\"string\",\"date\",\"regexp\",\"isNullOrUndefined\",\"isSymbol\",\"isPrimitive\",\"isBuffer\",\"months\",\"prop\",\"time\",\"getHours\",\"getMinutes\",\"getSeconds\",\"getDate\",\"getMonth\",\"inherits\",\"origin\",\"add\",\"kCustomPromisifiedSymbol\",\"callbackifyOnRejected\",\"reason\",\"cb\",\"newReason\",\"promisify\",\"original\",\"TypeError\",\"writable\",\"configurable\",\"promiseResolve\",\"promiseReject\",\"promise\",\"Promise\",\"resolve\",\"reject\",\"err\",\"setPrototypeOf\",\"getPrototypeOf\",\"defineProperties\",\"custom\",\"callbackify\",\"callbackified\",\"maybeCb\",\"self\",\"then\",\"nextTick\",\"rej\",\"enc\",\"encodeURIComponent\",\"serializers\",\"num\",\"bool\",\"toISOString\",\"content\",\"options\",\"hmr\",\"transform\",\"insertInto\",\"locals\",\"useSourceMap\",\"list\",\"cssMapping\",\"btoa\",\"sourceMapping\",\"sourceMap\",\"unescape\",\"sourceURLs\",\"sources\",\"sourceRoot\",\"concat\",\"cssWithMappingToString\",\"mediaQuery\",\"alreadyImportedModules\",\"id\",\"memo\",\"stylesInDom\",\"isOldIE\",\"document\",\"atob\",\"getElement\",\"target\",\"styleTarget\",\"querySelector\",\"HTMLIFrameElement\",\"contentDocument\",\"head\",\"singleton\",\"singletonCounter\",\"stylesInsertedAtTop\",\"fixUrls\",\"addStylesToDom\",\"domStyle\",\"refs\",\"parts\",\"addStyle\",\"listToStyles\",\"newStyles\",\"part\",\"css\",\"media\",\"insertStyleElement\",\"lastStyleElementInsertedAtTop\",\"insertAt\",\"nextSibling\",\"insertBefore\",\"appendChild\",\"firstChild\",\"before\",\"removeStyleElement\",\"parentNode\",\"removeChild\",\"createStyleElement\",\"createElement\",\"attrs\",\"nonce\",\"nc\",\"getNonce\",\"addAttrs\",\"el\",\"setAttribute\",\"styleIndex\",\"applyToSingletonTag\",\"URL\",\"createObjectURL\",\"revokeObjectURL\",\"Blob\",\"link\",\"rel\",\"createLinkElement\",\"autoFixUrls\",\"convertToAbsoluteUrls\",\"blob\",\"oldSrc\",\"href\",\"styleSheet\",\"cssText\",\"createTextNode\",\"newObj\",\"DEBUG\",\"newList\",\"mayRemove\",\"textStore\",\"replaceText\",\"replacement\",\"filter\",\"Boolean\",\"cssNode\",\"childNodes\",\"baseUrl\",\"protocol\",\"host\",\"currentDir\",\"pathname\",\"fullMatch\",\"origUrl\",\"newUrl\",\"unquotedOrigUrl\",\"trim\",\"$1\",\"Schema\",\"_values\",\"_defaults\",\"_providers\",\"_callback\",\"_callbackTimer\",\"_scheduleCallback\",\"clearTimeout\",\"setTimeout\",\"_debouncedCallback\",\"_updateTimer\",\"_debouncedUpdate\",\"newValues\",\"providers\",\"provider\",\"schema\",\"changed\",\"state\",\"forEachKey\",\"prefixed\",\"deserialized\",\"getDefault\",\"serializedDefault\",\"removedProvider\",\"conflicts\",\"_initializeProvider\",\"serializedValue\",\"deserializedValue\",\"deserializedDefault\",\"serialized\",\"serializer\",\"Field\",\"fields\",\"prefix\",\"_prefix\",\"_fields\",\"getPrefixed\",\"thisArg\",\"more\",\"other\",\"thisPrefixedKeys\",\"deserializers\",\"cachedSetTimeout\",\"cachedClearTimeout\",\"defaultSetTimout\",\"defaultClearTimeout\",\"runTimeout\",\"fun\",\"currentQueue\",\"queue\",\"draining\",\"queueIndex\",\"cleanUpNextTick\",\"drainQueue\",\"timeout\",\"run\",\"marker\",\"runClearTimeout\",\"Item\",\"noop\",\"title\",\"browser\",\"argv\",\"version\",\"versions\",\"on\",\"addListener\",\"once\",\"off\",\"removeListener\",\"removeAllListeners\",\"emit\",\"prependListener\",\"prependOnceListener\",\"listeners\",\"binding\",\"cwd\",\"chdir\",\"dir\",\"umask\",\"copy\",\"fill\",\"readUInt8\",\"ctor\",\"superCtor\",\"super_\",\"TempCtor\",\"dec\",\"decodeURIComponent\",\"isNaN\",\"getTime\",\"parse\",\"substring\",\"swap\",\"tmp\",\"defaultCompare\",\"quickselectStep\",\"z\",\"exp\",\"sd\",\"newLeft\",\"floor\",\"newRight\",\"factory\",\"util_abstract\",\"uidCounter_\",\"getUid\",\"ol_uid\",\"extendStatics\",\"VERSION\",\"__extends\",\"__proto__\",\"__\",\"ol_AssertionError\",\"_super\",\"AssertionError\",\"code\",\"_this\",\"message\",\"CollectionEventType\",\"ADD\",\"REMOVE\",\"ObjectEventType\",\"obj_assign\",\"assign\",\"var_sources\",\"getValues\",\"isEmpty\",\"findListener\",\"listener\",\"opt_this\",\"opt_setDeleteIndex\",\"listenerObj\",\"bindTo\",\"deleteIndex\",\"getListeners\",\"listenerMap\",\"getListenerMap\",\"opt_create\",\"ol_lm\",\"removeListeners\",\"boundListener\",\"removeListenerMap\",\"listen\",\"opt_once\",\"callOnce\",\"evt\",\"unlistenByKey\",\"bindListener\",\"listenOnce\",\"unlisten\",\"ol_Disposable\",\"Disposable\",\"disposed_\",\"dispose\",\"disposeInternal\",\"TRUE\",\"FALSE\",\"VOID\",\"events_Event\",\"Event\",\"propagationStopped\",\"preventDefault\",\"stopPropagation\",\"Target_extends\",\"events_Target\",\"Target\",\"pendingRemovals_\",\"dispatching_\",\"listeners_\",\"dispatchEvent\",\"event\",\"propagate\",\"pendingRemovals\",\"unlistenAll\",\"hasListener\",\"opt_type\",\"EventType\",\"CHANGE\",\"CLEAR\",\"CONTEXTMENU\",\"CLICK\",\"DBLCLICK\",\"DRAGENTER\",\"DRAGOVER\",\"DROP\",\"ERROR\",\"KEYDOWN\",\"KEYPRESS\",\"LOAD\",\"MOUSEDOWN\",\"MOUSEMOVE\",\"MOUSEOUT\",\"MOUSEUP\",\"MOUSEWHEEL\",\"MSPOINTERDOWN\",\"RESIZE\",\"TOUCHSTART\",\"TOUCHMOVE\",\"TOUCHEND\",\"WHEEL\",\"Observable_extends\",\"ol_Observable\",\"Observable\",\"revision_\",\"getRevision\",\"un\",\"Object_extends\",\"ObjectEvent\",\"oldValue\",\"Object_BaseObject\",\"BaseObject\",\"opt_values\",\"values_\",\"setProperties\",\"getKeys\",\"getProperties\",\"notify\",\"eventType\",\"getChangeEventType\",\"opt_silent\",\"unset\",\"changeEventTypeCache\",\"ol_Object\",\"Collection_extends\",\"Property\",\"CollectionEvent\",\"opt_element\",\"opt_index\",\"element\",\"ol_Collection\",\"Collection\",\"opt_array\",\"opt_options\",\"unique_\",\"unique\",\"array_\",\"assertUnique_\",\"updateLength_\",\"getLength\",\"getArray\",\"elem\",\"removeAt\",\"setAt\",\"opt_except\",\"MapEvent_extends\",\"ol_MapEvent\",\"MapEvent\",\"opt_frameState\",\"frameState\",\"MapBrowserEvent_extends\",\"ol_MapBrowserEvent\",\"MapBrowserEvent\",\"browserEvent\",\"opt_dragging\",\"originalEvent\",\"pixel\",\"getEventPixel\",\"coordinate\",\"getCoordinateFromPixel\",\"dragging\",\"ua\",\"navigator\",\"userAgent\",\"toLowerCase\",\"FIREFOX\",\"SAFARI\",\"WEBKIT\",\"MAC\",\"DEVICE_PIXEL_RATIO\",\"devicePixelRatio\",\"TOUCH\",\"POINTER\",\"MSPOINTER\",\"MapBrowserEventType\",\"SINGLECLICK\",\"POINTERDRAG\",\"POINTERMOVE\",\"POINTERDOWN\",\"POINTERUP\",\"POINTEROVER\",\"POINTEROUT\",\"POINTERENTER\",\"POINTERLEAVE\",\"POINTERCANCEL\",\"MapBrowserPointerEvent_extends\",\"ol_MapBrowserPointerEvent\",\"MapBrowserPointerEvent\",\"pointerEvent\",\"pointer_EventType\",\"pointer_EventSource\",\"EventSource\",\"dispatcher\",\"mapping\",\"mapping_\",\"getEvents\",\"getHandlerForEvent\",\"MouseSource_extends\",\"POINTER_ID\",\"POINTER_TYPE\",\"mousedown\",\"inEvent\",\"isEventSimulatedFromTouch_\",\"pointerMap\",\"cancel\",\"prepareEvent\",\"down\",\"mousemove\",\"move\",\"mouseup\",\"button\",\"up\",\"cleanupMouse\",\"mouseover\",\"enterOver\",\"mouseout\",\"leaveOut\",\"cloneEvent\",\"pd\",\"pointerId\",\"isPrimary\",\"pointerType\",\"pointer_MouseSource\",\"MouseSource\",\"lastTouches\",\"lts\",\"clientX\",\"y\",\"clientY\",\"dx\",\"abs\",\"dy\",\"MsSource_extends\",\"POINTER_TYPES\",\"msPointerDown\",\"prepareEvent_\",\"msPointerMove\",\"msPointerUp\",\"cleanup\",\"msPointerOut\",\"msPointerOver\",\"msPointerCancel\",\"msLostPointerCapture\",\"makeEvent\",\"msGotPointerCapture\",\"pointer_MsSource\",\"MsSource\",\"MSPointerDown\",\"MSPointerMove\",\"MSPointerUp\",\"MSPointerOut\",\"MSPointerOver\",\"MSPointerCancel\",\"MSGotPointerCapture\",\"MSLostPointerCapture\",\"NativeSource_extends\",\"pointerDown\",\"fireNativeEvent\",\"pointerMove\",\"pointerUp\",\"pointerOut\",\"pointerOver\",\"pointerCancel\",\"lostPointerCapture\",\"gotPointerCapture\",\"pointer_NativeSource\",\"NativeSource\",\"pointerdown\",\"pointermove\",\"pointerup\",\"pointerout\",\"pointerover\",\"pointercancel\",\"gotpointercapture\",\"lostpointercapture\",\"PointerEvent_extends\",\"HAS_BUTTONS\",\"PointerEvent\",\"opt_eventDict\",\"eventDict\",\"buttons\",\"which\",\"getButtons\",\"pressure\",\"getPressure\",\"bubbles\",\"cancelable\",\"view\",\"detail\",\"screenX\",\"screenY\",\"ctrlKey\",\"altKey\",\"shiftKey\",\"metaKey\",\"relatedTarget\",\"width\",\"tiltX\",\"tiltY\",\"hwTimestamp\",\"ev\",\"MouseEvent\",\"pointer_PointerEvent\",\"numberSafeCompareFunction\",\"includes\",\"linearFindNearest\",\"direction\",\"reverseSubArray\",\"begin\",\"end\",\"extension\",\"equals\",\"arr1\",\"arr2\",\"len1\",\"TouchSource_extends\",\"touchstart\",\"vacuumTouches_\",\"setPrimaryTouch_\",\"changedTouches\",\"dedupSynthMouse_\",\"clickCount_\",\"processTouches_\",\"overDown_\",\"touchmove\",\"moveOverOut_\",\"touchend\",\"upOut_\",\"touchcancel\",\"cancelOut_\",\"pointer_TouchSource\",\"TouchSource\",\"mouseSource\",\"firstTouchId_\",\"resetId_\",\"dedupTimeout_\",\"isPrimaryTouch_\",\"inTouch\",\"identifier\",\"cancelResetClickCount_\",\"removePrimaryPointer_\",\"inPointer\",\"resetClickCount_\",\"resetClickCountHandler_\",\"touchToPointer_\",\"radiusX\",\"radiusY\",\"force\",\"inFunction\",\"touches\",\"pointer\",\"findTouch_\",\"touchList\",\"searchId\",\"out\",\"outTarget\",\"over\",\"enter\",\"outEvent\",\"leave\",\"cleanUpPointer_\",\"lt_1\",\"PointerEventHandler_extends\",\"CLONE_PROPS\",\"pointer_PointerEventHandler\",\"PointerEventHandler\",\"element_\",\"eventMap_\",\"eventSourceList_\",\"registerSources\",\"registerSource\",\"register_\",\"newEvents\",\"handler\",\"eventSource\",\"addEvents_\",\"unregister_\",\"removeEvents_\",\"eventHandler_\",\"events\",\"eventName\",\"eventCopy\",\"fireEvent\",\"contains_\",\"container\",\"contained\",\"inType\",\"wrapMouseEvent\",\"MapBrowserEventHandler_extends\",\"ol_MapBrowserEventHandler\",\"MapBrowserEventHandler\",\"moveTolerance\",\"map_\",\"clickTimeoutId_\",\"dragging_\",\"dragListenerKeys_\",\"moveTolerance_\",\"down_\",\"getViewport\",\"activePointers_\",\"trackedTouches_\",\"pointerEventHandler_\",\"documentPointerEventHandler_\",\"pointerdownListenerKey_\",\"handlePointerDown_\",\"relayedListenerKey_\",\"relayEvent_\",\"emulateClick_\",\"newEvent\",\"updateActivePointers_\",\"handlePointerUp_\",\"isMouseActionButton_\",\"handlePointerMove_\",\"isMoving_\",\"MapEventType\",\"MapProperty\",\"LAYERGROUP\",\"SIZE\",\"TARGET\",\"VIEW\",\"render_EventType\",\"TileState\",\"IDLE\",\"LOADING\",\"LOADED\",\"EMPTY\",\"ABORT\",\"assert\",\"assertion\",\"errorCode\",\"structs_PriorityQueue\",\"PriorityQueue\",\"priorityFunction\",\"keyFunction\",\"priorityFunction_\",\"keyFunction_\",\"elements_\",\"priorities_\",\"queuedElements_\",\"dequeue\",\"elements\",\"priorities\",\"siftUp_\",\"elementKey\",\"enqueue\",\"priority\",\"siftDown_\",\"getCount\",\"getLeftChildIndex_\",\"getRightChildIndex_\",\"getParentIndex_\",\"heapify_\",\"isKeyQueued\",\"isQueued\",\"startIndex\",\"lIndex\",\"rIndex\",\"smallerChildIndex\",\"parentIndex\",\"reprioritize\",\"TileQueue_extends\",\"ol_TileQueue\",\"TileQueue\",\"tilePriorityFunction\",\"tileChangeCallback\",\"getKey\",\"tileChangeCallback_\",\"tilesLoading_\",\"tilesLoadingKeys_\",\"added\",\"handleTileChange\",\"getTilesLoading\",\"tile\",\"getState\",\"hifi\",\"tileKey\",\"loadMoreTiles\",\"maxTotalLoading\",\"maxNewLoads\",\"newLoads\",\"abortedTiles\",\"DEFAULT_MAX_ZOOM\",\"DEFAULT_TILE_SIZE\",\"clamp\",\"cosh\",\"squaredSegmentDistance\",\"x1\",\"y1\",\"x2\",\"y2\",\"math_squaredDistance\",\"toRadians\",\"angleInDegrees\",\"PI\",\"modulo\",\"lerp\",\"none\",\"center\",\"Corner\",\"BOTTOM_LEFT\",\"BOTTOM_RIGHT\",\"TOP_LEFT\",\"TOP_RIGHT\",\"Relationship\",\"UNKNOWN\",\"INTERSECTING\",\"ABOVE\",\"RIGHT\",\"BELOW\",\"LEFT\",\"boundingExtent\",\"coordinates\",\"extent\",\"createEmpty\",\"extendCoordinate\",\"buffer\",\"opt_extent\",\"clone\",\"closestSquaredDistanceXY\",\"containsCoordinate\",\"containsXY\",\"containsExtent\",\"extent1\",\"extent2\",\"coordinateRelationship\",\"relationship\",\"createOrUpdate\",\"createOrUpdateEmpty\",\"createOrUpdateFromFlatCoordinates\",\"flatCoordinates\",\"offset\",\"stride\",\"extendFlatCoordinates\",\"extent_equals\",\"extent_extend\",\"extendCoordinates\",\"extendXY\",\"getArea\",\"extent_isEmpty\",\"getWidth\",\"getHeight\",\"getBottomLeft\",\"getBottomRight\",\"getCenter\",\"getCorner\",\"corner\",\"getTopLeft\",\"getTopRight\",\"getForViewAndSize\",\"resolution\",\"rotation\",\"size\",\"cosRotation\",\"cos\",\"sinRotation\",\"sin\",\"xCos\",\"xSin\",\"yCos\",\"ySin\",\"x0\",\"x3\",\"y0\",\"y3\",\"getIntersection\",\"intersection\",\"extent_intersects\",\"getViewportClampedResolution\",\"maxExtent\",\"viewportSize\",\"xResolution\",\"yResolution\",\"getSmoothClampedResolution\",\"maxResolution\",\"minResolution\",\"createMinMaxResolution\",\"opt_smooth\",\"opt_maxExtent\",\"opt_isMoving\",\"cappedMaxRes\",\"disable\",\"rotationconstraint_none\",\"ViewHint\",\"ViewProperty\",\"coordinate_equals\",\"coordinate1\",\"coordinate2\",\"rotate\",\"angle\",\"cosAngle\",\"sinAngle\",\"easeIn\",\"easeOut\",\"inAndOut\",\"linear\",\"GeometryType\",\"POINT\",\"LINE_STRING\",\"LINEAR_RING\",\"POLYGON\",\"MULTI_POINT\",\"MULTI_LINE_STRING\",\"MULTI_POLYGON\",\"GEOMETRY_COLLECTION\",\"CIRCLE\",\"GeometryLayout\",\"XY\",\"XYZ\",\"XYM\",\"XYZM\",\"transform2D\",\"opt_dest\",\"DEFAULT_RADIUS\",\"getDistance\",\"c1\",\"c2\",\"opt_radius\",\"radius\",\"lat1\",\"lat2\",\"deltaLatBy2\",\"deltaLonBy2\",\"atan2\",\"Units\",\"DEGREES\",\"FEET\",\"METERS\",\"PIXELS\",\"TILE_PIXELS\",\"USFEET\",\"METERS_PER_UNIT\",\"proj_Units\",\"proj_Projection\",\"Projection\",\"code_\",\"units_\",\"extent_\",\"worldExtent_\",\"worldExtent\",\"axisOrientation_\",\"axisOrientation\",\"global_\",\"global\",\"canWrapX_\",\"getPointResolutionFunc_\",\"getPointResolution\",\"defaultTileGrid_\",\"metersPerUnit_\",\"metersPerUnit\",\"canWrapX\",\"getCode\",\"getExtent\",\"getUnits\",\"getMetersPerUnit\",\"getWorldExtent\",\"getAxisOrientation\",\"isGlobal\",\"setGlobal\",\"getDefaultTileGrid\",\"setDefaultTileGrid\",\"tileGrid\",\"setExtent\",\"setWorldExtent\",\"setGetPointResolution\",\"func\",\"getPointResolutionFunc\",\"epsg3857_extends\",\"RADIUS\",\"HALF_SIZE\",\"EXTENT\",\"WORLD_EXTENT\",\"epsg3857_EPSG3857Projection\",\"EPSG3857Projection\",\"units\",\"point\",\"PROJECTIONS\",\"fromEPSG4326\",\"input\",\"opt_output\",\"opt_dimension\",\"dimension\",\"halfSize\",\"tan\",\"toEPSG4326\",\"atan\",\"epsg4326_extends\",\"epsg4326_EXTENT\",\"epsg4326_METERS_PER_UNIT\",\"epsg4326_EPSG4326Projection\",\"EPSG4326Projection\",\"opt_axisOrientation\",\"epsg4326_PROJECTIONS\",\"projections_cache\",\"projections2\",\"forwardTransform\",\"inverseTransform\",\"transforms\",\"transforms_add\",\"destination\",\"transformFn\",\"sourceCode\",\"destinationCode\",\"cloneTransform\",\"identityTransform\",\"addProjection\",\"projection\",\"projections_add\",\"proj_get\",\"projectionLike\",\"opt_units\",\"pointResolution\",\"toEPSG4326_1\",\"getTransformFromProjections\",\"vertices\",\"addEquivalentProjections\",\"projections\",\"addProjections\",\"createProjection\",\"defaultCode\",\"equivalent\",\"projection1\",\"projection2\",\"equalUnits\",\"sourceProjection\",\"destinationProjection\",\"transformFunc\",\"transforms_get\",\"getTransform\",\"proj_transform\",\"compose\",\"dx1\",\"dy1\",\"sx\",\"sy\",\"dx2\",\"dy2\",\"makeInverse\",\"mat\",\"det\",\"transform_toString\",\"Geometry_extends\",\"tmpTransform\",\"geom_Geometry\",\"Geometry\",\"extentRevision_\",\"simplifiedGeometryCache\",\"simplifiedGeometryMaxMinSquaredTolerance\",\"simplifiedGeometryRevision\",\"closestPointXY\",\"closestPoint\",\"minSquaredDistance\",\"coord\",\"getClosestPoint\",\"opt_closestPoint\",\"NaN\",\"intersectsCoordinate\",\"computeExtent\",\"returnOrUpdate\",\"anchor\",\"scale\",\"opt_sy\",\"opt_anchor\",\"simplify\",\"tolerance\",\"getSimplifiedGeometry\",\"squaredTolerance\",\"getType\",\"applyTransform\",\"intersectsExtent\",\"translate\",\"deltaX\",\"deltaY\",\"sourceProj\",\"inCoordinates\",\"outCoordinates\",\"pixelExtent\",\"projectedExtent\",\"SimpleGeometry_extends\",\"getStrideForLayout\",\"layout\",\"geom_SimpleGeometry\",\"SimpleGeometry\",\"getCoordinates\",\"getFirstCoordinate\",\"getFlatCoordinates\",\"getLastCoordinate\",\"getLayout\",\"simplifiedGeometry\",\"getSimplifiedGeometryInternal\",\"getStride\",\"setFlatCoordinates\",\"setCoordinates\",\"opt_layout\",\"setLayout\",\"nesting\",\"getLayoutForStride\",\"anchorX\",\"anchorY\",\"transform_rotate\",\"transform_scale\",\"area_linearRing\",\"twiceArea\",\"area_linearRings\",\"ends\",\"assignClosest\",\"offset1\",\"offset2\",\"maxSquaredDelta\",\"squaredDelta\",\"arrayMaxSquaredDelta\",\"assignClosestPoint\",\"maxDelta\",\"isRing\",\"opt_tmpPoint\",\"squaredDistance\",\"tmpPoint\",\"assignClosestArrayPoint\",\"deflateCoordinates\",\"deflateCoordinatesArray\",\"coordinatess\",\"opt_ends\",\"jj\",\"inflateCoordinates\",\"opt_coordinates\",\"inflateCoordinatesArray\",\"opt_coordinatess\",\"inflateMultiCoordinatesArray\",\"endss\",\"opt_coordinatesss\",\"coordinatesss\",\"douglasPeucker\",\"simplifiedFlatCoordinates\",\"simplifiedOffset\",\"markers\",\"last\",\"first\",\"maxSquaredDistance\",\"squaredDistance_1\",\"douglasPeuckerArray\",\"simplifiedEnds\",\"snap\",\"round\",\"quantize\",\"quantizeArray\",\"LinearRing_extends\",\"geom_LinearRing\",\"LinearRing\",\"maxDelta_\",\"maxDeltaRevision_\",\"Point_extends\",\"geom_Point\",\"Point\",\"deflateCoordinate\",\"linearRingContainsExtent\",\"forEachCorner\",\"linearRingContainsXY\",\"wn\",\"linearRingsContainsXY\",\"getInteriorPointOfArray\",\"flatCenters\",\"flatCentersOffset\",\"intersections\",\"rr\",\"pointX\",\"maxSegmentLength\",\"segmentLength\",\"point1\",\"point2\",\"intersectsLineString\",\"coordinatesExtent\",\"start\",\"startRel\",\"endRel\",\"startX\",\"startY\",\"endX\",\"endY\",\"slope\",\"intersectsSegment\",\"intersectsLinearRingArray\",\"intersectsLinearRing\",\"reverse_coordinates\",\"linearRingIsClockwise\",\"edge\",\"linearRingsAreOriented\",\"opt_right\",\"isClockwise\",\"orientLinearRings\",\"orientLinearRingsArray\",\"Polygon_extends\",\"Polygon_Polygon\",\"Polygon\",\"ends_\",\"flatInteriorPointRevision_\",\"flatInteriorPoint_\",\"orientedRevision_\",\"orientedFlatCoordinates_\",\"appendLinearRing\",\"linearRing\",\"getOrientedFlatCoordinates\",\"getEnds\",\"getFlatInteriorPoint\",\"flatCenter\",\"getInteriorPoint\",\"getLinearRingCount\",\"getLinearRing\",\"getLinearRings\",\"linearRings\",\"geom_Polygon\",\"fromExtent\",\"View_extends\",\"DEFAULT_MIN_ZOOM\",\"animationCallback\",\"returnValue\",\"isNoopAnimation\",\"animation\",\"sourceCenter\",\"targetCenter\",\"sourceResolution\",\"targetResolution\",\"sourceRotation\",\"targetRotation\",\"ol_View\",\"View\",\"hints_\",\"animations_\",\"updateAnimationKey_\",\"projection_\",\"targetCenter_\",\"targetResolution_\",\"targetRotation_\",\"applyOptions_\",\"resolutionConstraintInfo\",\"resolutionConstraint\",\"minZoom\",\"maxZoom\",\"zoomFactor\",\"multiWorld\",\"smooth\",\"smoothResolutionConstraint\",\"resolutions\",\"constrainResolution\",\"capped\",\"createSnapToResolutions\",\"constrainOnlyCenter\",\"defaultMaxResolution\",\"defaultMinResolution\",\"power\",\"opt_minResolution\",\"zoomLevel\",\"createSnapToPower\",\"extent_1\",\"constraint\",\"createResolutionConstraint\",\"maxResolution_\",\"minResolution_\",\"zoomFactor_\",\"resolutions_\",\"minZoom_\",\"centerConstraint\",\"onlyCenter\",\"smoothExtentConstraint\",\"viewWidth\",\"viewHeight\",\"ratio\",\"createCenterConstraint\",\"rotationConstraint\",\"enableRotation\",\"constrainRotation\",\"opt_tolerance\",\"theta\",\"createRotationConstraint\",\"constraints_\",\"setRotation\",\"setCenter\",\"setResolution\",\"zoom\",\"setZoom\",\"resolveConstraints\",\"options_\",\"getUpdatedOptions_\",\"newOptions\",\"getResolution\",\"getZoom\",\"getRotation\",\"animate\",\"var_args\",\"isDef\",\"getAnimating\",\"animate_\",\"animationCount\",\"now\",\"series\",\"complete\",\"duration\",\"easing\",\"getResolutionForZoom\",\"delta\",\"setHint\",\"updateAnimations_\",\"getInteracting\",\"cancelAnimations\",\"cancelAnimationFrame\",\"seriesComplete\",\"elapsed\",\"fraction\",\"progress\",\"getSizeFromViewport_\",\"constrainedResolution\",\"calculateCenterZoom\",\"applyTargetState_\",\"constrainedRotation\",\"calculateCenterRotate\",\"requestAnimationFrame\",\"currentCenter\",\"currentResolution\",\"opt_rotation\",\"selector\",\"metrics\",\"getComputedStyle\",\"parseInt\",\"w\",\"h\",\"getConstraints\",\"getHints\",\"opt_hints\",\"calculateExtent\",\"opt_size\",\"getMaxResolution\",\"getMinResolution\",\"getMaxZoom\",\"getZoomForResolution\",\"setMaxZoom\",\"getMinZoom\",\"setMinZoom\",\"setConstrainResolution\",\"enabled\",\"getProjection\",\"getResolutions\",\"getResolutionForExtent\",\"getResolutionForValueFunction\",\"opt_power\",\"getValueForResolutionFunction\",\"pixelRatio\",\"nearest\",\"baseLevel\",\"fit\",\"geometryOrExtent\",\"geometry\",\"padding\",\"coords\",\"minRotX\",\"minRotY\",\"maxRotX\",\"maxRotY\",\"rotX\",\"rotY\",\"getConstrainedResolution\",\"centerRotX\",\"centerRotY\",\"getConstrainedCenter\",\"centerOn\",\"position\",\"centerX\",\"centerY\",\"adjustCenter\",\"deltaCoordinates\",\"adjustResolution\",\"isMoving\",\"newResolution\",\"adjustZoom\",\"adjustRotation\",\"newRotation\",\"hint\",\"opt_doNotCancelAnims\",\"opt_forceMoving\",\"newCenter\",\"opt_duration\",\"opt_resolutionDirection\",\"beginInteraction\",\"endInteraction\",\"opt_targetResolution\",\"getConstrainedZoom\",\"targetZoom\",\"opt_direction\",\"targetRes\",\"createCanvasContext2D\",\"opt_width\",\"opt_height\",\"canvas\",\"getContext\",\"replaceNode\",\"oldNode\",\"replaceChild\",\"removeNode\",\"layer_Property\",\"OPACITY\",\"VISIBLE\",\"Z_INDEX\",\"MAX_RESOLUTION\",\"MIN_RESOLUTION\",\"SOURCE\",\"Base_extends\",\"Base\",\"BaseLayer\",\"properties\",\"opacity\",\"visible\",\"zIndex\",\"className_\",\"className\",\"state_\",\"getClassName\",\"getLayerState\",\"layer\",\"managed\",\"getOpacity\",\"sourceState\",\"getSourceState\",\"getVisible\",\"getZIndex\",\"getLayersArray\",\"getLayerStatesArray\",\"opt_states\",\"setMaxResolution\",\"setMinResolution\",\"setOpacity\",\"setVisible\",\"setZIndex\",\"zindex\",\"State\",\"UNDEFINED\",\"READY\",\"Group_extends\",\"Group_Property\",\"LAYERS\",\"Group\",\"LayerGroup\",\"baseOptions\",\"layers\",\"layersListenerKeys_\",\"listenerKeys_\",\"handleLayersChanged_\",\"setLayers\",\"handleLayerChange_\",\"getLayers\",\"handleLayersAdd_\",\"handleLayersRemove_\",\"layersArray\",\"collectionEvent\",\"states\",\"pos\",\"ownLayerState\",\"layerState\",\"toSize\",\"PluggableMap_extends\",\"ol_PluggableMap\",\"PluggableMap\",\"optionsInternal\",\"keyboardEventTarget\",\"getElementById\",\"controls\",\"interactions\",\"overlays\",\"layerGroup\",\"createOptionsInternal\",\"maxTilesLoading_\",\"maxTilesLoading\",\"pixelRatio_\",\"animationDelayKey_\",\"animationDelay_\",\"renderFrame_\",\"coordinateToPixelTransform_\",\"pixelToCoordinateTransform_\",\"frameIndex_\",\"frameState_\",\"previousExtent_\",\"viewPropertyListenerKey_\",\"viewChangeListenerKey_\",\"layerGroupPropertyListenerKeys_\",\"viewport_\",\"overflow\",\"msTouchAction\",\"touchAction\",\"overlayContainer_\",\"overlayContainerStopEvent_\",\"mapBrowserEventHandler_\",\"handleMapBrowserEvent\",\"keyboardEventTarget_\",\"keyHandlerKeys_\",\"handleBrowserEvent\",\"overlays_\",\"overlayIdIndex_\",\"renderer_\",\"createRenderer\",\"handleResize_\",\"focus_\",\"postRenderFunctions_\",\"tileQueue_\",\"getTilePriority\",\"handleTileChange_\",\"skippedFeatureUids_\",\"handleLayerGroupChanged_\",\"handleViewChanged_\",\"handleSizeChanged_\",\"handleTargetChanged_\",\"control\",\"setMap\",\"interaction\",\"addOverlayInternal_\",\"getId\",\"addControl\",\"getControls\",\"addInteraction\",\"getInteractions\",\"addLayer\",\"getLayerGroup\",\"addOverlay\",\"overlay\",\"getOverlays\",\"setTarget\",\"forEachFeatureAtPixel\",\"hitTolerance\",\"layerFilter\",\"forEachFeatureAtCoordinate\",\"getFeaturesAtPixel\",\"features\",\"feature\",\"forEachLayerAtPixel\",\"hasFeatureAtPixel\",\"hasFeatureAtCoordinate\",\"getEventCoordinate\",\"viewportPosition\",\"getBoundingClientRect\",\"eventPosition\",\"top\",\"getTarget\",\"getTargetElement\",\"pixelToCoordinateTransform\",\"getOverlayById\",\"getPixelFromCoordinate\",\"coordinateToPixelTransform\",\"getRenderer\",\"getSize\",\"getView\",\"getOverlayContainer\",\"getOverlayContainerStopEvent\",\"tileSourceKey\",\"tileCenter\",\"tileResolution\",\"wantedTiles\",\"focus\",\"mapBrowserEvent\",\"HTMLElement\",\"parentElement\",\"interactionsArray\",\"getActive\",\"handleEvent\",\"handlePostRender\",\"tileQueue\",\"hints\",\"viewHints\",\"lowOnFrameBudget\",\"getLoading\",\"getSource\",\"loading\",\"dispatchRenderEvent\",\"postRenderFunctions\",\"render\",\"targetElement\",\"updateSize\",\"removeLayerRenderers\",\"handleViewPropertyChanged_\",\"isRendered\",\"renderSync\",\"removeControl\",\"removeInteraction\",\"removeLayer\",\"removeOverlay\",\"viewState\",\"previousFrameState\",\"hasArea\",\"layerStatesArray\",\"skippedFeatureUids\",\"usedTiles\",\"renderFrame\",\"setLayerGroup\",\"setSize\",\"setView\",\"skipFeature\",\"computedStyle\",\"offsetWidth\",\"parseFloat\",\"offsetHeight\",\"unskipFeature\",\"cache\",\"Control_extends\",\"control_Control\",\"Control\",\"target_\",\"listenerKeys\",\"getMap\",\"CLASS_HIDDEN\",\"CLASS_UNSELECTABLE\",\"CLASS_CONTROL\",\"CLASS_COLLAPSED\",\"getFontFamilies\",\"font\",\"family\",\"fontFamily\",\"Layer_extends\",\"visibleAtResolution\",\"layer_Layer\",\"Layer\",\"mapPrecomposeKey_\",\"mapRenderKey_\",\"sourceChangeKey_\",\"handleSourcePropertyChange_\",\"setSource\",\"handleSourceChange_\",\"layerRenderer\",\"prepareFrame\",\"renderEvent\",\"Attribution_extends\",\"Attribution_render\",\"mapEvent\",\"updateElement_\",\"control_Attribution\",\"Attribution\",\"ulElement_\",\"collapsed_\",\"collapsed\",\"overrideCollapsible_\",\"collapsible\",\"collapsible_\",\"tipLabel\",\"collapseLabel\",\"collapseLabel_\",\"textContent\",\"label\",\"label_\",\"activeLabel\",\"handleClick_\",\"cssClasses\",\"renderedAttributions_\",\"renderedVisible_\",\"collectSourceAttributions_\",\"lookup\",\"visibleAttributions\",\"attributionGetter\",\"getAttributions\",\"attributions\",\"getAttributionsCollapsible\",\"setCollapsible\",\"display\",\"lastChild\",\"removeChildren\",\"innerHTML\",\"handleToggle_\",\"classList\",\"toggle\",\"getCollapsible\",\"setCollapsed\",\"getCollapsed\",\"Rotate_extends\",\"Rotate_render\",\"rotation_\",\"autoHide_\",\"control_Rotate\",\"Rotate\",\"callResetNorth_\",\"resetNorth\",\"duration_\",\"autoHide\",\"resetNorth_\",\"Zoom_extends\",\"control_Zoom\",\"Zoom\",\"zoomInLabel\",\"zoomOutLabel\",\"zoomInTipLabel\",\"zoomOutTipLabel\",\"inElement\",\"outElement\",\"zoomByDelta_\",\"currentZoom\",\"newZoom\",\"ol_Kinetic\",\"Kinetic\",\"decay\",\"minVelocity\",\"delay\",\"decay_\",\"minVelocity_\",\"delay_\",\"points_\",\"angle_\",\"initialVelocity_\",\"lastIndex\",\"firstIndex\",\"getAngle\",\"interaction_Property\",\"Interaction_extends\",\"zoomByDelta\",\"interaction_Interaction\",\"Interaction\",\"setActive\",\"active\",\"DoubleClickZoom_extends\",\"stopEvent\",\"delta_\",\"interaction_DoubleClickZoom\",\"DoubleClickZoom\",\"altShiftKeysOnly\",\"condition_focus\",\"activeElement\",\"always\",\"mouseActionButton\",\"noModifierKeys\",\"shiftKeyOnly\",\"targetNotEditable\",\"tagName\",\"mouseOnly\",\"Pointer_extends\",\"Pointer_centroid\",\"pointerEvents\",\"Pointer\",\"PointerInteraction\",\"handleDownEvent\",\"handleDragEvent\",\"handleMoveEvent\",\"handleUpEvent\",\"stopDown\",\"handlingDownUpSequence\",\"trackedPointers_\",\"targetPointers\",\"updateTrackedPointers_\",\"handledUp\",\"handled\",\"isPointerDraggingEvent\",\"event_1\",\"DragPan_extends\",\"interaction_DragPan\",\"DragPan\",\"kinetic_\",\"kinetic\",\"lastCentroid\",\"lastPointersCount_\",\"panning_\",\"condition_\",\"condition\",\"noKinetic_\",\"centroid\",\"distance\",\"centerpx\",\"DragRotate_extends\",\"interaction_DragRotate\",\"DragRotate\",\"lastAngle_\",\"Box_extends\",\"Box\",\"RenderBox\",\"geometry_\",\"startPixel_\",\"endPixel_\",\"render_\",\"startPixel\",\"endPixel\",\"setPixels\",\"createOrUpdateGeometry\",\"getGeometry\",\"DragBox_extends\",\"DragBoxEventType\",\"DragBoxEvent\",\"interaction_DragBox\",\"DragBox\",\"box_\",\"minArea_\",\"onBoxEnd_\",\"onBoxEnd\",\"boxEndCondition_\",\"boxEndCondition\",\"defaultBoxEndCondition\",\"DragZoom_extends\",\"out_\",\"mapExtent\",\"boxPixelExtent\",\"scaleFromCenter\",\"interaction_DragZoom\",\"DragZoom\",\"KeyCode\",\"UP\",\"DOWN\",\"KeyboardPan_extends\",\"KeyboardPan_handleEvent\",\"keyCode\",\"mapUnitsDelta\",\"pixelDelta_\",\"pan\",\"interaction_KeyboardPan\",\"KeyboardPan\",\"defaultCondition_\",\"pixelDelta\",\"KeyboardZoom_extends\",\"KeyboardZoom_handleEvent\",\"charCode\",\"charCodeAt\",\"interaction_KeyboardZoom\",\"KeyboardZoom\",\"MouseWheelZoom_extends\",\"Mode\",\"interaction_MouseWheelZoom\",\"MouseWheelZoom\",\"totalDelta_\",\"lastDelta_\",\"timeout_\",\"useAnchor_\",\"useAnchor\",\"lastAnchor_\",\"startTime_\",\"timeoutId_\",\"mode_\",\"trackpadEventGap_\",\"trackpadTimeoutId_\",\"trackpadDeltaPerZoom_\",\"endInteraction_\",\"sign\",\"wheelEvent\",\"deltaMode\",\"WheelEvent\",\"DOM_DELTA_PIXEL\",\"DOM_DELTA_LINE\",\"wheelDeltaY\",\"timeLeft\",\"handleWheelZoom_\",\"setMouseAnchor\",\"PinchRotate_extends\",\"interaction_PinchRotate\",\"PinchRotate\",\"pointerOptions\",\"anchor_\",\"rotating_\",\"rotationDelta_\",\"threshold_\",\"threshold\",\"rotationDelta\",\"touch0\",\"touch1\",\"PinchZoom_extends\",\"interaction_PinchZoom\",\"PinchZoom\",\"lastDistance_\",\"lastScaleDelta_\",\"scaleDelta\",\"Event_extends\",\"render_Event\",\"RenderEvent\",\"opt_inversePixelTransform\",\"opt_context\",\"opt_glContext\",\"inversePixelTransform\",\"context\",\"glContext\",\"HEX_COLOR_RE_\",\"NAMED_COLOR_RE_\",\"fromString\",\"cacheSize\",\"color\",\"g\",\"exec\",\"body\",\"rgb\",\"fromNamed\",\"hasAlpha\",\"normalize\",\"fromStringInternal_\",\"asArray\",\"color_toString\",\"IconImageCache\",\"cache_\",\"cacheSize_\",\"maxCacheSize_\",\"canExpireCache\",\"expire\",\"iconImage\",\"src\",\"crossOrigin\",\"maxCacheSize\",\"asString\",\"shared\",\"Map_extends\",\"expireIconCache\",\"renderer_Map\",\"MapRenderer\",\"layerRenderers_\",\"layerRendererListeners_\",\"calculateMatrices2D\",\"removeLayerRendererByKey_\",\"thisArg2\",\"viewResolution\",\"translatedCoordinate\",\"projectionExtent\",\"worldWidth\",\"layerStates\",\"getLayerRenderer\",\"callback_1\",\"getWrapX\",\"layerKey\",\"renderer\",\"handleLayerRendererChange_\",\"getLayerRenderers\",\"scheduleExpireIconCache\",\"scheduleRemoveUnusedLayerRenderers\",\"layerStatesMap\",\"acc\",\"_loop_1\",\"this_1\",\"Composite_extends\",\"Composite\",\"CompositeMapRenderer\",\"children_\",\"oldChildren\",\"oldChild\",\"newChild\",\"replaceChildren\",\"getDataAtPixel\",\"ol_Map_extends\",\"ol_Map\",\"Map\",\"zoomOptions\",\"rotateOptions\",\"attribution\",\"attributionOptions\",\"altShiftDragRotate\",\"doubleClickZoom\",\"zoomDelta\",\"zoomDuration\",\"dragPan\",\"onFocusOnly\",\"pinchRotate\",\"pinchZoom\",\"keyboard\",\"mouseWheelZoom\",\"shiftDragZoom\",\"interaction_defaults\",\"TileProperty\",\"BaseTile_extends\",\"BaseTile\",\"BaseTileLayer\",\"preload\",\"useInterimTilesOnError\",\"setPreload\",\"setUseInterimTilesOnError\",\"getPreload\",\"getUseInterimTilesOnError\",\"TileRange\",\"tileCoord\",\"containsTileRange\",\"tileRange\",\"TileRange_createOrUpdate\",\"ol_TileRange\",\"LRUCache_extends\",\"structs_LRUCache\",\"LRUCache\",\"opt_highWaterMark\",\"highWaterMark\",\"count_\",\"entries_\",\"oldest_\",\"newest_\",\"containsKey\",\"entry\",\"value_\",\"key_\",\"newer\",\"older\",\"peekLast\",\"peekLastKey\",\"peekFirstKey\",\"LabelCache_extends\",\"LabelCache_LabelCache\",\"LabelCache\",\"consumers\",\"consumer\",\"consumerId\",\"prune\",\"outer\",\"release\",\"defaultLineDash\",\"defaultPadding\",\"labelCache\",\"checkedFonts\",\"measureContext\",\"textHeights\",\"checkFont\",\"interval\",\"referenceWidth\",\"retries\",\"checked\",\"referenceFonts\",\"text\",\"isAvailable\",\"getMeasureContext\",\"weight\",\"fontWeight\",\"available\",\"referenceFont\",\"measureText\",\"check\",\"done\",\"clearInterval\",\"fontSpec\",\"fontFamilies\",\"setInterval\",\"div\",\"heights\",\"measureTextHeight\",\"measureTextWidth\",\"canvas_measureAndCacheTextWidth\",\"rotateAtOffset\",\"offsetX\",\"offsetY\",\"resetTransform\",\"drawImage\",\"image\",\"originX\",\"originY\",\"alpha\",\"globalAlpha\",\"setTransform\",\"ImageState\",\"renderer_Layer_extends\",\"renderer_Layer\",\"LayerRenderer\",\"layer_\",\"loadedTileCallback\",\"tiles\",\"createLoadedTileFinder\",\"forEachLoadedTile\",\"getLayer\",\"handleImageChange_\",\"renderIfReadyAndVisible\",\"loadImage\",\"imageState\",\"canvas_Layer_extends\",\"canvas_Layer\",\"CanvasLayerRenderer\",\"renderedResolution\",\"tempTransform_\",\"pixelTransform_\",\"inversePixelTransform_\",\"transformOrigin\",\"clip\",\"halfWidth\",\"halfHeight\",\"topLeft\",\"topRight\",\"bottomRight\",\"bottomLeft\",\"save\",\"beginPath\",\"moveTo\",\"lineTo\",\"clipUnrotated\",\"inverted\",\"dispatchRenderEvent_\",\"preRender\",\"postRender\",\"getRenderTransform\",\"renderPixel\",\"getImageData\",\"Uint8Array\",\"TileLayer_extends\",\"TileLayer_CanvasTileLayerRenderer\",\"CanvasTileLayerRenderer\",\"tileLayer\",\"extentChanged\",\"renderedExtent_\",\"renderedRevision\",\"renderedTiles\",\"newTiles_\",\"tmpExtent\",\"tmpTileRange_\",\"zDirection\",\"isDrawableTile\",\"tileState\",\"getTile\",\"setState\",\"getInterimTile\",\"viewCenter\",\"tileSource\",\"sourceRevision\",\"getTileGridForProjection\",\"getZForResolution\",\"tilePixelRatio\",\"getTilePixelRatio\",\"canvasExtent\",\"getTileRangeForExtentAndZ\",\"tilesToDrawByZ\",\"findLoadedTiles\",\"tmpTileRange\",\"uid\",\"inTransition\",\"getAlpha\",\"childTileRange\",\"getTileCoordChildTileRange\",\"covered\",\"forEachTileCoordParentTileRange\",\"canvasScale\",\"clearRect\",\"zs\",\"currentZ\",\"currentTilePixelSize\",\"getTilePixelSize\",\"currentScale\",\"dx_1\",\"dy_1\",\"originTileCoord\",\"getTileCoordForCoordAndZ\",\"originTileExtent\",\"getTileCoordExtent\",\"origin_1\",\"tileGutter\",\"getGutterForProjection\",\"tilesToDraw\",\"tileCoordKey\",\"floatX\",\"nextX\",\"floatY\",\"nextY\",\"drawTileImage\",\"updateUsedTiles\",\"manageTilePyramid\",\"updateCacheSize_\",\"scheduleExpireCache\",\"restore\",\"canvasTransform\",\"gutter\",\"transition\",\"getTileImage\",\"getOpaque\",\"alphaChanged\",\"endTransition\",\"getImage\",\"postRenderFunction\",\"expireCache\",\"tileCache\",\"opt_tileCallback\",\"getTileCoordCenter\",\"useTile\",\"canvas_TileLayer\",\"Tile_extends\",\"layer_Tile\",\"TileLayer\",\"asColorLike\",\"style_Image\",\"ImageStyle\",\"opacity_\",\"rotateWithView_\",\"rotateWithView\",\"scale_\",\"getScale\",\"getRotateWithView\",\"getAnchor\",\"getHitDetectionImage\",\"getImageState\",\"getImageSize\",\"getHitDetectionImageSize\",\"getOrigin\",\"setRotateWithView\",\"setScale\",\"listenImageChange\",\"unlistenImageChange\",\"RegularShape_extends\",\"style_RegularShape\",\"RegularShape\",\"canvas_\",\"hitDetectionCanvas_\",\"fill_\",\"origin_\",\"points\",\"radius_\",\"radius1\",\"radius2_\",\"radius2\",\"stroke_\",\"stroke\",\"size_\",\"imageSize_\",\"hitDetectionImageSize_\",\"getFill\",\"getPoints\",\"getRadius\",\"getRadius2\",\"getStroke\",\"strokeStyle\",\"lineCap\",\"lineJoin\",\"miterLimit\",\"lineDash\",\"lineDashOffset\",\"strokeWidth\",\"getColor\",\"getLineDash\",\"getLineDashOffset\",\"getLineJoin\",\"getLineCap\",\"getMiterLimit\",\"renderOptions\",\"imageSize\",\"draw_\",\"createHitDetectionCanvas_\",\"angle0\",\"radiusC\",\"arc\",\"fillStyle\",\"lineWidth\",\"setLineDash\",\"closePath\",\"drawHitDetectionCanvas_\",\"Circle_extends\",\"Circle\",\"CircleStyle\",\"setRadius\",\"style_Fill\",\"Fill\",\"color_\",\"setColor\",\"style_Stroke\",\"Stroke\",\"lineCap_\",\"lineDash_\",\"lineDashOffset_\",\"lineJoin_\",\"miterLimit_\",\"width_\",\"setLineCap\",\"setLineDashOffset\",\"setLineJoin\",\"setMiterLimit\",\"setWidth\",\"Style\",\"geometryFunction_\",\"defaultGeometryFunction\",\"setGeometry\",\"image_\",\"text_\",\"zIndex_\",\"getText\",\"setRenderer\",\"getGeometryFunction\",\"setFill\",\"setImage\",\"setStroke\",\"setText\",\"defaultStyles\",\"createDefaultStyle\",\"style_Style\",\"BaseVector_extends\",\"BaseVector_Property\",\"BaseVector\",\"BaseVectorLayer\",\"renderBuffer\",\"updateWhileAnimating\",\"updateWhileInteracting\",\"declutter_\",\"declutter\",\"renderBuffer_\",\"style_\",\"styleFunction_\",\"setStyle\",\"updateWhileAnimating_\",\"updateWhileInteracting_\",\"getDeclutter\",\"getRenderBuffer\",\"getRenderOrder\",\"getStyle\",\"getStyleFunction\",\"getUpdateWhileAnimating\",\"getUpdateWhileInteracting\",\"setRenderOrder\",\"renderOrder\",\"styleFunction\",\"styles_1\",\"toFunction\",\"render_VectorContext\",\"VectorContext\",\"drawCustom\",\"drawGeometry\",\"drawCircle\",\"circleGeometry\",\"drawFeature\",\"drawGeometryCollection\",\"geometryCollectionGeometry\",\"drawLineString\",\"lineStringGeometry\",\"drawMultiLineString\",\"multiLineStringGeometry\",\"drawMultiPoint\",\"multiPointGeometry\",\"drawMultiPolygon\",\"multiPolygonGeometry\",\"drawPoint\",\"pointGeometry\",\"drawPolygon\",\"polygonGeometry\",\"drawText\",\"setFillStrokeStyle\",\"setImageStyle\",\"imageStyle\",\"opt_declutterGroup\",\"setTextStyle\",\"textStyle\",\"Instruction\",\"BEGIN_GEOMETRY\",\"BEGIN_PATH\",\"CLOSE_PATH\",\"CUSTOM\",\"DRAW_CHARS\",\"DRAW_IMAGE\",\"END_GEOMETRY\",\"FILL\",\"MOVE_TO_LINE_TO\",\"SET_FILL_STYLE\",\"SET_STROKE_STYLE\",\"STROKE\",\"Instruction_fillInstruction\",\"Instruction_strokeInstruction\",\"beginPathInstruction\",\"closePathInstruction\",\"canvas_Instruction\",\"Builder_extends\",\"Builder\",\"CanvasBuilder\",\"maxLineWidth\",\"beginGeometryInstruction1_\",\"beginGeometryInstruction2_\",\"bufferedMaxExtent_\",\"instructions\",\"tmpCoordinate_\",\"hitDetectionInstructions\",\"applyPixelRatio\",\"dashArray\",\"dash\",\"appendFlatCoordinates\",\"closed\",\"skipFirst\",\"myEnd\",\"getBufferedMaxExtent\",\"lastRel\",\"nextRel\",\"lastXCoord\",\"lastYCoord\",\"nextCoord\",\"skipped\",\"drawCustomCoordinates_\",\"builderEnds\",\"builderEnd\",\"beginGeometry\",\"builderEndss\",\"builderBegin\",\"getEndss\",\"myEnds\",\"endGeometry\",\"finish\",\"reverseHitDetectionInstructions\",\"reverse\",\"instruction\",\"fillStyleColor\",\"strokeStyleColor\",\"strokeStyleLineCap\",\"strokeStyleLineDash\",\"strokeStyleLineDashOffset\",\"strokeStyleLineJoin\",\"strokeStyleWidth\",\"strokeStyleMiterLimit\",\"createFill\",\"fillInstruction\",\"applyStroke\",\"createStroke\",\"updateFillStyle\",\"currentFillStyle\",\"updateStrokeStyle\",\"currentStrokeStyle\",\"currentLineCap\",\"currentLineDash\",\"currentLineDashOffset\",\"currentLineJoin\",\"currentLineWidth\",\"currentMiterLimit\",\"endGeometryInstruction\",\"ImageBuilder_extends\",\"ImageBuilder\",\"CanvasImageBuilder\",\"declutterGroup_\",\"hitDetectionImage_\",\"anchorX_\",\"anchorY_\",\"height_\",\"originX_\",\"originY_\",\"drawCoordinates_\",\"myBegin\",\"declutterGroup\",\"hitDetectionImage\",\"LineStringBuilder_extends\",\"LineStringBuilder\",\"CanvasLineStringBuilder\",\"drawFlatCoordinates_\",\"moveToLineToInstruction\",\"lastStroke\",\"PolygonBuilder_extends\",\"PolygonBuilder\",\"CanvasPolygonBuilder\",\"drawFlatCoordinatess_\",\"numEnds\",\"setFillStrokeStyles_\",\"circleInstruction\",\"matchingChunk\",\"maxAngle\",\"m12\",\"m23\",\"x12\",\"y12\",\"x23\",\"y23\",\"chunkStart\",\"chunkEnd\",\"chunkM\",\"acos\",\"TextPlacement\",\"LINE\",\"TextBuilder_extends\",\"TEXT_ALIGN\",\"middle\",\"hanging\",\"alphabetic\",\"ideographic\",\"bottom\",\"BATCH_CONSTRUCTORS\",\"Default\",\"Image\",\"LineString\",\"Text\",\"CanvasTextBuilder\",\"labels_\",\"textOffsetX_\",\"textOffsetY_\",\"textRotateWithView_\",\"textRotation_\",\"textFillState_\",\"fillStates\",\"textStrokeState_\",\"strokeStates\",\"textState_\",\"textStates\",\"textKey_\",\"fillKey_\",\"strokeKey_\",\"fillState\",\"strokeState\",\"textState\",\"geometryType\",\"placement\",\"textAlign\",\"flatOffset\",\"flatEnd\",\"oo\",\"range\",\"drawChars_\",\"geometryWidths\",\"getFlatMidpoint\",\"getFlatMidpoints\",\"interiorPoints\",\"getFlatInteriorPoints\",\"saveTextStates_\",\"backgroundFill\",\"backgroundStroke\",\"pixelRatio_1\",\"strokeKey\",\"textKey\",\"textBaseline\",\"fillKey\",\"baseline\",\"textScale\",\"textFillStyle\",\"textStrokeStyle\",\"getFont\",\"getOverflow\",\"getMaxAngle\",\"getPlacement\",\"getTextAlign\",\"getTextBaseline\",\"getBackgroundFill\",\"getBackgroundStroke\",\"getPadding\",\"textOffsetX\",\"getOffsetX\",\"textOffsetY\",\"getOffsetY\",\"textRotateWithView\",\"textRotation\",\"canvas_BuilderGroup\",\"BuilderGroup\",\"tolerance_\",\"maxExtent_\",\"resolution_\",\"buildersByZIndex_\",\"addDeclutter\",\"group\",\"builderInstructions\",\"zKey\",\"builders\",\"builderKey\",\"builderInstruction\",\"getBuilder\",\"builderType\",\"zIndexKey\",\"replays\",\"replay\",\"Constructor\",\"BuilderType\",\"DEFAULT\",\"IMAGE\",\"TEXT\",\"lineStringLength\",\"drawTextOnPath\",\"startM\",\"measureAndCacheTextWidth\",\"previousAngle\",\"numChars\",\"segmentM\",\"chunk\",\"chunkLength\",\"char\",\"charAt\",\"charLength\",\"charM\",\"segmentPos\",\"interpolate\",\"unshift\",\"Executor_extends\",\"Executor_tmpExtent\",\"Executor_tmpTransform\",\"Executor_p1\",\"Executor_p2\",\"p3\",\"p4\",\"canvas_Executor\",\"Executor\",\"overlaps\",\"declutterTree\",\"alignFill_\",\"coordinateCache_\",\"renderedTransform_\",\"pixelCoordinates_\",\"viewRotation_\",\"widths_\",\"getTextImage\",\"align\",\"lines\",\"numLines\",\"widths\",\"currentWidth\",\"measureTextWidths\",\"lineHeight\",\"renderWidth\",\"leftRight\",\"strokeText\",\"fillText\",\"replayTextBackground_\",\"p1\",\"p2\",\"strokeInstruction\",\"setStrokeStyle_\",\"replayImage_\",\"snapToPixel\",\"fillStroke\",\"boxW\",\"boxH\",\"boxX\",\"boxY\",\"strokePadding\",\"declutterArgs\",\"repeatSize\",\"renderDeclutter_\",\"groupCount\",\"box\",\"declutterData\",\"drawTextImageWithPointPlacement_\",\"execute_\",\"skippedFeaturesHash\",\"featureCallback\",\"opt_hitExtent\",\"pixelCoordinates\",\"transform1\",\"transform2\",\"dd\",\"prevX\",\"prevY\",\"roundX\",\"roundY\",\"skipFeatures\",\"pendingFill\",\"pendingStroke\",\"lastFillInstruction\",\"lastStrokeInstruction\",\"coordinateCache\",\"viewRotation\",\"batchSize\",\"labelWithAnchor\",\"widthIndex\",\"measurePixelRatio\",\"pixelRatioScale\",\"cachedWidths\",\"pathLength\",\"textLength\",\"cc\",\"chars\",\"execute\",\"executeHitDetection\",\"opt_featureCallback\",\"ExecutorGroup_extends\",\"ORDER\",\"ExecutorGroup_ExecutorGroup\",\"ExecutorGroup\",\"allInstructions\",\"opt_renderBuffer\",\"declutterTree_\",\"overlaps_\",\"executorsByZIndex_\",\"hitDetectionContext_\",\"hitDetectionTransform_\",\"createExecutors_\",\"flatClipCoords\",\"getClipCoords\",\"executors\",\"instructionByZindex\",\"hasExecutors\",\"candidates\",\"declutterReplays\",\"hitExtent\",\"contextSize\",\"declutteredFeatures\",\"mask\",\"circleArrayCache\",\"arraySize\",\"fillCircleArrayRowToMiddle\",\"getCircleArray\",\"imageData\",\"i_1\",\"j_1\",\"result_1\",\"executor\",\"opt_builderTypes\",\"opt_declutterReplays\",\"builderTypes\",\"0\",\"canvas_ExecutorGroup\",\"SIMPLIFY_TOLERANCE\",\"GEOMETRY_RENDERERS\",\"builderGroup\",\"imageReplay\",\"textReplay\",\"lineStringReplay\",\"polygonReplay\",\"MultiPoint\",\"MultiLineString\",\"MultiPolygon\",\"GeometryCollection\",\"replayGroup\",\"geometries\",\"getGeometriesArray\",\"geometryRenderer\",\"circleReplay\",\"defaultOrder\",\"feature1\",\"feature2\",\"getSquaredTolerance\",\"getTolerance\",\"renderFeature\",\"renderGeometry\",\"getGeometries\",\"renderFeatureInternal\",\"VectorLayer_extends\",\"canvas_VectorLayer\",\"CanvasVectorLayerRenderer\",\"vectorLayer\",\"rbush_default\",\"dirty_\",\"renderedRevision_\",\"renderedResolution_\",\"renderedRenderOrder_\",\"replayGroup_\",\"replayGroupChanged\",\"handleFontsChanged_\",\"vectorSource\",\"clipExtent\",\"clipped\",\"world\",\"transform_1\",\"transform_2\",\"layer_1\",\"features_1\",\"handleStyleImageChange_\",\"animating\",\"interacting\",\"frameStateExtent\",\"vectorLayerRevision\",\"vectorLayerRenderBuffer\",\"vectorLayerRenderOrder\",\"loadFeatures\",\"dirty\",\"features_2\",\"forEachFeatureInExtent\",\"replayGroupInstructions\",\"executorGroup\",\"getOverlaps\",\"Vector_extends\",\"Vector\",\"VectorLayer\",\"ERROR_THRESHOLD\",\"ol_Tile_extends\",\"ol_Tile\",\"Tile\",\"interimTile\",\"transition_\",\"transitionStarts_\",\"refreshInterimChain\",\"getTileCoord\",\"ImageTile_extends\",\"getBlankImage\",\"fillRect\",\"ol_ImageTile\",\"ImageTile\",\"tileLoadFunction\",\"crossOrigin_\",\"src_\",\"imageListenerKeys_\",\"tileLoadFunction_\",\"unlistenImage_\",\"handleImageError_\",\"handleImageLoad_\",\"naturalWidth\",\"naturalHeight\",\"tilecoord_createOrUpdate\",\"opt_tileCoord\",\"getKeyZXY\",\"tilecoord_getKey\",\"TileCache_extends\",\"ol_TileCache\",\"TileCache\",\"pruneExceptNewestZ\",\"fromKey\",\"enlargeClipPoint\",\"centroidX\",\"centroidY\",\"dX\",\"dY\",\"reproj_render\",\"sourceExtent\",\"targetExtent\",\"triangulation\",\"opt_renderEdges\",\"sourceDataExtent\",\"canvasWidthInUnits\",\"canvasHeightInUnits\",\"stitchContext\",\"stitchScale\",\"xPos\",\"yPos\",\"srcWidth\",\"srcHeight\",\"targetTopLeft\",\"getTriangles\",\"triangle\",\"u0\",\"v0\",\"u1\",\"v1\",\"u2\",\"v2\",\"sourceNumericalShiftX\",\"sourceNumericalShiftY\",\"affineCoefs\",\"maxRow\",\"maxEl\",\"absValue\",\"coef\",\"solveLinearSystem\",\"p0\",\"MAX_SUBDIVISION\",\"reproj_Triangulation\",\"Triangulation\",\"targetProj\",\"maxSourceExtent\",\"errorThreshold\",\"sourceProj_\",\"targetProj_\",\"transformInvCache\",\"transformInv\",\"transformInv_\",\"maxSourceExtent_\",\"errorThresholdSquared_\",\"triangles_\",\"wrapsXInSource_\",\"canWrapXInSource_\",\"sourceWorldWidth_\",\"targetWorldWidth_\",\"destinationTopLeft\",\"destinationTopRight\",\"destinationBottomRight\",\"destinationBottomLeft\",\"sourceTopLeft\",\"sourceTopRight\",\"sourceBottomRight\",\"sourceBottomLeft\",\"addQuad_\",\"leftBound_1\",\"newTriangle\",\"addTriangle_\",\"aSrc\",\"bSrc\",\"cSrc\",\"dSrc\",\"maxSubdivision\",\"sourceQuadExtent\",\"sourceCoverageX\",\"sourceWorldWidth\",\"wrapsX\",\"needsSubdivision\",\"isFinite\",\"centerSrc\",\"bc\",\"bcSrc\",\"da\",\"daSrc\",\"ab\",\"abSrc\",\"cd\",\"cdSrc\",\"calculateSourceExtent\",\"reproj_Tile_extends\",\"reproj_Tile\",\"ReprojTile\",\"sourceTileGrid\",\"targetTileGrid\",\"wrappedTileCoord\",\"getTileFunction\",\"opt_errorThreshold\",\"renderEdges_\",\"gutter_\",\"sourceTileGrid_\",\"targetTileGrid_\",\"wrappedTileCoord_\",\"sourceTiles_\",\"sourcesListenerKeys_\",\"sourceZ_\",\"maxTargetExtent\",\"limitedTargetExtent\",\"sourceProjExtent\",\"targetMetersPerUnit\",\"sourceMetersPerUnit\",\"compensationFactor\",\"calculateSourceResolution\",\"errorThresholdInPixels\",\"triangulation_\",\"sourceRange\",\"srcX\",\"srcY\",\"unlistenSources_\",\"reproject_\",\"getTileSize\",\"leftToLoad_1\",\"sourceListenKey_1\",\"createFromTemplate\",\"template\",\"zRegEx\",\"xRegEx\",\"yRegEx\",\"dashYRegEx\",\"getFullTileRange\",\"createFromTemplates\",\"templates\",\"tileUrlFunctions\",\"createFromTileUrlFunctions\",\"nullTileUrlFunction\",\"Source_extends\",\"adaptAttributions\",\"attributionLike\",\"source_Source\",\"Source\",\"attributions_\",\"attributionsCollapsible_\",\"attributionsCollapsible\",\"wrapX_\",\"wrapX\",\"refresh\",\"setAttributions\",\"tmpTileCoord\",\"tilegrid_TileGrid\",\"TileGrid\",\"opt_strict\",\"every\",\"currentVal\",\"res\",\"origins\",\"origins_\",\"tileSizes_\",\"tileSizes\",\"tileSize_\",\"tileSize\",\"fullTileRanges_\",\"tmpSize_\",\"sizes\",\"calculateTileRanges_\",\"forEachTileCoord\",\"opt_tileRange\",\"tileCoordExtent\",\"getTileRangeExtent\",\"getTileCoordForXYAndZ_\",\"getTileCoordForCoordAndResolution\",\"getTileCoordForXYAndResolution_\",\"reverseIntersectionPolicy\",\"adjustX\",\"adjustY\",\"xFromOrigin\",\"yFromOrigin\",\"tileCoordX\",\"tileCoordY\",\"getTileCoordResolution\",\"fullTileRanges\",\"getForProjection\",\"opt_maxZoom\",\"opt_tileSize\",\"opt_corner\",\"resolutionsFromExtent\",\"createForExtent\",\"extentFromProjection\",\"createForProjection\",\"half\",\"source_Tile_extends\",\"Tile_TileSource\",\"TileSource\",\"opaque_\",\"opaque\",\"tilePixelRatio_\",\"canUseScreen\",\"screen\",\"availWidth\",\"availHeight\",\"tmpSize\",\"tileOptions\",\"getTileCacheForProjection\",\"loaded\",\"setKey\",\"getTileGrid\",\"thisProj\",\"getTileCoordForTileUrlFunction\",\"opt_projection\",\"worldsAway\",\"withinExtentAndZ\",\"TileSourceEvent\",\"source_Tile\",\"TileEventType\",\"UrlTile_extends\",\"source_UrlTile\",\"UrlTile\",\"generateTileUrlFunction_\",\"tileUrlFunction\",\"urls\",\"setUrls\",\"url\",\"setUrl\",\"tileLoadingKeys_\",\"getTileLoadFunction\",\"getTileUrlFunction\",\"getUrls\",\"setTileLoadFunction\",\"setTileUrlFunction\",\"startCharCode\",\"stopCharCode\",\"fromCharCode\",\"stop_1\",\"expandUrl\",\"TileImage_extends\",\"defaultTileLoadFunction\",\"imageTile\",\"source_TileImage\",\"TileImage\",\"tileClass\",\"tileCacheForProjection\",\"tileGridForProjection\",\"reprojectionErrorThreshold_\",\"reprojectionErrorThreshold\",\"renderReprojectionEdges_\",\"usedTileCache\",\"getGutter\",\"projKey\",\"createTile_\",\"urlTileCoord\",\"tileUrl\",\"newTile\",\"getTileInternal\",\"setRenderReprojectionEdges\",\"setTileGridForProjection\",\"tilegrid\",\"proj\",\"XYZ_extends\",\"source_XYZ\",\"xyzOptions\",\"gridOptions\",\"createXYZ\",\"FormatType\",\"ARRAY_BUFFER\",\"XML\",\"featureloader_xhr\",\"success\",\"failure\",\"xhr\",\"XMLHttpRequest\",\"open\",\"responseType\",\"onload\",\"status\",\"responseText\",\"responseXML\",\"DOMParser\",\"parseFromString\",\"readFeatures\",\"featureProjection\",\"readProjection\",\"onerror\",\"send\",\"loadFeaturesXhr\",\"dataProjection\",\"addFeatures\",\"loadingstrategy_all\",\"VectorEventType\",\"structs_RBush\",\"RBush\",\"opt_maxEntries\",\"rbush_\",\"items_\",\"extents\",\"getAll\",\"getInExtent\",\"forEach_\",\"forEachInExtent\",\"source_Vector_extends\",\"VectorSourceEvent\",\"opt_feature\",\"source_Vector\",\"VectorSource\",\"loader_\",\"format_\",\"url_\",\"loader\",\"strategy_\",\"strategy\",\"collection\",\"useSpatialIndex\",\"featuresRtree_\",\"loadedExtentsRtree_\",\"nullGeometryFeatures_\",\"idIndex_\",\"undefIdIndex_\",\"featureChangeKeys_\",\"featuresCollection_\",\"addFeaturesInternal\",\"bindFeaturesCollection_\",\"addFeature\",\"addFeatureInternal\",\"featureKey\",\"addToIndex_\",\"setupChangeEvents_\",\"handleFeatureChange_\",\"valid\",\"newFeatures\",\"geometryFeatures\",\"length_1\",\"length_2\",\"length_3\",\"modifyingCollection\",\"removeFeature\",\"opt_fast\",\"featureId\",\"removeFeatureInternal\",\"clearEvent\",\"forEachFeature\",\"forEachFeatureAtCoordinateDirect\",\"forEachFeatureIntersectingExtent\",\"getFeaturesCollection\",\"getFeatures\",\"getFeaturesAtCoordinate\",\"getFeaturesInExtent\",\"getClosestFeatureToCoordinate\",\"opt_filter\",\"closestFeature\",\"previousMinSquaredDistance\",\"minDistance\",\"getFeatureById\",\"getFormat\",\"getUrl\",\"sid\",\"removeFromIdIndex_\",\"hasFeature\",\"loadedExtentsRtree\",\"extentsToLoad\",\"extentToLoad\",\"removeLoadedExtent\",\"removed\",\"setLoader\",\"Feature_extends\",\"ol_Feature\",\"Feature\",\"opt_geometryOrProperties\",\"id_\",\"geometryName_\",\"geometryChangeKey_\",\"handleGeometryChanged_\",\"setGeometryName\",\"getGeometryName\",\"handleGeometryChange_\",\"createStyleFunction\",\"setId\",\"format_Feature\",\"FeatureFormat\",\"defaultFeatureProjection\",\"getReadOptions\",\"adaptOptions\",\"readFeature\",\"readGeometry\",\"writeFeature\",\"writeFeatures\",\"writeGeometry\",\"transformGeometryWithOptions\",\"write\",\"transformed\",\"decimals\",\"power_1\",\"JSONFeature_extends\",\"getObject\",\"format_JSONFeature\",\"JSONFeature\",\"readFeatureFromObject\",\"readFeaturesFromObject\",\"readGeometryFromObject\",\"readProjectionFromObject\",\"writeFeatureObject\",\"writeFeaturesObject\",\"writeGeometryObject\",\"GeometryCollection_extends\",\"cloneGeometries\",\"clonedGeometries\",\"geom_GeometryCollection\",\"opt_geometries\",\"geometries_\",\"listenGeometriesChange_\",\"unlistenGeometriesChange_\",\"geometryCollection\",\"setGeometries\",\"simplifiedGeometries\",\"simplified\",\"simplifiedGeometryCollection\",\"setGeometriesArray\",\"interpolatePoint\",\"pointY\",\"cumulativeLengths\",\"haystack\",\"needle\",\"opt_comparator\",\"cmp\",\"comparator\",\"low\",\"high\",\"found\",\"binarySearch\",\"lineStringCoordinateAtM\",\"extrapolate\",\"lo\",\"hi\",\"m0\",\"LineString_extends\",\"geom_LineString\",\"flatMidpoint_\",\"flatMidpointRevision_\",\"appendCoordinate\",\"forEachSegment\",\"getCoordinateAtM\",\"opt_extrapolate\",\"getCoordinateAt\",\"MultiLineString_extends\",\"geom_MultiLineString\",\"lineStrings\",\"lineString\",\"appendLineString\",\"opt_interpolate\",\"lineStringsCoordinateAtM\",\"getLineString\",\"getLineStrings\",\"midpoints\",\"intersectsLineStringArray\",\"MultiPoint_extends\",\"geom_MultiPoint\",\"appendPoint\",\"getPoint\",\"MultiPolygon_extends\",\"geom_MultiPolygon\",\"opt_endss\",\"endss_\",\"flatInteriorPointsRevision_\",\"flatInteriorPoints_\",\"polygons\",\"polygon\",\"appendPolygon\",\"newEndss\",\"multiArrayMaxSquaredDelta\",\"assignClosestMultiArrayPoint\",\"linearRingssContainsXY\",\"linearRingss\",\"center_linearRingss\",\"getInteriorPointsOfMultiArray\",\"getInteriorPoints\",\"linearRingssAreOriented\",\"simplifiedEndss\",\"quantizeMultiArray\",\"getPolygon\",\"prevEnds\",\"getPolygons\",\"intersectsLinearRingMultiArray\",\"deflateMultiCoordinatesArray\",\"lastEnds\",\"GeoJSON_extends\",\"readPointGeometry\",\"readLineStringGeometry\",\"readPolygonGeometry\",\"readMultiPointGeometry\",\"readMultiLineStringGeometry\",\"readMultiPolygonGeometry\",\"readGeometryCollectionGeometry\",\"geoJSON\",\"writePointGeometry\",\"writeLineStringGeometry\",\"rightHanded\",\"writePolygonGeometry\",\"writeMultiPointGeometry\",\"writeMultiLineStringGeometry\",\"writeMultiPolygonGeometry\",\"writeGeometryCollectionGeometry\",\"format_GeoJSON\",\"GeoJSON\",\"geometryName\",\"extractGeometryName_\",\"extractGeometryName\",\"geoJSONFeature\",\"geoJSONFeatures\",\"crs\",\"DOCUMENT\",\"implementation\",\"createDocument\",\"createElementNS\",\"namespaceURI\",\"qualifiedName\",\"getAllTextContent\",\"normalizeWhitespace\",\"getAllTextContent_\",\"accumulator\",\"nodeType\",\"Node\",\"CDATA_SECTION_NODE\",\"TEXT_NODE\",\"nodeValue\",\"isDocument\",\"xml\",\"makeArrayExtender\",\"valueReader\",\"objectStack\",\"makeArrayPusher\",\"makeReplacer\",\"makeObjectPropertySetter\",\"opt_property\",\"localName\",\"makeChildAppender\",\"nodeWriter\",\"makeSimpleNodeFactory\",\"opt_nodeName\",\"opt_namespaceURI\",\"fixedNodeName\",\"nodeName\",\"OBJECT_PROPERTY_NODE_FACTORY\",\"makeSequence\",\"orderedKeys\",\"sequence\",\"makeStructureNS\",\"namespaceURIs\",\"structure\",\"opt_structureNS\",\"structureNS\",\"parseNode\",\"parsersNS\",\"firstElementChild\",\"nextElementSibling\",\"parsers\",\"parser\",\"pushParseAndPop\",\"serializersNS\",\"nodeFactory\",\"opt_keys\",\"pushSerializeAndPop\",\"XMLFeature_extends\",\"format_XMLFeature\",\"XMLFeature\",\"xmlSerializer_\",\"XMLSerializer\",\"doc\",\"readFeatureFromDocument\",\"readFeatureFromNode\",\"readFeaturesFromDocument\",\"readFeaturesFromNode\",\"ELEMENT_NODE\",\"readGeometryFromDocument\",\"readGeometryFromNode\",\"readProjectionFromDocument\",\"readProjectionFromNode\",\"writeFeatureNode\",\"serializeToString\",\"writeFeaturesNode\",\"writeGeometryNode\",\"readBoolean\",\"readDecimal\",\"readString\",\"writeBooleanTextNode\",\"writeStringTextNode\",\"writeDecimalTextNode\",\"decimal\",\"toPrecision\",\"IconAnchorUnits\",\"FRACTION\",\"IconImage_extends\",\"IconImage_IconImage\",\"IconImage\",\"imageState_\",\"tainted_\",\"isTainted_\",\"dispatchChangeEvent_\",\"replaceColor_\",\"getSrc\",\"imgData\",\"putImageData\",\"DEFAULT_COLOR\",\"DEFAULT_IMAGE_STYLE_ANCHOR\",\"DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS\",\"DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS\",\"DEFAULT_IMAGE_STYLE_SIZE\",\"DEFAULT_IMAGE_STYLE_SRC\",\"DEFAULT_IMAGE_SCALE_MULTIPLIER\",\"IconOrigin\",\"Icon_extends\",\"style_Icon\",\"Icon\",\"normalizedAnchor_\",\"anchorOrigin_\",\"anchorOrigin\",\"anchorXUnits_\",\"anchorXUnits\",\"anchorYUnits_\",\"anchorYUnits\",\"img\",\"imgSize\",\"iconImage_\",\"IconImage_get\",\"offset_\",\"offsetOrigin_\",\"offsetOrigin\",\"setAnchor\",\"iconImageSize\",\"DEFAULT_FILL_COLOR\",\"style_Text\",\"font_\",\"textAlign_\",\"textBaseline_\",\"maxAngle_\",\"placement_\",\"overflow_\",\"offsetX_\",\"offsetY_\",\"backgroundFill_\",\"backgroundStroke_\",\"padding_\",\"setOverflow\",\"setFont\",\"setMaxAngle\",\"setOffsetX\",\"setOffsetY\",\"setPlacement\",\"setTextAlign\",\"setTextBaseline\",\"setBackgroundFill\",\"setBackgroundStroke\",\"setPadding\",\"KML_extends\",\"GX_NAMESPACE_URIS\",\"NAMESPACE_URIS\",\"ICON_ANCHOR_UNITS_MAP\",\"pixels\",\"insetPixels\",\"PLACEMARK_PARSERS\",\"ExtendedData\",\"extendedDataParser\",\"Region\",\"regionParser\",\"MultiGeometry\",\"readMultiGeometry\",\"readLineString\",\"readLinearRing\",\"readPoint\",\"readPolygon\",\"readStyle\",\"StyleMap\",\"styleMapValue\",\"readStyleMapValue\",\"placemarkObject\",\"address\",\"description\",\"phoneNumber\",\"styleUrl\",\"readURI\",\"visibility\",\"MultiTrack\",\"GX_MULTITRACK_GEOMETRY_PARSERS\",\"Track\",\"readGxTrack\",\"NETWORK_LINK_PARSERS\",\"Link\",\"LINK_PARSERS\",\"REGION_PARSERS\",\"LatLonAltBox\",\"LAT_LON_ALT_BOX_PARSERS\",\"regionObject\",\"Lod\",\"LOD_PARSERS\",\"lodObject\",\"KML_SEQUENCE\",\"KML_SERIALIZERS\",\"Document\",\"DOCUMENT_SERIALIZERS\",\"DOCUMENT_NODE_FACTORY\",\"Placemark\",\"writePlacemark\",\"DEFAULT_FILL_STYLE\",\"DEFAULT_NO_IMAGE_STYLE\",\"DEFAULT_IMAGE_STYLE\",\"DEFAULT_TEXT_STROKE_STYLE\",\"DEFAULT_STROKE_STYLE\",\"DEFAULT_TEXT_STYLE\",\"DEFAULT_STYLE\",\"DEFAULT_STYLE_ARRAY\",\"KML_KML\",\"KML\",\"defaultStyle_\",\"defaultStyle\",\"extractStyles_\",\"extractStyles\",\"writeStyles_\",\"writeStyles\",\"sharedStyles_\",\"showPointNames_\",\"showPointNames\",\"readDocumentOrFolder_\",\"Folder\",\"readPlacemark_\",\"readSharedStyle_\",\"readSharedStyleMap_\",\"getAttribute\",\"sharedStyles\",\"nameStyle\",\"drawName\",\"createNameStyleFunction\",\"foundStyle\",\"findStyle\",\"styleValue\",\"createFeatureStyleFunction\",\"styleUri\",\"baseURI\",\"fs\",\"readName\",\"readNameFromDocument\",\"readNameFromNode\",\"name_1\",\"name_2\",\"readNetworkLinks\",\"networkLinks\",\"readNetworkLinksFromDocument\",\"readNetworkLinksFromNode\",\"readRegion\",\"regions\",\"readRegionFromDocument\",\"readRegionFromNode\",\"kml\",\"xmlnsUri\",\"setAttributeNS\",\"textOffset\",\"imageScale\",\"foundText\",\"readColor\",\"hexColor\",\"readFlatCoordinates\",\"readScale\",\"STYLE_MAP_PARSERS\",\"Pair\",\"pairObject\",\"PAIR_PARSERS\",\"ICON_STYLE_PARSERS\",\"iconObject\",\"ICON_PARSERS\",\"heading\",\"hotSpot\",\"xunits\",\"yunits\",\"LABEL_STYLE_PARSERS\",\"LINE_STYLE_PARSERS\",\"POLY_STYLE_PARSERS\",\"outline\",\"FLAT_LINEAR_RING_PARSERS\",\"readFlatLinearRing\",\"GX_TRACK_PARSERS\",\"when\",\"whens\",\"gxTrackObject\",\"GEOMETRY_FLAT_COORDINATES_PARSERS\",\"readFlatCoordinatesFromNode\",\"EXTRUDE_AND_ALTITUDE_MODE_PARSERS\",\"extrude\",\"tessellate\",\"altitudeMode\",\"MULTI_GEOMETRY_PARSERS\",\"multiGeometry\",\"homogeneous\",\"setCommonGeometryProperties\",\"FLAT_LINEAR_RINGS_PARSERS\",\"innerBoundaryIs\",\"flatLinearRing\",\"INNER_BOUNDARY_IS_PARSERS\",\"flatLinearRings\",\"outerBoundaryIs\",\"OUTER_BOUNDARY_IS_PARSERS\",\"STYLE_PARSERS\",\"IconStyle\",\"styleObject\",\"IconObject\",\"drawIcon\",\"LabelStyle\",\"LineStyle\",\"PolyStyle\",\"hasExtrude\",\"hasTessellate\",\"hasAltitudeMode\",\"extrudes\",\"tessellates\",\"altitudeModes\",\"DATA_PARSERS\",\"displayName\",\"EXTENDED_DATA_PARSERS\",\"Data\",\"featureObject\",\"SchemaData\",\"SCHEMA_DATA_PARSERS\",\"SimpleData\",\"minAltitude\",\"maxAltitude\",\"north\",\"south\",\"east\",\"west\",\"minLodPixels\",\"maxLodPixels\",\"minFadeExtent\",\"maxFadeExtent\",\"writeColorTextNode\",\"rgba\",\"abgr\",\"hex\",\"EXTENDEDDATA_NODE_SERIALIZERS\",\"pair\",\"createCDATASection\",\"writeCDATASection\",\"DATA_NODE_FACTORY\",\"ICON_SEQUENCE\",\"ICON_SERIALIZERS\",\"GX_NODE_FACTORY\",\"ICON_STYLE_SEQUENCE\",\"ICON_STYLE_SERIALIZERS\",\"icon\",\"vec2\",\"writeScaleTextNode\",\"LABEL_STYLE_SEQUENCE\",\"LABEL_STYLE_SERIALIZERS\",\"LINE_STYLE_SEQUENCE\",\"LINE_STYLE_SERIALIZERS\",\"GEOMETRY_TYPE_TO_NODENAME\",\"GEOMETRY_NODE_FACTORY\",\"POINT_NODE_FACTORY\",\"LINE_STRING_NODE_FACTORY\",\"LINEAR_RING_NODE_FACTORY\",\"POLYGON_NODE_FACTORY\",\"MULTI_GEOMETRY_SERIALIZERS\",\"writePrimitiveGeometry\",\"writePolygon\",\"writeMultiGeometry\",\"BOUNDARY_IS_SERIALIZERS\",\"writeBoundaryIs\",\"PLACEMARK_SERIALIZERS\",\"namesAndValues\",\"names\",\"STYLE_SEQUENCE\",\"STYLE_SERIALIZERS\",\"PLACEMARK_SEQUENCE\",\"EXTENDEDDATA_NODE_FACTORY\",\"v\",\"PRIMITIVE_GEOMETRY_SEQUENCE\",\"PRIMITIVE_GEOMETRY_SERIALIZERS\",\"POLYGON_SERIALIZERS\",\"INNER_BOUNDARY_NODE_FACTORY\",\"OUTER_BOUNDARY_NODE_FACTORY\",\"outerRing\",\"shift\",\"POLY_STYLE_SERIALIZERS\",\"COLOR_NODE_FACTORY\",\"iconProperties\",\"format_KML\",\"precision\",\"factor\",\"ol_hashed\",\"viewport\",\"LOG2E\",\"clientWidth\",\"LN2\",\"hashHandler\",\"lib_default\",\"onMoveEnd\",\"DragAndDrop_extends\",\"DragAndDropEventType\",\"DragAndDropEvent\",\"file\",\"opt_features\",\"handleDrop\",\"files\",\"dataTransfer\",\"reader\",\"FileReader\",\"handleResult_\",\"readAsText\",\"handleStop\",\"dropEffect\",\"interaction_DragAndDrop\",\"DragAndDrop\",\"formatConstructors_\",\"formatConstructors\",\"dropListenKeys_\",\"source_\",\"tryReadFeatures_\",\"registerListeners_\",\"dropArea\",\"unregisterListeners_\",\"main_map\",\"main_source\",\"main_layer\"],\"mappings\":\"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\",\"sourcesContent\":[\" \\t// The module cache\\n \\tvar installedModules = {};\\n\\n \\t// The require function\\n \\tfunction __webpack_require__(moduleId) {\\n\\n \\t\\t// Check if module is in cache\\n \\t\\tif(installedModules[moduleId]) {\\n \\t\\t\\treturn installedModules[moduleId].exports;\\n \\t\\t}\\n \\t\\t// Create a new module (and put it into the cache)\\n \\t\\tvar module = installedModules[moduleId] = {\\n \\t\\t\\ti: moduleId,\\n \\t\\t\\tl: false,\\n \\t\\t\\texports: {}\\n \\t\\t};\\n\\n \\t\\t// Execute the module function\\n \\t\\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\\n\\n \\t\\t// Flag the module as loaded\\n \\t\\tmodule.l = true;\\n\\n \\t\\t// Return the exports of the module\\n \\t\\treturn module.exports;\\n \\t}\\n\\n\\n \\t// expose the modules object (__webpack_modules__)\\n \\t__webpack_require__.m = modules;\\n\\n \\t// expose the module cache\\n \\t__webpack_require__.c = installedModules;\\n\\n \\t// define getter function for harmony exports\\n \\t__webpack_require__.d = function(exports, name, getter) {\\n \\t\\tif(!__webpack_require__.o(exports, name)) {\\n \\t\\t\\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\\n \\t\\t}\\n \\t};\\n\\n \\t// define __esModule on exports\\n \\t__webpack_require__.r = function(exports) {\\n \\t\\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\\n \\t\\t\\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\\n \\t\\t}\\n \\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n \\t};\\n\\n \\t// create a fake namespace object\\n \\t// mode & 1: value is a module id, require it\\n \\t// mode & 2: merge all properties of value into the ns\\n \\t// mode & 4: return value when already ns object\\n \\t// mode & 8|1: behave like require\\n \\t__webpack_require__.t = function(value, mode) {\\n \\t\\tif(mode & 1) value = __webpack_require__(value);\\n \\t\\tif(mode & 8) return value;\\n \\t\\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\\n \\t\\tvar ns = Object.create(null);\\n \\t\\t__webpack_require__.r(ns);\\n \\t\\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\\n \\t\\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\\n \\t\\treturn ns;\\n \\t};\\n\\n \\t// getDefaultExport function for compatibility with non-harmony modules\\n \\t__webpack_require__.n = function(module) {\\n \\t\\tvar getter = module && module.__esModule ?\\n \\t\\t\\tfunction getDefault() { return module['default']; } :\\n \\t\\t\\tfunction getModuleExports() { return module; };\\n \\t\\t__webpack_require__.d(getter, 'a', getter);\\n \\t\\treturn getter;\\n \\t};\\n\\n \\t// Object.prototype.hasOwnProperty.call\\n \\t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\\n\\n \\t// __webpack_public_path__\\n \\t__webpack_require__.p = \\\"\\\";\\n\\n\\n \\t// Load entry module and return exports\\n \\treturn __webpack_require__(__webpack_require__.s = 27);\\n\",\"const util = require('util');\\n\\n/**\\n * Get the type of a value.\\n * @param {*} value The value.\\n * @return {string} The type.\\n */\\nexports.typeOf = function typeOf(value) {\\n  let type = typeof value;\\n  if (type === 'object') {\\n    if (value === null) {\\n      type = 'null';\\n    } else if (util.isArray(value)) {\\n      type = 'array';\\n    } else if (util.isDate(value)) {\\n      type = 'date';\\n    } else if (util.isRegExp(value)) {\\n      type = 'regexp';\\n    } else if (util.isError(value)) {\\n      type = 'error';\\n    }\\n  }\\n  return type;\\n};\\n\\n/**\\n * Copy properties from one object to another.\\n * @param {Object} dest The destination object.\\n * @param {Object} source The source object.\\n * @return {Object} The destination object.\\n */\\nexports.extend = function(dest, source) {\\n  for (const key in source) {\\n    dest[key] = source[key];\\n  }\\n  return dest;\\n};\\n\\n/**\\n * Generate an array of alternating name, value from an object's properties.\\n * @param {Object} object The object to zip.\\n * @return {Array} The array of name, value [, name, value]*.\\n */\\nexports.zip = function(object) {\\n  const zipped = [];\\n  let count = 0;\\n  for (const key in object) {\\n    zipped[2 * count] = key;\\n    zipped[2 * count + 1] = object[key];\\n    ++count;\\n  }\\n  return zipped;\\n};\\n\\n/**\\n * Generate an object from an array of alternating name, value items.\\n * @param {Array} array The array of name, value [, name, value]*.\\n * @return {Object} The zipped up object.\\n */\\nexports.unzip = function(array) {\\n  const object = {};\\n  for (let i = 0, ii = array.length; i < ii; i += 2) {\\n    object[array[i]] = array[i + 1];\\n  }\\n  return object;\\n};\\n\",\"'use strict';\\n\\nmodule.exports = rbush;\\nmodule.exports.default = rbush;\\n\\nvar quickselect = require('quickselect');\\n\\nfunction rbush(maxEntries, format) {\\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\\n\\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\\n    this._maxEntries = Math.max(4, maxEntries || 9);\\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\\n\\n    if (format) {\\n        this._initFormat(format);\\n    }\\n\\n    this.clear();\\n}\\n\\nrbush.prototype = {\\n\\n    all: function () {\\n        return this._all(this.data, []);\\n    },\\n\\n    search: function (bbox) {\\n\\n        var node = this.data,\\n            result = [],\\n            toBBox = this.toBBox;\\n\\n        if (!intersects(bbox, node)) return result;\\n\\n        var nodesToSearch = [],\\n            i, len, child, childBBox;\\n\\n        while (node) {\\n            for (i = 0, len = node.children.length; i < len; i++) {\\n\\n                child = node.children[i];\\n                childBBox = node.leaf ? toBBox(child) : child;\\n\\n                if (intersects(bbox, childBBox)) {\\n                    if (node.leaf) result.push(child);\\n                    else if (contains(bbox, childBBox)) this._all(child, result);\\n                    else nodesToSearch.push(child);\\n                }\\n            }\\n            node = nodesToSearch.pop();\\n        }\\n\\n        return result;\\n    },\\n\\n    collides: function (bbox) {\\n\\n        var node = this.data,\\n            toBBox = this.toBBox;\\n\\n        if (!intersects(bbox, node)) return false;\\n\\n        var nodesToSearch = [],\\n            i, len, child, childBBox;\\n\\n        while (node) {\\n            for (i = 0, len = node.children.length; i < len; i++) {\\n\\n                child = node.children[i];\\n                childBBox = node.leaf ? toBBox(child) : child;\\n\\n                if (intersects(bbox, childBBox)) {\\n                    if (node.leaf || contains(bbox, childBBox)) return true;\\n                    nodesToSearch.push(child);\\n                }\\n            }\\n            node = nodesToSearch.pop();\\n        }\\n\\n        return false;\\n    },\\n\\n    load: function (data) {\\n        if (!(data && data.length)) return this;\\n\\n        if (data.length < this._minEntries) {\\n            for (var i = 0, len = data.length; i < len; i++) {\\n                this.insert(data[i]);\\n            }\\n            return this;\\n        }\\n\\n        // recursively build the tree with the given data from scratch using OMT algorithm\\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\\n\\n        if (!this.data.children.length) {\\n            // save as is if tree is empty\\n            this.data = node;\\n\\n        } else if (this.data.height === node.height) {\\n            // split root if trees have the same height\\n            this._splitRoot(this.data, node);\\n\\n        } else {\\n            if (this.data.height < node.height) {\\n                // swap trees if inserted one is bigger\\n                var tmpNode = this.data;\\n                this.data = node;\\n                node = tmpNode;\\n            }\\n\\n            // insert the small tree into the large tree at appropriate level\\n            this._insert(node, this.data.height - node.height - 1, true);\\n        }\\n\\n        return this;\\n    },\\n\\n    insert: function (item) {\\n        if (item) this._insert(item, this.data.height - 1);\\n        return this;\\n    },\\n\\n    clear: function () {\\n        this.data = createNode([]);\\n        return this;\\n    },\\n\\n    remove: function (item, equalsFn) {\\n        if (!item) return this;\\n\\n        var node = this.data,\\n            bbox = this.toBBox(item),\\n            path = [],\\n            indexes = [],\\n            i, parent, index, goingUp;\\n\\n        // depth-first iterative tree traversal\\n        while (node || path.length) {\\n\\n            if (!node) { // go up\\n                node = path.pop();\\n                parent = path[path.length - 1];\\n                i = indexes.pop();\\n                goingUp = true;\\n            }\\n\\n            if (node.leaf) { // check current node\\n                index = findItem(item, node.children, equalsFn);\\n\\n                if (index !== -1) {\\n                    // item found, remove the item and condense tree upwards\\n                    node.children.splice(index, 1);\\n                    path.push(node);\\n                    this._condense(path);\\n                    return this;\\n                }\\n            }\\n\\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\\n                path.push(node);\\n                indexes.push(i);\\n                i = 0;\\n                parent = node;\\n                node = node.children[0];\\n\\n            } else if (parent) { // go right\\n                i++;\\n                node = parent.children[i];\\n                goingUp = false;\\n\\n            } else node = null; // nothing found\\n        }\\n\\n        return this;\\n    },\\n\\n    toBBox: function (item) { return item; },\\n\\n    compareMinX: compareNodeMinX,\\n    compareMinY: compareNodeMinY,\\n\\n    toJSON: function () { return this.data; },\\n\\n    fromJSON: function (data) {\\n        this.data = data;\\n        return this;\\n    },\\n\\n    _all: function (node, result) {\\n        var nodesToSearch = [];\\n        while (node) {\\n            if (node.leaf) result.push.apply(result, node.children);\\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\\n\\n            node = nodesToSearch.pop();\\n        }\\n        return result;\\n    },\\n\\n    _build: function (items, left, right, height) {\\n\\n        var N = right - left + 1,\\n            M = this._maxEntries,\\n            node;\\n\\n        if (N <= M) {\\n            // reached leaf level; return leaf\\n            node = createNode(items.slice(left, right + 1));\\n            calcBBox(node, this.toBBox);\\n            return node;\\n        }\\n\\n        if (!height) {\\n            // target height of the bulk-loaded tree\\n            height = Math.ceil(Math.log(N) / Math.log(M));\\n\\n            // target number of root entries to maximize storage utilization\\n            M = Math.ceil(N / Math.pow(M, height - 1));\\n        }\\n\\n        node = createNode([]);\\n        node.leaf = false;\\n        node.height = height;\\n\\n        // split the items into M mostly square tiles\\n\\n        var N2 = Math.ceil(N / M),\\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\\n            i, j, right2, right3;\\n\\n        multiSelect(items, left, right, N1, this.compareMinX);\\n\\n        for (i = left; i <= right; i += N1) {\\n\\n            right2 = Math.min(i + N1 - 1, right);\\n\\n            multiSelect(items, i, right2, N2, this.compareMinY);\\n\\n            for (j = i; j <= right2; j += N2) {\\n\\n                right3 = Math.min(j + N2 - 1, right2);\\n\\n                // pack each entry recursively\\n                node.children.push(this._build(items, j, right3, height - 1));\\n            }\\n        }\\n\\n        calcBBox(node, this.toBBox);\\n\\n        return node;\\n    },\\n\\n    _chooseSubtree: function (bbox, node, level, path) {\\n\\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\\n\\n        while (true) {\\n            path.push(node);\\n\\n            if (node.leaf || path.length - 1 === level) break;\\n\\n            minArea = minEnlargement = Infinity;\\n\\n            for (i = 0, len = node.children.length; i < len; i++) {\\n                child = node.children[i];\\n                area = bboxArea(child);\\n                enlargement = enlargedArea(bbox, child) - area;\\n\\n                // choose entry with the least area enlargement\\n                if (enlargement < minEnlargement) {\\n                    minEnlargement = enlargement;\\n                    minArea = area < minArea ? area : minArea;\\n                    targetNode = child;\\n\\n                } else if (enlargement === minEnlargement) {\\n                    // otherwise choose one with the smallest area\\n                    if (area < minArea) {\\n                        minArea = area;\\n                        targetNode = child;\\n                    }\\n                }\\n            }\\n\\n            node = targetNode || node.children[0];\\n        }\\n\\n        return node;\\n    },\\n\\n    _insert: function (item, level, isNode) {\\n\\n        var toBBox = this.toBBox,\\n            bbox = isNode ? item : toBBox(item),\\n            insertPath = [];\\n\\n        // find the best node for accommodating the item, saving all nodes along the path too\\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\\n\\n        // put the item into the node\\n        node.children.push(item);\\n        extend(node, bbox);\\n\\n        // split on node overflow; propagate upwards if necessary\\n        while (level >= 0) {\\n            if (insertPath[level].children.length > this._maxEntries) {\\n                this._split(insertPath, level);\\n                level--;\\n            } else break;\\n        }\\n\\n        // adjust bboxes along the insertion path\\n        this._adjustParentBBoxes(bbox, insertPath, level);\\n    },\\n\\n    // split overflowed node into two\\n    _split: function (insertPath, level) {\\n\\n        var node = insertPath[level],\\n            M = node.children.length,\\n            m = this._minEntries;\\n\\n        this._chooseSplitAxis(node, m, M);\\n\\n        var splitIndex = this._chooseSplitIndex(node, m, M);\\n\\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\\n        newNode.height = node.height;\\n        newNode.leaf = node.leaf;\\n\\n        calcBBox(node, this.toBBox);\\n        calcBBox(newNode, this.toBBox);\\n\\n        if (level) insertPath[level - 1].children.push(newNode);\\n        else this._splitRoot(node, newNode);\\n    },\\n\\n    _splitRoot: function (node, newNode) {\\n        // split root node\\n        this.data = createNode([node, newNode]);\\n        this.data.height = node.height + 1;\\n        this.data.leaf = false;\\n        calcBBox(this.data, this.toBBox);\\n    },\\n\\n    _chooseSplitIndex: function (node, m, M) {\\n\\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\\n\\n        minOverlap = minArea = Infinity;\\n\\n        for (i = m; i <= M - m; i++) {\\n            bbox1 = distBBox(node, 0, i, this.toBBox);\\n            bbox2 = distBBox(node, i, M, this.toBBox);\\n\\n            overlap = intersectionArea(bbox1, bbox2);\\n            area = bboxArea(bbox1) + bboxArea(bbox2);\\n\\n            // choose distribution with minimum overlap\\n            if (overlap < minOverlap) {\\n                minOverlap = overlap;\\n                index = i;\\n\\n                minArea = area < minArea ? area : minArea;\\n\\n            } else if (overlap === minOverlap) {\\n                // otherwise choose distribution with minimum area\\n                if (area < minArea) {\\n                    minArea = area;\\n                    index = i;\\n                }\\n            }\\n        }\\n\\n        return index;\\n    },\\n\\n    // sorts node children by the best axis for split\\n    _chooseSplitAxis: function (node, m, M) {\\n\\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\\n\\n        // if total distributions margin value is minimal for x, sort by minX,\\n        // otherwise it's already sorted by minY\\n        if (xMargin < yMargin) node.children.sort(compareMinX);\\n    },\\n\\n    // total margin of all possible split distributions where each node is at least m full\\n    _allDistMargin: function (node, m, M, compare) {\\n\\n        node.children.sort(compare);\\n\\n        var toBBox = this.toBBox,\\n            leftBBox = distBBox(node, 0, m, toBBox),\\n            rightBBox = distBBox(node, M - m, M, toBBox),\\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\\n            i, child;\\n\\n        for (i = m; i < M - m; i++) {\\n            child = node.children[i];\\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\\n            margin += bboxMargin(leftBBox);\\n        }\\n\\n        for (i = M - m - 1; i >= m; i--) {\\n            child = node.children[i];\\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\\n            margin += bboxMargin(rightBBox);\\n        }\\n\\n        return margin;\\n    },\\n\\n    _adjustParentBBoxes: function (bbox, path, level) {\\n        // adjust bboxes along the given tree path\\n        for (var i = level; i >= 0; i--) {\\n            extend(path[i], bbox);\\n        }\\n    },\\n\\n    _condense: function (path) {\\n        // go through the path, removing empty nodes and updating bboxes\\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\\n            if (path[i].children.length === 0) {\\n                if (i > 0) {\\n                    siblings = path[i - 1].children;\\n                    siblings.splice(siblings.indexOf(path[i]), 1);\\n\\n                } else this.clear();\\n\\n            } else calcBBox(path[i], this.toBBox);\\n        }\\n    },\\n\\n    _initFormat: function (format) {\\n        // data format (minX, minY, maxX, maxY accessors)\\n\\n        // uses eval-type function compilation instead of just accepting a toBBox function\\n        // because the algorithms are very sensitive to sorting functions performance,\\n        // so they should be dead simple and without inner calls\\n\\n        var compareArr = ['return a', ' - b', ';'];\\n\\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\\n\\n        this.toBBox = new Function('a',\\n            'return {minX: a' + format[0] +\\n            ', minY: a' + format[1] +\\n            ', maxX: a' + format[2] +\\n            ', maxY: a' + format[3] + '};');\\n    }\\n};\\n\\nfunction findItem(item, items, equalsFn) {\\n    if (!equalsFn) return items.indexOf(item);\\n\\n    for (var i = 0; i < items.length; i++) {\\n        if (equalsFn(item, items[i])) return i;\\n    }\\n    return -1;\\n}\\n\\n// calculate node's bbox from bboxes of its children\\nfunction calcBBox(node, toBBox) {\\n    distBBox(node, 0, node.children.length, toBBox, node);\\n}\\n\\n// min bounding rectangle of node children from k to p-1\\nfunction distBBox(node, k, p, toBBox, destNode) {\\n    if (!destNode) destNode = createNode(null);\\n    destNode.minX = Infinity;\\n    destNode.minY = Infinity;\\n    destNode.maxX = -Infinity;\\n    destNode.maxY = -Infinity;\\n\\n    for (var i = k, child; i < p; i++) {\\n        child = node.children[i];\\n        extend(destNode, node.leaf ? toBBox(child) : child);\\n    }\\n\\n    return destNode;\\n}\\n\\nfunction extend(a, b) {\\n    a.minX = Math.min(a.minX, b.minX);\\n    a.minY = Math.min(a.minY, b.minY);\\n    a.maxX = Math.max(a.maxX, b.maxX);\\n    a.maxY = Math.max(a.maxY, b.maxY);\\n    return a;\\n}\\n\\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\\n\\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\\n\\nfunction enlargedArea(a, b) {\\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\\n}\\n\\nfunction intersectionArea(a, b) {\\n    var minX = Math.max(a.minX, b.minX),\\n        minY = Math.max(a.minY, b.minY),\\n        maxX = Math.min(a.maxX, b.maxX),\\n        maxY = Math.min(a.maxY, b.maxY);\\n\\n    return Math.max(0, maxX - minX) *\\n           Math.max(0, maxY - minY);\\n}\\n\\nfunction contains(a, b) {\\n    return a.minX <= b.minX &&\\n           a.minY <= b.minY &&\\n           b.maxX <= a.maxX &&\\n           b.maxY <= a.maxY;\\n}\\n\\nfunction intersects(a, b) {\\n    return b.minX <= a.maxX &&\\n           b.minY <= a.maxY &&\\n           b.maxX >= a.minX &&\\n           b.maxY >= a.minY;\\n}\\n\\nfunction createNode(children) {\\n    return {\\n        children: children,\\n        height: 1,\\n        leaf: true,\\n        minX: Infinity,\\n        minY: Infinity,\\n        maxX: -Infinity,\\n        maxY: -Infinity\\n    };\\n}\\n\\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\\n// combines selection algorithm with binary divide & conquer approach\\n\\nfunction multiSelect(arr, left, right, n, compare) {\\n    var stack = [left, right],\\n        mid;\\n\\n    while (stack.length) {\\n        right = stack.pop();\\n        left = stack.pop();\\n\\n        if (right - left <= n) continue;\\n\\n        mid = left + Math.ceil((right - left) / n / 2) * n;\\n        quickselect(arr, mid, left, right, compare);\\n\\n        stack.push(left, mid, mid, right);\\n    }\\n}\\n\",\"const Store = require('./store').Store;\\nconst hash = require('./hash');\\n\\nlet store;\\n\\nfunction reset() {\\n  if (store) {\\n    window.removeEventListener('popstate', update);\\n  }\\n  window.addEventListener('popstate', update);\\n  store = new Store(hash.deserialize(location.hash), function(\\n    values,\\n    defaults\\n  ) {\\n    const nonDefaults = {};\\n    for (const key in values) {\\n      if (values[key] !== defaults[key]) {\\n        nonDefaults[key] = values[key];\\n      }\\n    }\\n    history.pushState(values, '', hash.serialize(nonDefaults));\\n  });\\n}\\n\\nfunction update() {\\n  store.update(hash.deserialize(location.hash));\\n}\\n\\n/**\\n * Register a new state provider.\\n * @param {Object} config Schema config.\\n * @param {function(Object)} callback Called immediately with initial state.\\n * @return {function(Object)} Call this function with any updates to the state.\\n */\\nexports.register = function(config, callback) {\\n  return store.register(config, callback);\\n};\\n\\n/**\\n * Unregister an existing state provider.\\n * @param {function(Object)} callback Callback registered by the provider.\\n */\\nexports.unregister = function(callback) {\\n  store.unregister(callback);\\n};\\n\\n/**\\n * Serialize values as they would be represented in the hash.\\n * @param {Object} values An object with values to be serialized.\\n * @return {string} The values as they would be represented in the hash.\\n */\\nexports.serialize = function(values) {\\n  return hash.serialize(store.serialize(values));\\n};\\n\\nexports.reset = reset;\\n\\nreset();\\n\",\"// Copyright Joyent, Inc. and other Node contributors.\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a\\n// copy of this software and associated documentation files (the\\n// \\\"Software\\\"), to deal in the Software without restriction, including\\n// without limitation the rights to use, copy, modify, merge, publish,\\n// distribute, sublicense, and/or sell copies of the Software, and to permit\\n// persons to whom the Software is furnished to do so, subject to the\\n// following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included\\n// in all copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\\n\\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\\n  function getOwnPropertyDescriptors(obj) {\\n    var keys = Object.keys(obj);\\n    var descriptors = {};\\n    for (var i = 0; i < keys.length; i++) {\\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\\n    }\\n    return descriptors;\\n  };\\n\\nvar formatRegExp = /%[sdj%]/g;\\nexports.format = function(f) {\\n  if (!isString(f)) {\\n    var objects = [];\\n    for (var i = 0; i < arguments.length; i++) {\\n      objects.push(inspect(arguments[i]));\\n    }\\n    return objects.join(' ');\\n  }\\n\\n  var i = 1;\\n  var args = arguments;\\n  var len = args.length;\\n  var str = String(f).replace(formatRegExp, function(x) {\\n    if (x === '%%') return '%';\\n    if (i >= len) return x;\\n    switch (x) {\\n      case '%s': return String(args[i++]);\\n      case '%d': return Number(args[i++]);\\n      case '%j':\\n        try {\\n          return JSON.stringify(args[i++]);\\n        } catch (_) {\\n          return '[Circular]';\\n        }\\n      default:\\n        return x;\\n    }\\n  });\\n  for (var x = args[i]; i < len; x = args[++i]) {\\n    if (isNull(x) || !isObject(x)) {\\n      str += ' ' + x;\\n    } else {\\n      str += ' ' + inspect(x);\\n    }\\n  }\\n  return str;\\n};\\n\\n\\n// Mark that a method should not be used.\\n// Returns a modified function which warns once by default.\\n// If --no-deprecation is set, then it is a no-op.\\nexports.deprecate = function(fn, msg) {\\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\\n    return fn;\\n  }\\n\\n  // Allow for deprecating things in the process of starting up.\\n  if (typeof process === 'undefined') {\\n    return function() {\\n      return exports.deprecate(fn, msg).apply(this, arguments);\\n    };\\n  }\\n\\n  var warned = false;\\n  function deprecated() {\\n    if (!warned) {\\n      if (process.throwDeprecation) {\\n        throw new Error(msg);\\n      } else if (process.traceDeprecation) {\\n        console.trace(msg);\\n      } else {\\n        console.error(msg);\\n      }\\n      warned = true;\\n    }\\n    return fn.apply(this, arguments);\\n  }\\n\\n  return deprecated;\\n};\\n\\n\\nvar debugs = {};\\nvar debugEnviron;\\nexports.debuglog = function(set) {\\n  if (isUndefined(debugEnviron))\\n    debugEnviron = process.env.NODE_DEBUG || '';\\n  set = set.toUpperCase();\\n  if (!debugs[set]) {\\n    if (new RegExp('\\\\\\\\b' + set + '\\\\\\\\b', 'i').test(debugEnviron)) {\\n      var pid = process.pid;\\n      debugs[set] = function() {\\n        var msg = exports.format.apply(exports, arguments);\\n        console.error('%s %d: %s', set, pid, msg);\\n      };\\n    } else {\\n      debugs[set] = function() {};\\n    }\\n  }\\n  return debugs[set];\\n};\\n\\n\\n/**\\n * Echos the value of a value. Trys to print the value out\\n * in the best way possible given the different types.\\n *\\n * @param {Object} obj The object to print out.\\n * @param {Object} opts Optional options object that alters the output.\\n */\\n/* legacy: obj, showHidden, depth, colors*/\\nfunction inspect(obj, opts) {\\n  // default options\\n  var ctx = {\\n    seen: [],\\n    stylize: stylizeNoColor\\n  };\\n  // legacy...\\n  if (arguments.length >= 3) ctx.depth = arguments[2];\\n  if (arguments.length >= 4) ctx.colors = arguments[3];\\n  if (isBoolean(opts)) {\\n    // legacy...\\n    ctx.showHidden = opts;\\n  } else if (opts) {\\n    // got an \\\"options\\\" object\\n    exports._extend(ctx, opts);\\n  }\\n  // set default options\\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\\n  if (isUndefined(ctx.colors)) ctx.colors = false;\\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\\n  return formatValue(ctx, obj, ctx.depth);\\n}\\nexports.inspect = inspect;\\n\\n\\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\\ninspect.colors = {\\n  'bold' : [1, 22],\\n  'italic' : [3, 23],\\n  'underline' : [4, 24],\\n  'inverse' : [7, 27],\\n  'white' : [37, 39],\\n  'grey' : [90, 39],\\n  'black' : [30, 39],\\n  'blue' : [34, 39],\\n  'cyan' : [36, 39],\\n  'green' : [32, 39],\\n  'magenta' : [35, 39],\\n  'red' : [31, 39],\\n  'yellow' : [33, 39]\\n};\\n\\n// Don't use 'blue' not visible on cmd.exe\\ninspect.styles = {\\n  'special': 'cyan',\\n  'number': 'yellow',\\n  'boolean': 'yellow',\\n  'undefined': 'grey',\\n  'null': 'bold',\\n  'string': 'green',\\n  'date': 'magenta',\\n  // \\\"name\\\": intentionally not styling\\n  'regexp': 'red'\\n};\\n\\n\\nfunction stylizeWithColor(str, styleType) {\\n  var style = inspect.styles[styleType];\\n\\n  if (style) {\\n    return '\\\\u001b[' + inspect.colors[style][0] + 'm' + str +\\n           '\\\\u001b[' + inspect.colors[style][1] + 'm';\\n  } else {\\n    return str;\\n  }\\n}\\n\\n\\nfunction stylizeNoColor(str, styleType) {\\n  return str;\\n}\\n\\n\\nfunction arrayToHash(array) {\\n  var hash = {};\\n\\n  array.forEach(function(val, idx) {\\n    hash[val] = true;\\n  });\\n\\n  return hash;\\n}\\n\\n\\nfunction formatValue(ctx, value, recurseTimes) {\\n  // Provide a hook for user-specified inspect functions.\\n  // Check that value is an object with an inspect function on it\\n  if (ctx.customInspect &&\\n      value &&\\n      isFunction(value.inspect) &&\\n      // Filter out the util module, it's inspect function is special\\n      value.inspect !== exports.inspect &&\\n      // Also filter out any prototype objects using the circular check.\\n      !(value.constructor && value.constructor.prototype === value)) {\\n    var ret = value.inspect(recurseTimes, ctx);\\n    if (!isString(ret)) {\\n      ret = formatValue(ctx, ret, recurseTimes);\\n    }\\n    return ret;\\n  }\\n\\n  // Primitive types cannot have properties\\n  var primitive = formatPrimitive(ctx, value);\\n  if (primitive) {\\n    return primitive;\\n  }\\n\\n  // Look up the keys of the object.\\n  var keys = Object.keys(value);\\n  var visibleKeys = arrayToHash(keys);\\n\\n  if (ctx.showHidden) {\\n    keys = Object.getOwnPropertyNames(value);\\n  }\\n\\n  // IE doesn't make error fields non-enumerable\\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\\n  if (isError(value)\\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\\n    return formatError(value);\\n  }\\n\\n  // Some type of object without properties can be shortcutted.\\n  if (keys.length === 0) {\\n    if (isFunction(value)) {\\n      var name = value.name ? ': ' + value.name : '';\\n      return ctx.stylize('[Function' + name + ']', 'special');\\n    }\\n    if (isRegExp(value)) {\\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\\n    }\\n    if (isDate(value)) {\\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\\n    }\\n    if (isError(value)) {\\n      return formatError(value);\\n    }\\n  }\\n\\n  var base = '', array = false, braces = ['{', '}'];\\n\\n  // Make Array say that they are Array\\n  if (isArray(value)) {\\n    array = true;\\n    braces = ['[', ']'];\\n  }\\n\\n  // Make functions say that they are functions\\n  if (isFunction(value)) {\\n    var n = value.name ? ': ' + value.name : '';\\n    base = ' [Function' + n + ']';\\n  }\\n\\n  // Make RegExps say that they are RegExps\\n  if (isRegExp(value)) {\\n    base = ' ' + RegExp.prototype.toString.call(value);\\n  }\\n\\n  // Make dates with properties first say the date\\n  if (isDate(value)) {\\n    base = ' ' + Date.prototype.toUTCString.call(value);\\n  }\\n\\n  // Make error with message first say the error\\n  if (isError(value)) {\\n    base = ' ' + formatError(value);\\n  }\\n\\n  if (keys.length === 0 && (!array || value.length == 0)) {\\n    return braces[0] + base + braces[1];\\n  }\\n\\n  if (recurseTimes < 0) {\\n    if (isRegExp(value)) {\\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\\n    } else {\\n      return ctx.stylize('[Object]', 'special');\\n    }\\n  }\\n\\n  ctx.seen.push(value);\\n\\n  var output;\\n  if (array) {\\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\\n  } else {\\n    output = keys.map(function(key) {\\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\\n    });\\n  }\\n\\n  ctx.seen.pop();\\n\\n  return reduceToSingleString(output, base, braces);\\n}\\n\\n\\nfunction formatPrimitive(ctx, value) {\\n  if (isUndefined(value))\\n    return ctx.stylize('undefined', 'undefined');\\n  if (isString(value)) {\\n    var simple = '\\\\'' + JSON.stringify(value).replace(/^\\\"|\\\"$/g, '')\\n                                             .replace(/'/g, \\\"\\\\\\\\'\\\")\\n                                             .replace(/\\\\\\\\\\\"/g, '\\\"') + '\\\\'';\\n    return ctx.stylize(simple, 'string');\\n  }\\n  if (isNumber(value))\\n    return ctx.stylize('' + value, 'number');\\n  if (isBoolean(value))\\n    return ctx.stylize('' + value, 'boolean');\\n  // For some reason typeof null is \\\"object\\\", so special case here.\\n  if (isNull(value))\\n    return ctx.stylize('null', 'null');\\n}\\n\\n\\nfunction formatError(value) {\\n  return '[' + Error.prototype.toString.call(value) + ']';\\n}\\n\\n\\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\\n  var output = [];\\n  for (var i = 0, l = value.length; i < l; ++i) {\\n    if (hasOwnProperty(value, String(i))) {\\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\\n          String(i), true));\\n    } else {\\n      output.push('');\\n    }\\n  }\\n  keys.forEach(function(key) {\\n    if (!key.match(/^\\\\d+$/)) {\\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\\n          key, true));\\n    }\\n  });\\n  return output;\\n}\\n\\n\\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\\n  var name, str, desc;\\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\\n  if (desc.get) {\\n    if (desc.set) {\\n      str = ctx.stylize('[Getter/Setter]', 'special');\\n    } else {\\n      str = ctx.stylize('[Getter]', 'special');\\n    }\\n  } else {\\n    if (desc.set) {\\n      str = ctx.stylize('[Setter]', 'special');\\n    }\\n  }\\n  if (!hasOwnProperty(visibleKeys, key)) {\\n    name = '[' + key + ']';\\n  }\\n  if (!str) {\\n    if (ctx.seen.indexOf(desc.value) < 0) {\\n      if (isNull(recurseTimes)) {\\n        str = formatValue(ctx, desc.value, null);\\n      } else {\\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\\n      }\\n      if (str.indexOf('\\\\n') > -1) {\\n        if (array) {\\n          str = str.split('\\\\n').map(function(line) {\\n            return '  ' + line;\\n          }).join('\\\\n').substr(2);\\n        } else {\\n          str = '\\\\n' + str.split('\\\\n').map(function(line) {\\n            return '   ' + line;\\n          }).join('\\\\n');\\n        }\\n      }\\n    } else {\\n      str = ctx.stylize('[Circular]', 'special');\\n    }\\n  }\\n  if (isUndefined(name)) {\\n    if (array && key.match(/^\\\\d+$/)) {\\n      return str;\\n    }\\n    name = JSON.stringify('' + key);\\n    if (name.match(/^\\\"([a-zA-Z_][a-zA-Z_0-9]*)\\\"$/)) {\\n      name = name.substr(1, name.length - 2);\\n      name = ctx.stylize(name, 'name');\\n    } else {\\n      name = name.replace(/'/g, \\\"\\\\\\\\'\\\")\\n                 .replace(/\\\\\\\\\\\"/g, '\\\"')\\n                 .replace(/(^\\\"|\\\"$)/g, \\\"'\\\");\\n      name = ctx.stylize(name, 'string');\\n    }\\n  }\\n\\n  return name + ': ' + str;\\n}\\n\\n\\nfunction reduceToSingleString(output, base, braces) {\\n  var numLinesEst = 0;\\n  var length = output.reduce(function(prev, cur) {\\n    numLinesEst++;\\n    if (cur.indexOf('\\\\n') >= 0) numLinesEst++;\\n    return prev + cur.replace(/\\\\u001b\\\\[\\\\d\\\\d?m/g, '').length + 1;\\n  }, 0);\\n\\n  if (length > 60) {\\n    return braces[0] +\\n           (base === '' ? '' : base + '\\\\n ') +\\n           ' ' +\\n           output.join(',\\\\n  ') +\\n           ' ' +\\n           braces[1];\\n  }\\n\\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\\n}\\n\\n\\n// NOTE: These type checking functions intentionally don't use `instanceof`\\n// because it is fragile and can be easily faked with `Object.create()`.\\nfunction isArray(ar) {\\n  return Array.isArray(ar);\\n}\\nexports.isArray = isArray;\\n\\nfunction isBoolean(arg) {\\n  return typeof arg === 'boolean';\\n}\\nexports.isBoolean = isBoolean;\\n\\nfunction isNull(arg) {\\n  return arg === null;\\n}\\nexports.isNull = isNull;\\n\\nfunction isNullOrUndefined(arg) {\\n  return arg == null;\\n}\\nexports.isNullOrUndefined = isNullOrUndefined;\\n\\nfunction isNumber(arg) {\\n  return typeof arg === 'number';\\n}\\nexports.isNumber = isNumber;\\n\\nfunction isString(arg) {\\n  return typeof arg === 'string';\\n}\\nexports.isString = isString;\\n\\nfunction isSymbol(arg) {\\n  return typeof arg === 'symbol';\\n}\\nexports.isSymbol = isSymbol;\\n\\nfunction isUndefined(arg) {\\n  return arg === void 0;\\n}\\nexports.isUndefined = isUndefined;\\n\\nfunction isRegExp(re) {\\n  return isObject(re) && objectToString(re) === '[object RegExp]';\\n}\\nexports.isRegExp = isRegExp;\\n\\nfunction isObject(arg) {\\n  return typeof arg === 'object' && arg !== null;\\n}\\nexports.isObject = isObject;\\n\\nfunction isDate(d) {\\n  return isObject(d) && objectToString(d) === '[object Date]';\\n}\\nexports.isDate = isDate;\\n\\nfunction isError(e) {\\n  return isObject(e) &&\\n      (objectToString(e) === '[object Error]' || e instanceof Error);\\n}\\nexports.isError = isError;\\n\\nfunction isFunction(arg) {\\n  return typeof arg === 'function';\\n}\\nexports.isFunction = isFunction;\\n\\nfunction isPrimitive(arg) {\\n  return arg === null ||\\n         typeof arg === 'boolean' ||\\n         typeof arg === 'number' ||\\n         typeof arg === 'string' ||\\n         typeof arg === 'symbol' ||  // ES6 symbol\\n         typeof arg === 'undefined';\\n}\\nexports.isPrimitive = isPrimitive;\\n\\nexports.isBuffer = require('./support/isBuffer');\\n\\nfunction objectToString(o) {\\n  return Object.prototype.toString.call(o);\\n}\\n\\n\\nfunction pad(n) {\\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\\n}\\n\\n\\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\\n              'Oct', 'Nov', 'Dec'];\\n\\n// 26 Feb 16:19:34\\nfunction timestamp() {\\n  var d = new Date();\\n  var time = [pad(d.getHours()),\\n              pad(d.getMinutes()),\\n              pad(d.getSeconds())].join(':');\\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\\n}\\n\\n\\n// log is just a thin wrapper to console.log that prepends a timestamp\\nexports.log = function() {\\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\\n};\\n\\n\\n/**\\n * Inherit the prototype methods from one constructor into another.\\n *\\n * The Function.prototype.inherits from lang.js rewritten as a standalone\\n * function (not on Function.prototype). NOTE: If this file is to be loaded\\n * during bootstrapping this function needs to be rewritten using some native\\n * functions as prototype setup using normal JavaScript does not work as\\n * expected during bootstrapping (see mirror.js in r114903).\\n *\\n * @param {function} ctor Constructor function which needs to inherit the\\n *     prototype.\\n * @param {function} superCtor Constructor function to inherit prototype from.\\n */\\nexports.inherits = require('inherits');\\n\\nexports._extend = function(origin, add) {\\n  // Don't do anything if add isn't an object\\n  if (!add || !isObject(add)) return origin;\\n\\n  var keys = Object.keys(add);\\n  var i = keys.length;\\n  while (i--) {\\n    origin[keys[i]] = add[keys[i]];\\n  }\\n  return origin;\\n};\\n\\nfunction hasOwnProperty(obj, prop) {\\n  return Object.prototype.hasOwnProperty.call(obj, prop);\\n}\\n\\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\\n\\nexports.promisify = function promisify(original) {\\n  if (typeof original !== 'function')\\n    throw new TypeError('The \\\"original\\\" argument must be of type Function');\\n\\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\\n    var fn = original[kCustomPromisifiedSymbol];\\n    if (typeof fn !== 'function') {\\n      throw new TypeError('The \\\"util.promisify.custom\\\" argument must be of type Function');\\n    }\\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\\n      value: fn, enumerable: false, writable: false, configurable: true\\n    });\\n    return fn;\\n  }\\n\\n  function fn() {\\n    var promiseResolve, promiseReject;\\n    var promise = new Promise(function (resolve, reject) {\\n      promiseResolve = resolve;\\n      promiseReject = reject;\\n    });\\n\\n    var args = [];\\n    for (var i = 0; i < arguments.length; i++) {\\n      args.push(arguments[i]);\\n    }\\n    args.push(function (err, value) {\\n      if (err) {\\n        promiseReject(err);\\n      } else {\\n        promiseResolve(value);\\n      }\\n    });\\n\\n    try {\\n      original.apply(this, args);\\n    } catch (err) {\\n      promiseReject(err);\\n    }\\n\\n    return promise;\\n  }\\n\\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\\n\\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\\n    value: fn, enumerable: false, writable: false, configurable: true\\n  });\\n  return Object.defineProperties(\\n    fn,\\n    getOwnPropertyDescriptors(original)\\n  );\\n}\\n\\nexports.promisify.custom = kCustomPromisifiedSymbol\\n\\nfunction callbackifyOnRejected(reason, cb) {\\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\\n  // Because `null` is a special error value in callbacks which means \\\"no error\\n  // occurred\\\", we error-wrap so the callback consumer can distinguish between\\n  // \\\"the promise rejected with null\\\" or \\\"the promise fulfilled with undefined\\\".\\n  if (!reason) {\\n    var newReason = new Error('Promise was rejected with a falsy value');\\n    newReason.reason = reason;\\n    reason = newReason;\\n  }\\n  return cb(reason);\\n}\\n\\nfunction callbackify(original) {\\n  if (typeof original !== 'function') {\\n    throw new TypeError('The \\\"original\\\" argument must be of type Function');\\n  }\\n\\n  // We DO NOT return the promise as it gives the user a false sense that\\n  // the promise is actually somehow related to the callback's execution\\n  // and that the callback throwing will reject the promise.\\n  function callbackified() {\\n    var args = [];\\n    for (var i = 0; i < arguments.length; i++) {\\n      args.push(arguments[i]);\\n    }\\n\\n    var maybeCb = args.pop();\\n    if (typeof maybeCb !== 'function') {\\n      throw new TypeError('The last argument must be of type Function');\\n    }\\n    var self = this;\\n    var cb = function() {\\n      return maybeCb.apply(self, arguments);\\n    };\\n    // In true node style we process the callback on `nextTick` with all the\\n    // implications (stack, `uncaughtException`, `async_hooks`)\\n    original.apply(this, args)\\n      .then(function(ret) { process.nextTick(cb, null, ret) },\\n            function(rej) { process.nextTick(callbackifyOnRejected, rej, cb) });\\n  }\\n\\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\\n  Object.defineProperties(callbackified,\\n                          getOwnPropertyDescriptors(original));\\n  return callbackified;\\n}\\nexports.callbackify = callbackify;\\n\",\"const util = require('util');\\n\\nconst enc = encodeURIComponent;\\n\\nconst serializers = {\\n  string: function(str) {\\n    if (typeof str !== 'string') {\\n      throw new Error('Expected string to serialize: ' + str);\\n    }\\n    return enc(str);\\n  },\\n  number: function(num) {\\n    if (typeof num !== 'number') {\\n      throw new Error('Expected number to serialize: ' + num);\\n    }\\n    return enc(String(num));\\n  },\\n  boolean: function(bool) {\\n    if (typeof bool !== 'boolean') {\\n      throw new Error('Expected boolean to serialize: ' + bool);\\n    }\\n    return bool ? '1' : '0';\\n  },\\n  date: function(date) {\\n    if (!util.isDate(date)) {\\n      throw new Error('Expected date to serialize: ' + date);\\n    }\\n    return enc(date.toISOString());\\n  },\\n  array: function(array) {\\n    if (!util.isArray(array)) {\\n      throw new Error('Expected array to serialize: ' + array);\\n    }\\n    return enc(JSON.stringify(array));\\n  },\\n  object: function(obj) {\\n    return enc(JSON.stringify(obj));\\n  }\\n};\\n\\n/**\\n * Get a serializer for a value of the given type.\\n * @param {string} type Value type.\\n * @return {function(*): string} Function that serializes a value to a string.\\n */\\nexports.get = function(type) {\\n  if (!(type in serializers)) {\\n    throw new Error('Unable to serialize type: ' + type);\\n  }\\n  return serializers[type];\\n};\\n\",\"\\nvar content = require(\\\"!!../css-loader/dist/cjs.js!./ol.css\\\");\\n\\nif(typeof content === 'string') content = [[module.id, content, '']];\\n\\nvar transform;\\nvar insertInto;\\n\\n\\n\\nvar options = {\\\"hmr\\\":true}\\n\\noptions.transform = transform\\noptions.insertInto = undefined;\\n\\nvar update = require(\\\"!../style-loader/lib/addStyles.js\\\")(content, options);\\n\\nif(content.locals) module.exports = content.locals;\\n\\nif(module.hot) {\\n\\tmodule.hot.accept(\\\"!!../css-loader/dist/cjs.js!./ol.css\\\", function() {\\n\\t\\tvar newContent = require(\\\"!!../css-loader/dist/cjs.js!./ol.css\\\");\\n\\n\\t\\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\\n\\n\\t\\tvar locals = (function(a, b) {\\n\\t\\t\\tvar key, idx = 0;\\n\\n\\t\\t\\tfor(key in a) {\\n\\t\\t\\t\\tif(!b || a[key] !== b[key]) return false;\\n\\t\\t\\t\\tidx++;\\n\\t\\t\\t}\\n\\n\\t\\t\\tfor(key in b) idx--;\\n\\n\\t\\t\\treturn idx === 0;\\n\\t\\t}(content.locals, newContent.locals));\\n\\n\\t\\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\\n\\n\\t\\tupdate(newContent);\\n\\t});\\n\\n\\tmodule.hot.dispose(function() { update(); });\\n}\",\"exports = module.exports = require(\\\"../css-loader/dist/runtime/api.js\\\")(false);\\n// Module\\nexports.push([module.id, \\\".ol-box {\\\\n  box-sizing: border-box;\\\\n  border-radius: 2px;\\\\n  border: 2px solid blue;\\\\n}\\\\n\\\\n.ol-mouse-position {\\\\n  top: 8px;\\\\n  right: 8px;\\\\n  position: absolute;\\\\n}\\\\n\\\\n.ol-scale-line {\\\\n  background: rgba(0,60,136,0.3);\\\\n  border-radius: 4px;\\\\n  bottom: 8px;\\\\n  left: 8px;\\\\n  padding: 2px;\\\\n  position: absolute;\\\\n}\\\\n.ol-scale-line-inner {\\\\n  border: 1px solid #eee;\\\\n  border-top: none;\\\\n  color: #eee;\\\\n  font-size: 10px;\\\\n  text-align: center;\\\\n  margin: 1px;\\\\n  will-change: contents, width;\\\\n  transition: all 0.25s;\\\\n}\\\\n.ol-scale-bar {\\\\n  position: absolute;\\\\n  bottom: 8px;\\\\n  left: 8px;\\\\n}\\\\n.ol-scale-step-marker {\\\\n  width: 1px;\\\\n  height: 15px;\\\\n  background-color: #000000;\\\\n  float: right;\\\\n  z-Index: 10;\\\\n}\\\\n.ol-scale-step-text {\\\\n  position: absolute;\\\\n  bottom: -5px;\\\\n  font-size: 12px;\\\\n  z-Index: 11;\\\\n  color: #000000;\\\\n  text-shadow: -2px 0 #FFFFFF, 0 2px #FFFFFF, 2px 0 #FFFFFF, 0 -2px #FFFFFF;\\\\n}\\\\n.ol-scale-text {\\\\n  position: absolute;\\\\n  font-size: 14px;\\\\n  text-align: center;\\\\n  bottom: 25px;\\\\n  color: #000000;\\\\n  text-shadow: -2px 0 #FFFFFF, 0 2px #FFFFFF, 2px 0 #FFFFFF, 0 -2px #FFFFFF;\\\\n}\\\\n.ol-scale-singlebar {\\\\n  position: relative;\\\\n  height: 10px;\\\\n  z-Index: 9;\\\\n  border: 1px solid black;\\\\n}\\\\n\\\\n.ol-overlay-container {\\\\n  will-change: left,right,top,bottom;\\\\n}\\\\n\\\\n.ol-unsupported {\\\\n  display: none;\\\\n}\\\\n.ol-viewport, .ol-unselectable {\\\\n  -webkit-touch-callout: none;\\\\n  -webkit-user-select: none;\\\\n  -moz-user-select: none;\\\\n  -ms-user-select: none;\\\\n  user-select: none;\\\\n  -webkit-tap-highlight-color: rgba(0,0,0,0);\\\\n}\\\\n.ol-selectable {\\\\n  -webkit-touch-callout: default;\\\\n  -webkit-user-select: text;\\\\n  -moz-user-select: text;\\\\n  -ms-user-select: text;\\\\n  user-select: text;\\\\n}\\\\n.ol-grabbing {\\\\n  cursor: -webkit-grabbing;\\\\n  cursor: -moz-grabbing;\\\\n  cursor: grabbing;\\\\n}\\\\n.ol-grab {\\\\n  cursor: move;\\\\n  cursor: -webkit-grab;\\\\n  cursor: -moz-grab;\\\\n  cursor: grab;\\\\n}\\\\n.ol-control {\\\\n  position: absolute;\\\\n  background-color: rgba(255,255,255,0.4);\\\\n  border-radius: 4px;\\\\n  padding: 2px;\\\\n}\\\\n.ol-control:hover {\\\\n  background-color: rgba(255,255,255,0.6);\\\\n}\\\\n.ol-zoom {\\\\n  top: .5em;\\\\n  left: .5em;\\\\n}\\\\n.ol-rotate {\\\\n  top: .5em;\\\\n  right: .5em;\\\\n  transition: opacity .25s linear, visibility 0s linear;\\\\n}\\\\n.ol-rotate.ol-hidden {\\\\n  opacity: 0;\\\\n  visibility: hidden;\\\\n  transition: opacity .25s linear, visibility 0s linear .25s;\\\\n}\\\\n.ol-zoom-extent {\\\\n  top: 4.643em;\\\\n  left: .5em;\\\\n}\\\\n.ol-full-screen {\\\\n  right: .5em;\\\\n  top: .5em;\\\\n}\\\\n@media print {\\\\n  .ol-control {\\\\n    display: none;\\\\n  }\\\\n}\\\\n\\\\n.ol-control button {\\\\n  display: block;\\\\n  margin: 1px;\\\\n  padding: 0;\\\\n  color: white;\\\\n  font-size: 1.14em;\\\\n  font-weight: bold;\\\\n  text-decoration: none;\\\\n  text-align: center;\\\\n  height: 1.375em;\\\\n  width: 1.375em;\\\\n  line-height: .4em;\\\\n  background-color: rgba(0,60,136,0.5);\\\\n  border: none;\\\\n  border-radius: 2px;\\\\n}\\\\n.ol-control button::-moz-focus-inner {\\\\n  border: none;\\\\n  padding: 0;\\\\n}\\\\n.ol-zoom-extent button {\\\\n  line-height: 1.4em;\\\\n}\\\\n.ol-compass {\\\\n  display: block;\\\\n  font-weight: normal;\\\\n  font-size: 1.2em;\\\\n  will-change: transform;\\\\n}\\\\n.ol-touch .ol-control button {\\\\n  font-size: 1.5em;\\\\n}\\\\n.ol-touch .ol-zoom-extent {\\\\n  top: 5.5em;\\\\n}\\\\n.ol-control button:hover,\\\\n.ol-control button:focus {\\\\n  text-decoration: none;\\\\n  background-color: rgba(0,60,136,0.7);\\\\n}\\\\n.ol-zoom .ol-zoom-in {\\\\n  border-radius: 2px 2px 0 0;\\\\n}\\\\n.ol-zoom .ol-zoom-out {\\\\n  border-radius: 0 0 2px 2px;\\\\n}\\\\n\\\\n\\\\n.ol-attribution {\\\\n  text-align: right;\\\\n  bottom: .5em;\\\\n  right: .5em;\\\\n  max-width: calc(100% - 1.3em);\\\\n}\\\\n\\\\n.ol-attribution ul {\\\\n  margin: 0;\\\\n  padding: 0 .5em;\\\\n  font-size: .7rem;\\\\n  line-height: 1.375em;\\\\n  color: #000;\\\\n  text-shadow: 0 0 2px #fff;\\\\n}\\\\n.ol-attribution li {\\\\n  display: inline;\\\\n  list-style: none;\\\\n  line-height: inherit;\\\\n}\\\\n.ol-attribution li:not(:last-child):after {\\\\n  content: \\\\\\\" \\\\\\\";\\\\n}\\\\n.ol-attribution img {\\\\n  max-height: 2em;\\\\n  max-width: inherit;\\\\n  vertical-align: middle;\\\\n}\\\\n.ol-attribution ul, .ol-attribution button {\\\\n  display: inline-block;\\\\n}\\\\n.ol-attribution.ol-collapsed ul {\\\\n  display: none;\\\\n}\\\\n.ol-attribution:not(.ol-collapsed) {\\\\n  background: rgba(255,255,255,0.8);\\\\n}\\\\n.ol-attribution.ol-uncollapsible {\\\\n  bottom: 0;\\\\n  right: 0;\\\\n  border-radius: 4px 0 0;\\\\n  height: 1.1em;\\\\n  line-height: 1em;\\\\n}\\\\n.ol-attribution.ol-uncollapsible img {\\\\n  margin-top: -.2em;\\\\n  max-height: 1.6em;\\\\n}\\\\n.ol-attribution.ol-uncollapsible button {\\\\n  display: none;\\\\n}\\\\n\\\\n.ol-zoomslider {\\\\n  top: 4.5em;\\\\n  left: .5em;\\\\n  height: 200px;\\\\n}\\\\n.ol-zoomslider button {\\\\n  position: relative;\\\\n  height: 10px;\\\\n}\\\\n\\\\n.ol-touch .ol-zoomslider {\\\\n  top: 5.5em;\\\\n}\\\\n\\\\n.ol-overviewmap {\\\\n  left: 0.5em;\\\\n  bottom: 0.5em;\\\\n}\\\\n.ol-overviewmap.ol-uncollapsible {\\\\n  bottom: 0;\\\\n  left: 0;\\\\n  border-radius: 0 4px 0 0;\\\\n}\\\\n.ol-overviewmap .ol-overviewmap-map,\\\\n.ol-overviewmap button {\\\\n  display: inline-block;\\\\n}\\\\n.ol-overviewmap .ol-overviewmap-map {\\\\n  border: 1px solid #7b98bc;\\\\n  height: 150px;\\\\n  margin: 2px;\\\\n  width: 150px;\\\\n}\\\\n.ol-overviewmap:not(.ol-collapsed) button{\\\\n  bottom: 1px;\\\\n  left: 2px;\\\\n  position: absolute;\\\\n}\\\\n.ol-overviewmap.ol-collapsed .ol-overviewmap-map,\\\\n.ol-overviewmap.ol-uncollapsible button {\\\\n  display: none;\\\\n}\\\\n.ol-overviewmap:not(.ol-collapsed) {\\\\n  background: rgba(255,255,255,0.8);\\\\n}\\\\n.ol-overviewmap-box {\\\\n  border: 2px dotted rgba(0,60,136,0.7);\\\\n}\\\\n\\\\n.ol-overviewmap .ol-overviewmap-box:hover {\\\\n  cursor: move;\\\\n}\\\\n\\\", \\\"\\\"]);\\n\\n\",\"\\\"use strict\\\";\\n\\n/*\\n  MIT License http://www.opensource.org/licenses/mit-license.php\\n  Author Tobias Koppers @sokra\\n*/\\n// css base code, injected by the css-loader\\nmodule.exports = function (useSourceMap) {\\n  var list = []; // return the list of modules as css string\\n\\n  list.toString = function toString() {\\n    return this.map(function (item) {\\n      var content = cssWithMappingToString(item, useSourceMap);\\n\\n      if (item[2]) {\\n        return '@media ' + item[2] + '{' + content + '}';\\n      } else {\\n        return content;\\n      }\\n    }).join('');\\n  }; // import a list of modules into the list\\n\\n\\n  list.i = function (modules, mediaQuery) {\\n    if (typeof modules === 'string') {\\n      modules = [[null, modules, '']];\\n    }\\n\\n    var alreadyImportedModules = {};\\n\\n    for (var i = 0; i < this.length; i++) {\\n      var id = this[i][0];\\n\\n      if (id != null) {\\n        alreadyImportedModules[id] = true;\\n      }\\n    }\\n\\n    for (i = 0; i < modules.length; i++) {\\n      var item = modules[i]; // skip already imported module\\n      // this implementation is not 100% perfect for weird media query combinations\\n      // when a module is imported multiple times with different media queries.\\n      // I hope this will never occur (Hey this way we have smaller bundles)\\n\\n      if (item[0] == null || !alreadyImportedModules[item[0]]) {\\n        if (mediaQuery && !item[2]) {\\n          item[2] = mediaQuery;\\n        } else if (mediaQuery) {\\n          item[2] = '(' + item[2] + ') and (' + mediaQuery + ')';\\n        }\\n\\n        list.push(item);\\n      }\\n    }\\n  };\\n\\n  return list;\\n};\\n\\nfunction cssWithMappingToString(item, useSourceMap) {\\n  var content = item[1] || '';\\n  var cssMapping = item[3];\\n\\n  if (!cssMapping) {\\n    return content;\\n  }\\n\\n  if (useSourceMap && typeof btoa === 'function') {\\n    var sourceMapping = toComment(cssMapping);\\n    var sourceURLs = cssMapping.sources.map(function (source) {\\n      return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */';\\n    });\\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\\\n');\\n  }\\n\\n  return [content].join('\\\\n');\\n} // Adapted from convert-source-map (MIT)\\n\\n\\nfunction toComment(sourceMap) {\\n  // eslint-disable-next-line no-undef\\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\\n  var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\\n  return '/*# ' + data + ' */';\\n}\",\"/*\\n\\tMIT License http://www.opensource.org/licenses/mit-license.php\\n\\tAuthor Tobias Koppers @sokra\\n*/\\n\\nvar stylesInDom = {};\\n\\nvar\\tmemoize = function (fn) {\\n\\tvar memo;\\n\\n\\treturn function () {\\n\\t\\tif (typeof memo === \\\"undefined\\\") memo = fn.apply(this, arguments);\\n\\t\\treturn memo;\\n\\t};\\n};\\n\\nvar isOldIE = memoize(function () {\\n\\t// Test for IE <= 9 as proposed by Browserhacks\\n\\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\\n\\t// Tests for existence of standard globals is to allow style-loader\\n\\t// to operate correctly into non-standard environments\\n\\t// @see https://github.com/webpack-contrib/style-loader/issues/177\\n\\treturn window && document && document.all && !window.atob;\\n});\\n\\nvar getTarget = function (target, parent) {\\n  if (parent){\\n    return parent.querySelector(target);\\n  }\\n  return document.querySelector(target);\\n};\\n\\nvar getElement = (function (fn) {\\n\\tvar memo = {};\\n\\n\\treturn function(target, parent) {\\n                // If passing function in options, then use it for resolve \\\"head\\\" element.\\n                // Useful for Shadow Root style i.e\\n                // {\\n                //   insertInto: function () { return document.querySelector(\\\"#foo\\\").shadowRoot }\\n                // }\\n                if (typeof target === 'function') {\\n                        return target();\\n                }\\n                if (typeof memo[target] === \\\"undefined\\\") {\\n\\t\\t\\tvar styleTarget = getTarget.call(this, target, parent);\\n\\t\\t\\t// Special case to return head of iframe instead of iframe itself\\n\\t\\t\\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\\n\\t\\t\\t\\ttry {\\n\\t\\t\\t\\t\\t// This will throw an exception if access to iframe is blocked\\n\\t\\t\\t\\t\\t// due to cross-origin restrictions\\n\\t\\t\\t\\t\\tstyleTarget = styleTarget.contentDocument.head;\\n\\t\\t\\t\\t} catch(e) {\\n\\t\\t\\t\\t\\tstyleTarget = null;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\tmemo[target] = styleTarget;\\n\\t\\t}\\n\\t\\treturn memo[target]\\n\\t};\\n})();\\n\\nvar singleton = null;\\nvar\\tsingletonCounter = 0;\\nvar\\tstylesInsertedAtTop = [];\\n\\nvar\\tfixUrls = require(\\\"./urls\\\");\\n\\nmodule.exports = function(list, options) {\\n\\tif (typeof DEBUG !== \\\"undefined\\\" && DEBUG) {\\n\\t\\tif (typeof document !== \\\"object\\\") throw new Error(\\\"The style-loader cannot be used in a non-browser environment\\\");\\n\\t}\\n\\n\\toptions = options || {};\\n\\n\\toptions.attrs = typeof options.attrs === \\\"object\\\" ? options.attrs : {};\\n\\n\\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\\n\\t// tags it will allow on a page\\n\\tif (!options.singleton && typeof options.singleton !== \\\"boolean\\\") options.singleton = isOldIE();\\n\\n\\t// By default, add <style> tags to the <head> element\\n        if (!options.insertInto) options.insertInto = \\\"head\\\";\\n\\n\\t// By default, add <style> tags to the bottom of the target\\n\\tif (!options.insertAt) options.insertAt = \\\"bottom\\\";\\n\\n\\tvar styles = listToStyles(list, options);\\n\\n\\taddStylesToDom(styles, options);\\n\\n\\treturn function update (newList) {\\n\\t\\tvar mayRemove = [];\\n\\n\\t\\tfor (var i = 0; i < styles.length; i++) {\\n\\t\\t\\tvar item = styles[i];\\n\\t\\t\\tvar domStyle = stylesInDom[item.id];\\n\\n\\t\\t\\tdomStyle.refs--;\\n\\t\\t\\tmayRemove.push(domStyle);\\n\\t\\t}\\n\\n\\t\\tif(newList) {\\n\\t\\t\\tvar newStyles = listToStyles(newList, options);\\n\\t\\t\\taddStylesToDom(newStyles, options);\\n\\t\\t}\\n\\n\\t\\tfor (var i = 0; i < mayRemove.length; i++) {\\n\\t\\t\\tvar domStyle = mayRemove[i];\\n\\n\\t\\t\\tif(domStyle.refs === 0) {\\n\\t\\t\\t\\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\\n\\n\\t\\t\\t\\tdelete stylesInDom[domStyle.id];\\n\\t\\t\\t}\\n\\t\\t}\\n\\t};\\n};\\n\\nfunction addStylesToDom (styles, options) {\\n\\tfor (var i = 0; i < styles.length; i++) {\\n\\t\\tvar item = styles[i];\\n\\t\\tvar domStyle = stylesInDom[item.id];\\n\\n\\t\\tif(domStyle) {\\n\\t\\t\\tdomStyle.refs++;\\n\\n\\t\\t\\tfor(var j = 0; j < domStyle.parts.length; j++) {\\n\\t\\t\\t\\tdomStyle.parts[j](item.parts[j]);\\n\\t\\t\\t}\\n\\n\\t\\t\\tfor(; j < item.parts.length; j++) {\\n\\t\\t\\t\\tdomStyle.parts.push(addStyle(item.parts[j], options));\\n\\t\\t\\t}\\n\\t\\t} else {\\n\\t\\t\\tvar parts = [];\\n\\n\\t\\t\\tfor(var j = 0; j < item.parts.length; j++) {\\n\\t\\t\\t\\tparts.push(addStyle(item.parts[j], options));\\n\\t\\t\\t}\\n\\n\\t\\t\\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\\n\\t\\t}\\n\\t}\\n}\\n\\nfunction listToStyles (list, options) {\\n\\tvar styles = [];\\n\\tvar newStyles = {};\\n\\n\\tfor (var i = 0; i < list.length; i++) {\\n\\t\\tvar item = list[i];\\n\\t\\tvar id = options.base ? item[0] + options.base : item[0];\\n\\t\\tvar css = item[1];\\n\\t\\tvar media = item[2];\\n\\t\\tvar sourceMap = item[3];\\n\\t\\tvar part = {css: css, media: media, sourceMap: sourceMap};\\n\\n\\t\\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\\n\\t\\telse newStyles[id].parts.push(part);\\n\\t}\\n\\n\\treturn styles;\\n}\\n\\nfunction insertStyleElement (options, style) {\\n\\tvar target = getElement(options.insertInto)\\n\\n\\tif (!target) {\\n\\t\\tthrow new Error(\\\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\\\");\\n\\t}\\n\\n\\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\\n\\n\\tif (options.insertAt === \\\"top\\\") {\\n\\t\\tif (!lastStyleElementInsertedAtTop) {\\n\\t\\t\\ttarget.insertBefore(style, target.firstChild);\\n\\t\\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\\n\\t\\t\\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\\n\\t\\t} else {\\n\\t\\t\\ttarget.appendChild(style);\\n\\t\\t}\\n\\t\\tstylesInsertedAtTop.push(style);\\n\\t} else if (options.insertAt === \\\"bottom\\\") {\\n\\t\\ttarget.appendChild(style);\\n\\t} else if (typeof options.insertAt === \\\"object\\\" && options.insertAt.before) {\\n\\t\\tvar nextSibling = getElement(options.insertAt.before, target);\\n\\t\\ttarget.insertBefore(style, nextSibling);\\n\\t} else {\\n\\t\\tthrow new Error(\\\"[Style Loader]\\\\n\\\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\\\n Must be 'top', 'bottom', or Object.\\\\n (https://github.com/webpack-contrib/style-loader#insertat)\\\\n\\\");\\n\\t}\\n}\\n\\nfunction removeStyleElement (style) {\\n\\tif (style.parentNode === null) return false;\\n\\tstyle.parentNode.removeChild(style);\\n\\n\\tvar idx = stylesInsertedAtTop.indexOf(style);\\n\\tif(idx >= 0) {\\n\\t\\tstylesInsertedAtTop.splice(idx, 1);\\n\\t}\\n}\\n\\nfunction createStyleElement (options) {\\n\\tvar style = document.createElement(\\\"style\\\");\\n\\n\\tif(options.attrs.type === undefined) {\\n\\t\\toptions.attrs.type = \\\"text/css\\\";\\n\\t}\\n\\n\\tif(options.attrs.nonce === undefined) {\\n\\t\\tvar nonce = getNonce();\\n\\t\\tif (nonce) {\\n\\t\\t\\toptions.attrs.nonce = nonce;\\n\\t\\t}\\n\\t}\\n\\n\\taddAttrs(style, options.attrs);\\n\\tinsertStyleElement(options, style);\\n\\n\\treturn style;\\n}\\n\\nfunction createLinkElement (options) {\\n\\tvar link = document.createElement(\\\"link\\\");\\n\\n\\tif(options.attrs.type === undefined) {\\n\\t\\toptions.attrs.type = \\\"text/css\\\";\\n\\t}\\n\\toptions.attrs.rel = \\\"stylesheet\\\";\\n\\n\\taddAttrs(link, options.attrs);\\n\\tinsertStyleElement(options, link);\\n\\n\\treturn link;\\n}\\n\\nfunction addAttrs (el, attrs) {\\n\\tObject.keys(attrs).forEach(function (key) {\\n\\t\\tel.setAttribute(key, attrs[key]);\\n\\t});\\n}\\n\\nfunction getNonce() {\\n\\tif (typeof __webpack_nonce__ === 'undefined') {\\n\\t\\treturn null;\\n\\t}\\n\\n\\treturn __webpack_nonce__;\\n}\\n\\nfunction addStyle (obj, options) {\\n\\tvar style, update, remove, result;\\n\\n\\t// If a transform function was defined, run it on the css\\n\\tif (options.transform && obj.css) {\\n\\t    result = typeof options.transform === 'function'\\n\\t\\t ? options.transform(obj.css) \\n\\t\\t : options.transform.default(obj.css);\\n\\n\\t    if (result) {\\n\\t    \\t// If transform returns a value, use that instead of the original css.\\n\\t    \\t// This allows running runtime transformations on the css.\\n\\t    \\tobj.css = result;\\n\\t    } else {\\n\\t    \\t// If the transform function returns a falsy value, don't add this css.\\n\\t    \\t// This allows conditional loading of css\\n\\t    \\treturn function() {\\n\\t    \\t\\t// noop\\n\\t    \\t};\\n\\t    }\\n\\t}\\n\\n\\tif (options.singleton) {\\n\\t\\tvar styleIndex = singletonCounter++;\\n\\n\\t\\tstyle = singleton || (singleton = createStyleElement(options));\\n\\n\\t\\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\\n\\t\\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\\n\\n\\t} else if (\\n\\t\\tobj.sourceMap &&\\n\\t\\ttypeof URL === \\\"function\\\" &&\\n\\t\\ttypeof URL.createObjectURL === \\\"function\\\" &&\\n\\t\\ttypeof URL.revokeObjectURL === \\\"function\\\" &&\\n\\t\\ttypeof Blob === \\\"function\\\" &&\\n\\t\\ttypeof btoa === \\\"function\\\"\\n\\t) {\\n\\t\\tstyle = createLinkElement(options);\\n\\t\\tupdate = updateLink.bind(null, style, options);\\n\\t\\tremove = function () {\\n\\t\\t\\tremoveStyleElement(style);\\n\\n\\t\\t\\tif(style.href) URL.revokeObjectURL(style.href);\\n\\t\\t};\\n\\t} else {\\n\\t\\tstyle = createStyleElement(options);\\n\\t\\tupdate = applyToTag.bind(null, style);\\n\\t\\tremove = function () {\\n\\t\\t\\tremoveStyleElement(style);\\n\\t\\t};\\n\\t}\\n\\n\\tupdate(obj);\\n\\n\\treturn function updateStyle (newObj) {\\n\\t\\tif (newObj) {\\n\\t\\t\\tif (\\n\\t\\t\\t\\tnewObj.css === obj.css &&\\n\\t\\t\\t\\tnewObj.media === obj.media &&\\n\\t\\t\\t\\tnewObj.sourceMap === obj.sourceMap\\n\\t\\t\\t) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tupdate(obj = newObj);\\n\\t\\t} else {\\n\\t\\t\\tremove();\\n\\t\\t}\\n\\t};\\n}\\n\\nvar replaceText = (function () {\\n\\tvar textStore = [];\\n\\n\\treturn function (index, replacement) {\\n\\t\\ttextStore[index] = replacement;\\n\\n\\t\\treturn textStore.filter(Boolean).join('\\\\n');\\n\\t};\\n})();\\n\\nfunction applyToSingletonTag (style, index, remove, obj) {\\n\\tvar css = remove ? \\\"\\\" : obj.css;\\n\\n\\tif (style.styleSheet) {\\n\\t\\tstyle.styleSheet.cssText = replaceText(index, css);\\n\\t} else {\\n\\t\\tvar cssNode = document.createTextNode(css);\\n\\t\\tvar childNodes = style.childNodes;\\n\\n\\t\\tif (childNodes[index]) style.removeChild(childNodes[index]);\\n\\n\\t\\tif (childNodes.length) {\\n\\t\\t\\tstyle.insertBefore(cssNode, childNodes[index]);\\n\\t\\t} else {\\n\\t\\t\\tstyle.appendChild(cssNode);\\n\\t\\t}\\n\\t}\\n}\\n\\nfunction applyToTag (style, obj) {\\n\\tvar css = obj.css;\\n\\tvar media = obj.media;\\n\\n\\tif(media) {\\n\\t\\tstyle.setAttribute(\\\"media\\\", media)\\n\\t}\\n\\n\\tif(style.styleSheet) {\\n\\t\\tstyle.styleSheet.cssText = css;\\n\\t} else {\\n\\t\\twhile(style.firstChild) {\\n\\t\\t\\tstyle.removeChild(style.firstChild);\\n\\t\\t}\\n\\n\\t\\tstyle.appendChild(document.createTextNode(css));\\n\\t}\\n}\\n\\nfunction updateLink (link, options, obj) {\\n\\tvar css = obj.css;\\n\\tvar sourceMap = obj.sourceMap;\\n\\n\\t/*\\n\\t\\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\\n\\t\\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\\n\\t\\ton by default.  Otherwise default to the convertToAbsoluteUrls option\\n\\t\\tdirectly\\n\\t*/\\n\\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\\n\\n\\tif (options.convertToAbsoluteUrls || autoFixUrls) {\\n\\t\\tcss = fixUrls(css);\\n\\t}\\n\\n\\tif (sourceMap) {\\n\\t\\t// http://stackoverflow.com/a/26603875\\n\\t\\tcss += \\\"\\\\n/*# sourceMappingURL=data:application/json;base64,\\\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \\\" */\\\";\\n\\t}\\n\\n\\tvar blob = new Blob([css], { type: \\\"text/css\\\" });\\n\\n\\tvar oldSrc = link.href;\\n\\n\\tlink.href = URL.createObjectURL(blob);\\n\\n\\tif(oldSrc) URL.revokeObjectURL(oldSrc);\\n}\\n\",\"\\n/**\\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\\n * embed the css on the page. This breaks all relative urls because now they are relative to a\\n * bundle instead of the current page.\\n *\\n * One solution is to only use full urls, but that may be impossible.\\n *\\n * Instead, this function \\\"fixes\\\" the relative urls to be absolute according to the current page location.\\n *\\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\\n *\\n */\\n\\nmodule.exports = function (css) {\\n  // get current location\\n  var location = typeof window !== \\\"undefined\\\" && window.location;\\n\\n  if (!location) {\\n    throw new Error(\\\"fixUrls requires window.location\\\");\\n  }\\n\\n\\t// blank or null?\\n\\tif (!css || typeof css !== \\\"string\\\") {\\n\\t  return css;\\n  }\\n\\n  var baseUrl = location.protocol + \\\"//\\\" + location.host;\\n  var currentDir = baseUrl + location.pathname.replace(/\\\\/[^\\\\/]*$/, \\\"/\\\");\\n\\n\\t// convert each url(...)\\n\\t/*\\n\\tThis regular expression is just a way to recursively match brackets within\\n\\ta string.\\n\\n\\t /url\\\\s*\\\\(  = Match on the word \\\"url\\\" with any whitespace after it and then a parens\\n\\t   (  = Start a capturing group\\n\\t     (?:  = Start a non-capturing group\\n\\t         [^)(]  = Match anything that isn't a parentheses\\n\\t         |  = OR\\n\\t         \\\\(  = Match a start parentheses\\n\\t             (?:  = Start another non-capturing groups\\n\\t                 [^)(]+  = Match anything that isn't a parentheses\\n\\t                 |  = OR\\n\\t                 \\\\(  = Match a start parentheses\\n\\t                     [^)(]*  = Match anything that isn't a parentheses\\n\\t                 \\\\)  = Match a end parentheses\\n\\t             )  = End Group\\n              *\\\\) = Match anything and then a close parens\\n          )  = Close non-capturing group\\n          *  = Match anything\\n       )  = Close capturing group\\n\\t \\\\)  = Match a close parens\\n\\n\\t /gi  = Get all matches, not the first.  Be case insensitive.\\n\\t */\\n\\tvar fixedCss = css.replace(/url\\\\s*\\\\(((?:[^)(]|\\\\((?:[^)(]+|\\\\([^)(]*\\\\))*\\\\))*)\\\\)/gi, function(fullMatch, origUrl) {\\n\\t\\t// strip quotes (if they exist)\\n\\t\\tvar unquotedOrigUrl = origUrl\\n\\t\\t\\t.trim()\\n\\t\\t\\t.replace(/^\\\"(.*)\\\"$/, function(o, $1){ return $1; })\\n\\t\\t\\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\\n\\n\\t\\t// already a full url? no change\\n\\t\\tif (/^(#|data:|http:\\\\/\\\\/|https:\\\\/\\\\/|file:\\\\/\\\\/\\\\/|\\\\s*$)/i.test(unquotedOrigUrl)) {\\n\\t\\t  return fullMatch;\\n\\t\\t}\\n\\n\\t\\t// convert the url to a full url\\n\\t\\tvar newUrl;\\n\\n\\t\\tif (unquotedOrigUrl.indexOf(\\\"//\\\") === 0) {\\n\\t\\t  \\t//TODO: should we add protocol?\\n\\t\\t\\tnewUrl = unquotedOrigUrl;\\n\\t\\t} else if (unquotedOrigUrl.indexOf(\\\"/\\\") === 0) {\\n\\t\\t\\t// path should be relative to the base url\\n\\t\\t\\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\\n\\t\\t} else {\\n\\t\\t\\t// path should be relative to current directory\\n\\t\\t\\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\\\.\\\\//, \\\"\\\"); // Strip leading './'\\n\\t\\t}\\n\\n\\t\\t// send back the fixed url(...)\\n\\t\\treturn \\\"url(\\\" + JSON.stringify(newUrl) + \\\")\\\";\\n\\t});\\n\\n\\t// send back the fixed css\\n\\treturn fixedCss;\\n};\\n\",\"const Schema = require('./schema').Schema;\\nconst util = require('./util');\\nconst serializers = require('./serializers');\\n\\n/**\\n * An object backed store of string values.  Allows registering multiple state\\n * providers.\\n * @param {Object} values Initial serialized values.\\n * @param {function(Object)} callback Called with an object of serialized\\n *     values and defaults whenever a provider updates state.\\n * @constructor\\n */\\nconst Store = (exports.Store = function(values, callback) {\\n  this._values = values;\\n  this._defaults = {};\\n  this._providers = [];\\n  this._callback = callback;\\n  this._callbackTimer = null;\\n});\\n\\nStore.prototype._scheduleCallback = function() {\\n  if (this._callbackTimer) {\\n    clearTimeout(this._callbackTimer);\\n  }\\n  this._callbackTimer = setTimeout(this._debouncedCallback.bind(this));\\n};\\n\\nStore.prototype._debouncedCallback = function() {\\n  this._callbackTimer = null;\\n  this._callback(this._values, this._defaults);\\n};\\n\\nStore.prototype.update = function(values) {\\n  if (this._updateTimer) {\\n    clearTimeout(this._updateTimer);\\n  }\\n  this._updateTimer = setTimeout(this._debouncedUpdate.bind(this, values));\\n};\\n\\nStore.prototype._debouncedUpdate = function(newValues) {\\n  this._updateTimer = null;\\n  const values = this._values;\\n  const providers = this._providers.slice(); // callbacks may unregister providers\\n  for (let i = providers.length - 1; i >= 0; --i) {\\n    const provider = providers[i];\\n    const schema = provider.schema;\\n    let changed = false;\\n    const state = {};\\n    schema.forEachKey(function(key, prefixed) {\\n      let deserialized;\\n      if (!(prefixed in newValues)) {\\n        deserialized = schema.getDefault(key);\\n        const serializedDefault = schema.serialize(key, deserialized);\\n        if (values[prefixed] !== serializedDefault) {\\n          changed = true;\\n          values[prefixed] = serializedDefault;\\n          state[key] = deserialized;\\n        }\\n      } else if (values[prefixed] !== newValues[prefixed]) {\\n        try {\\n          deserialized = schema.deserialize(key, newValues[prefixed]);\\n          values[prefixed] = newValues[prefixed];\\n          state[key] = deserialized;\\n          changed = true;\\n        } catch (err) {\\n          // invalid value, pass\\n        }\\n      }\\n    });\\n    if (changed && this._providers.indexOf(provider) >= 0) {\\n      provider.callback(state);\\n    }\\n  }\\n};\\n\\n/**\\n * Unregister a provider.  Deletes the provider's values from the underlying\\n * store and calls the store's callback.\\n * @param {Function} callback The provider's callback.\\n */\\nStore.prototype.unregister = function(callback) {\\n  let removedProvider;\\n  this._providers = this._providers.filter(function(provider) {\\n    const remove = provider.callback === callback;\\n    if (remove) {\\n      removedProvider = provider;\\n    }\\n    return !remove;\\n  });\\n  if (!removedProvider) {\\n    throw new Error('Unable to unregister hashed state provider');\\n  }\\n  const values = this._values;\\n  const defaults = this._defaults;\\n  removedProvider.schema.forEachKey(function(key, prefixed) {\\n    delete values[prefixed];\\n    delete defaults[prefixed];\\n  });\\n  this._scheduleCallback();\\n};\\n\\n/**\\n * Register a new state provider.\\n * @param {Object} config Schema config.\\n * @param {function(Object)} callback Called by the store on state changes.\\n * @return {function(Object)} Called by the provider on state changes.\\n */\\nStore.prototype.register = function(config, callback) {\\n  const provider = {\\n    schema: new Schema(config),\\n    callback: callback\\n  };\\n\\n  // ensure there are no conflicts with existing providers\\n  for (let i = 0, ii = this._providers.length; i < ii; ++i) {\\n    const conflicts = provider.schema.conflicts(this._providers[i].schema);\\n    if (conflicts) {\\n      throw new Error(\\n        'Provider already registered using the same name: ' + conflicts\\n      );\\n    }\\n    if (provider.callback === this._providers[i].callback) {\\n      throw new Error('Provider already registered with the same callback');\\n    }\\n  }\\n\\n  this._providers.push(provider);\\n  this._initializeProvider(provider);\\n\\n  return function update(state) {\\n    if (this._providers.indexOf(provider) === -1) {\\n      throw new Error('Unregistered provider attempting to update state');\\n    }\\n    const schema = provider.schema;\\n    let changed = false;\\n    const values = this._values;\\n    schema.forEachKey(function(key, prefixed) {\\n      if (key in state) {\\n        const serializedValue = schema.serialize(key, state[key], state);\\n        if (values[prefixed] !== serializedValue) {\\n          changed = true;\\n          values[prefixed] = serializedValue;\\n        }\\n      }\\n    });\\n    if (changed) {\\n      this._scheduleCallback();\\n    }\\n  }.bind(this);\\n};\\n\\n/**\\n * Call provider with initial values.\\n * @param {Object} provider Provider to be initialized.\\n */\\nStore.prototype._initializeProvider = function(provider) {\\n  const state = {};\\n  const defaults = {};\\n  const values = this._values;\\n  provider.schema.forEachKey(function(key, prefixed) {\\n    let deserializedValue;\\n    const deserializedDefault = provider.schema.getDefault(key);\\n    const serializedDefault = provider.schema.serialize(\\n      key,\\n      deserializedDefault\\n    );\\n    if (prefixed in values) {\\n      try {\\n        deserializedValue = provider.schema.deserialize(key, values[prefixed]);\\n      } catch (err) {\\n        deserializedValue = deserializedDefault;\\n      }\\n    } else {\\n      deserializedValue = deserializedDefault;\\n    }\\n    state[key] = deserializedValue;\\n    defaults[prefixed] = serializedDefault;\\n    values[prefixed] = provider.schema.serialize(key, deserializedValue);\\n  });\\n  for (const prefixed in defaults) {\\n    this._defaults[prefixed] = defaults[prefixed];\\n  }\\n  provider.callback(state);\\n};\\n\\n/**\\n * Serialize values with provider serializers where available.\\n * @param {Object} values Values to be serialized.\\n * @return {Object} The serialized values.\\n */\\nStore.prototype.serialize = function(values) {\\n  const serialized = {};\\n  for (let i = 0, ii = this._providers.length; i < ii; ++i) {\\n    const provider = this._providers[i];\\n    provider.schema.forEachKey(function(key, prefixed) {\\n      if (prefixed in values) {\\n        serialized[prefixed] = provider.schema.serialize(\\n          key,\\n          values[prefixed],\\n          values\\n        );\\n      }\\n    });\\n  }\\n  for (const key in values) {\\n    if (!(key in serialized)) {\\n      const value = values[key];\\n      const type = util.typeOf(value);\\n      const serializer = serializers.get(type);\\n      serialized[key] = serializer(value);\\n    }\\n  }\\n  return serialized;\\n};\\n\",\"const Field = require('./field').Field;\\nconst util = require('./util');\\n\\n/**\\n * Create a new schema.  A schema is a collection of field definitions.\\n * @param {Object} config Keys are field names, values are field configs.\\n * @constructor\\n */\\nconst Schema = (exports.Schema = function(config) {\\n  config = util.extend({}, config);\\n  const fields = {};\\n  let prefix;\\n  if ('_' in config) {\\n    prefix = config._;\\n    delete config._;\\n  }\\n  for (const key in config) {\\n    fields[key] = new Field(config[key]);\\n  }\\n  this._prefix = prefix;\\n  this._fields = fields;\\n});\\n\\n/**\\n * Get the prefixed version of a key.\\n * @param {string} key The key.\\n * @return {string} The prefixed key.\\n */\\nSchema.prototype.getPrefixed = function(key) {\\n  return this._prefix ? this._prefix + '.' + key : key;\\n};\\n\\n/**\\n * Call a callback for each field key.\\n * @param {function(string, number)} callback Called with a local field key and\\n *     a prefixed key.\\n * @param {Object} thisArg This argument for the callback.\\n */\\nSchema.prototype.forEachKey = function(callback, thisArg) {\\n  let more;\\n  for (const key in this._fields) {\\n    more = callback.call(thisArg, key, this.getPrefixed(key));\\n    if (more === false) {\\n      return;\\n    }\\n  }\\n};\\n\\n/**\\n * Serialize a value.\\n * @param {string} key The key or field name.\\n * @param {*} value The value to serialize.\\n * @param {Object} values Additional values for providers to use when serializing.\\n * @return {string} The serialized value.\\n */\\nSchema.prototype.serialize = function(key, value, values) {\\n  if (!(key in this._fields)) {\\n    throw new Error('Unknown key: ' + key);\\n  }\\n  return this._fields[key].serialize(value, values);\\n};\\n\\n/**\\n * Deserialize a value.\\n * @param {string} key The key or field name.\\n * @param {string} str The serialized value.\\n * @return {*} The deserialized value.\\n */\\nSchema.prototype.deserialize = function(key, str) {\\n  if (!(key in this._fields)) {\\n    throw new Error('Unknown key: ' + key);\\n  }\\n  return this._fields[key].deserialize(str);\\n};\\n\\n/**\\n * Get the default value for a particular field.\\n * @param {string} key The key or field name.\\n * @return {*} The default value.\\n */\\nSchema.prototype.getDefault = function(key) {\\n  if (!(key in this._fields)) {\\n    throw new Error('Unknown key: ' + key);\\n  }\\n  return this._fields[key].default;\\n};\\n\\n/**\\n * Determine if one schema conflicts with another.  Two schemas conflict if\\n * any of their prefixed keys are the same.\\n * @param {Schema} other The other schema.\\n * @return {boolean|string} This schema conflicts with the other.  If the two\\n *     schemas conflict, the return will be the first conflicting key (with\\n *     any prefix).\\n */\\nSchema.prototype.conflicts = function(other) {\\n  const thisPrefixedKeys = {};\\n  for (const key in this._fields) {\\n    thisPrefixedKeys[this.getPrefixed(key)] = true;\\n  }\\n\\n  let conflicts = false;\\n  other.forEachKey(function(_, prefixed) {\\n    if (prefixed in thisPrefixedKeys) {\\n      conflicts = prefixed;\\n    }\\n    return !conflicts;\\n  });\\n  return conflicts;\\n};\\n\",\"const util = require('./util');\\n\\nconst serializers = require('./serializers');\\nconst deserializers = require('./deserializers');\\n\\n/**\\n * Create a new field.  A field must have a default value (`default`) and is\\n * capable of serializing and deserializing values.\\n * @param {Object} config Field configuration.  Must have a `default` property\\n *     with a default value.  May have optional `serialize` and `deserialize`\\n *     functions.  As a shorthand for providing a config object with a `default`\\n *     property, a default value may be provided directly.\\n * @constructor\\n */\\nexports.Field = function(config) {\\n  if (util.typeOf(config) !== 'object') {\\n    this.default = config;\\n  } else if (!('default' in config)) {\\n    throw new Error('Missing default');\\n  } else {\\n    this.default = config.default;\\n  }\\n\\n  const type = util.typeOf(this.default);\\n  this.serialize = config.serialize || serializers.get(type);\\n  this.deserialize = config.deserialize || deserializers.get(type);\\n};\\n\",\"// shim for using process in browser\\nvar process = module.exports = {};\\n\\n// cached from whatever global is present so that test runners that stub it\\n// don't break things.  But we need to wrap it in a try catch in case it is\\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\\n// function because try/catches deoptimize in certain engines.\\n\\nvar cachedSetTimeout;\\nvar cachedClearTimeout;\\n\\nfunction defaultSetTimout() {\\n    throw new Error('setTimeout has not been defined');\\n}\\nfunction defaultClearTimeout () {\\n    throw new Error('clearTimeout has not been defined');\\n}\\n(function () {\\n    try {\\n        if (typeof setTimeout === 'function') {\\n            cachedSetTimeout = setTimeout;\\n        } else {\\n            cachedSetTimeout = defaultSetTimout;\\n        }\\n    } catch (e) {\\n        cachedSetTimeout = defaultSetTimout;\\n    }\\n    try {\\n        if (typeof clearTimeout === 'function') {\\n            cachedClearTimeout = clearTimeout;\\n        } else {\\n            cachedClearTimeout = defaultClearTimeout;\\n        }\\n    } catch (e) {\\n        cachedClearTimeout = defaultClearTimeout;\\n    }\\n} ())\\nfunction runTimeout(fun) {\\n    if (cachedSetTimeout === setTimeout) {\\n        //normal enviroments in sane situations\\n        return setTimeout(fun, 0);\\n    }\\n    // if setTimeout wasn't available but was latter defined\\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\\n        cachedSetTimeout = setTimeout;\\n        return setTimeout(fun, 0);\\n    }\\n    try {\\n        // when when somebody has screwed with setTimeout but no I.E. maddness\\n        return cachedSetTimeout(fun, 0);\\n    } catch(e){\\n        try {\\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\\n            return cachedSetTimeout.call(null, fun, 0);\\n        } catch(e){\\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\\n            return cachedSetTimeout.call(this, fun, 0);\\n        }\\n    }\\n\\n\\n}\\nfunction runClearTimeout(marker) {\\n    if (cachedClearTimeout === clearTimeout) {\\n        //normal enviroments in sane situations\\n        return clearTimeout(marker);\\n    }\\n    // if clearTimeout wasn't available but was latter defined\\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\\n        cachedClearTimeout = clearTimeout;\\n        return clearTimeout(marker);\\n    }\\n    try {\\n        // when when somebody has screwed with setTimeout but no I.E. maddness\\n        return cachedClearTimeout(marker);\\n    } catch (e){\\n        try {\\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\\n            return cachedClearTimeout.call(null, marker);\\n        } catch (e){\\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\\n            return cachedClearTimeout.call(this, marker);\\n        }\\n    }\\n\\n\\n\\n}\\nvar queue = [];\\nvar draining = false;\\nvar currentQueue;\\nvar queueIndex = -1;\\n\\nfunction cleanUpNextTick() {\\n    if (!draining || !currentQueue) {\\n        return;\\n    }\\n    draining = false;\\n    if (currentQueue.length) {\\n        queue = currentQueue.concat(queue);\\n    } else {\\n        queueIndex = -1;\\n    }\\n    if (queue.length) {\\n        drainQueue();\\n    }\\n}\\n\\nfunction drainQueue() {\\n    if (draining) {\\n        return;\\n    }\\n    var timeout = runTimeout(cleanUpNextTick);\\n    draining = true;\\n\\n    var len = queue.length;\\n    while(len) {\\n        currentQueue = queue;\\n        queue = [];\\n        while (++queueIndex < len) {\\n            if (currentQueue) {\\n                currentQueue[queueIndex].run();\\n            }\\n        }\\n        queueIndex = -1;\\n        len = queue.length;\\n    }\\n    currentQueue = null;\\n    draining = false;\\n    runClearTimeout(timeout);\\n}\\n\\nprocess.nextTick = function (fun) {\\n    var args = new Array(arguments.length - 1);\\n    if (arguments.length > 1) {\\n        for (var i = 1; i < arguments.length; i++) {\\n            args[i - 1] = arguments[i];\\n        }\\n    }\\n    queue.push(new Item(fun, args));\\n    if (queue.length === 1 && !draining) {\\n        runTimeout(drainQueue);\\n    }\\n};\\n\\n// v8 likes predictible objects\\nfunction Item(fun, array) {\\n    this.fun = fun;\\n    this.array = array;\\n}\\nItem.prototype.run = function () {\\n    this.fun.apply(null, this.array);\\n};\\nprocess.title = 'browser';\\nprocess.browser = true;\\nprocess.env = {};\\nprocess.argv = [];\\nprocess.version = ''; // empty string to avoid regexp issues\\nprocess.versions = {};\\n\\nfunction noop() {}\\n\\nprocess.on = noop;\\nprocess.addListener = noop;\\nprocess.once = noop;\\nprocess.off = noop;\\nprocess.removeListener = noop;\\nprocess.removeAllListeners = noop;\\nprocess.emit = noop;\\nprocess.prependListener = noop;\\nprocess.prependOnceListener = noop;\\n\\nprocess.listeners = function (name) { return [] }\\n\\nprocess.binding = function (name) {\\n    throw new Error('process.binding is not supported');\\n};\\n\\nprocess.cwd = function () { return '/' };\\nprocess.chdir = function (dir) {\\n    throw new Error('process.chdir is not supported');\\n};\\nprocess.umask = function() { return 0; };\\n\",\"module.exports = function isBuffer(arg) {\\n  return arg && typeof arg === 'object'\\n    && typeof arg.copy === 'function'\\n    && typeof arg.fill === 'function'\\n    && typeof arg.readUInt8 === 'function';\\n}\",\"if (typeof Object.create === 'function') {\\n  // implementation from standard node.js 'util' module\\n  module.exports = function inherits(ctor, superCtor) {\\n    ctor.super_ = superCtor\\n    ctor.prototype = Object.create(superCtor.prototype, {\\n      constructor: {\\n        value: ctor,\\n        enumerable: false,\\n        writable: true,\\n        configurable: true\\n      }\\n    });\\n  };\\n} else {\\n  // old school shim for old browsers\\n  module.exports = function inherits(ctor, superCtor) {\\n    ctor.super_ = superCtor\\n    var TempCtor = function () {}\\n    TempCtor.prototype = superCtor.prototype\\n    ctor.prototype = new TempCtor()\\n    ctor.prototype.constructor = ctor\\n  }\\n}\\n\",\"const util = require('./util');\\n\\nconst dec = decodeURIComponent;\\n\\nconst noop = function() {};\\n\\nconst deserializers = {\\n  string: function(str) {\\n    if (!str || typeof str !== 'string') {\\n      throw new Error('Expected string to deserialize: ' + str);\\n    }\\n    return dec(str);\\n  },\\n  number: function(str) {\\n    if (!str || typeof str !== 'string') {\\n      throw new Error('Expected string to deserialize: ' + str);\\n    }\\n    const num = Number(dec(str));\\n    if (isNaN(num)) {\\n      throw new Error('Expected to deserialize a number: ' + str);\\n    }\\n    return num;\\n  },\\n  boolean: function(str) {\\n    if (!str || typeof str !== 'string') {\\n      throw new Error('Expected string to deserialize: ' + str);\\n    }\\n    let bool;\\n    if (str === '1') {\\n      bool = true;\\n    } else if (str === '0') {\\n      bool = false;\\n    } else {\\n      throw new Error('Expected \\\"1\\\" or \\\"0\\\" for boolean: ' + str);\\n    }\\n    return bool;\\n  },\\n  date: function(str) {\\n    if (!str || typeof str !== 'string') {\\n      throw new Error('Expected string to deserialize: ' + str);\\n    }\\n    const date = new Date(dec(str));\\n    if (isNaN(date.getTime())) {\\n      throw new Error('Expected to deserialize a date: ' + str);\\n    }\\n    return date;\\n  },\\n  array: function(str) {\\n    if (!str || typeof str !== 'string') {\\n      throw new Error('Expected string to deserialize: ' + str);\\n    }\\n    let array;\\n    try {\\n      array = JSON.parse(dec(str));\\n    } catch (err) {\\n      noop();\\n    }\\n    if (!array || util.typeOf(array) !== 'array') {\\n      throw new Error('Expected to deserialize an array: ' + str);\\n    }\\n    return array;\\n  },\\n  object: function(str) {\\n    if (!str || typeof str !== 'string') {\\n      throw new Error('Expected string to deserialize: ' + str);\\n    }\\n    let obj;\\n    try {\\n      obj = JSON.parse(dec(str));\\n    } catch (err) {\\n      noop();\\n    }\\n    if (!obj || util.typeOf(obj) !== 'object') {\\n      throw new Error('Expected to deserialize an object: ' + str);\\n    }\\n    return obj;\\n  }\\n};\\n\\n/**\\n * Get a deserializer for a value of the given type.\\n * @param {string} type Value type.\\n * @return {function(string): *} Function that deserializes a string to a value.\\n */\\nexports.get = function(type) {\\n  if (!(type in deserializers)) {\\n    throw new Error('Unable to deserialize type: ' + type);\\n  }\\n  return deserializers[type];\\n};\\n\",\"const util = require('./util');\\n\\n/**\\n * Get values from a hash string.\\n * @param {string} hash The hash string (e.g. '#/foo/bar').\\n * @return {Object} The string values (e.g. {foo: 'bar'}).\\n */\\nfunction deserialize(hash) {\\n  let zipped;\\n  if (hash.length > 2) {\\n    const path = hash.substring(2);\\n    zipped = path.split('/');\\n  } else {\\n    zipped = [];\\n  }\\n  return util.unzip(zipped);\\n}\\n\\n/**\\n * Serialize values for the hash.\\n * @param {Object} values The values to serialize.\\n * @return {string} The hash string.\\n */\\nfunction serialize(values) {\\n  let path = '#';\\n  const parts = util.zip(values);\\n  if (parts.length > 0) {\\n    path = '#/' + parts.join('/');\\n  }\\n  return path;\\n}\\n\\nexports.deserialize = deserialize;\\nexports.serialize = serialize;\\n\",\"(function (global, factory) {\\n\\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\\n\\ttypeof define === 'function' && define.amd ? define(factory) :\\n\\t(global.quickselect = factory());\\n}(this, (function () { 'use strict';\\n\\nfunction quickselect(arr, k, left, right, compare) {\\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\\n}\\n\\nfunction quickselectStep(arr, k, left, right, compare) {\\n\\n    while (right > left) {\\n        if (right - left > 600) {\\n            var n = right - left + 1;\\n            var m = k - left + 1;\\n            var z = Math.log(n);\\n            var s = 0.5 * Math.exp(2 * z / 3);\\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\\n            quickselectStep(arr, k, newLeft, newRight, compare);\\n        }\\n\\n        var t = arr[k];\\n        var i = left;\\n        var j = right;\\n\\n        swap(arr, left, k);\\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\\n\\n        while (i < j) {\\n            swap(arr, i, j);\\n            i++;\\n            j--;\\n            while (compare(arr[i], t) < 0) i++;\\n            while (compare(arr[j], t) > 0) j--;\\n        }\\n\\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\\n        else {\\n            j++;\\n            swap(arr, j, right);\\n        }\\n\\n        if (j <= k) left = j + 1;\\n        if (k <= j) right = j - 1;\\n    }\\n}\\n\\nfunction swap(arr, i, j) {\\n    var tmp = arr[i];\\n    arr[i] = arr[j];\\n    arr[j] = tmp;\\n}\\n\\nfunction defaultCompare(a, b) {\\n    return a < b ? -1 : a > b ? 1 : 0;\\n}\\n\\nreturn quickselect;\\n\\n})));\\n\",\"/**\\n * @module ol/util\\n */\\n/**\\n * @return {?} Any return.\\n */\\nexport function abstract() {\\n    return /** @type {?} */ ((function () {\\n        throw new Error('Unimplemented abstract method.');\\n    })());\\n}\\n/**\\n * Counter for getUid.\\n * @type {number}\\n * @private\\n */\\nvar uidCounter_ = 0;\\n/**\\n * Gets a unique ID for an object. This mutates the object so that further calls\\n * with the same object as a parameter returns the same value. Unique IDs are generated\\n * as a strictly increasing sequence. Adapted from goog.getUid.\\n *\\n * @param {Object} obj The object to get the unique ID for.\\n * @return {string} The unique ID for the object.\\n * @function module:ol.getUid\\n * @api\\n */\\nexport function getUid(obj) {\\n    return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\\n}\\n/**\\n * OpenLayers version.\\n * @type {string}\\n */\\nexport var VERSION = '6.0.0-beta.6';\\n//# sourceMappingURL=util.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/AssertionError\\n */\\nimport { VERSION } from './util.js';\\n/**\\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\\n * extended with a `code` property.\\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\\n */\\nvar AssertionError = /** @class */ (function (_super) {\\n    __extends(AssertionError, _super);\\n    /**\\n     * @param {number} code Error code.\\n     */\\n    function AssertionError(code) {\\n        var _this = this;\\n        var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\\n        var message = 'Assertion failed. See https://openlayers.org/en/' + path +\\n            '/doc/errors/#' + code + ' for details.';\\n        _this = _super.call(this, message) || this;\\n        /**\\n         * Error code. The meaning of the code can be found on\\n         * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\\n         * the version found in the OpenLayers script's header comment if a version\\n         * other than the latest is used).\\n         * @type {number}\\n         * @api\\n         */\\n        _this.code = code;\\n        /**\\n         * @type {string}\\n         */\\n        _this.name = 'AssertionError';\\n        // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\\n        _this.message = message;\\n        return _this;\\n    }\\n    return AssertionError;\\n}(Error));\\nexport default AssertionError;\\n//# sourceMappingURL=AssertionError.js.map\",\"/**\\n * @module ol/CollectionEventType\\n */\\n/**\\n * @enum {string}\\n */\\nexport default {\\n    /**\\n     * Triggered when an item is added to the collection.\\n     * @event module:ol/Collection.CollectionEvent#add\\n     * @api\\n     */\\n    ADD: 'add',\\n    /**\\n     * Triggered when an item is removed from the collection.\\n     * @event module:ol/Collection.CollectionEvent#remove\\n     * @api\\n     */\\n    REMOVE: 'remove'\\n};\\n//# sourceMappingURL=CollectionEventType.js.map\",\"/**\\n * @module ol/ObjectEventType\\n */\\n/**\\n * @enum {string}\\n */\\nexport default {\\n    /**\\n     * Triggered when a property is changed.\\n     * @event module:ol/Object.ObjectEvent#propertychange\\n     * @api\\n     */\\n    PROPERTYCHANGE: 'propertychange'\\n};\\n//# sourceMappingURL=ObjectEventType.js.map\",\"/**\\n * @module ol/obj\\n */\\n/**\\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\\n * one or more source objects to a target object.\\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\\n *\\n * @param {!Object} target The target object.\\n * @param {...Object} var_sources The source object(s).\\n * @return {!Object} The modified target object.\\n */\\nexport var assign = (typeof Object.assign === 'function') ? Object.assign : function (target, var_sources) {\\n    if (target === undefined || target === null) {\\n        throw new TypeError('Cannot convert undefined or null to object');\\n    }\\n    var output = Object(target);\\n    for (var i = 1, ii = arguments.length; i < ii; ++i) {\\n        var source = arguments[i];\\n        if (source !== undefined && source !== null) {\\n            for (var key in source) {\\n                if (source.hasOwnProperty(key)) {\\n                    output[key] = source[key];\\n                }\\n            }\\n        }\\n    }\\n    return output;\\n};\\n/**\\n * Removes all properties from an object.\\n * @param {Object} object The object to clear.\\n */\\nexport function clear(object) {\\n    for (var property in object) {\\n        delete object[property];\\n    }\\n}\\n/**\\n * Polyfill for Object.values().  Get an array of property values from an object.\\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\\n *\\n * @param {!Object<K,V>} object The object from which to get the values.\\n * @return {!Array<V>} The property values.\\n * @template K,V\\n */\\nexport var getValues = (typeof Object.values === 'function') ? Object.values : function (object) {\\n    var values = [];\\n    for (var property in object) {\\n        values.push(object[property]);\\n    }\\n    return values;\\n};\\n/**\\n * Determine if an object has any properties.\\n * @param {Object} object The object to check.\\n * @return {boolean} The object is empty.\\n */\\nexport function isEmpty(object) {\\n    var property;\\n    for (property in object) {\\n        return false;\\n    }\\n    return !property;\\n}\\n//# sourceMappingURL=obj.js.map\",\"/**\\n * @module ol/events\\n */\\nimport { clear } from './obj.js';\\n/**\\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\\n * @typedef {Object} EventsKey\\n * @property {Object} [bindTo]\\n * @property {ListenerFunction} [boundListener]\\n * @property {boolean} callOnce\\n * @property {number} [deleteIndex]\\n * @property {ListenerFunction} listener\\n * @property {import(\\\"./events/Target.js\\\").EventTargetLike} target\\n * @property {string} type\\n * @api\\n */\\n/**\\n * Listener function. This function is called with an event object as argument.\\n * When the function returns `false`, event propagation will stop.\\n *\\n * @typedef {function((Event|import(\\\"./events/Event.js\\\").default)): (void|boolean)} ListenerFunction\\n * @api\\n */\\n/**\\n * @param {EventsKey} listenerObj Listener object.\\n * @return {ListenerFunction} Bound listener.\\n */\\nexport function bindListener(listenerObj) {\\n    var boundListener = function (evt) {\\n        var listener = listenerObj.listener;\\n        var bindTo = listenerObj.bindTo || listenerObj.target;\\n        if (listenerObj.callOnce) {\\n            unlistenByKey(listenerObj);\\n        }\\n        return listener.call(bindTo, evt);\\n    };\\n    listenerObj.boundListener = boundListener;\\n    return boundListener;\\n}\\n/**\\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\\n * array.\\n *\\n * @param {!Array<!EventsKey>} listeners Array of listeners.\\n * @param {!Function} listener The listener function.\\n * @param {Object=} opt_this The `this` value inside the listener.\\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\\n *     listener, for {@link module:ol/events~unlistenByKey}.\\n * @return {EventsKey|undefined} The matching listener object.\\n */\\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\\n    var listenerObj;\\n    for (var i = 0, ii = listeners.length; i < ii; ++i) {\\n        listenerObj = listeners[i];\\n        if (listenerObj.listener === listener &&\\n            listenerObj.bindTo === opt_this) {\\n            if (opt_setDeleteIndex) {\\n                listenerObj.deleteIndex = i;\\n            }\\n            return listenerObj;\\n        }\\n    }\\n    return undefined;\\n}\\n/**\\n * @param {import(\\\"./events/Target.js\\\").EventTargetLike} target Target.\\n * @param {string} type Type.\\n * @return {Array<EventsKey>|undefined} Listeners.\\n */\\nexport function getListeners(target, type) {\\n    var listenerMap = getListenerMap(target);\\n    return listenerMap ? listenerMap[type] : undefined;\\n}\\n/**\\n * Get the lookup of listeners.\\n * @param {Object} target Target.\\n * @param {boolean=} opt_create If a map should be created if it doesn't exist.\\n * @return {!Object<string, Array<EventsKey>>} Map of\\n *     listeners by event type.\\n */\\nfunction getListenerMap(target, opt_create) {\\n    var listenerMap = target.ol_lm;\\n    if (!listenerMap && opt_create) {\\n        listenerMap = target.ol_lm = {};\\n    }\\n    return listenerMap;\\n}\\n/**\\n * Remove the listener map from a target.\\n * @param {Object} target Target.\\n */\\nfunction removeListenerMap(target) {\\n    delete target.ol_lm;\\n}\\n/**\\n * Clean up all listener objects of the given type.  All properties on the\\n * listener objects will be removed, and if no listeners remain in the listener\\n * map, it will be removed from the target.\\n * @param {import(\\\"./events/Target.js\\\").EventTargetLike} target Target.\\n * @param {string} type Type.\\n */\\nfunction removeListeners(target, type) {\\n    var listeners = getListeners(target, type);\\n    if (listeners) {\\n        for (var i = 0, ii = listeners.length; i < ii; ++i) {\\n            /** @type {import(\\\"./events/Target.js\\\").default} */ (target).\\n                removeEventListener(type, listeners[i].boundListener);\\n            clear(listeners[i]);\\n        }\\n        listeners.length = 0;\\n        var listenerMap = getListenerMap(target);\\n        if (listenerMap) {\\n            delete listenerMap[type];\\n            if (Object.keys(listenerMap).length === 0) {\\n                removeListenerMap(target);\\n            }\\n        }\\n    }\\n}\\n/**\\n * Registers an event listener on an event target. Inspired by\\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\\n *\\n * This function efficiently binds a `listener` to a `this` object, and returns\\n * a key for use with {@link module:ol/events~unlistenByKey}.\\n *\\n * @param {import(\\\"./events/Target.js\\\").EventTargetLike} target Event target.\\n * @param {string} type Event type.\\n * @param {ListenerFunction} listener Listener.\\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\\n *     listener. Default is the `target`.\\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\\n * @return {EventsKey} Unique key for the listener.\\n */\\nexport function listen(target, type, listener, opt_this, opt_once) {\\n    var listenerMap = getListenerMap(target, true);\\n    var listeners = listenerMap[type];\\n    if (!listeners) {\\n        listeners = listenerMap[type] = [];\\n    }\\n    var listenerObj = findListener(listeners, listener, opt_this, false);\\n    if (listenerObj) {\\n        if (!opt_once) {\\n            // Turn one-off listener into a permanent one.\\n            listenerObj.callOnce = false;\\n        }\\n    }\\n    else {\\n        listenerObj = {\\n            bindTo: opt_this,\\n            callOnce: !!opt_once,\\n            listener: listener,\\n            target: target,\\n            type: type\\n        };\\n        /** @type {import(\\\"./events/Target.js\\\").default} */ (target).\\n            addEventListener(type, bindListener(listenerObj));\\n        listeners.push(listenerObj);\\n    }\\n    return listenerObj;\\n}\\n/**\\n * Registers a one-off event listener on an event target. Inspired by\\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\\n *\\n * This function efficiently binds a `listener` as self-unregistering listener\\n * to a `this` object, and returns a key for use with\\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\\n * unregistered before it is called.\\n *\\n * When {@link module:ol/events~listen} is called with the same arguments after this\\n * function, the self-unregistering listener will be turned into a permanent\\n * listener.\\n *\\n * @param {import(\\\"./events/Target.js\\\").EventTargetLike} target Event target.\\n * @param {string} type Event type.\\n * @param {ListenerFunction} listener Listener.\\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\\n *     listener. Default is the `target`.\\n * @return {EventsKey} Key for unlistenByKey.\\n */\\nexport function listenOnce(target, type, listener, opt_this) {\\n    return listen(target, type, listener, opt_this, true);\\n}\\n/**\\n * Unregisters an event listener on an event target. Inspired by\\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\\n *\\n * To return a listener, this function needs to be called with the exact same\\n * arguments that were used for a previous {@link module:ol/events~listen} call.\\n *\\n * @param {import(\\\"./events/Target.js\\\").EventTargetLike} target Event target.\\n * @param {string} type Event type.\\n * @param {ListenerFunction} listener Listener.\\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\\n *     listener. Default is the `target`.\\n */\\nexport function unlisten(target, type, listener, opt_this) {\\n    var listeners = getListeners(target, type);\\n    if (listeners) {\\n        var listenerObj = findListener(listeners, listener, opt_this, true);\\n        if (listenerObj) {\\n            unlistenByKey(listenerObj);\\n        }\\n    }\\n}\\n/**\\n * Unregisters event listeners on an event target. Inspired by\\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\\n *\\n * The argument passed to this function is the key returned from\\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\\n *\\n * @param {EventsKey} key The key.\\n */\\nexport function unlistenByKey(key) {\\n    if (key && key.target) {\\n        /** @type {import(\\\"./events/Target.js\\\").default} */ (key.target).\\n            removeEventListener(key.type, key.boundListener);\\n        var listeners = getListeners(key.target, key.type);\\n        if (listeners) {\\n            var i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\\n            if (i !== -1) {\\n                listeners.splice(i, 1);\\n            }\\n            if (listeners.length === 0) {\\n                removeListeners(key.target, key.type);\\n            }\\n        }\\n        clear(key);\\n    }\\n}\\n/**\\n * Unregisters all event listeners on an event target. Inspired by\\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\\n *\\n * @param {import(\\\"./events/Target.js\\\").EventTargetLike} target Target.\\n */\\nexport function unlistenAll(target) {\\n    var listenerMap = getListenerMap(target);\\n    if (listenerMap) {\\n        for (var type in listenerMap) {\\n            removeListeners(target, type);\\n        }\\n    }\\n}\\n//# sourceMappingURL=events.js.map\",\"/**\\n * @module ol/Disposable\\n */\\n/**\\n * @classdesc\\n * Objects that need to clean up after themselves.\\n */\\nvar Disposable = /** @class */ (function () {\\n    function Disposable() {\\n        /**\\n         * The object has already been disposed.\\n         * @type {boolean}\\n         * @private\\n         */\\n        this.disposed_ = false;\\n    }\\n    /**\\n     * Clean up.\\n     */\\n    Disposable.prototype.dispose = function () {\\n        if (!this.disposed_) {\\n            this.disposed_ = true;\\n            this.disposeInternal();\\n        }\\n    };\\n    /**\\n     * Extension point for disposable objects.\\n     * @protected\\n     */\\n    Disposable.prototype.disposeInternal = function () { };\\n    return Disposable;\\n}());\\nexport default Disposable;\\n//# sourceMappingURL=Disposable.js.map\",\"/**\\n * @module ol/functions\\n */\\n/**\\n * Always returns true.\\n * @returns {boolean} true.\\n */\\nexport function TRUE() {\\n    return true;\\n}\\n/**\\n * Always returns false.\\n * @returns {boolean} false.\\n */\\nexport function FALSE() {\\n    return false;\\n}\\n/**\\n * A reusable function, used e.g. as a default for callbacks.\\n *\\n * @return {void} Nothing.\\n */\\nexport function VOID() { }\\n//# sourceMappingURL=functions.js.map\",\"/**\\n * @module ol/events/Event\\n */\\n/**\\n * @classdesc\\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\\n *\\n * This implementation only provides `type` and `target` properties, and\\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\\n * for higher level events defined in the library, and works with\\n * {@link module:ol/events/Target~Target}.\\n */\\nvar Event = /** @class */ (function () {\\n    /**\\n     * @param {string} type Type.\\n     */\\n    function Event(type) {\\n        /**\\n         * @type {boolean}\\n         */\\n        this.propagationStopped;\\n        /**\\n         * The event type.\\n         * @type {string}\\n         * @api\\n         */\\n        this.type = type;\\n        /**\\n         * The event target.\\n         * @type {Object}\\n         * @api\\n         */\\n        this.target = null;\\n    }\\n    /**\\n     * Stop event propagation.\\n     * @api\\n     */\\n    Event.prototype.preventDefault = function () {\\n        this.propagationStopped = true;\\n    };\\n    /**\\n     * Stop event propagation.\\n     * @api\\n     */\\n    Event.prototype.stopPropagation = function () {\\n        this.propagationStopped = true;\\n    };\\n    return Event;\\n}());\\n/**\\n * @param {Event|import(\\\"./Event.js\\\").default} evt Event\\n */\\nexport function stopPropagation(evt) {\\n    evt.stopPropagation();\\n}\\n/**\\n * @param {Event|import(\\\"./Event.js\\\").default} evt Event\\n */\\nexport function preventDefault(evt) {\\n    evt.preventDefault();\\n}\\nexport default Event;\\n//# sourceMappingURL=Event.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/events/Target\\n */\\nimport Disposable from '../Disposable.js';\\nimport { unlistenAll } from '../events.js';\\nimport { VOID } from '../functions.js';\\nimport Event from './Event.js';\\n/**\\n * @typedef {EventTarget|Target} EventTargetLike\\n */\\n/**\\n * @classdesc\\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\\n *\\n * There are two important simplifications compared to the specification:\\n *\\n * 1. The handling of `useCapture` in `addEventListener` and\\n *    `removeEventListener`. There is no real capture model.\\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\\n *    There is no event target hierarchy. When a listener calls\\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\\n *    more listeners after this one will be called. Same as when the listener\\n *    returns false.\\n */\\nvar Target = /** @class */ (function (_super) {\\n    __extends(Target, _super);\\n    function Target() {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * @private\\n         * @type {!Object<string, number>}\\n         */\\n        _this.pendingRemovals_ = {};\\n        /**\\n         * @private\\n         * @type {!Object<string, number>}\\n         */\\n        _this.dispatching_ = {};\\n        /**\\n         * @private\\n         * @type {!Object<string, Array<import(\\\"../events.js\\\").ListenerFunction>>}\\n         */\\n        _this.listeners_ = {};\\n        return _this;\\n    }\\n    /**\\n     * @param {string} type Type.\\n     * @param {import(\\\"../events.js\\\").ListenerFunction} listener Listener.\\n     */\\n    Target.prototype.addEventListener = function (type, listener) {\\n        var listeners = this.listeners_[type];\\n        if (!listeners) {\\n            listeners = this.listeners_[type] = [];\\n        }\\n        if (listeners.indexOf(listener) === -1) {\\n            listeners.push(listener);\\n        }\\n    };\\n    /**\\n     * Dispatches an event and calls all listeners listening for events\\n     * of this type. The event parameter can either be a string or an\\n     * Object with a `type` property.\\n     *\\n     * @param {{type: string,\\n     *     target: (EventTargetLike|undefined),\\n     *     propagationStopped: (boolean|undefined)}|\\n     *     import(\\\"./Event.js\\\").default|string} event Event object.\\n     * @return {boolean|undefined} `false` if anyone called preventDefault on the\\n     *     event object or if any of the listeners returned false.\\n     * @api\\n     */\\n    Target.prototype.dispatchEvent = function (event) {\\n        var evt = typeof event === 'string' ? new Event(event) : event;\\n        var type = evt.type;\\n        evt.target = this;\\n        var listeners = this.listeners_[type];\\n        var propagate;\\n        if (listeners) {\\n            if (!(type in this.dispatching_)) {\\n                this.dispatching_[type] = 0;\\n                this.pendingRemovals_[type] = 0;\\n            }\\n            ++this.dispatching_[type];\\n            for (var i = 0, ii = listeners.length; i < ii; ++i) {\\n                if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\\n                    propagate = false;\\n                    break;\\n                }\\n            }\\n            --this.dispatching_[type];\\n            if (this.dispatching_[type] === 0) {\\n                var pendingRemovals = this.pendingRemovals_[type];\\n                delete this.pendingRemovals_[type];\\n                while (pendingRemovals--) {\\n                    this.removeEventListener(type, VOID);\\n                }\\n                delete this.dispatching_[type];\\n            }\\n            return propagate;\\n        }\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    Target.prototype.disposeInternal = function () {\\n        unlistenAll(this);\\n    };\\n    /**\\n     * Get the listeners for a specified event type. Listeners are returned in the\\n     * order that they will be called in.\\n     *\\n     * @param {string} type Type.\\n     * @return {Array<import(\\\"../events.js\\\").ListenerFunction>} Listeners.\\n     */\\n    Target.prototype.getListeners = function (type) {\\n        return this.listeners_[type];\\n    };\\n    /**\\n     * @param {string=} opt_type Type. If not provided,\\n     *     `true` will be returned if this event target has any listeners.\\n     * @return {boolean} Has listeners.\\n     */\\n    Target.prototype.hasListener = function (opt_type) {\\n        return opt_type ?\\n            opt_type in this.listeners_ :\\n            Object.keys(this.listeners_).length > 0;\\n    };\\n    /**\\n     * @param {string} type Type.\\n     * @param {import(\\\"../events.js\\\").ListenerFunction} listener Listener.\\n     */\\n    Target.prototype.removeEventListener = function (type, listener) {\\n        var listeners = this.listeners_[type];\\n        if (listeners) {\\n            var index = listeners.indexOf(listener);\\n            if (type in this.pendingRemovals_) {\\n                // make listener a no-op, and remove later in #dispatchEvent()\\n                listeners[index] = VOID;\\n                ++this.pendingRemovals_[type];\\n            }\\n            else {\\n                listeners.splice(index, 1);\\n                if (listeners.length === 0) {\\n                    delete this.listeners_[type];\\n                }\\n            }\\n        }\\n    };\\n    return Target;\\n}(Disposable));\\nexport default Target;\\n//# sourceMappingURL=Target.js.map\",\"/**\\n * @module ol/events/EventType\\n */\\n/**\\n * @enum {string}\\n * @const\\n */\\nexport default {\\n    /**\\n     * Generic change event. Triggered when the revision counter is increased.\\n     * @event module:ol/events/Event~Event#change\\n     * @api\\n     */\\n    CHANGE: 'change',\\n    CLEAR: 'clear',\\n    CONTEXTMENU: 'contextmenu',\\n    CLICK: 'click',\\n    DBLCLICK: 'dblclick',\\n    DRAGENTER: 'dragenter',\\n    DRAGOVER: 'dragover',\\n    DROP: 'drop',\\n    ERROR: 'error',\\n    KEYDOWN: 'keydown',\\n    KEYPRESS: 'keypress',\\n    LOAD: 'load',\\n    MOUSEDOWN: 'mousedown',\\n    MOUSEMOVE: 'mousemove',\\n    MOUSEOUT: 'mouseout',\\n    MOUSEUP: 'mouseup',\\n    MOUSEWHEEL: 'mousewheel',\\n    MSPOINTERDOWN: 'MSPointerDown',\\n    RESIZE: 'resize',\\n    TOUCHSTART: 'touchstart',\\n    TOUCHMOVE: 'touchmove',\\n    TOUCHEND: 'touchend',\\n    WHEEL: 'wheel'\\n};\\n//# sourceMappingURL=EventType.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/Observable\\n */\\nimport { listen, unlistenByKey, unlisten, listenOnce } from './events.js';\\nimport EventTarget from './events/Target.js';\\nimport EventType from './events/EventType.js';\\n/**\\n * @classdesc\\n * Abstract base class; normally only used for creating subclasses and not\\n * instantiated in apps.\\n * An event target providing convenient methods for listener registration\\n * and unregistration. A generic `change` event is always available through\\n * {@link module:ol/Observable~Observable#changed}.\\n *\\n * @fires import(\\\"./events/Event.js\\\").Event\\n * @api\\n */\\nvar Observable = /** @class */ (function (_super) {\\n    __extends(Observable, _super);\\n    function Observable() {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.revision_ = 0;\\n        return _this;\\n    }\\n    /**\\n     * Increases the revision counter and dispatches a 'change' event.\\n     * @api\\n     */\\n    Observable.prototype.changed = function () {\\n        ++this.revision_;\\n        this.dispatchEvent(EventType.CHANGE);\\n    };\\n    /**\\n     * Get the version number for this object.  Each time the object is modified,\\n     * its version number will be incremented.\\n     * @return {number} Revision.\\n     * @api\\n     */\\n    Observable.prototype.getRevision = function () {\\n        return this.revision_;\\n    };\\n    /**\\n     * Listen for a certain type of event.\\n     * @param {string|Array<string>} type The event type or array of event types.\\n     * @param {function(?): ?} listener The listener function.\\n     * @return {import(\\\"./events.js\\\").EventsKey|Array<import(\\\"./events.js\\\").EventsKey>} Unique key for the listener. If\\n     *     called with an array of event types as the first argument, the return\\n     *     will be an array of keys.\\n     * @api\\n     */\\n    Observable.prototype.on = function (type, listener) {\\n        if (Array.isArray(type)) {\\n            var len = type.length;\\n            var keys = new Array(len);\\n            for (var i = 0; i < len; ++i) {\\n                keys[i] = listen(this, type[i], listener);\\n            }\\n            return keys;\\n        }\\n        else {\\n            return listen(this, /** @type {string} */ (type), listener);\\n        }\\n    };\\n    /**\\n     * Listen once for a certain type of event.\\n     * @param {string|Array<string>} type The event type or array of event types.\\n     * @param {function(?): ?} listener The listener function.\\n     * @return {import(\\\"./events.js\\\").EventsKey|Array<import(\\\"./events.js\\\").EventsKey>} Unique key for the listener. If\\n     *     called with an array of event types as the first argument, the return\\n     *     will be an array of keys.\\n     * @api\\n     */\\n    Observable.prototype.once = function (type, listener) {\\n        if (Array.isArray(type)) {\\n            var len = type.length;\\n            var keys = new Array(len);\\n            for (var i = 0; i < len; ++i) {\\n                keys[i] = listenOnce(this, type[i], listener);\\n            }\\n            return keys;\\n        }\\n        else {\\n            return listenOnce(this, /** @type {string} */ (type), listener);\\n        }\\n    };\\n    /**\\n     * Unlisten for a certain type of event.\\n     * @param {string|Array<string>} type The event type or array of event types.\\n     * @param {function(?): ?} listener The listener function.\\n     * @api\\n     */\\n    Observable.prototype.un = function (type, listener) {\\n        if (Array.isArray(type)) {\\n            for (var i = 0, ii = type.length; i < ii; ++i) {\\n                unlisten(this, type[i], listener);\\n            }\\n            return;\\n        }\\n        else {\\n            unlisten(this, /** @type {string} */ (type), listener);\\n        }\\n    };\\n    return Observable;\\n}(EventTarget));\\n/**\\n * Removes an event listener using the key returned by `on()` or `once()`.\\n * @param {import(\\\"./events.js\\\").EventsKey|Array<import(\\\"./events.js\\\").EventsKey>} key The key returned by `on()`\\n *     or `once()` (or an array of keys).\\n * @api\\n */\\nexport function unByKey(key) {\\n    if (Array.isArray(key)) {\\n        for (var i = 0, ii = key.length; i < ii; ++i) {\\n            unlistenByKey(key[i]);\\n        }\\n    }\\n    else {\\n        unlistenByKey(/** @type {import(\\\"./events.js\\\").EventsKey} */ (key));\\n    }\\n}\\nexport default Observable;\\n//# sourceMappingURL=Observable.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/Object\\n */\\nimport { getUid } from './util.js';\\nimport ObjectEventType from './ObjectEventType.js';\\nimport Observable from './Observable.js';\\nimport Event from './events/Event.js';\\nimport { assign } from './obj.js';\\n/**\\n * @classdesc\\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\\n */\\nvar ObjectEvent = /** @class */ (function (_super) {\\n    __extends(ObjectEvent, _super);\\n    /**\\n     * @param {string} type The event type.\\n     * @param {string} key The property name.\\n     * @param {*} oldValue The old value for `key`.\\n     */\\n    function ObjectEvent(type, key, oldValue) {\\n        var _this = _super.call(this, type) || this;\\n        /**\\n         * The name of the property whose value is changing.\\n         * @type {string}\\n         * @api\\n         */\\n        _this.key = key;\\n        /**\\n         * The old value. To get the new value use `e.target.get(e.key)` where\\n         * `e` is the event object.\\n         * @type {*}\\n         * @api\\n         */\\n        _this.oldValue = oldValue;\\n        return _this;\\n    }\\n    return ObjectEvent;\\n}(Event));\\nexport { ObjectEvent };\\n/**\\n * @classdesc\\n * Abstract base class; normally only used for creating subclasses and not\\n * instantiated in apps.\\n * Most non-trivial classes inherit from this.\\n *\\n * This extends {@link module:ol/Observable} with observable\\n * properties, where each property is observable as well as the object as a\\n * whole.\\n *\\n * Classes that inherit from this have pre-defined properties, to which you can\\n * add your owns. The pre-defined properties are listed in this documentation as\\n * 'Observable Properties', and have their own accessors; for example,\\n * {@link module:ol/Map~Map} has a `target` property, accessed with\\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\\n * settable. There are also general-purpose accessors `get()` and `set()`. For\\n * example, `get('target')` is equivalent to `getTarget()`.\\n *\\n * The `set` accessors trigger a change event, and you can monitor this by\\n * registering a listener. For example, {@link module:ol/View~View} has a\\n * `center` property, so `view.on('change:center', function(evt) {...});` would\\n * call the function whenever the value of the center property changes. Within\\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\\n * would return the new center.\\n *\\n * You can add your own observable properties with\\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\\n * You can listen for changes on that property value with\\n * `object.on('change:prop', listener)`. You can get a list of all\\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\\n *\\n * Note that the observable properties are separate from standard JS properties.\\n * You can, for example, give your map object a title with\\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\\n * first will be a `hasOwnProperty`; the second will appear in\\n * `getProperties()`. Only the second is observable.\\n *\\n * Properties can be deleted by using the unset method. E.g.\\n * object.unset('foo').\\n *\\n * @fires ObjectEvent\\n * @api\\n */\\nvar BaseObject = /** @class */ (function (_super) {\\n    __extends(BaseObject, _super);\\n    /**\\n     * @param {Object<string, *>=} opt_values An object with key-value pairs.\\n     */\\n    function BaseObject(opt_values) {\\n        var _this = _super.call(this) || this;\\n        // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\\n        // the same as the order in which they were created.  This also helps to\\n        // ensure that object properties are always added in the same order, which\\n        // helps many JavaScript engines generate faster code.\\n        getUid(_this);\\n        /**\\n         * @private\\n         * @type {!Object<string, *>}\\n         */\\n        _this.values_ = {};\\n        if (opt_values !== undefined) {\\n            _this.setProperties(opt_values);\\n        }\\n        return _this;\\n    }\\n    /**\\n     * Gets a value.\\n     * @param {string} key Key name.\\n     * @return {*} Value.\\n     * @api\\n     */\\n    BaseObject.prototype.get = function (key) {\\n        var value;\\n        if (this.values_.hasOwnProperty(key)) {\\n            value = this.values_[key];\\n        }\\n        return value;\\n    };\\n    /**\\n     * Get a list of object property names.\\n     * @return {Array<string>} List of property names.\\n     * @api\\n     */\\n    BaseObject.prototype.getKeys = function () {\\n        return Object.keys(this.values_);\\n    };\\n    /**\\n     * Get an object of all property names and values.\\n     * @return {Object<string, *>} Object.\\n     * @api\\n     */\\n    BaseObject.prototype.getProperties = function () {\\n        return assign({}, this.values_);\\n    };\\n    /**\\n     * @param {string} key Key name.\\n     * @param {*} oldValue Old value.\\n     */\\n    BaseObject.prototype.notify = function (key, oldValue) {\\n        var eventType;\\n        eventType = getChangeEventType(key);\\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\\n        eventType = ObjectEventType.PROPERTYCHANGE;\\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\\n    };\\n    /**\\n     * Sets a value.\\n     * @param {string} key Key name.\\n     * @param {*} value Value.\\n     * @param {boolean=} opt_silent Update without triggering an event.\\n     * @api\\n     */\\n    BaseObject.prototype.set = function (key, value, opt_silent) {\\n        if (opt_silent) {\\n            this.values_[key] = value;\\n        }\\n        else {\\n            var oldValue = this.values_[key];\\n            this.values_[key] = value;\\n            if (oldValue !== value) {\\n                this.notify(key, oldValue);\\n            }\\n        }\\n    };\\n    /**\\n     * Sets a collection of key-value pairs.  Note that this changes any existing\\n     * properties and adds new ones (it does not remove any existing properties).\\n     * @param {Object<string, *>} values Values.\\n     * @param {boolean=} opt_silent Update without triggering an event.\\n     * @api\\n     */\\n    BaseObject.prototype.setProperties = function (values, opt_silent) {\\n        for (var key in values) {\\n            this.set(key, values[key], opt_silent);\\n        }\\n    };\\n    /**\\n     * Unsets a property.\\n     * @param {string} key Key name.\\n     * @param {boolean=} opt_silent Unset without triggering an event.\\n     * @api\\n     */\\n    BaseObject.prototype.unset = function (key, opt_silent) {\\n        if (key in this.values_) {\\n            var oldValue = this.values_[key];\\n            delete this.values_[key];\\n            if (!opt_silent) {\\n                this.notify(key, oldValue);\\n            }\\n        }\\n    };\\n    return BaseObject;\\n}(Observable));\\n/**\\n * @type {Object<string, string>}\\n */\\nvar changeEventTypeCache = {};\\n/**\\n * @param {string} key Key name.\\n * @return {string} Change name.\\n */\\nexport function getChangeEventType(key) {\\n    return changeEventTypeCache.hasOwnProperty(key) ?\\n        changeEventTypeCache[key] :\\n        (changeEventTypeCache[key] = 'change:' + key);\\n}\\nexport default BaseObject;\\n//# sourceMappingURL=Object.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/Collection\\n */\\nimport AssertionError from './AssertionError.js';\\nimport CollectionEventType from './CollectionEventType.js';\\nimport BaseObject from './Object.js';\\nimport Event from './events/Event.js';\\n/**\\n * @enum {string}\\n * @private\\n */\\nvar Property = {\\n    LENGTH: 'length'\\n};\\n/**\\n * @classdesc\\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\\n * type.\\n */\\nvar CollectionEvent = /** @class */ (function (_super) {\\n    __extends(CollectionEvent, _super);\\n    /**\\n     * @param {CollectionEventType} type Type.\\n     * @param {*=} opt_element Element.\\n     * @param {number} opt_index The index of the added or removed element.\\n     */\\n    function CollectionEvent(type, opt_element, opt_index) {\\n        var _this = _super.call(this, type) || this;\\n        /**\\n         * The element that is added to or removed from the collection.\\n         * @type {*}\\n         * @api\\n         */\\n        _this.element = opt_element;\\n        /**\\n         * The index of the added or removed element.\\n         * @type {number}\\n         * @api\\n         */\\n        _this.index = opt_index;\\n        return _this;\\n    }\\n    return CollectionEvent;\\n}(Event));\\nexport { CollectionEvent };\\n/**\\n * @typedef {Object} Options\\n * @property {boolean} [unique=false] Disallow the same item from being added to\\n * the collection twice.\\n */\\n/**\\n * @classdesc\\n * An expanded version of standard JS Array, adding convenience methods for\\n * manipulation. Add and remove changes to the Collection trigger a Collection\\n * event. Note that this does not cover changes to the objects _within_ the\\n * Collection; they trigger events on the appropriate object, not on the\\n * Collection as a whole.\\n *\\n * @fires CollectionEvent\\n *\\n * @template T\\n * @api\\n */\\nvar Collection = /** @class */ (function (_super) {\\n    __extends(Collection, _super);\\n    /**\\n     * @param {Array<T>=} opt_array Array.\\n     * @param {Options=} opt_options Collection options.\\n     */\\n    function Collection(opt_array, opt_options) {\\n        var _this = _super.call(this) || this;\\n        var options = opt_options || {};\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.unique_ = !!options.unique;\\n        /**\\n         * @private\\n         * @type {!Array<T>}\\n         */\\n        _this.array_ = opt_array ? opt_array : [];\\n        if (_this.unique_) {\\n            for (var i = 0, ii = _this.array_.length; i < ii; ++i) {\\n                _this.assertUnique_(_this.array_[i], i);\\n            }\\n        }\\n        _this.updateLength_();\\n        return _this;\\n    }\\n    /**\\n     * Remove all elements from the collection.\\n     * @api\\n     */\\n    Collection.prototype.clear = function () {\\n        while (this.getLength() > 0) {\\n            this.pop();\\n        }\\n    };\\n    /**\\n     * Add elements to the collection.  This pushes each item in the provided array\\n     * to the end of the collection.\\n     * @param {!Array<T>} arr Array.\\n     * @return {Collection<T>} This collection.\\n     * @api\\n     */\\n    Collection.prototype.extend = function (arr) {\\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\\n            this.push(arr[i]);\\n        }\\n        return this;\\n    };\\n    /**\\n     * Iterate over each element, calling the provided callback.\\n     * @param {function(T, number, Array<T>): *} f The function to call\\n     *     for every element. This function takes 3 arguments (the element, the\\n     *     index and the array). The return value is ignored.\\n     * @api\\n     */\\n    Collection.prototype.forEach = function (f) {\\n        var array = this.array_;\\n        for (var i = 0, ii = array.length; i < ii; ++i) {\\n            f(array[i], i, array);\\n        }\\n    };\\n    /**\\n     * Get a reference to the underlying Array object. Warning: if the array\\n     * is mutated, no events will be dispatched by the collection, and the\\n     * collection's \\\"length\\\" property won't be in sync with the actual length\\n     * of the array.\\n     * @return {!Array<T>} Array.\\n     * @api\\n     */\\n    Collection.prototype.getArray = function () {\\n        return this.array_;\\n    };\\n    /**\\n     * Get the element at the provided index.\\n     * @param {number} index Index.\\n     * @return {T} Element.\\n     * @api\\n     */\\n    Collection.prototype.item = function (index) {\\n        return this.array_[index];\\n    };\\n    /**\\n     * Get the length of this collection.\\n     * @return {number} The length of the array.\\n     * @observable\\n     * @api\\n     */\\n    Collection.prototype.getLength = function () {\\n        return this.get(Property.LENGTH);\\n    };\\n    /**\\n     * Insert an element at the provided index.\\n     * @param {number} index Index.\\n     * @param {T} elem Element.\\n     * @api\\n     */\\n    Collection.prototype.insertAt = function (index, elem) {\\n        if (this.unique_) {\\n            this.assertUnique_(elem);\\n        }\\n        this.array_.splice(index, 0, elem);\\n        this.updateLength_();\\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\\n    };\\n    /**\\n     * Remove the last element of the collection and return it.\\n     * Return `undefined` if the collection is empty.\\n     * @return {T|undefined} Element.\\n     * @api\\n     */\\n    Collection.prototype.pop = function () {\\n        return this.removeAt(this.getLength() - 1);\\n    };\\n    /**\\n     * Insert the provided element at the end of the collection.\\n     * @param {T} elem Element.\\n     * @return {number} New length of the collection.\\n     * @api\\n     */\\n    Collection.prototype.push = function (elem) {\\n        if (this.unique_) {\\n            this.assertUnique_(elem);\\n        }\\n        var n = this.getLength();\\n        this.insertAt(n, elem);\\n        return this.getLength();\\n    };\\n    /**\\n     * Remove the first occurrence of an element from the collection.\\n     * @param {T} elem Element.\\n     * @return {T|undefined} The removed element or undefined if none found.\\n     * @api\\n     */\\n    Collection.prototype.remove = function (elem) {\\n        var arr = this.array_;\\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\\n            if (arr[i] === elem) {\\n                return this.removeAt(i);\\n            }\\n        }\\n        return undefined;\\n    };\\n    /**\\n     * Remove the element at the provided index and return it.\\n     * Return `undefined` if the collection does not contain this index.\\n     * @param {number} index Index.\\n     * @return {T|undefined} Value.\\n     * @api\\n     */\\n    Collection.prototype.removeAt = function (index) {\\n        var prev = this.array_[index];\\n        this.array_.splice(index, 1);\\n        this.updateLength_();\\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\\n        return prev;\\n    };\\n    /**\\n     * Set the element at the provided index.\\n     * @param {number} index Index.\\n     * @param {T} elem Element.\\n     * @api\\n     */\\n    Collection.prototype.setAt = function (index, elem) {\\n        var n = this.getLength();\\n        if (index < n) {\\n            if (this.unique_) {\\n                this.assertUnique_(elem, index);\\n            }\\n            var prev = this.array_[index];\\n            this.array_[index] = elem;\\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\\n        }\\n        else {\\n            for (var j = n; j < index; ++j) {\\n                this.insertAt(j, undefined);\\n            }\\n            this.insertAt(index, elem);\\n        }\\n    };\\n    /**\\n     * @private\\n     */\\n    Collection.prototype.updateLength_ = function () {\\n        this.set(Property.LENGTH, this.array_.length);\\n    };\\n    /**\\n     * @private\\n     * @param {T} elem Element.\\n     * @param {number=} opt_except Optional index to ignore.\\n     */\\n    Collection.prototype.assertUnique_ = function (elem, opt_except) {\\n        for (var i = 0, ii = this.array_.length; i < ii; ++i) {\\n            if (this.array_[i] === elem && i !== opt_except) {\\n                throw new AssertionError(58);\\n            }\\n        }\\n    };\\n    return Collection;\\n}(BaseObject));\\nexport default Collection;\\n//# sourceMappingURL=Collection.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/MapEvent\\n */\\nimport Event from './events/Event.js';\\n/**\\n * @classdesc\\n * Events emitted as map events are instances of this type.\\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\\n */\\nvar MapEvent = /** @class */ (function (_super) {\\n    __extends(MapEvent, _super);\\n    /**\\n     * @param {string} type Event type.\\n     * @param {import(\\\"./PluggableMap.js\\\").default} map Map.\\n     * @param {?import(\\\"./PluggableMap.js\\\").FrameState=} opt_frameState Frame state.\\n     */\\n    function MapEvent(type, map, opt_frameState) {\\n        var _this = _super.call(this, type) || this;\\n        /**\\n         * The map where the event occurred.\\n         * @type {import(\\\"./PluggableMap.js\\\").default}\\n         * @api\\n         */\\n        _this.map = map;\\n        /**\\n         * The frame state at the time of the event.\\n         * @type {?import(\\\"./PluggableMap.js\\\").FrameState}\\n         * @api\\n         */\\n        _this.frameState = opt_frameState !== undefined ? opt_frameState : null;\\n        return _this;\\n    }\\n    return MapEvent;\\n}(Event));\\nexport default MapEvent;\\n//# sourceMappingURL=MapEvent.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/MapBrowserEvent\\n */\\nimport MapEvent from './MapEvent.js';\\n/**\\n * @classdesc\\n * Events emitted as map browser events are instances of this type.\\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\\n */\\nvar MapBrowserEvent = /** @class */ (function (_super) {\\n    __extends(MapBrowserEvent, _super);\\n    /**\\n     * @param {string} type Event type.\\n     * @param {import(\\\"./PluggableMap.js\\\").default} map Map.\\n     * @param {Event} browserEvent Browser event.\\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\\n     * @param {?import(\\\"./PluggableMap.js\\\").FrameState=} opt_frameState Frame state.\\n     */\\n    function MapBrowserEvent(type, map, browserEvent, opt_dragging, opt_frameState) {\\n        var _this = _super.call(this, type, map, opt_frameState) || this;\\n        /**\\n         * The original browser event.\\n         * @const\\n         * @type {Event}\\n         * @api\\n         */\\n        _this.originalEvent = browserEvent;\\n        /**\\n         * The map pixel relative to the viewport corresponding to the original browser event.\\n         * @type {import(\\\"./pixel.js\\\").Pixel}\\n         * @api\\n         */\\n        _this.pixel = map.getEventPixel(browserEvent);\\n        /**\\n         * The coordinate in view projection corresponding to the original browser event.\\n         * @type {import(\\\"./coordinate.js\\\").Coordinate}\\n         * @api\\n         */\\n        _this.coordinate = map.getCoordinateFromPixel(_this.pixel);\\n        /**\\n         * Indicates if the map is currently being dragged. Only set for\\n         * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\\n         *\\n         * @type {boolean}\\n         * @api\\n         */\\n        _this.dragging = opt_dragging !== undefined ? opt_dragging : false;\\n        return _this;\\n    }\\n    /**\\n     * Prevents the default browser action.\\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\\n     * @override\\n     * @api\\n     */\\n    MapBrowserEvent.prototype.preventDefault = function () {\\n        _super.prototype.preventDefault.call(this);\\n        this.originalEvent.preventDefault();\\n    };\\n    /**\\n     * Prevents further propagation of the current event.\\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\\n     * @override\\n     * @api\\n     */\\n    MapBrowserEvent.prototype.stopPropagation = function () {\\n        _super.prototype.stopPropagation.call(this);\\n        this.originalEvent.stopPropagation();\\n    };\\n    return MapBrowserEvent;\\n}(MapEvent));\\nexport default MapBrowserEvent;\\n//# sourceMappingURL=MapBrowserEvent.js.map\",\"/**\\n * @module ol/has\\n */\\nvar ua = typeof navigator !== 'undefined' ?\\n    navigator.userAgent.toLowerCase() : '';\\n/**\\n * User agent string says we are dealing with Firefox as browser.\\n * @type {boolean}\\n */\\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\\n/**\\n * User agent string says we are dealing with Safari as browser.\\n * @type {boolean}\\n */\\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\\n/**\\n * User agent string says we are dealing with a WebKit engine.\\n * @type {boolean}\\n */\\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\\n/**\\n * User agent string says we are dealing with a Mac as platform.\\n * @type {boolean}\\n */\\nexport var MAC = ua.indexOf('macintosh') !== -1;\\n/**\\n * The ratio between physical pixels and device-independent pixels\\n * (dips) on the device (`window.devicePixelRatio`).\\n * @const\\n * @type {number}\\n * @api\\n */\\nexport var DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\\n/**\\n * Is HTML5 geolocation supported in the current browser?\\n * @const\\n * @type {boolean}\\n * @api\\n */\\nexport var GEOLOCATION = 'geolocation' in navigator;\\n/**\\n * True if browser supports touch events.\\n * @const\\n * @type {boolean}\\n * @api\\n */\\nexport var TOUCH = 'ontouchstart' in window;\\n/**\\n * True if browser supports pointer events.\\n * @const\\n * @type {boolean}\\n */\\nexport var POINTER = 'PointerEvent' in window;\\n/**\\n * True if browser supports ms pointer events (IE 10).\\n * @const\\n * @type {boolean}\\n */\\nexport var MSPOINTER = !!(navigator.msPointerEnabled);\\nexport { HAS as WEBGL } from './webgl.js';\\n//# sourceMappingURL=has.js.map\",\"/**\\n * @module ol/MapBrowserEventType\\n */\\nimport EventType from './events/EventType.js';\\n/**\\n * Constants for event names.\\n * @enum {string}\\n */\\nexport default {\\n    /**\\n     * A true single click with no dragging and no double click. Note that this\\n     * event is delayed by 250 ms to ensure that it is not a double click.\\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\\n     * @api\\n     */\\n    SINGLECLICK: 'singleclick',\\n    /**\\n     * A click with no dragging. A double click will fire two of this.\\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\\n     * @api\\n     */\\n    CLICK: EventType.CLICK,\\n    /**\\n     * A true double click, with no dragging.\\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\\n     * @api\\n     */\\n    DBLCLICK: EventType.DBLCLICK,\\n    /**\\n     * Triggered when a pointer is dragged.\\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\\n     * @api\\n     */\\n    POINTERDRAG: 'pointerdrag',\\n    /**\\n     * Triggered when a pointer is moved. Note that on touch devices this is\\n     * triggered when the map is panned, so is not the same as mousemove.\\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\\n     * @api\\n     */\\n    POINTERMOVE: 'pointermove',\\n    POINTERDOWN: 'pointerdown',\\n    POINTERUP: 'pointerup',\\n    POINTEROVER: 'pointerover',\\n    POINTEROUT: 'pointerout',\\n    POINTERENTER: 'pointerenter',\\n    POINTERLEAVE: 'pointerleave',\\n    POINTERCANCEL: 'pointercancel'\\n};\\n//# sourceMappingURL=MapBrowserEventType.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/MapBrowserPointerEvent\\n */\\nimport MapBrowserEvent from './MapBrowserEvent.js';\\nvar MapBrowserPointerEvent = /** @class */ (function (_super) {\\n    __extends(MapBrowserPointerEvent, _super);\\n    /**\\n     * @param {string} type Event type.\\n     * @param {import(\\\"./PluggableMap.js\\\").default} map Map.\\n     * @param {import(\\\"./pointer/PointerEvent.js\\\").default} pointerEvent Pointer event.\\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\\n     * @param {?import(\\\"./PluggableMap.js\\\").FrameState=} opt_frameState Frame state.\\n     */\\n    function MapBrowserPointerEvent(type, map, pointerEvent, opt_dragging, opt_frameState) {\\n        var _this = _super.call(this, type, map, pointerEvent.originalEvent, opt_dragging, opt_frameState) || this;\\n        /**\\n         * @const\\n         * @type {import(\\\"./pointer/PointerEvent.js\\\").default}\\n         */\\n        _this.pointerEvent = pointerEvent;\\n        return _this;\\n    }\\n    return MapBrowserPointerEvent;\\n}(MapBrowserEvent));\\nexport default MapBrowserPointerEvent;\\n//# sourceMappingURL=MapBrowserPointerEvent.js.map\",\"/**\\n * @module ol/pointer/EventType\\n */\\n/**\\n * Constants for event names.\\n * @enum {string}\\n */\\nexport default {\\n    POINTERMOVE: 'pointermove',\\n    POINTERDOWN: 'pointerdown',\\n    POINTERUP: 'pointerup',\\n    POINTEROVER: 'pointerover',\\n    POINTEROUT: 'pointerout',\\n    POINTERENTER: 'pointerenter',\\n    POINTERLEAVE: 'pointerleave',\\n    POINTERCANCEL: 'pointercancel'\\n};\\n//# sourceMappingURL=EventType.js.map\",\"/**\\n * @module ol/pointer/EventSource\\n */\\nvar EventSource = /** @class */ (function () {\\n    /**\\n     * @param {import(\\\"./PointerEventHandler.js\\\").default} dispatcher Event handler.\\n     * @param {!Object<string, function(Event): void>} mapping Event mapping.\\n     */\\n    function EventSource(dispatcher, mapping) {\\n        /**\\n         * @type {import(\\\"./PointerEventHandler.js\\\").default}\\n         */\\n        this.dispatcher = dispatcher;\\n        /**\\n         * @private\\n         * @const\\n         * @type {!Object<string, function(Event): void>}\\n         */\\n        this.mapping_ = mapping;\\n    }\\n    /**\\n     * List of events supported by this source.\\n     * @return {Array<string>} Event names\\n     */\\n    EventSource.prototype.getEvents = function () {\\n        return Object.keys(this.mapping_);\\n    };\\n    /**\\n     * Returns the handler that should handle a given event type.\\n     * @param {string} eventType The event type.\\n     * @return {function(Event)} Handler\\n     */\\n    EventSource.prototype.getHandlerForEvent = function (eventType) {\\n        return this.mapping_[eventType];\\n    };\\n    return EventSource;\\n}());\\nexport default EventSource;\\n//# sourceMappingURL=EventSource.js.map\",\"/**\\n * @module ol/pointer/MouseSource\\n */\\nvar __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n// Based on https://github.com/Polymer/PointerEvents\\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\\n//\\n// Redistribution and use in source and binary forms, with or without\\n// modification, are permitted provided that the following conditions are\\n// met:\\n//\\n// * Redistributions of source code must retain the above copyright\\n// notice, this list of conditions and the following disclaimer.\\n// * Redistributions in binary form must reproduce the above\\n// copyright notice, this list of conditions and the following disclaimer\\n// in the documentation and/or other materials provided with the\\n// distribution.\\n// * Neither the name of Google Inc. nor the names of its\\n// contributors may be used to endorse or promote products derived from\\n// this software without specific prior written permission.\\n//\\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\\n// \\\"AS IS\\\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\nimport EventSource from './EventSource.js';\\n/**\\n * @type {number}\\n */\\nexport var POINTER_ID = 1;\\n/**\\n * @type {string}\\n */\\nexport var POINTER_TYPE = 'mouse';\\n/**\\n * Radius around touchend that swallows mouse events.\\n *\\n * @type {number}\\n */\\nvar DEDUP_DIST = 25;\\n/**\\n * Handler for `mousedown`.\\n *\\n * @this {MouseSource}\\n * @param {MouseEvent} inEvent The in event.\\n */\\nfunction mousedown(inEvent) {\\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\\n        // TODO(dfreedman) workaround for some elements not sending mouseup\\n        // http://crbug/149091\\n        if (POINTER_ID.toString() in this.pointerMap) {\\n            this.cancel(inEvent);\\n        }\\n        var e = prepareEvent(inEvent, this.dispatcher);\\n        this.pointerMap[POINTER_ID.toString()] = inEvent;\\n        this.dispatcher.down(e, inEvent);\\n    }\\n}\\n/**\\n * Handler for `mousemove`.\\n *\\n * @this {MouseSource}\\n * @param {MouseEvent} inEvent The in event.\\n */\\nfunction mousemove(inEvent) {\\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\\n        var e = prepareEvent(inEvent, this.dispatcher);\\n        this.dispatcher.move(e, inEvent);\\n    }\\n}\\n/**\\n * Handler for `mouseup`.\\n *\\n * @this {MouseSource}\\n * @param {MouseEvent} inEvent The in event.\\n */\\nfunction mouseup(inEvent) {\\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\\n        var p = this.pointerMap[POINTER_ID.toString()];\\n        if (p && p.button === inEvent.button) {\\n            var e = prepareEvent(inEvent, this.dispatcher);\\n            this.dispatcher.up(e, inEvent);\\n            this.cleanupMouse();\\n        }\\n    }\\n}\\n/**\\n * Handler for `mouseover`.\\n *\\n * @this {MouseSource}\\n * @param {MouseEvent} inEvent The in event.\\n */\\nfunction mouseover(inEvent) {\\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\\n        var e = prepareEvent(inEvent, this.dispatcher);\\n        this.dispatcher.enterOver(e, inEvent);\\n    }\\n}\\n/**\\n * Handler for `mouseout`.\\n *\\n * @this {MouseSource}\\n * @param {MouseEvent} inEvent The in event.\\n */\\nfunction mouseout(inEvent) {\\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\\n        var e = prepareEvent(inEvent, this.dispatcher);\\n        this.dispatcher.leaveOut(e, inEvent);\\n    }\\n}\\nvar MouseSource = /** @class */ (function (_super) {\\n    __extends(MouseSource, _super);\\n    /**\\n     * @param {import(\\\"./PointerEventHandler.js\\\").default} dispatcher Event handler.\\n     */\\n    function MouseSource(dispatcher) {\\n        var _this = this;\\n        var mapping = {\\n            'mousedown': mousedown,\\n            'mousemove': mousemove,\\n            'mouseup': mouseup,\\n            'mouseover': mouseover,\\n            'mouseout': mouseout\\n        };\\n        _this = _super.call(this, dispatcher, mapping) || this;\\n        /**\\n         * @const\\n         * @type {!Object<string, Event|Object>}\\n         */\\n        _this.pointerMap = dispatcher.pointerMap;\\n        /**\\n         * @const\\n         * @type {Array<import(\\\"../pixel.js\\\").Pixel>}\\n         */\\n        _this.lastTouches = [];\\n        return _this;\\n    }\\n    /**\\n     * Detect if a mouse event was simulated from a touch by\\n     * checking if previously there was a touch event at the\\n     * same position.\\n     *\\n     * FIXME - Known problem with the native Android browser on\\n     * Samsung GT-I9100 (Android 4.1.2):\\n     * In case the page is scrolled, this function does not work\\n     * correctly when a canvas is used (WebGL or canvas renderer).\\n     * Mouse listeners on canvas elements (for this browser), create\\n     * two mouse events: One 'good' and one 'bad' one (on other browsers or\\n     * when a div is used, there is only one event). For the 'bad' one,\\n     * clientX/clientY and also pageX/pageY are wrong when the page\\n     * is scrolled. Because of that, this function can not detect if\\n     * the events were simulated from a touch event. As result, a\\n     * pointer event at a wrong position is dispatched, which confuses\\n     * the map interactions.\\n     * It is unclear, how one can get the correct position for the event\\n     * or detect that the positions are invalid.\\n     *\\n     * @private\\n     * @param {MouseEvent} inEvent The in event.\\n     * @return {boolean} True, if the event was generated by a touch.\\n     */\\n    MouseSource.prototype.isEventSimulatedFromTouch_ = function (inEvent) {\\n        var lts = this.lastTouches;\\n        var x = inEvent.clientX;\\n        var y = inEvent.clientY;\\n        for (var i = 0, l = lts.length, t = void 0; i < l && (t = lts[i]); i++) {\\n            // simulated mouse events will be swallowed near a primary touchend\\n            var dx = Math.abs(x - t[0]);\\n            var dy = Math.abs(y - t[1]);\\n            if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\\n                return true;\\n            }\\n        }\\n        return false;\\n    };\\n    /**\\n     * Dispatches a `pointercancel` event.\\n     *\\n     * @param {Event} inEvent The in event.\\n     */\\n    MouseSource.prototype.cancel = function (inEvent) {\\n        var e = prepareEvent(inEvent, this.dispatcher);\\n        this.dispatcher.cancel(e, inEvent);\\n        this.cleanupMouse();\\n    };\\n    /**\\n     * Remove the mouse from the list of active pointers.\\n     */\\n    MouseSource.prototype.cleanupMouse = function () {\\n        delete this.pointerMap[POINTER_ID.toString()];\\n    };\\n    return MouseSource;\\n}(EventSource));\\n/**\\n * Creates a copy of the original event that will be used\\n * for the fake pointer event.\\n *\\n * @param {Event} inEvent The in event.\\n * @param {import(\\\"./PointerEventHandler.js\\\").default} dispatcher Event handler.\\n * @return {Object} The copied event.\\n */\\nexport function prepareEvent(inEvent, dispatcher) {\\n    var e = dispatcher.cloneEvent(inEvent, inEvent);\\n    // forward mouse preventDefault\\n    var pd = e.preventDefault;\\n    e.preventDefault = function () {\\n        inEvent.preventDefault();\\n        pd();\\n    };\\n    e.pointerId = POINTER_ID;\\n    e.isPrimary = true;\\n    e.pointerType = POINTER_TYPE;\\n    return e;\\n}\\nexport default MouseSource;\\n//# sourceMappingURL=MouseSource.js.map\",\"/**\\n * @module ol/pointer/MsSource\\n */\\n// Based on https://github.com/Polymer/PointerEvents\\nvar __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\\n//\\n// Redistribution and use in source and binary forms, with or without\\n// modification, are permitted provided that the following conditions are\\n// met:\\n//\\n// * Redistributions of source code must retain the above copyright\\n// notice, this list of conditions and the following disclaimer.\\n// * Redistributions in binary form must reproduce the above\\n// copyright notice, this list of conditions and the following disclaimer\\n// in the documentation and/or other materials provided with the\\n// distribution.\\n// * Neither the name of Google Inc. nor the names of its\\n// contributors may be used to endorse or promote products derived from\\n// this software without specific prior written permission.\\n//\\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\\n// \\\"AS IS\\\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\nimport EventSource from './EventSource.js';\\n/**\\n * @const\\n * @type {Array<string>}\\n */\\nvar POINTER_TYPES = [\\n    '',\\n    'unavailable',\\n    'touch',\\n    'pen',\\n    'mouse'\\n];\\n/**\\n * Handler for `msPointerDown`.\\n *\\n * @this {MsSource}\\n * @param {MSPointerEvent} inEvent The in event.\\n */\\nfunction msPointerDown(inEvent) {\\n    this.pointerMap[inEvent.pointerId.toString()] = inEvent;\\n    var e = this.prepareEvent_(inEvent);\\n    this.dispatcher.down(e, inEvent);\\n}\\n/**\\n * Handler for `msPointerMove`.\\n *\\n * @this {MsSource}\\n * @param {MSPointerEvent} inEvent The in event.\\n */\\nfunction msPointerMove(inEvent) {\\n    var e = this.prepareEvent_(inEvent);\\n    this.dispatcher.move(e, inEvent);\\n}\\n/**\\n * Handler for `msPointerUp`.\\n *\\n * @this {MsSource}\\n * @param {MSPointerEvent} inEvent The in event.\\n */\\nfunction msPointerUp(inEvent) {\\n    var e = this.prepareEvent_(inEvent);\\n    this.dispatcher.up(e, inEvent);\\n    this.cleanup(inEvent.pointerId);\\n}\\n/**\\n * Handler for `msPointerOut`.\\n *\\n * @this {MsSource}\\n * @param {MSPointerEvent} inEvent The in event.\\n */\\nfunction msPointerOut(inEvent) {\\n    var e = this.prepareEvent_(inEvent);\\n    this.dispatcher.leaveOut(e, inEvent);\\n}\\n/**\\n * Handler for `msPointerOver`.\\n *\\n * @this {MsSource}\\n * @param {MSPointerEvent} inEvent The in event.\\n */\\nfunction msPointerOver(inEvent) {\\n    var e = this.prepareEvent_(inEvent);\\n    this.dispatcher.enterOver(e, inEvent);\\n}\\n/**\\n * Handler for `msPointerCancel`.\\n *\\n * @this {MsSource}\\n * @param {MSPointerEvent} inEvent The in event.\\n */\\nfunction msPointerCancel(inEvent) {\\n    var e = this.prepareEvent_(inEvent);\\n    this.dispatcher.cancel(e, inEvent);\\n    this.cleanup(inEvent.pointerId);\\n}\\n/**\\n * Handler for `msLostPointerCapture`.\\n *\\n * @this {MsSource}\\n * @param {MSPointerEvent} inEvent The in event.\\n */\\nfunction msLostPointerCapture(inEvent) {\\n    var e = this.dispatcher.makeEvent('lostpointercapture', inEvent, inEvent);\\n    this.dispatcher.dispatchEvent(e);\\n}\\n/**\\n * Handler for `msGotPointerCapture`.\\n *\\n * @this {MsSource}\\n * @param {MSPointerEvent} inEvent The in event.\\n */\\nfunction msGotPointerCapture(inEvent) {\\n    var e = this.dispatcher.makeEvent('gotpointercapture', inEvent, inEvent);\\n    this.dispatcher.dispatchEvent(e);\\n}\\nvar MsSource = /** @class */ (function (_super) {\\n    __extends(MsSource, _super);\\n    /**\\n     * @param {import(\\\"./PointerEventHandler.js\\\").default} dispatcher Event handler.\\n     */\\n    function MsSource(dispatcher) {\\n        var _this = this;\\n        var mapping = {\\n            'MSPointerDown': msPointerDown,\\n            'MSPointerMove': msPointerMove,\\n            'MSPointerUp': msPointerUp,\\n            'MSPointerOut': msPointerOut,\\n            'MSPointerOver': msPointerOver,\\n            'MSPointerCancel': msPointerCancel,\\n            'MSGotPointerCapture': msGotPointerCapture,\\n            'MSLostPointerCapture': msLostPointerCapture\\n        };\\n        _this = _super.call(this, dispatcher, mapping) || this;\\n        /**\\n         * @const\\n         * @type {!Object<string, MSPointerEvent|Object>}\\n         */\\n        _this.pointerMap = dispatcher.pointerMap;\\n        return _this;\\n    }\\n    /**\\n     * Creates a copy of the original event that will be used\\n     * for the fake pointer event.\\n     *\\n     * @private\\n     * @param {MSPointerEvent} inEvent The in event.\\n     * @return {Object} The copied event.\\n     */\\n    MsSource.prototype.prepareEvent_ = function (inEvent) {\\n        /** @type {MSPointerEvent|Object} */\\n        var e = inEvent;\\n        if (typeof inEvent.pointerType === 'number') {\\n            e = this.dispatcher.cloneEvent(inEvent, inEvent);\\n            e.pointerType = POINTER_TYPES[inEvent.pointerType];\\n        }\\n        return e;\\n    };\\n    /**\\n     * Remove this pointer from the list of active pointers.\\n     * @param {number} pointerId Pointer identifier.\\n     */\\n    MsSource.prototype.cleanup = function (pointerId) {\\n        delete this.pointerMap[pointerId.toString()];\\n    };\\n    return MsSource;\\n}(EventSource));\\nexport default MsSource;\\n//# sourceMappingURL=MsSource.js.map\",\"/**\\n * @module ol/pointer/NativeSource\\n */\\nvar __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n// Based on https://github.com/Polymer/PointerEvents\\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\\n//\\n// Redistribution and use in source and binary forms, with or without\\n// modification, are permitted provided that the following conditions are\\n// met:\\n//\\n// * Redistributions of source code must retain the above copyright\\n// notice, this list of conditions and the following disclaimer.\\n// * Redistributions in binary form must reproduce the above\\n// copyright notice, this list of conditions and the following disclaimer\\n// in the documentation and/or other materials provided with the\\n// distribution.\\n// * Neither the name of Google Inc. nor the names of its\\n// contributors may be used to endorse or promote products derived from\\n// this software without specific prior written permission.\\n//\\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\\n// \\\"AS IS\\\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\nimport EventSource from './EventSource.js';\\n/**\\n * Handler for `pointerdown`.\\n *\\n * @this {NativeSource}\\n * @param {Event} inEvent The in event.\\n */\\nfunction pointerDown(inEvent) {\\n    this.dispatcher.fireNativeEvent(inEvent);\\n}\\n/**\\n * Handler for `pointermove`.\\n *\\n * @this {NativeSource}\\n * @param {Event} inEvent The in event.\\n */\\nfunction pointerMove(inEvent) {\\n    this.dispatcher.fireNativeEvent(inEvent);\\n}\\n/**\\n * Handler for `pointerup`.\\n *\\n * @this {NativeSource}\\n * @param {Event} inEvent The in event.\\n */\\nfunction pointerUp(inEvent) {\\n    this.dispatcher.fireNativeEvent(inEvent);\\n}\\n/**\\n * Handler for `pointerout`.\\n *\\n * @this {NativeSource}\\n * @param {Event} inEvent The in event.\\n */\\nfunction pointerOut(inEvent) {\\n    this.dispatcher.fireNativeEvent(inEvent);\\n}\\n/**\\n * Handler for `pointerover`.\\n *\\n * @this {NativeSource}\\n * @param {Event} inEvent The in event.\\n */\\nfunction pointerOver(inEvent) {\\n    this.dispatcher.fireNativeEvent(inEvent);\\n}\\n/**\\n * Handler for `pointercancel`.\\n *\\n * @this {NativeSource}\\n * @param {Event} inEvent The in event.\\n */\\nfunction pointerCancel(inEvent) {\\n    this.dispatcher.fireNativeEvent(inEvent);\\n}\\n/**\\n * Handler for `lostpointercapture`.\\n *\\n * @this {NativeSource}\\n * @param {Event} inEvent The in event.\\n */\\nfunction lostPointerCapture(inEvent) {\\n    this.dispatcher.fireNativeEvent(inEvent);\\n}\\n/**\\n * Handler for `gotpointercapture`.\\n *\\n * @this {NativeSource}\\n * @param {Event} inEvent The in event.\\n */\\nfunction gotPointerCapture(inEvent) {\\n    this.dispatcher.fireNativeEvent(inEvent);\\n}\\nvar NativeSource = /** @class */ (function (_super) {\\n    __extends(NativeSource, _super);\\n    /**\\n     * @param {import(\\\"./PointerEventHandler.js\\\").default} dispatcher Event handler.\\n     */\\n    function NativeSource(dispatcher) {\\n        var _this = this;\\n        var mapping = {\\n            'pointerdown': pointerDown,\\n            'pointermove': pointerMove,\\n            'pointerup': pointerUp,\\n            'pointerout': pointerOut,\\n            'pointerover': pointerOver,\\n            'pointercancel': pointerCancel,\\n            'gotpointercapture': gotPointerCapture,\\n            'lostpointercapture': lostPointerCapture\\n        };\\n        _this = _super.call(this, dispatcher, mapping) || this;\\n        return _this;\\n    }\\n    return NativeSource;\\n}(EventSource));\\nexport default NativeSource;\\n//# sourceMappingURL=NativeSource.js.map\",\"/**\\n * @module ol/pointer/PointerEvent\\n */\\nvar __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n// Based on https://github.com/Polymer/PointerEvents\\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\\n//\\n// Redistribution and use in source and binary forms, with or without\\n// modification, are permitted provided that the following conditions are\\n// met:\\n//\\n// * Redistributions of source code must retain the above copyright\\n// notice, this list of conditions and the following disclaimer.\\n// * Redistributions in binary form must reproduce the above\\n// copyright notice, this list of conditions and the following disclaimer\\n// in the documentation and/or other materials provided with the\\n// distribution.\\n// * Neither the name of Google Inc. nor the names of its\\n// contributors may be used to endorse or promote products derived from\\n// this software without specific prior written permission.\\n//\\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\\n// \\\"AS IS\\\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\nimport _Event from '../events/Event.js';\\n/**\\n * Is the `buttons` property supported?\\n * @type {boolean}\\n */\\nvar HAS_BUTTONS = false;\\nvar PointerEvent = /** @class */ (function (_super) {\\n    __extends(PointerEvent, _super);\\n    /**\\n     * A class for pointer events.\\n     *\\n     * This class is used as an abstraction for mouse events,\\n     * touch events and even native pointer events.\\n     *\\n     * @param {string} type The type of the event to create.\\n     * @param {Event} originalEvent The event.\\n     * @param {Object<string, ?>=} opt_eventDict An optional dictionary of\\n     *    initial event properties.\\n     */\\n    function PointerEvent(type, originalEvent, opt_eventDict) {\\n        var _this = _super.call(this, type) || this;\\n        /**\\n         * @const\\n         * @type {Event}\\n         */\\n        _this.originalEvent = originalEvent;\\n        var eventDict = opt_eventDict ? opt_eventDict : {};\\n        /**\\n         * @type {number}\\n         */\\n        _this.buttons = getButtons(eventDict);\\n        /**\\n         * @type {number}\\n         */\\n        _this.pressure = getPressure(eventDict, _this.buttons);\\n        // MouseEvent related properties\\n        /**\\n         * @type {boolean}\\n         */\\n        _this.bubbles = 'bubbles' in eventDict ? eventDict['bubbles'] : false;\\n        /**\\n         * @type {boolean}\\n         */\\n        _this.cancelable = 'cancelable' in eventDict ? eventDict['cancelable'] : false;\\n        /**\\n         * @type {Object}\\n         */\\n        _this.view = 'view' in eventDict ? eventDict['view'] : null;\\n        /**\\n         * @type {number}\\n         */\\n        _this.detail = 'detail' in eventDict ? eventDict['detail'] : null;\\n        /**\\n         * @type {number}\\n         */\\n        _this.screenX = 'screenX' in eventDict ? eventDict['screenX'] : 0;\\n        /**\\n         * @type {number}\\n         */\\n        _this.screenY = 'screenY' in eventDict ? eventDict['screenY'] : 0;\\n        /**\\n         * @type {number}\\n         */\\n        _this.clientX = 'clientX' in eventDict ? eventDict['clientX'] : 0;\\n        /**\\n         * @type {number}\\n         */\\n        _this.clientY = 'clientY' in eventDict ? eventDict['clientY'] : 0;\\n        /**\\n         * @type {boolean}\\n         */\\n        _this.ctrlKey = 'ctrlKey' in eventDict ? eventDict['ctrlKey'] : false;\\n        /**\\n         * @type {boolean}\\n         */\\n        _this.altKey = 'altKey' in eventDict ? eventDict['altKey'] : false;\\n        /**\\n         * @type {boolean}\\n         */\\n        _this.shiftKey = 'shiftKey' in eventDict ? eventDict['shiftKey'] : false;\\n        /**\\n         * @type {boolean}\\n         */\\n        _this.metaKey = 'metaKey' in eventDict ? eventDict['metaKey'] : false;\\n        /**\\n         * @type {number}\\n         */\\n        _this.button = 'button' in eventDict ? eventDict['button'] : 0;\\n        /**\\n         * @type {Node}\\n         */\\n        _this.relatedTarget = 'relatedTarget' in eventDict ?\\n            eventDict['relatedTarget'] : null;\\n        // PointerEvent related properties\\n        /**\\n         * @const\\n         * @type {number}\\n         */\\n        _this.pointerId = 'pointerId' in eventDict ? eventDict['pointerId'] : 0;\\n        /**\\n         * @type {number}\\n         */\\n        _this.width = 'width' in eventDict ? eventDict['width'] : 0;\\n        /**\\n         * @type {number}\\n         */\\n        _this.height = 'height' in eventDict ? eventDict['height'] : 0;\\n        /**\\n         * @type {number}\\n         */\\n        _this.tiltX = 'tiltX' in eventDict ? eventDict['tiltX'] : 0;\\n        /**\\n         * @type {number}\\n         */\\n        _this.tiltY = 'tiltY' in eventDict ? eventDict['tiltY'] : 0;\\n        /**\\n         * @type {string}\\n         */\\n        _this.pointerType = 'pointerType' in eventDict ? eventDict['pointerType'] : '';\\n        /**\\n         * @type {number}\\n         */\\n        _this.hwTimestamp = 'hwTimestamp' in eventDict ? eventDict['hwTimestamp'] : 0;\\n        /**\\n         * @type {boolean}\\n         */\\n        _this.isPrimary = 'isPrimary' in eventDict ? eventDict['isPrimary'] : false;\\n        // keep the semantics of preventDefault\\n        if (originalEvent.preventDefault) {\\n            _this.preventDefault = function () {\\n                originalEvent.preventDefault();\\n            };\\n        }\\n        return _this;\\n    }\\n    return PointerEvent;\\n}(_Event));\\n/**\\n * @param {Object<string, ?>} eventDict The event dictionary.\\n * @return {number} Button indicator.\\n */\\nfunction getButtons(eventDict) {\\n    // According to the w3c spec,\\n    // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-button\\n    // MouseEvent.button == 0 can mean either no mouse button depressed, or the\\n    // left mouse button depressed.\\n    //\\n    // As of now, the only way to distinguish between the two states of\\n    // MouseEvent.button is by using the deprecated MouseEvent.which property, as\\n    // this maps mouse buttons to positive integers > 0, and uses 0 to mean that\\n    // no mouse button is held.\\n    //\\n    // MouseEvent.which is derived from MouseEvent.button at MouseEvent creation,\\n    // but initMouseEvent does not expose an argument with which to set\\n    // MouseEvent.which. Calling initMouseEvent with a buttonArg of 0 will set\\n    // MouseEvent.button == 0 and MouseEvent.which == 1, breaking the expectations\\n    // of app developers.\\n    //\\n    // The only way to propagate the correct state of MouseEvent.which and\\n    // MouseEvent.button to a new MouseEvent.button == 0 and MouseEvent.which == 0\\n    // is to call initMouseEvent with a buttonArg value of -1.\\n    //\\n    // This is fixed with DOM Level 4's use of buttons\\n    var buttons;\\n    if (eventDict.buttons || HAS_BUTTONS) {\\n        buttons = eventDict.buttons;\\n    }\\n    else {\\n        switch (eventDict.which) {\\n            case 1:\\n                buttons = 1;\\n                break;\\n            case 2:\\n                buttons = 4;\\n                break;\\n            case 3:\\n                buttons = 2;\\n                break;\\n            default: buttons = 0;\\n        }\\n    }\\n    return buttons;\\n}\\n/**\\n * @param {Object<string, ?>} eventDict The event dictionary.\\n * @param {number} buttons Button indicator.\\n * @return {number} The pressure.\\n */\\nfunction getPressure(eventDict, buttons) {\\n    // Spec requires that pointers without pressure specified use 0.5 for down\\n    // state and 0 for up state.\\n    var pressure = 0;\\n    if (eventDict.pressure) {\\n        pressure = eventDict.pressure;\\n    }\\n    else {\\n        pressure = buttons ? 0.5 : 0;\\n    }\\n    return pressure;\\n}\\n/**\\n * Checks if the `buttons` property is supported.\\n */\\n(function () {\\n    try {\\n        var ev = new MouseEvent('click', { buttons: 1 });\\n        HAS_BUTTONS = ev.buttons === 1;\\n    }\\n    catch (e) {\\n        // pass\\n    }\\n})();\\nexport default PointerEvent;\\n//# sourceMappingURL=PointerEvent.js.map\",\"/**\\n * @module ol/array\\n */\\n/**\\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\\n * https://github.com/darkskyapp/binary-search\\n *\\n * @param {Array<*>} haystack Items to search through.\\n * @param {*} needle The item to look for.\\n * @param {Function=} opt_comparator Comparator function.\\n * @return {number} The index of the item if found, -1 if not.\\n */\\nexport function binarySearch(haystack, needle, opt_comparator) {\\n    var mid, cmp;\\n    var comparator = opt_comparator || numberSafeCompareFunction;\\n    var low = 0;\\n    var high = haystack.length;\\n    var found = false;\\n    while (low < high) {\\n        /* Note that \\\"(low + high) >>> 1\\\" may overflow, and results in a typecast\\n         * to double (which gives the wrong results). */\\n        mid = low + (high - low >> 1);\\n        cmp = +comparator(haystack[mid], needle);\\n        if (cmp < 0.0) { /* Too low. */\\n            low = mid + 1;\\n        }\\n        else { /* Key found or too high */\\n            high = mid;\\n            found = !cmp;\\n        }\\n    }\\n    /* Key not found. */\\n    return found ? low : ~low;\\n}\\n/**\\n * Compare function for array sort that is safe for numbers.\\n * @param {*} a The first object to be compared.\\n * @param {*} b The second object to be compared.\\n * @return {number} A negative number, zero, or a positive number as the first\\n *     argument is less than, equal to, or greater than the second.\\n */\\nexport function numberSafeCompareFunction(a, b) {\\n    return a > b ? 1 : a < b ? -1 : 0;\\n}\\n/**\\n * Whether the array contains the given object.\\n * @param {Array<*>} arr The array to test for the presence of the element.\\n * @param {*} obj The object for which to test.\\n * @return {boolean} The object is in the array.\\n */\\nexport function includes(arr, obj) {\\n    return arr.indexOf(obj) >= 0;\\n}\\n/**\\n * @param {Array<number>} arr Array.\\n * @param {number} target Target.\\n * @param {number} direction 0 means return the nearest, > 0\\n *    means return the largest nearest, < 0 means return the\\n *    smallest nearest.\\n * @return {number} Index.\\n */\\nexport function linearFindNearest(arr, target, direction) {\\n    var n = arr.length;\\n    if (arr[0] <= target) {\\n        return 0;\\n    }\\n    else if (target <= arr[n - 1]) {\\n        return n - 1;\\n    }\\n    else {\\n        var i = void 0;\\n        if (direction > 0) {\\n            for (i = 1; i < n; ++i) {\\n                if (arr[i] < target) {\\n                    return i - 1;\\n                }\\n            }\\n        }\\n        else if (direction < 0) {\\n            for (i = 1; i < n; ++i) {\\n                if (arr[i] <= target) {\\n                    return i;\\n                }\\n            }\\n        }\\n        else {\\n            for (i = 1; i < n; ++i) {\\n                if (arr[i] == target) {\\n                    return i;\\n                }\\n                else if (arr[i] < target) {\\n                    if (arr[i - 1] - target < target - arr[i]) {\\n                        return i - 1;\\n                    }\\n                    else {\\n                        return i;\\n                    }\\n                }\\n            }\\n        }\\n        return n - 1;\\n    }\\n}\\n/**\\n * @param {Array<*>} arr Array.\\n * @param {number} begin Begin index.\\n * @param {number} end End index.\\n */\\nexport function reverseSubArray(arr, begin, end) {\\n    while (begin < end) {\\n        var tmp = arr[begin];\\n        arr[begin] = arr[end];\\n        arr[end] = tmp;\\n        ++begin;\\n        --end;\\n    }\\n}\\n/**\\n * @param {Array<VALUE>} arr The array to modify.\\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\\n * @template VALUE\\n */\\nexport function extend(arr, data) {\\n    var extension = Array.isArray(data) ? data : [data];\\n    var length = extension.length;\\n    for (var i = 0; i < length; i++) {\\n        arr[arr.length] = extension[i];\\n    }\\n}\\n/**\\n * @param {Array<VALUE>} arr The array to modify.\\n * @param {VALUE} obj The element to remove.\\n * @template VALUE\\n * @return {boolean} If the element was removed.\\n */\\nexport function remove(arr, obj) {\\n    var i = arr.indexOf(obj);\\n    var found = i > -1;\\n    if (found) {\\n        arr.splice(i, 1);\\n    }\\n    return found;\\n}\\n/**\\n * @param {Array<VALUE>} arr The array to search in.\\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\\n * @template VALUE\\n * @return {VALUE|null} The element found or null.\\n */\\nexport function find(arr, func) {\\n    var length = arr.length >>> 0;\\n    var value;\\n    for (var i = 0; i < length; i++) {\\n        value = arr[i];\\n        if (func(value, i, arr)) {\\n            return value;\\n        }\\n    }\\n    return null;\\n}\\n/**\\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\\n * @return {boolean} Whether the two arrays are equal.\\n */\\nexport function equals(arr1, arr2) {\\n    var len1 = arr1.length;\\n    if (len1 !== arr2.length) {\\n        return false;\\n    }\\n    for (var i = 0; i < len1; i++) {\\n        if (arr1[i] !== arr2[i]) {\\n            return false;\\n        }\\n    }\\n    return true;\\n}\\n/**\\n * Sort the passed array such that the relative order of equal elements is preverved.\\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\\n * @param {Array<*>} arr The array to sort (modifies original).\\n * @param {!function(*, *): number} compareFnc Comparison function.\\n * @api\\n */\\nexport function stableSort(arr, compareFnc) {\\n    var length = arr.length;\\n    var tmp = Array(arr.length);\\n    var i;\\n    for (i = 0; i < length; i++) {\\n        tmp[i] = { index: i, value: arr[i] };\\n    }\\n    tmp.sort(function (a, b) {\\n        return compareFnc(a.value, b.value) || a.index - b.index;\\n    });\\n    for (i = 0; i < arr.length; i++) {\\n        arr[i] = tmp[i].value;\\n    }\\n}\\n/**\\n * @param {Array<*>} arr The array to search in.\\n * @param {Function} func Comparison function.\\n * @return {number} Return index.\\n */\\nexport function findIndex(arr, func) {\\n    var index;\\n    var found = !arr.every(function (el, idx) {\\n        index = idx;\\n        return !func(el, idx, arr);\\n    });\\n    return found ? index : -1;\\n}\\n/**\\n * @param {Array<*>} arr The array to test.\\n * @param {Function=} opt_func Comparison function.\\n * @param {boolean=} opt_strict Strictly sorted (default false).\\n * @return {boolean} Return index.\\n */\\nexport function isSorted(arr, opt_func, opt_strict) {\\n    var compare = opt_func || numberSafeCompareFunction;\\n    return arr.every(function (currentVal, index) {\\n        if (index === 0) {\\n            return true;\\n        }\\n        var res = compare(arr[index - 1], currentVal);\\n        return !(res > 0 || opt_strict && res === 0);\\n    });\\n}\\n//# sourceMappingURL=array.js.map\",\"/**\\n * @module ol/pointer/TouchSource\\n */\\nvar __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n// Based on https://github.com/Polymer/PointerEvents\\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\\n//\\n// Redistribution and use in source and binary forms, with or without\\n// modification, are permitted provided that the following conditions are\\n// met:\\n//\\n// * Redistributions of source code must retain the above copyright\\n// notice, this list of conditions and the following disclaimer.\\n// * Redistributions in binary form must reproduce the above\\n// copyright notice, this list of conditions and the following disclaimer\\n// in the documentation and/or other materials provided with the\\n// distribution.\\n// * Neither the name of Google Inc. nor the names of its\\n// contributors may be used to endorse or promote products derived from\\n// this software without specific prior written permission.\\n//\\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\\n// \\\"AS IS\\\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\nimport { remove } from '../array.js';\\nimport EventSource from './EventSource.js';\\nimport { POINTER_ID } from './MouseSource.js';\\n/**\\n * @type {number}\\n */\\nvar CLICK_COUNT_TIMEOUT = 200;\\n/**\\n * @type {string}\\n */\\nvar POINTER_TYPE = 'touch';\\n/**\\n * Handler for `touchstart`, triggers `pointerover`,\\n * `pointerenter` and `pointerdown` events.\\n *\\n * @this {TouchSource}\\n * @param {TouchEvent} inEvent The in event.\\n */\\nfunction touchstart(inEvent) {\\n    this.vacuumTouches_(inEvent);\\n    this.setPrimaryTouch_(inEvent.changedTouches[0]);\\n    this.dedupSynthMouse_(inEvent);\\n    this.clickCount_++;\\n    this.processTouches_(inEvent, this.overDown_);\\n}\\n/**\\n * Handler for `touchmove`.\\n *\\n * @this {TouchSource}\\n * @param {TouchEvent} inEvent The in event.\\n */\\nfunction touchmove(inEvent) {\\n    this.processTouches_(inEvent, this.moveOverOut_);\\n}\\n/**\\n * Handler for `touchend`, triggers `pointerup`,\\n * `pointerout` and `pointerleave` events.\\n *\\n * @this {TouchSource}\\n * @param {TouchEvent} inEvent The event.\\n */\\nfunction touchend(inEvent) {\\n    this.dedupSynthMouse_(inEvent);\\n    this.processTouches_(inEvent, this.upOut_);\\n}\\n/**\\n * Handler for `touchcancel`, triggers `pointercancel`,\\n * `pointerout` and `pointerleave` events.\\n *\\n * @this {TouchSource}\\n * @param {TouchEvent} inEvent The in event.\\n */\\nfunction touchcancel(inEvent) {\\n    this.processTouches_(inEvent, this.cancelOut_);\\n}\\nvar TouchSource = /** @class */ (function (_super) {\\n    __extends(TouchSource, _super);\\n    /**\\n     * @param {import(\\\"./PointerEventHandler.js\\\").default} dispatcher The event handler.\\n     * @param {import(\\\"./MouseSource.js\\\").default} mouseSource Mouse source.\\n     */\\n    function TouchSource(dispatcher, mouseSource) {\\n        var _this = this;\\n        var mapping = {\\n            'touchstart': touchstart,\\n            'touchmove': touchmove,\\n            'touchend': touchend,\\n            'touchcancel': touchcancel\\n        };\\n        _this = _super.call(this, dispatcher, mapping) || this;\\n        /**\\n         * @const\\n         * @type {!Object<string, Event|Object>}\\n         */\\n        _this.pointerMap = dispatcher.pointerMap;\\n        /**\\n         * @const\\n         * @type {import(\\\"./MouseSource.js\\\").default}\\n         */\\n        _this.mouseSource = mouseSource;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        _this.firstTouchId_ = undefined;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.clickCount_ = 0;\\n        /**\\n         * @private\\n         * @type {?}\\n         */\\n        _this.resetId_;\\n        /**\\n         * Mouse event timeout: This should be long enough to\\n         * ignore compat mouse events made by touch.\\n         * @private\\n         * @type {number}\\n         */\\n        _this.dedupTimeout_ = 2500;\\n        return _this;\\n    }\\n    /**\\n     * @private\\n     * @param {Touch} inTouch The in touch.\\n     * @return {boolean} True, if this is the primary touch.\\n     */\\n    TouchSource.prototype.isPrimaryTouch_ = function (inTouch) {\\n        return this.firstTouchId_ === inTouch.identifier;\\n    };\\n    /**\\n     * Set primary touch if there are no pointers, or the only pointer is the mouse.\\n     * @param {Touch} inTouch The in touch.\\n     * @private\\n     */\\n    TouchSource.prototype.setPrimaryTouch_ = function (inTouch) {\\n        var count = Object.keys(this.pointerMap).length;\\n        if (count === 0 || (count === 1 && POINTER_ID.toString() in this.pointerMap)) {\\n            this.firstTouchId_ = inTouch.identifier;\\n            this.cancelResetClickCount_();\\n        }\\n    };\\n    /**\\n     * @private\\n     * @param {PointerEvent} inPointer The in pointer object.\\n     */\\n    TouchSource.prototype.removePrimaryPointer_ = function (inPointer) {\\n        if (inPointer.isPrimary) {\\n            this.firstTouchId_ = undefined;\\n            this.resetClickCount_();\\n        }\\n    };\\n    /**\\n     * @private\\n     */\\n    TouchSource.prototype.resetClickCount_ = function () {\\n        this.resetId_ = setTimeout(this.resetClickCountHandler_.bind(this), CLICK_COUNT_TIMEOUT);\\n    };\\n    /**\\n     * @private\\n     */\\n    TouchSource.prototype.resetClickCountHandler_ = function () {\\n        this.clickCount_ = 0;\\n        this.resetId_ = undefined;\\n    };\\n    /**\\n     * @private\\n     */\\n    TouchSource.prototype.cancelResetClickCount_ = function () {\\n        if (this.resetId_ !== undefined) {\\n            clearTimeout(this.resetId_);\\n        }\\n    };\\n    /**\\n     * @private\\n     * @param {TouchEvent} browserEvent Browser event\\n     * @param {Touch} inTouch Touch event\\n     * @return {PointerEvent} A pointer object.\\n     */\\n    TouchSource.prototype.touchToPointer_ = function (browserEvent, inTouch) {\\n        var e = this.dispatcher.cloneEvent(browserEvent, inTouch);\\n        // Spec specifies that pointerId 1 is reserved for Mouse.\\n        // Touch identifiers can start at 0.\\n        // Add 2 to the touch identifier for compatibility.\\n        e.pointerId = inTouch.identifier + 2;\\n        // TODO: check if this is necessary?\\n        //e.target = findTarget(e);\\n        e.bubbles = true;\\n        e.cancelable = true;\\n        e.detail = this.clickCount_;\\n        e.button = 0;\\n        e.buttons = 1;\\n        e.width = inTouch.radiusX || 0;\\n        e.height = inTouch.radiusY || 0;\\n        e.pressure = inTouch.force || 0.5;\\n        e.isPrimary = this.isPrimaryTouch_(inTouch);\\n        e.pointerType = POINTER_TYPE;\\n        // make sure that the properties that are different for\\n        // each `Touch` object are not copied from the BrowserEvent object\\n        e.clientX = inTouch.clientX;\\n        e.clientY = inTouch.clientY;\\n        e.screenX = inTouch.screenX;\\n        e.screenY = inTouch.screenY;\\n        return e;\\n    };\\n    /**\\n     * @private\\n     * @param {TouchEvent} inEvent Touch event\\n     * @param {function(TouchEvent, PointerEvent): void} inFunction In function.\\n     */\\n    TouchSource.prototype.processTouches_ = function (inEvent, inFunction) {\\n        var touches = Array.prototype.slice.call(inEvent.changedTouches);\\n        var count = touches.length;\\n        function preventDefault() {\\n            inEvent.preventDefault();\\n        }\\n        for (var i = 0; i < count; ++i) {\\n            var pointer = this.touchToPointer_(inEvent, touches[i]);\\n            // forward touch preventDefaults\\n            pointer.preventDefault = preventDefault;\\n            inFunction.call(this, inEvent, pointer);\\n        }\\n    };\\n    /**\\n     * @private\\n     * @param {TouchList} touchList The touch list.\\n     * @param {number} searchId Search identifier.\\n     * @return {boolean} True, if the `Touch` with the given id is in the list.\\n     */\\n    TouchSource.prototype.findTouch_ = function (touchList, searchId) {\\n        var l = touchList.length;\\n        for (var i = 0; i < l; i++) {\\n            var touch = touchList[i];\\n            if (touch.identifier === searchId) {\\n                return true;\\n            }\\n        }\\n        return false;\\n    };\\n    /**\\n     * In some instances, a touchstart can happen without a touchend. This\\n     * leaves the pointermap in a broken state.\\n     * Therefore, on every touchstart, we remove the touches that did not fire a\\n     * touchend event.\\n     * To keep state globally consistent, we fire a pointercancel for\\n     * this \\\"abandoned\\\" touch\\n     *\\n     * @private\\n     * @param {TouchEvent} inEvent The in event.\\n     */\\n    TouchSource.prototype.vacuumTouches_ = function (inEvent) {\\n        var touchList = inEvent.touches;\\n        // pointerMap.getCount() should be < touchList.length here,\\n        // as the touchstart has not been processed yet.\\n        var keys = Object.keys(this.pointerMap);\\n        var count = keys.length;\\n        if (count >= touchList.length) {\\n            var d = [];\\n            for (var i = 0; i < count; ++i) {\\n                var key = Number(keys[i]);\\n                var value = this.pointerMap[key];\\n                // Never remove pointerId == 1, which is mouse.\\n                // Touch identifiers are 2 smaller than their pointerId, which is the\\n                // index in pointermap.\\n                if (key != POINTER_ID && !this.findTouch_(touchList, key - 2)) {\\n                    d.push(value.out);\\n                }\\n            }\\n            for (var i = 0; i < d.length; ++i) {\\n                this.cancelOut_(inEvent, d[i]);\\n            }\\n        }\\n    };\\n    /**\\n     * @private\\n     * @param {TouchEvent} browserEvent The event.\\n     * @param {PointerEvent} inPointer The in pointer object.\\n     */\\n    TouchSource.prototype.overDown_ = function (browserEvent, inPointer) {\\n        this.pointerMap[inPointer.pointerId] = {\\n            target: inPointer.target,\\n            out: inPointer,\\n            outTarget: inPointer.target\\n        };\\n        this.dispatcher.over(inPointer, browserEvent);\\n        this.dispatcher.enter(inPointer, browserEvent);\\n        this.dispatcher.down(inPointer, browserEvent);\\n    };\\n    /**\\n     * @private\\n     * @param {TouchEvent} browserEvent The event.\\n     * @param {PointerEvent} inPointer The in pointer.\\n     */\\n    TouchSource.prototype.moveOverOut_ = function (browserEvent, inPointer) {\\n        var event = inPointer;\\n        var pointer = this.pointerMap[event.pointerId];\\n        // a finger drifted off the screen, ignore it\\n        if (!pointer) {\\n            return;\\n        }\\n        var outEvent = pointer.out;\\n        var outTarget = pointer.outTarget;\\n        this.dispatcher.move(event, browserEvent);\\n        if (outEvent && outTarget !== event.target) {\\n            outEvent.relatedTarget = event.target;\\n            /** @type {Object} */ (event).relatedTarget = outTarget;\\n            // recover from retargeting by shadow\\n            outEvent.target = outTarget;\\n            if (event.target) {\\n                this.dispatcher.leaveOut(outEvent, browserEvent);\\n                this.dispatcher.enterOver(event, browserEvent);\\n            }\\n            else {\\n                // clean up case when finger leaves the screen\\n                /** @type {Object} */ (event).target = outTarget;\\n                /** @type {Object} */ (event).relatedTarget = null;\\n                this.cancelOut_(browserEvent, event);\\n            }\\n        }\\n        pointer.out = event;\\n        pointer.outTarget = event.target;\\n    };\\n    /**\\n     * @private\\n     * @param {TouchEvent} browserEvent An event.\\n     * @param {PointerEvent} inPointer The inPointer object.\\n     */\\n    TouchSource.prototype.upOut_ = function (browserEvent, inPointer) {\\n        this.dispatcher.up(inPointer, browserEvent);\\n        this.dispatcher.out(inPointer, browserEvent);\\n        this.dispatcher.leave(inPointer, browserEvent);\\n        this.cleanUpPointer_(inPointer);\\n    };\\n    /**\\n     * @private\\n     * @param {TouchEvent} browserEvent The event.\\n     * @param {PointerEvent} inPointer The in pointer.\\n     */\\n    TouchSource.prototype.cancelOut_ = function (browserEvent, inPointer) {\\n        this.dispatcher.cancel(inPointer, browserEvent);\\n        this.dispatcher.out(inPointer, browserEvent);\\n        this.dispatcher.leave(inPointer, browserEvent);\\n        this.cleanUpPointer_(inPointer);\\n    };\\n    /**\\n     * @private\\n     * @param {PointerEvent} inPointer The inPointer object.\\n     */\\n    TouchSource.prototype.cleanUpPointer_ = function (inPointer) {\\n        delete this.pointerMap[inPointer.pointerId];\\n        this.removePrimaryPointer_(inPointer);\\n    };\\n    /**\\n     * Prevent synth mouse events from creating pointer events.\\n     *\\n     * @private\\n     * @param {TouchEvent} inEvent The in event.\\n     */\\n    TouchSource.prototype.dedupSynthMouse_ = function (inEvent) {\\n        var lts = this.mouseSource.lastTouches;\\n        var t = inEvent.changedTouches[0];\\n        // only the primary finger will synth mouse events\\n        if (this.isPrimaryTouch_(t)) {\\n            // remember x/y of last touch\\n            var lt_1 = [t.clientX, t.clientY];\\n            lts.push(lt_1);\\n            setTimeout(function () {\\n                // remove touch after timeout\\n                remove(lts, lt_1);\\n            }, this.dedupTimeout_);\\n        }\\n    };\\n    return TouchSource;\\n}(EventSource));\\nexport default TouchSource;\\n//# sourceMappingURL=TouchSource.js.map\",\"/**\\n * @module ol/pointer/PointerEventHandler\\n */\\nvar __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n// Based on https://github.com/Polymer/PointerEvents\\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\\n//\\n// Redistribution and use in source and binary forms, with or without\\n// modification, are permitted provided that the following conditions are\\n// met:\\n//\\n// * Redistributions of source code must retain the above copyright\\n// notice, this list of conditions and the following disclaimer.\\n// * Redistributions in binary form must reproduce the above\\n// copyright notice, this list of conditions and the following disclaimer\\n// in the documentation and/or other materials provided with the\\n// distribution.\\n// * Neither the name of Google Inc. nor the names of its\\n// contributors may be used to endorse or promote products derived from\\n// this software without specific prior written permission.\\n//\\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\\n// \\\"AS IS\\\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\nimport { listen, unlisten } from '../events.js';\\nimport EventTarget from '../events/Target.js';\\nimport { POINTER, MSPOINTER, TOUCH } from '../has.js';\\nimport PointerEventType from './EventType.js';\\nimport MouseSource, { prepareEvent as prepareMouseEvent } from './MouseSource.js';\\nimport MsSource from './MsSource.js';\\nimport NativeSource from './NativeSource.js';\\nimport PointerEvent from './PointerEvent.js';\\nimport TouchSource from './TouchSource.js';\\n/**\\n * Properties to copy when cloning an event, with default values.\\n * @type {Array<Array>}\\n */\\nvar CLONE_PROPS = [\\n    // MouseEvent\\n    ['bubbles', false],\\n    ['cancelable', false],\\n    ['view', null],\\n    ['detail', null],\\n    ['screenX', 0],\\n    ['screenY', 0],\\n    ['clientX', 0],\\n    ['clientY', 0],\\n    ['ctrlKey', false],\\n    ['altKey', false],\\n    ['shiftKey', false],\\n    ['metaKey', false],\\n    ['button', 0],\\n    ['relatedTarget', null],\\n    // DOM Level 3\\n    ['buttons', 0],\\n    // PointerEvent\\n    ['pointerId', 0],\\n    ['width', 0],\\n    ['height', 0],\\n    ['pressure', 0],\\n    ['tiltX', 0],\\n    ['tiltY', 0],\\n    ['pointerType', ''],\\n    ['hwTimestamp', 0],\\n    ['isPrimary', false],\\n    // event instance\\n    ['type', ''],\\n    ['target', null],\\n    ['currentTarget', null],\\n    ['which', 0]\\n];\\nvar PointerEventHandler = /** @class */ (function (_super) {\\n    __extends(PointerEventHandler, _super);\\n    /**\\n     * @param {Element|HTMLDocument} element Viewport element.\\n     */\\n    function PointerEventHandler(element) {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * @const\\n         * @private\\n         * @type {Element|HTMLDocument}\\n         */\\n        _this.element_ = element;\\n        /**\\n         * @const\\n         * @type {!Object<string, Event|Object>}\\n         */\\n        _this.pointerMap = {};\\n        /**\\n         * @type {Object<string, function(Event): void>}\\n         * @private\\n         */\\n        _this.eventMap_ = {};\\n        /**\\n         * @type {Array<import(\\\"./EventSource.js\\\").default>}\\n         * @private\\n         */\\n        _this.eventSourceList_ = [];\\n        _this.registerSources();\\n        return _this;\\n    }\\n    /**\\n     * Set up the event sources (mouse, touch and native pointers)\\n     * that generate pointer events.\\n     */\\n    PointerEventHandler.prototype.registerSources = function () {\\n        if (POINTER) {\\n            this.registerSource('native', new NativeSource(this));\\n        }\\n        else if (MSPOINTER) {\\n            this.registerSource('ms', new MsSource(this));\\n        }\\n        else {\\n            var mouseSource = new MouseSource(this);\\n            this.registerSource('mouse', mouseSource);\\n            if (TOUCH) {\\n                this.registerSource('touch', new TouchSource(this, mouseSource));\\n            }\\n        }\\n        // register events on the viewport element\\n        this.register_();\\n    };\\n    /**\\n     * Add a new event source that will generate pointer events.\\n     *\\n     * @param {string} name A name for the event source\\n     * @param {import(\\\"./EventSource.js\\\").default} source The source event.\\n     */\\n    PointerEventHandler.prototype.registerSource = function (name, source) {\\n        var s = source;\\n        var newEvents = s.getEvents();\\n        if (newEvents) {\\n            newEvents.forEach(function (e) {\\n                var handler = s.getHandlerForEvent(e);\\n                if (handler) {\\n                    this.eventMap_[e] = handler.bind(s);\\n                }\\n            }.bind(this));\\n            this.eventSourceList_.push(s);\\n        }\\n    };\\n    /**\\n     * Set up the events for all registered event sources.\\n     * @private\\n     */\\n    PointerEventHandler.prototype.register_ = function () {\\n        var l = this.eventSourceList_.length;\\n        for (var i = 0; i < l; i++) {\\n            var eventSource = this.eventSourceList_[i];\\n            this.addEvents_(eventSource.getEvents());\\n        }\\n    };\\n    /**\\n     * Remove all registered events.\\n     * @private\\n     */\\n    PointerEventHandler.prototype.unregister_ = function () {\\n        var l = this.eventSourceList_.length;\\n        for (var i = 0; i < l; i++) {\\n            var eventSource = this.eventSourceList_[i];\\n            this.removeEvents_(eventSource.getEvents());\\n        }\\n    };\\n    /**\\n     * Calls the right handler for a new event.\\n     * @private\\n     * @param {Event} inEvent Browser event.\\n     */\\n    PointerEventHandler.prototype.eventHandler_ = function (inEvent) {\\n        var type = inEvent.type;\\n        var handler = this.eventMap_[type];\\n        if (handler) {\\n            handler(inEvent);\\n        }\\n    };\\n    /**\\n     * Setup listeners for the given events.\\n     * @private\\n     * @param {Array<string>} events List of events.\\n     */\\n    PointerEventHandler.prototype.addEvents_ = function (events) {\\n        events.forEach(function (eventName) {\\n            listen(this.element_, eventName, this.eventHandler_, this);\\n        }.bind(this));\\n    };\\n    /**\\n     * Unregister listeners for the given events.\\n     * @private\\n     * @param {Array<string>} events List of events.\\n     */\\n    PointerEventHandler.prototype.removeEvents_ = function (events) {\\n        events.forEach(function (e) {\\n            unlisten(this.element_, e, this.eventHandler_, this);\\n        }.bind(this));\\n    };\\n    /**\\n     * Returns a snapshot of inEvent, with writable properties.\\n     *\\n     * @param {Event} event Browser event.\\n     * @param {Event|Touch} inEvent An event that contains\\n     *    properties to copy.\\n     * @return {Object} An object containing shallow copies of\\n     *    `inEvent`'s properties.\\n     */\\n    PointerEventHandler.prototype.cloneEvent = function (event, inEvent) {\\n        var eventCopy = {};\\n        for (var i = 0, ii = CLONE_PROPS.length; i < ii; i++) {\\n            var p = CLONE_PROPS[i][0];\\n            eventCopy[p] = event[p] || inEvent[p] || CLONE_PROPS[i][1];\\n        }\\n        return eventCopy;\\n    };\\n    // EVENTS\\n    /**\\n     * Triggers a 'pointerdown' event.\\n     * @param {Object} data Pointer event data.\\n     * @param {Event} event The event.\\n     */\\n    PointerEventHandler.prototype.down = function (data, event) {\\n        this.fireEvent(PointerEventType.POINTERDOWN, data, event);\\n    };\\n    /**\\n     * Triggers a 'pointermove' event.\\n     * @param {Object} data Pointer event data.\\n     * @param {Event} event The event.\\n     */\\n    PointerEventHandler.prototype.move = function (data, event) {\\n        this.fireEvent(PointerEventType.POINTERMOVE, data, event);\\n    };\\n    /**\\n     * Triggers a 'pointerup' event.\\n     * @param {Object} data Pointer event data.\\n     * @param {Event} event The event.\\n     */\\n    PointerEventHandler.prototype.up = function (data, event) {\\n        this.fireEvent(PointerEventType.POINTERUP, data, event);\\n    };\\n    /**\\n     * Triggers a 'pointerenter' event.\\n     * @param {Object} data Pointer event data.\\n     * @param {Event} event The event.\\n     */\\n    PointerEventHandler.prototype.enter = function (data, event) {\\n        data.bubbles = false;\\n        this.fireEvent(PointerEventType.POINTERENTER, data, event);\\n    };\\n    /**\\n     * Triggers a 'pointerleave' event.\\n     * @param {Object} data Pointer event data.\\n     * @param {Event} event The event.\\n     */\\n    PointerEventHandler.prototype.leave = function (data, event) {\\n        data.bubbles = false;\\n        this.fireEvent(PointerEventType.POINTERLEAVE, data, event);\\n    };\\n    /**\\n     * Triggers a 'pointerover' event.\\n     * @param {Object} data Pointer event data.\\n     * @param {Event} event The event.\\n     */\\n    PointerEventHandler.prototype.over = function (data, event) {\\n        data.bubbles = true;\\n        this.fireEvent(PointerEventType.POINTEROVER, data, event);\\n    };\\n    /**\\n     * Triggers a 'pointerout' event.\\n     * @param {Object} data Pointer event data.\\n     * @param {Event} event The event.\\n     */\\n    PointerEventHandler.prototype.out = function (data, event) {\\n        data.bubbles = true;\\n        this.fireEvent(PointerEventType.POINTEROUT, data, event);\\n    };\\n    /**\\n     * Triggers a 'pointercancel' event.\\n     * @param {Object} data Pointer event data.\\n     * @param {Event} event The event.\\n     */\\n    PointerEventHandler.prototype.cancel = function (data, event) {\\n        this.fireEvent(PointerEventType.POINTERCANCEL, data, event);\\n    };\\n    /**\\n     * Triggers a combination of 'pointerout' and 'pointerleave' events.\\n     * @param {Object} data Pointer event data.\\n     * @param {Event} event The event.\\n     */\\n    PointerEventHandler.prototype.leaveOut = function (data, event) {\\n        this.out(data, event);\\n        if (!this.contains_(data.target, data.relatedTarget)) {\\n            this.leave(data, event);\\n        }\\n    };\\n    /**\\n     * Triggers a combination of 'pointerover' and 'pointerevents' events.\\n     * @param {Object} data Pointer event data.\\n     * @param {Event} event The event.\\n     */\\n    PointerEventHandler.prototype.enterOver = function (data, event) {\\n        this.over(data, event);\\n        if (!this.contains_(data.target, data.relatedTarget)) {\\n            this.enter(data, event);\\n        }\\n    };\\n    /**\\n     * @private\\n     * @param {Element} container The container element.\\n     * @param {Element} contained The contained element.\\n     * @return {boolean} Returns true if the container element\\n     *   contains the other element.\\n     */\\n    PointerEventHandler.prototype.contains_ = function (container, contained) {\\n        if (!container || !contained) {\\n            return false;\\n        }\\n        return container.contains(contained);\\n    };\\n    // EVENT CREATION AND TRACKING\\n    /**\\n     * Creates a new Event of type `inType`, based on the information in\\n     * `data`.\\n     *\\n     * @param {string} inType A string representing the type of event to create.\\n     * @param {Object} data Pointer event data.\\n     * @param {Event} event The event.\\n     * @return {PointerEvent} A PointerEvent of type `inType`.\\n     */\\n    PointerEventHandler.prototype.makeEvent = function (inType, data, event) {\\n        return new PointerEvent(inType, event, data);\\n    };\\n    /**\\n     * Make and dispatch an event in one call.\\n     * @param {string} inType A string representing the type of event.\\n     * @param {Object} data Pointer event data.\\n     * @param {Event} event The event.\\n     */\\n    PointerEventHandler.prototype.fireEvent = function (inType, data, event) {\\n        var e = this.makeEvent(inType, data, event);\\n        this.dispatchEvent(e);\\n    };\\n    /**\\n     * Creates a pointer event from a native pointer event\\n     * and dispatches this event.\\n     * @param {Event} event A platform event with a target.\\n     */\\n    PointerEventHandler.prototype.fireNativeEvent = function (event) {\\n        var e = this.makeEvent(event.type, event, event);\\n        this.dispatchEvent(e);\\n    };\\n    /**\\n     * Wrap a native mouse event into a pointer event.\\n     * This proxy method is required for the legacy IE support.\\n     * @param {string} eventType The pointer event type.\\n     * @param {Event} event The event.\\n     * @return {PointerEvent} The wrapped event.\\n     */\\n    PointerEventHandler.prototype.wrapMouseEvent = function (eventType, event) {\\n        var pointerEvent = this.makeEvent(eventType, prepareMouseEvent(event, this), event);\\n        return pointerEvent;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    PointerEventHandler.prototype.disposeInternal = function () {\\n        this.unregister_();\\n        _super.prototype.disposeInternal.call(this);\\n    };\\n    return PointerEventHandler;\\n}(EventTarget));\\nexport default PointerEventHandler;\\n//# sourceMappingURL=PointerEventHandler.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/MapBrowserEventHandler\\n */\\nimport { DEVICE_PIXEL_RATIO } from './has.js';\\nimport MapBrowserEventType from './MapBrowserEventType.js';\\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\\nimport { listen, unlistenByKey } from './events.js';\\nimport EventTarget from './events/Target.js';\\nimport PointerEventType from './pointer/EventType.js';\\nimport PointerEventHandler from './pointer/PointerEventHandler.js';\\nvar MapBrowserEventHandler = /** @class */ (function (_super) {\\n    __extends(MapBrowserEventHandler, _super);\\n    /**\\n     * @param {import(\\\"./PluggableMap.js\\\").default} map The map with the viewport to listen to events on.\\n     * @param {number=} moveTolerance The minimal distance the pointer must travel to trigger a move.\\n     */\\n    function MapBrowserEventHandler(map, moveTolerance) {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * This is the element that we will listen to the real events on.\\n         * @type {import(\\\"./PluggableMap.js\\\").default}\\n         * @private\\n         */\\n        _this.map_ = map;\\n        /**\\n         * @type {any}\\n         * @private\\n         */\\n        _this.clickTimeoutId_;\\n        /**\\n         * @type {boolean}\\n         * @private\\n         */\\n        _this.dragging_ = false;\\n        /**\\n         * @type {!Array<import(\\\"./events.js\\\").EventsKey>}\\n         * @private\\n         */\\n        _this.dragListenerKeys_ = [];\\n        /**\\n         * @type {number}\\n         * @private\\n         */\\n        _this.moveTolerance_ = moveTolerance ?\\n            moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\\n        /**\\n         * The most recent \\\"down\\\" type event (or null if none have occurred).\\n         * Set on pointerdown.\\n         * @type {import(\\\"./pointer/PointerEvent.js\\\").default}\\n         * @private\\n         */\\n        _this.down_ = null;\\n        var element = _this.map_.getViewport();\\n        /**\\n         * @type {number}\\n         * @private\\n         */\\n        _this.activePointers_ = 0;\\n        /**\\n         * @type {!Object<number, boolean>}\\n         * @private\\n         */\\n        _this.trackedTouches_ = {};\\n        /**\\n         * Event handler which generates pointer events for\\n         * the viewport element.\\n         *\\n         * @type {PointerEventHandler}\\n         * @private\\n         */\\n        _this.pointerEventHandler_ = new PointerEventHandler(element);\\n        /**\\n         * Event handler which generates pointer events for\\n         * the document (used when dragging).\\n         *\\n         * @type {PointerEventHandler}\\n         * @private\\n         */\\n        _this.documentPointerEventHandler_ = null;\\n        /**\\n         * @type {?import(\\\"./events.js\\\").EventsKey}\\n         * @private\\n         */\\n        _this.pointerdownListenerKey_ = listen(_this.pointerEventHandler_, PointerEventType.POINTERDOWN, _this.handlePointerDown_, _this);\\n        /**\\n         * @type {?import(\\\"./events.js\\\").EventsKey}\\n         * @private\\n         */\\n        _this.relayedListenerKey_ = listen(_this.pointerEventHandler_, PointerEventType.POINTERMOVE, _this.relayEvent_, _this);\\n        return _this;\\n    }\\n    /**\\n     * @param {import(\\\"./pointer/PointerEvent.js\\\").default} pointerEvent Pointer\\n     * event.\\n     * @private\\n     */\\n    MapBrowserEventHandler.prototype.emulateClick_ = function (pointerEvent) {\\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.CLICK, this.map_, pointerEvent);\\n        this.dispatchEvent(newEvent);\\n        if (this.clickTimeoutId_ !== undefined) {\\n            // double-click\\n            clearTimeout(this.clickTimeoutId_);\\n            this.clickTimeoutId_ = undefined;\\n            newEvent = new MapBrowserPointerEvent(MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\\n            this.dispatchEvent(newEvent);\\n        }\\n        else {\\n            // click\\n            this.clickTimeoutId_ = setTimeout(function () {\\n                this.clickTimeoutId_ = undefined;\\n                var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\\n                this.dispatchEvent(newEvent);\\n            }.bind(this), 250);\\n        }\\n    };\\n    /**\\n     * Keeps track on how many pointers are currently active.\\n     *\\n     * @param {import(\\\"./pointer/PointerEvent.js\\\").default} pointerEvent Pointer\\n     * event.\\n     * @private\\n     */\\n    MapBrowserEventHandler.prototype.updateActivePointers_ = function (pointerEvent) {\\n        var event = pointerEvent;\\n        if (event.type == MapBrowserEventType.POINTERUP ||\\n            event.type == MapBrowserEventType.POINTERCANCEL) {\\n            delete this.trackedTouches_[event.pointerId];\\n        }\\n        else if (event.type == MapBrowserEventType.POINTERDOWN) {\\n            this.trackedTouches_[event.pointerId] = true;\\n        }\\n        this.activePointers_ = Object.keys(this.trackedTouches_).length;\\n    };\\n    /**\\n     * @param {import(\\\"./pointer/PointerEvent.js\\\").default} pointerEvent Pointer\\n     * event.\\n     * @private\\n     */\\n    MapBrowserEventHandler.prototype.handlePointerUp_ = function (pointerEvent) {\\n        this.updateActivePointers_(pointerEvent);\\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\\n        this.dispatchEvent(newEvent);\\n        // We emulate click events on left mouse button click, touch contact, and pen\\n        // contact. isMouseActionButton returns true in these cases (evt.button is set\\n        // to 0).\\n        // See http://www.w3.org/TR/pointerevents/#button-states\\n        // We only fire click, singleclick, and doubleclick if nobody has called\\n        // event.stopPropagation() or event.preventDefault().\\n        if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\\n            this.emulateClick_(this.down_);\\n        }\\n        if (this.activePointers_ === 0) {\\n            this.dragListenerKeys_.forEach(unlistenByKey);\\n            this.dragListenerKeys_.length = 0;\\n            this.dragging_ = false;\\n            this.down_ = null;\\n            this.documentPointerEventHandler_.dispose();\\n            this.documentPointerEventHandler_ = null;\\n        }\\n    };\\n    /**\\n     * @param {import(\\\"./pointer/PointerEvent.js\\\").default} pointerEvent Pointer\\n     * event.\\n     * @return {boolean} If the left mouse button was pressed.\\n     * @private\\n     */\\n    MapBrowserEventHandler.prototype.isMouseActionButton_ = function (pointerEvent) {\\n        return pointerEvent.button === 0;\\n    };\\n    /**\\n     * @param {import(\\\"./pointer/PointerEvent.js\\\").default} pointerEvent Pointer\\n     * event.\\n     * @private\\n     */\\n    MapBrowserEventHandler.prototype.handlePointerDown_ = function (pointerEvent) {\\n        this.updateActivePointers_(pointerEvent);\\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\\n        this.dispatchEvent(newEvent);\\n        this.down_ = pointerEvent;\\n        if (this.dragListenerKeys_.length === 0) {\\n            /* Set up a pointer event handler on the `document`,\\n             * which is required when the pointer is moved outside\\n             * the viewport when dragging.\\n             */\\n            this.documentPointerEventHandler_ =\\n                new PointerEventHandler(document);\\n            this.dragListenerKeys_.push(listen(this.documentPointerEventHandler_, MapBrowserEventType.POINTERMOVE, this.handlePointerMove_, this), listen(this.documentPointerEventHandler_, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this), \\n            /* Note that the listener for `pointercancel is set up on\\n             * `pointerEventHandler_` and not `documentPointerEventHandler_` like\\n             * the `pointerup` and `pointermove` listeners.\\n             *\\n             * The reason for this is the following: `TouchSource.vacuumTouches_()`\\n             * issues `pointercancel` events, when there was no `touchend` for a\\n             * `touchstart`. Now, let's say a first `touchstart` is registered on\\n             * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\\n             * But `documentPointerEventHandler_` doesn't know about the first\\n             * `touchstart`. If there is no `touchend` for the `touchstart`, we can\\n             * only receive a `touchcancel` from `pointerEventHandler_`, because it is\\n             * only registered there.\\n             */\\n            listen(this.pointerEventHandler_, MapBrowserEventType.POINTERCANCEL, this.handlePointerUp_, this));\\n        }\\n    };\\n    /**\\n     * @param {import(\\\"./pointer/PointerEvent.js\\\").default} pointerEvent Pointer\\n     * event.\\n     * @private\\n     */\\n    MapBrowserEventHandler.prototype.handlePointerMove_ = function (pointerEvent) {\\n        // Between pointerdown and pointerup, pointermove events are triggered.\\n        // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\\n        // moved a significant distance.\\n        if (this.isMoving_(pointerEvent)) {\\n            this.dragging_ = true;\\n            var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent, this.dragging_);\\n            this.dispatchEvent(newEvent);\\n        }\\n        // Some native android browser triggers mousemove events during small period\\n        // of time. See: https://code.google.com/p/android/issues/detail?id=5491 or\\n        // https://code.google.com/p/android/issues/detail?id=19827\\n        // ex: Galaxy Tab P3110 + Android 4.1.1\\n        pointerEvent.preventDefault();\\n    };\\n    /**\\n     * Wrap and relay a pointer event.  Note that this requires that the type\\n     * string for the MapBrowserPointerEvent matches the PointerEvent type.\\n     * @param {import(\\\"./pointer/PointerEvent.js\\\").default} pointerEvent Pointer\\n     * event.\\n     * @private\\n     */\\n    MapBrowserEventHandler.prototype.relayEvent_ = function (pointerEvent) {\\n        var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\\n        this.dispatchEvent(new MapBrowserPointerEvent(pointerEvent.type, this.map_, pointerEvent, dragging));\\n    };\\n    /**\\n     * @param {import(\\\"./pointer/PointerEvent.js\\\").default} pointerEvent Pointer\\n     * event.\\n     * @return {boolean} Is moving.\\n     * @private\\n     */\\n    MapBrowserEventHandler.prototype.isMoving_ = function (pointerEvent) {\\n        return this.dragging_ ||\\n            Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\\n            Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    MapBrowserEventHandler.prototype.disposeInternal = function () {\\n        if (this.relayedListenerKey_) {\\n            unlistenByKey(this.relayedListenerKey_);\\n            this.relayedListenerKey_ = null;\\n        }\\n        if (this.pointerdownListenerKey_) {\\n            unlistenByKey(this.pointerdownListenerKey_);\\n            this.pointerdownListenerKey_ = null;\\n        }\\n        this.dragListenerKeys_.forEach(unlistenByKey);\\n        this.dragListenerKeys_.length = 0;\\n        if (this.documentPointerEventHandler_) {\\n            this.documentPointerEventHandler_.dispose();\\n            this.documentPointerEventHandler_ = null;\\n        }\\n        if (this.pointerEventHandler_) {\\n            this.pointerEventHandler_.dispose();\\n            this.pointerEventHandler_ = null;\\n        }\\n        _super.prototype.disposeInternal.call(this);\\n    };\\n    return MapBrowserEventHandler;\\n}(EventTarget));\\nexport default MapBrowserEventHandler;\\n//# sourceMappingURL=MapBrowserEventHandler.js.map\",\"/**\\n * @module ol/MapEventType\\n */\\n/**\\n * @enum {string}\\n */\\nexport default {\\n    /**\\n     * Triggered after a map frame is rendered.\\n     * @event module:ol/MapEvent~MapEvent#postrender\\n     * @api\\n     */\\n    POSTRENDER: 'postrender',\\n    /**\\n     * Triggered when the map starts moving.\\n     * @event module:ol/MapEvent~MapEvent#movestart\\n     * @api\\n     */\\n    MOVESTART: 'movestart',\\n    /**\\n     * Triggered after the map is moved.\\n     * @event module:ol/MapEvent~MapEvent#moveend\\n     * @api\\n     */\\n    MOVEEND: 'moveend'\\n};\\n//# sourceMappingURL=MapEventType.js.map\",\"/**\\n * @module ol/MapProperty\\n */\\n/**\\n * @enum {string}\\n */\\nexport default {\\n    LAYERGROUP: 'layergroup',\\n    SIZE: 'size',\\n    TARGET: 'target',\\n    VIEW: 'view'\\n};\\n//# sourceMappingURL=MapProperty.js.map\",\"/**\\n * @module ol/render/EventType\\n */\\n/**\\n * @enum {string}\\n */\\nexport default {\\n    /**\\n     * Triggered before a layer is rendered.\\n     * @event module:ol/render/Event~RenderEvent#prerender\\n     * @api\\n     */\\n    PRERENDER: 'prerender',\\n    /**\\n     * Triggered after a layer is rendered.\\n     * @event module:ol/render/Event~RenderEvent#postrender\\n     * @api\\n     */\\n    POSTRENDER: 'postrender',\\n    /**\\n     * Triggered before layers are rendered.\\n     * @event module:ol/render/Event~RenderEvent#precompose\\n     * @api\\n     */\\n    PRECOMPOSE: 'precompose',\\n    /**\\n     * Triggered after all layers are rendered.\\n     * @event module:ol/render/Event~RenderEvent#postcompose\\n     * @api\\n     */\\n    POSTCOMPOSE: 'postcompose',\\n    /**\\n     * Triggered when rendering is complete, i.e. all sources and tiles have\\n     * finished loading for the current viewport, and all tiles are faded in.\\n     * @event module:ol/render/Event~RenderEvent#rendercomplete\\n     * @api\\n     */\\n    RENDERCOMPLETE: 'rendercomplete'\\n};\\n//# sourceMappingURL=EventType.js.map\",\"/**\\n * @module ol/TileState\\n */\\n/**\\n * @enum {number}\\n */\\nexport default {\\n    IDLE: 0,\\n    LOADING: 1,\\n    LOADED: 2,\\n    /**\\n     * Indicates that tile loading failed\\n     * @type {number}\\n     */\\n    ERROR: 3,\\n    EMPTY: 4,\\n    ABORT: 5\\n};\\n//# sourceMappingURL=TileState.js.map\",\"/**\\n * @module ol/asserts\\n */\\nimport AssertionError from './AssertionError.js';\\n/**\\n * @param {*} assertion Assertion we expected to be truthy.\\n * @param {number} errorCode Error code.\\n */\\nexport function assert(assertion, errorCode) {\\n    if (!assertion) {\\n        throw new AssertionError(errorCode);\\n    }\\n}\\n//# sourceMappingURL=asserts.js.map\",\"/**\\n * @module ol/structs/PriorityQueue\\n */\\nimport { assert } from '../asserts.js';\\nimport { clear } from '../obj.js';\\n/**\\n * @type {number}\\n */\\nexport var DROP = Infinity;\\n/**\\n * @classdesc\\n * Priority queue.\\n *\\n * The implementation is inspired from the Closure Library's Heap class and\\n * Python's heapq module.\\n *\\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\\n *\\n * @template T\\n */\\nvar PriorityQueue = /** @class */ (function () {\\n    /**\\n     * @param {function(T): number} priorityFunction Priority function.\\n     * @param {function(T): string} keyFunction Key function.\\n     */\\n    function PriorityQueue(priorityFunction, keyFunction) {\\n        /**\\n         * @type {function(T): number}\\n         * @private\\n         */\\n        this.priorityFunction_ = priorityFunction;\\n        /**\\n         * @type {function(T): string}\\n         * @private\\n         */\\n        this.keyFunction_ = keyFunction;\\n        /**\\n         * @type {Array<T>}\\n         * @private\\n         */\\n        this.elements_ = [];\\n        /**\\n         * @type {Array<number>}\\n         * @private\\n         */\\n        this.priorities_ = [];\\n        /**\\n         * @type {!Object<string, boolean>}\\n         * @private\\n         */\\n        this.queuedElements_ = {};\\n    }\\n    /**\\n     * FIXME empty description for jsdoc\\n     */\\n    PriorityQueue.prototype.clear = function () {\\n        this.elements_.length = 0;\\n        this.priorities_.length = 0;\\n        clear(this.queuedElements_);\\n    };\\n    /**\\n     * Remove and return the highest-priority element. O(log N).\\n     * @return {T} Element.\\n     */\\n    PriorityQueue.prototype.dequeue = function () {\\n        var elements = this.elements_;\\n        var priorities = this.priorities_;\\n        var element = elements[0];\\n        if (elements.length == 1) {\\n            elements.length = 0;\\n            priorities.length = 0;\\n        }\\n        else {\\n            elements[0] = elements.pop();\\n            priorities[0] = priorities.pop();\\n            this.siftUp_(0);\\n        }\\n        var elementKey = this.keyFunction_(element);\\n        delete this.queuedElements_[elementKey];\\n        return element;\\n    };\\n    /**\\n     * Enqueue an element. O(log N).\\n     * @param {T} element Element.\\n     * @return {boolean} The element was added to the queue.\\n     */\\n    PriorityQueue.prototype.enqueue = function (element) {\\n        assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\\n        var priority = this.priorityFunction_(element);\\n        if (priority != DROP) {\\n            this.elements_.push(element);\\n            this.priorities_.push(priority);\\n            this.queuedElements_[this.keyFunction_(element)] = true;\\n            this.siftDown_(0, this.elements_.length - 1);\\n            return true;\\n        }\\n        return false;\\n    };\\n    /**\\n     * @return {number} Count.\\n     */\\n    PriorityQueue.prototype.getCount = function () {\\n        return this.elements_.length;\\n    };\\n    /**\\n     * Gets the index of the left child of the node at the given index.\\n     * @param {number} index The index of the node to get the left child for.\\n     * @return {number} The index of the left child.\\n     * @private\\n     */\\n    PriorityQueue.prototype.getLeftChildIndex_ = function (index) {\\n        return index * 2 + 1;\\n    };\\n    /**\\n     * Gets the index of the right child of the node at the given index.\\n     * @param {number} index The index of the node to get the right child for.\\n     * @return {number} The index of the right child.\\n     * @private\\n     */\\n    PriorityQueue.prototype.getRightChildIndex_ = function (index) {\\n        return index * 2 + 2;\\n    };\\n    /**\\n     * Gets the index of the parent of the node at the given index.\\n     * @param {number} index The index of the node to get the parent for.\\n     * @return {number} The index of the parent.\\n     * @private\\n     */\\n    PriorityQueue.prototype.getParentIndex_ = function (index) {\\n        return (index - 1) >> 1;\\n    };\\n    /**\\n     * Make this a heap. O(N).\\n     * @private\\n     */\\n    PriorityQueue.prototype.heapify_ = function () {\\n        var i;\\n        for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\\n            this.siftUp_(i);\\n        }\\n    };\\n    /**\\n     * @return {boolean} Is empty.\\n     */\\n    PriorityQueue.prototype.isEmpty = function () {\\n        return this.elements_.length === 0;\\n    };\\n    /**\\n     * @param {string} key Key.\\n     * @return {boolean} Is key queued.\\n     */\\n    PriorityQueue.prototype.isKeyQueued = function (key) {\\n        return key in this.queuedElements_;\\n    };\\n    /**\\n     * @param {T} element Element.\\n     * @return {boolean} Is queued.\\n     */\\n    PriorityQueue.prototype.isQueued = function (element) {\\n        return this.isKeyQueued(this.keyFunction_(element));\\n    };\\n    /**\\n     * @param {number} index The index of the node to move down.\\n     * @private\\n     */\\n    PriorityQueue.prototype.siftUp_ = function (index) {\\n        var elements = this.elements_;\\n        var priorities = this.priorities_;\\n        var count = elements.length;\\n        var element = elements[index];\\n        var priority = priorities[index];\\n        var startIndex = index;\\n        while (index < (count >> 1)) {\\n            var lIndex = this.getLeftChildIndex_(index);\\n            var rIndex = this.getRightChildIndex_(index);\\n            var smallerChildIndex = rIndex < count &&\\n                priorities[rIndex] < priorities[lIndex] ?\\n                rIndex : lIndex;\\n            elements[index] = elements[smallerChildIndex];\\n            priorities[index] = priorities[smallerChildIndex];\\n            index = smallerChildIndex;\\n        }\\n        elements[index] = element;\\n        priorities[index] = priority;\\n        this.siftDown_(startIndex, index);\\n    };\\n    /**\\n     * @param {number} startIndex The index of the root.\\n     * @param {number} index The index of the node to move up.\\n     * @private\\n     */\\n    PriorityQueue.prototype.siftDown_ = function (startIndex, index) {\\n        var elements = this.elements_;\\n        var priorities = this.priorities_;\\n        var element = elements[index];\\n        var priority = priorities[index];\\n        while (index > startIndex) {\\n            var parentIndex = this.getParentIndex_(index);\\n            if (priorities[parentIndex] > priority) {\\n                elements[index] = elements[parentIndex];\\n                priorities[index] = priorities[parentIndex];\\n                index = parentIndex;\\n            }\\n            else {\\n                break;\\n            }\\n        }\\n        elements[index] = element;\\n        priorities[index] = priority;\\n    };\\n    /**\\n     * FIXME empty description for jsdoc\\n     */\\n    PriorityQueue.prototype.reprioritize = function () {\\n        var priorityFunction = this.priorityFunction_;\\n        var elements = this.elements_;\\n        var priorities = this.priorities_;\\n        var index = 0;\\n        var n = elements.length;\\n        var element, i, priority;\\n        for (i = 0; i < n; ++i) {\\n            element = elements[i];\\n            priority = priorityFunction(element);\\n            if (priority == DROP) {\\n                delete this.queuedElements_[this.keyFunction_(element)];\\n            }\\n            else {\\n                priorities[index] = priority;\\n                elements[index++] = element;\\n            }\\n        }\\n        elements.length = index;\\n        priorities.length = index;\\n        this.heapify_();\\n    };\\n    return PriorityQueue;\\n}());\\nexport default PriorityQueue;\\n//# sourceMappingURL=PriorityQueue.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/TileQueue\\n */\\nimport TileState from './TileState.js';\\nimport { listen, unlisten } from './events.js';\\nimport EventType from './events/EventType.js';\\nimport PriorityQueue from './structs/PriorityQueue.js';\\n/**\\n * @typedef {function(import(\\\"./Tile.js\\\").default, string, import(\\\"./coordinate.js\\\").Coordinate, number): number} PriorityFunction\\n */\\nvar TileQueue = /** @class */ (function (_super) {\\n    __extends(TileQueue, _super);\\n    /**\\n     * @param {PriorityFunction} tilePriorityFunction Tile priority function.\\n     * @param {function(): ?} tileChangeCallback Function called on each tile change event.\\n     */\\n    function TileQueue(tilePriorityFunction, tileChangeCallback) {\\n        var _this = _super.call(this, \\n        /**\\n         * @param {Array} element Element.\\n         * @return {number} Priority.\\n         */\\n        function (element) {\\n            return tilePriorityFunction.apply(null, element);\\n        }, \\n        /**\\n         * @param {Array} element Element.\\n         * @return {string} Key.\\n         */\\n        function (element) {\\n            return ( /** @type {import(\\\"./Tile.js\\\").default} */(element[0]).getKey());\\n        }) || this;\\n        /**\\n         * @private\\n         * @type {function(): ?}\\n         */\\n        _this.tileChangeCallback_ = tileChangeCallback;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.tilesLoading_ = 0;\\n        /**\\n         * @private\\n         * @type {!Object<string,boolean>}\\n         */\\n        _this.tilesLoadingKeys_ = {};\\n        return _this;\\n    }\\n    /**\\n     * @inheritDoc\\n     */\\n    TileQueue.prototype.enqueue = function (element) {\\n        var added = _super.prototype.enqueue.call(this, element);\\n        if (added) {\\n            var tile = element[0];\\n            listen(tile, EventType.CHANGE, this.handleTileChange, this);\\n        }\\n        return added;\\n    };\\n    /**\\n     * @return {number} Number of tiles loading.\\n     */\\n    TileQueue.prototype.getTilesLoading = function () {\\n        return this.tilesLoading_;\\n    };\\n    /**\\n     * @param {import(\\\"./events/Event.js\\\").default} event Event.\\n     * @protected\\n     */\\n    TileQueue.prototype.handleTileChange = function (event) {\\n        var tile = /** @type {import(\\\"./Tile.js\\\").default} */ (event.target);\\n        var state = tile.getState();\\n        if (tile.hifi && state === TileState.LOADED || state === TileState.ERROR ||\\n            state === TileState.EMPTY || state === TileState.ABORT) {\\n            unlisten(tile, EventType.CHANGE, this.handleTileChange, this);\\n            var tileKey = tile.getKey();\\n            if (tileKey in this.tilesLoadingKeys_) {\\n                delete this.tilesLoadingKeys_[tileKey];\\n                --this.tilesLoading_;\\n            }\\n            this.tileChangeCallback_();\\n        }\\n    };\\n    /**\\n     * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\\n     * @param {number} maxNewLoads Maximum number of new tiles to load.\\n     */\\n    TileQueue.prototype.loadMoreTiles = function (maxTotalLoading, maxNewLoads) {\\n        var newLoads = 0;\\n        var abortedTiles = false;\\n        var state, tile, tileKey;\\n        while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\\n            this.getCount() > 0) {\\n            tile = /** @type {import(\\\"./Tile.js\\\").default} */ (this.dequeue()[0]);\\n            tileKey = tile.getKey();\\n            state = tile.getState();\\n            if (state === TileState.ABORT) {\\n                abortedTiles = true;\\n            }\\n            else if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\\n                this.tilesLoadingKeys_[tileKey] = true;\\n                ++this.tilesLoading_;\\n                ++newLoads;\\n                tile.load();\\n            }\\n        }\\n        if (newLoads === 0 && abortedTiles) {\\n            // Do not stop the render loop when all wanted tiles were aborted due to\\n            // a small, saturated tile cache.\\n            this.tileChangeCallback_();\\n        }\\n    };\\n    return TileQueue;\\n}(PriorityQueue));\\nexport default TileQueue;\\n//# sourceMappingURL=TileQueue.js.map\",\"/**\\n * @module ol/tilegrid/common\\n */\\n/**\\n * Default maximum zoom for default tile grids.\\n * @type {number}\\n */\\nexport var DEFAULT_MAX_ZOOM = 42;\\n/**\\n * Default tile size.\\n * @type {number}\\n */\\nexport var DEFAULT_TILE_SIZE = 256;\\n//# sourceMappingURL=common.js.map\",\"/**\\n * @module ol/math\\n */\\nimport { assert } from './asserts.js';\\n/**\\n * Takes a number and clamps it to within the provided bounds.\\n * @param {number} value The input number.\\n * @param {number} min The minimum value to return.\\n * @param {number} max The maximum value to return.\\n * @return {number} The input number if it is within bounds, or the nearest\\n *     number within the bounds.\\n */\\nexport function clamp(value, min, max) {\\n    return Math.min(Math.max(value, min), max);\\n}\\n/**\\n * Return the hyperbolic cosine of a given number. The method will use the\\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\\n * cosine will be calculated via the reference implementation of the Mozilla\\n * developer network.\\n *\\n * @param {number} x X.\\n * @return {number} Hyperbolic cosine of x.\\n */\\nexport var cosh = (function () {\\n    // Wrapped in a iife, to save the overhead of checking for the native\\n    // implementation on every invocation.\\n    var cosh;\\n    if ('cosh' in Math) {\\n        // The environment supports the native Math.cosh function, use it…\\n        cosh = Math.cosh;\\n    }\\n    else {\\n        // … else, use the reference implementation of MDN:\\n        cosh = function (x) {\\n            var y = /** @type {Math} */ (Math).exp(x);\\n            return (y + 1 / y) / 2;\\n        };\\n    }\\n    return cosh;\\n}());\\n/**\\n * @param {number} x X.\\n * @return {number} The smallest power of two greater than or equal to x.\\n */\\nexport function roundUpToPowerOfTwo(x) {\\n    assert(0 < x, 29); // `x` must be greater than `0`\\n    return Math.pow(2, Math.ceil(Math.log(x) / Math.LN2));\\n}\\n/**\\n * Returns the square of the closest distance between the point (x, y) and the\\n * line segment (x1, y1) to (x2, y2).\\n * @param {number} x X.\\n * @param {number} y Y.\\n * @param {number} x1 X1.\\n * @param {number} y1 Y1.\\n * @param {number} x2 X2.\\n * @param {number} y2 Y2.\\n * @return {number} Squared distance.\\n */\\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\\n    var dx = x2 - x1;\\n    var dy = y2 - y1;\\n    if (dx !== 0 || dy !== 0) {\\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\\n        if (t > 1) {\\n            x1 = x2;\\n            y1 = y2;\\n        }\\n        else if (t > 0) {\\n            x1 += dx * t;\\n            y1 += dy * t;\\n        }\\n    }\\n    return squaredDistance(x, y, x1, y1);\\n}\\n/**\\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\\n * @param {number} x1 X1.\\n * @param {number} y1 Y1.\\n * @param {number} x2 X2.\\n * @param {number} y2 Y2.\\n * @return {number} Squared distance.\\n */\\nexport function squaredDistance(x1, y1, x2, y2) {\\n    var dx = x2 - x1;\\n    var dy = y2 - y1;\\n    return dx * dx + dy * dy;\\n}\\n/**\\n * Solves system of linear equations using Gaussian elimination method.\\n *\\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\\n *                                     in row-major order.\\n * @return {Array<number>} The resulting vector.\\n */\\nexport function solveLinearSystem(mat) {\\n    var n = mat.length;\\n    for (var i = 0; i < n; i++) {\\n        // Find max in the i-th column (ignoring i - 1 first rows)\\n        var maxRow = i;\\n        var maxEl = Math.abs(mat[i][i]);\\n        for (var r = i + 1; r < n; r++) {\\n            var absValue = Math.abs(mat[r][i]);\\n            if (absValue > maxEl) {\\n                maxEl = absValue;\\n                maxRow = r;\\n            }\\n        }\\n        if (maxEl === 0) {\\n            return null; // matrix is singular\\n        }\\n        // Swap max row with i-th (current) row\\n        var tmp = mat[maxRow];\\n        mat[maxRow] = mat[i];\\n        mat[i] = tmp;\\n        // Subtract the i-th row to make all the remaining rows 0 in the i-th column\\n        for (var j = i + 1; j < n; j++) {\\n            var coef = -mat[j][i] / mat[i][i];\\n            for (var k = i; k < n + 1; k++) {\\n                if (i == k) {\\n                    mat[j][k] = 0;\\n                }\\n                else {\\n                    mat[j][k] += coef * mat[i][k];\\n                }\\n            }\\n        }\\n    }\\n    // Solve Ax=b for upper triangular matrix A (mat)\\n    var x = new Array(n);\\n    for (var l = n - 1; l >= 0; l--) {\\n        x[l] = mat[l][n] / mat[l][l];\\n        for (var m = l - 1; m >= 0; m--) {\\n            mat[m][n] -= mat[m][l] * x[l];\\n        }\\n    }\\n    return x;\\n}\\n/**\\n * Converts radians to to degrees.\\n *\\n * @param {number} angleInRadians Angle in radians.\\n * @return {number} Angle in degrees.\\n */\\nexport function toDegrees(angleInRadians) {\\n    return angleInRadians * 180 / Math.PI;\\n}\\n/**\\n * Converts degrees to radians.\\n *\\n * @param {number} angleInDegrees Angle in degrees.\\n * @return {number} Angle in radians.\\n */\\nexport function toRadians(angleInDegrees) {\\n    return angleInDegrees * Math.PI / 180;\\n}\\n/**\\n * Returns the modulo of a / b, depending on the sign of b.\\n *\\n * @param {number} a Dividend.\\n * @param {number} b Divisor.\\n * @return {number} Modulo.\\n */\\nexport function modulo(a, b) {\\n    var r = a % b;\\n    return r * b < 0 ? r + b : r;\\n}\\n/**\\n * Calculates the linearly interpolated value of x between a and b.\\n *\\n * @param {number} a Number\\n * @param {number} b Number\\n * @param {number} x Value to be interpolated.\\n * @return {number} Interpolated value.\\n */\\nexport function lerp(a, b, x) {\\n    return a + x * (b - a);\\n}\\n//# sourceMappingURL=math.js.map\",\"/**\\n * @module ol/centerconstraint\\n */\\nimport { clamp } from './math.js';\\n/**\\n * @typedef {function((import(\\\"./coordinate.js\\\").Coordinate|undefined), number, import(\\\"./size.js\\\").Size, boolean=): (import(\\\"./coordinate.js\\\").Coordinate|undefined)} Type\\n */\\n/**\\n * @param {import(\\\"./extent.js\\\").Extent} extent Extent.\\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\\n * (only during interaction and animation).\\n * @return {Type} The constraint.\\n */\\nexport function createExtent(extent, onlyCenter, smooth) {\\n    return (\\n    /**\\n     * @param {import(\\\"./coordinate.js\\\").Coordinate|undefined} center Center.\\n     * @param {number} resolution Resolution.\\n     * @param {import(\\\"./size.js\\\").Size} size Viewport size; unused if `onlyCenter` was specified.\\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\\n     * @return {import(\\\"./coordinate.js\\\").Coordinate|undefined} Center.\\n     */\\n    function (center, resolution, size, opt_isMoving) {\\n        if (center) {\\n            var viewWidth = onlyCenter ? 0 : size[0] * resolution;\\n            var viewHeight = onlyCenter ? 0 : size[1] * resolution;\\n            var minX = extent[0] + viewWidth / 2;\\n            var maxX = extent[2] - viewWidth / 2;\\n            var minY = extent[1] + viewHeight / 2;\\n            var maxY = extent[3] - viewHeight / 2;\\n            // note: when zooming out of bounds, min and max values for x and y may\\n            // end up inverted (min > max); this has to be accounted for\\n            if (minX > maxX) {\\n                minX = maxX = (maxX + minX) / 2;\\n            }\\n            if (minY > maxY) {\\n                minY = maxY = (maxY + minY) / 2;\\n            }\\n            var x = clamp(center[0], minX, maxX);\\n            var y = clamp(center[1], minY, maxY);\\n            var ratio = 30 * resolution;\\n            // during an interaction, allow some overscroll\\n            if (opt_isMoving && smooth) {\\n                x += -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\\n                    ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\\n                y += -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\\n                    ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\\n            }\\n            return [x, y];\\n        }\\n        else {\\n            return undefined;\\n        }\\n    });\\n}\\n/**\\n * @param {import(\\\"./coordinate.js\\\").Coordinate=} center Center.\\n * @return {import(\\\"./coordinate.js\\\").Coordinate|undefined} Center.\\n */\\nexport function none(center) {\\n    return center;\\n}\\n//# sourceMappingURL=centerconstraint.js.map\",\"/**\\n * @module ol/extent/Corner\\n */\\n/**\\n * Extent corner.\\n * @enum {string}\\n */\\nexport default {\\n    BOTTOM_LEFT: 'bottom-left',\\n    BOTTOM_RIGHT: 'bottom-right',\\n    TOP_LEFT: 'top-left',\\n    TOP_RIGHT: 'top-right'\\n};\\n//# sourceMappingURL=Corner.js.map\",\"/**\\n * @module ol/extent/Relationship\\n */\\n/**\\n * Relationship to an extent.\\n * @enum {number}\\n */\\nexport default {\\n    UNKNOWN: 0,\\n    INTERSECTING: 1,\\n    ABOVE: 2,\\n    RIGHT: 4,\\n    BELOW: 8,\\n    LEFT: 16\\n};\\n//# sourceMappingURL=Relationship.js.map\",\"/**\\n * @module ol/extent\\n */\\nimport { assert } from './asserts.js';\\nimport Corner from './extent/Corner.js';\\nimport Relationship from './extent/Relationship.js';\\n/**\\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\\n * @typedef {Array<number>} Extent\\n * @api\\n */\\n/**\\n * Build an extent that includes all given coordinates.\\n *\\n * @param {Array<import(\\\"./coordinate.js\\\").Coordinate>} coordinates Coordinates.\\n * @return {Extent} Bounding extent.\\n * @api\\n */\\nexport function boundingExtent(coordinates) {\\n    var extent = createEmpty();\\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\\n        extendCoordinate(extent, coordinates[i]);\\n    }\\n    return extent;\\n}\\n/**\\n * @param {Array<number>} xs Xs.\\n * @param {Array<number>} ys Ys.\\n * @param {Extent=} opt_extent Destination extent.\\n * @private\\n * @return {Extent} Extent.\\n */\\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\\n    var minX = Math.min.apply(null, xs);\\n    var minY = Math.min.apply(null, ys);\\n    var maxX = Math.max.apply(null, xs);\\n    var maxY = Math.max.apply(null, ys);\\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\\n}\\n/**\\n * Return extent increased by the provided value.\\n * @param {Extent} extent Extent.\\n * @param {number} value The amount by which the extent should be buffered.\\n * @param {Extent=} opt_extent Extent.\\n * @return {Extent} Extent.\\n * @api\\n */\\nexport function buffer(extent, value, opt_extent) {\\n    if (opt_extent) {\\n        opt_extent[0] = extent[0] - value;\\n        opt_extent[1] = extent[1] - value;\\n        opt_extent[2] = extent[2] + value;\\n        opt_extent[3] = extent[3] + value;\\n        return opt_extent;\\n    }\\n    else {\\n        return [\\n            extent[0] - value,\\n            extent[1] - value,\\n            extent[2] + value,\\n            extent[3] + value\\n        ];\\n    }\\n}\\n/**\\n * Creates a clone of an extent.\\n *\\n * @param {Extent} extent Extent to clone.\\n * @param {Extent=} opt_extent Extent.\\n * @return {Extent} The clone.\\n */\\nexport function clone(extent, opt_extent) {\\n    if (opt_extent) {\\n        opt_extent[0] = extent[0];\\n        opt_extent[1] = extent[1];\\n        opt_extent[2] = extent[2];\\n        opt_extent[3] = extent[3];\\n        return opt_extent;\\n    }\\n    else {\\n        return extent.slice();\\n    }\\n}\\n/**\\n * @param {Extent} extent Extent.\\n * @param {number} x X.\\n * @param {number} y Y.\\n * @return {number} Closest squared distance.\\n */\\nexport function closestSquaredDistanceXY(extent, x, y) {\\n    var dx, dy;\\n    if (x < extent[0]) {\\n        dx = extent[0] - x;\\n    }\\n    else if (extent[2] < x) {\\n        dx = x - extent[2];\\n    }\\n    else {\\n        dx = 0;\\n    }\\n    if (y < extent[1]) {\\n        dy = extent[1] - y;\\n    }\\n    else if (extent[3] < y) {\\n        dy = y - extent[3];\\n    }\\n    else {\\n        dy = 0;\\n    }\\n    return dx * dx + dy * dy;\\n}\\n/**\\n * Check if the passed coordinate is contained or on the edge of the extent.\\n *\\n * @param {Extent} extent Extent.\\n * @param {import(\\\"./coordinate.js\\\").Coordinate} coordinate Coordinate.\\n * @return {boolean} The coordinate is contained in the extent.\\n * @api\\n */\\nexport function containsCoordinate(extent, coordinate) {\\n    return containsXY(extent, coordinate[0], coordinate[1]);\\n}\\n/**\\n * Check if one extent contains another.\\n *\\n * An extent is deemed contained if it lies completely within the other extent,\\n * including if they share one or more edges.\\n *\\n * @param {Extent} extent1 Extent 1.\\n * @param {Extent} extent2 Extent 2.\\n * @return {boolean} The second extent is contained by or on the edge of the\\n *     first.\\n * @api\\n */\\nexport function containsExtent(extent1, extent2) {\\n    return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\\n        extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\\n}\\n/**\\n * Check if the passed coordinate is contained or on the edge of the extent.\\n *\\n * @param {Extent} extent Extent.\\n * @param {number} x X coordinate.\\n * @param {number} y Y coordinate.\\n * @return {boolean} The x, y values are contained in the extent.\\n * @api\\n */\\nexport function containsXY(extent, x, y) {\\n    return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\\n}\\n/**\\n * Get the relationship between a coordinate and extent.\\n * @param {Extent} extent The extent.\\n * @param {import(\\\"./coordinate.js\\\").Coordinate} coordinate The coordinate.\\n * @return {Relationship} The relationship (bitwise compare with\\n *     import(\\\"./extent/Relationship.js\\\").Relationship).\\n */\\nexport function coordinateRelationship(extent, coordinate) {\\n    var minX = extent[0];\\n    var minY = extent[1];\\n    var maxX = extent[2];\\n    var maxY = extent[3];\\n    var x = coordinate[0];\\n    var y = coordinate[1];\\n    var relationship = Relationship.UNKNOWN;\\n    if (x < minX) {\\n        relationship = relationship | Relationship.LEFT;\\n    }\\n    else if (x > maxX) {\\n        relationship = relationship | Relationship.RIGHT;\\n    }\\n    if (y < minY) {\\n        relationship = relationship | Relationship.BELOW;\\n    }\\n    else if (y > maxY) {\\n        relationship = relationship | Relationship.ABOVE;\\n    }\\n    if (relationship === Relationship.UNKNOWN) {\\n        relationship = Relationship.INTERSECTING;\\n    }\\n    return relationship;\\n}\\n/**\\n * Create an empty extent.\\n * @return {Extent} Empty extent.\\n * @api\\n */\\nexport function createEmpty() {\\n    return [Infinity, Infinity, -Infinity, -Infinity];\\n}\\n/**\\n * Create a new extent or update the provided extent.\\n * @param {number} minX Minimum X.\\n * @param {number} minY Minimum Y.\\n * @param {number} maxX Maximum X.\\n * @param {number} maxY Maximum Y.\\n * @param {Extent=} opt_extent Destination extent.\\n * @return {Extent} Extent.\\n */\\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\\n    if (opt_extent) {\\n        opt_extent[0] = minX;\\n        opt_extent[1] = minY;\\n        opt_extent[2] = maxX;\\n        opt_extent[3] = maxY;\\n        return opt_extent;\\n    }\\n    else {\\n        return [minX, minY, maxX, maxY];\\n    }\\n}\\n/**\\n * Create a new empty extent or make the provided one empty.\\n * @param {Extent=} opt_extent Extent.\\n * @return {Extent} Extent.\\n */\\nexport function createOrUpdateEmpty(opt_extent) {\\n    return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\\n}\\n/**\\n * @param {import(\\\"./coordinate.js\\\").Coordinate} coordinate Coordinate.\\n * @param {Extent=} opt_extent Extent.\\n * @return {Extent} Extent.\\n */\\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\\n    var x = coordinate[0];\\n    var y = coordinate[1];\\n    return createOrUpdate(x, y, x, y, opt_extent);\\n}\\n/**\\n * @param {Array<import(\\\"./coordinate.js\\\").Coordinate>} coordinates Coordinates.\\n * @param {Extent=} opt_extent Extent.\\n * @return {Extent} Extent.\\n */\\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\\n    var extent = createOrUpdateEmpty(opt_extent);\\n    return extendCoordinates(extent, coordinates);\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @param {Extent=} opt_extent Extent.\\n * @return {Extent} Extent.\\n */\\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\\n    var extent = createOrUpdateEmpty(opt_extent);\\n    return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\\n}\\n/**\\n * @param {Array<Array<import(\\\"./coordinate.js\\\").Coordinate>>} rings Rings.\\n * @param {Extent=} opt_extent Extent.\\n * @return {Extent} Extent.\\n */\\nexport function createOrUpdateFromRings(rings, opt_extent) {\\n    var extent = createOrUpdateEmpty(opt_extent);\\n    return extendRings(extent, rings);\\n}\\n/**\\n * Determine if two extents are equivalent.\\n * @param {Extent} extent1 Extent 1.\\n * @param {Extent} extent2 Extent 2.\\n * @return {boolean} The two extents are equivalent.\\n * @api\\n */\\nexport function equals(extent1, extent2) {\\n    return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\\n        extent1[1] == extent2[1] && extent1[3] == extent2[3];\\n}\\n/**\\n * Modify an extent to include another extent.\\n * @param {Extent} extent1 The extent to be modified.\\n * @param {Extent} extent2 The extent that will be included in the first.\\n * @return {Extent} A reference to the first (extended) extent.\\n * @api\\n */\\nexport function extend(extent1, extent2) {\\n    if (extent2[0] < extent1[0]) {\\n        extent1[0] = extent2[0];\\n    }\\n    if (extent2[2] > extent1[2]) {\\n        extent1[2] = extent2[2];\\n    }\\n    if (extent2[1] < extent1[1]) {\\n        extent1[1] = extent2[1];\\n    }\\n    if (extent2[3] > extent1[3]) {\\n        extent1[3] = extent2[3];\\n    }\\n    return extent1;\\n}\\n/**\\n * @param {Extent} extent Extent.\\n * @param {import(\\\"./coordinate.js\\\").Coordinate} coordinate Coordinate.\\n */\\nexport function extendCoordinate(extent, coordinate) {\\n    if (coordinate[0] < extent[0]) {\\n        extent[0] = coordinate[0];\\n    }\\n    if (coordinate[0] > extent[2]) {\\n        extent[2] = coordinate[0];\\n    }\\n    if (coordinate[1] < extent[1]) {\\n        extent[1] = coordinate[1];\\n    }\\n    if (coordinate[1] > extent[3]) {\\n        extent[3] = coordinate[1];\\n    }\\n}\\n/**\\n * @param {Extent} extent Extent.\\n * @param {Array<import(\\\"./coordinate.js\\\").Coordinate>} coordinates Coordinates.\\n * @return {Extent} Extent.\\n */\\nexport function extendCoordinates(extent, coordinates) {\\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\\n        extendCoordinate(extent, coordinates[i]);\\n    }\\n    return extent;\\n}\\n/**\\n * @param {Extent} extent Extent.\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @return {Extent} Extent.\\n */\\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\\n    for (; offset < end; offset += stride) {\\n        extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\\n    }\\n    return extent;\\n}\\n/**\\n * @param {Extent} extent Extent.\\n * @param {Array<Array<import(\\\"./coordinate.js\\\").Coordinate>>} rings Rings.\\n * @return {Extent} Extent.\\n */\\nexport function extendRings(extent, rings) {\\n    for (var i = 0, ii = rings.length; i < ii; ++i) {\\n        extendCoordinates(extent, rings[i]);\\n    }\\n    return extent;\\n}\\n/**\\n * @param {Extent} extent Extent.\\n * @param {number} x X.\\n * @param {number} y Y.\\n */\\nexport function extendXY(extent, x, y) {\\n    extent[0] = Math.min(extent[0], x);\\n    extent[1] = Math.min(extent[1], y);\\n    extent[2] = Math.max(extent[2], x);\\n    extent[3] = Math.max(extent[3], y);\\n}\\n/**\\n * This function calls `callback` for each corner of the extent. If the\\n * callback returns a truthy value the function returns that value\\n * immediately. Otherwise the function returns `false`.\\n * @param {Extent} extent Extent.\\n * @param {function(import(\\\"./coordinate.js\\\").Coordinate): S} callback Callback.\\n * @return {S|boolean} Value.\\n * @template S\\n */\\nexport function forEachCorner(extent, callback) {\\n    var val;\\n    val = callback(getBottomLeft(extent));\\n    if (val) {\\n        return val;\\n    }\\n    val = callback(getBottomRight(extent));\\n    if (val) {\\n        return val;\\n    }\\n    val = callback(getTopRight(extent));\\n    if (val) {\\n        return val;\\n    }\\n    val = callback(getTopLeft(extent));\\n    if (val) {\\n        return val;\\n    }\\n    return false;\\n}\\n/**\\n * Get the size of an extent.\\n * @param {Extent} extent Extent.\\n * @return {number} Area.\\n * @api\\n */\\nexport function getArea(extent) {\\n    var area = 0;\\n    if (!isEmpty(extent)) {\\n        area = getWidth(extent) * getHeight(extent);\\n    }\\n    return area;\\n}\\n/**\\n * Get the bottom left coordinate of an extent.\\n * @param {Extent} extent Extent.\\n * @return {import(\\\"./coordinate.js\\\").Coordinate} Bottom left coordinate.\\n * @api\\n */\\nexport function getBottomLeft(extent) {\\n    return [extent[0], extent[1]];\\n}\\n/**\\n * Get the bottom right coordinate of an extent.\\n * @param {Extent} extent Extent.\\n * @return {import(\\\"./coordinate.js\\\").Coordinate} Bottom right coordinate.\\n * @api\\n */\\nexport function getBottomRight(extent) {\\n    return [extent[2], extent[1]];\\n}\\n/**\\n * Get the center coordinate of an extent.\\n * @param {Extent} extent Extent.\\n * @return {import(\\\"./coordinate.js\\\").Coordinate} Center.\\n * @api\\n */\\nexport function getCenter(extent) {\\n    return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\\n}\\n/**\\n * Get a corner coordinate of an extent.\\n * @param {Extent} extent Extent.\\n * @param {Corner} corner Corner.\\n * @return {import(\\\"./coordinate.js\\\").Coordinate} Corner coordinate.\\n */\\nexport function getCorner(extent, corner) {\\n    var coordinate;\\n    if (corner === Corner.BOTTOM_LEFT) {\\n        coordinate = getBottomLeft(extent);\\n    }\\n    else if (corner === Corner.BOTTOM_RIGHT) {\\n        coordinate = getBottomRight(extent);\\n    }\\n    else if (corner === Corner.TOP_LEFT) {\\n        coordinate = getTopLeft(extent);\\n    }\\n    else if (corner === Corner.TOP_RIGHT) {\\n        coordinate = getTopRight(extent);\\n    }\\n    else {\\n        assert(false, 13); // Invalid corner\\n    }\\n    return coordinate;\\n}\\n/**\\n * @param {Extent} extent1 Extent 1.\\n * @param {Extent} extent2 Extent 2.\\n * @return {number} Enlarged area.\\n */\\nexport function getEnlargedArea(extent1, extent2) {\\n    var minX = Math.min(extent1[0], extent2[0]);\\n    var minY = Math.min(extent1[1], extent2[1]);\\n    var maxX = Math.max(extent1[2], extent2[2]);\\n    var maxY = Math.max(extent1[3], extent2[3]);\\n    return (maxX - minX) * (maxY - minY);\\n}\\n/**\\n * @param {import(\\\"./coordinate.js\\\").Coordinate} center Center.\\n * @param {number} resolution Resolution.\\n * @param {number} rotation Rotation.\\n * @param {import(\\\"./size.js\\\").Size} size Size.\\n * @param {Extent=} opt_extent Destination extent.\\n * @return {Extent} Extent.\\n */\\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\\n    var dx = resolution * size[0] / 2;\\n    var dy = resolution * size[1] / 2;\\n    var cosRotation = Math.cos(rotation);\\n    var sinRotation = Math.sin(rotation);\\n    var xCos = dx * cosRotation;\\n    var xSin = dx * sinRotation;\\n    var yCos = dy * cosRotation;\\n    var ySin = dy * sinRotation;\\n    var x = center[0];\\n    var y = center[1];\\n    var x0 = x - xCos + ySin;\\n    var x1 = x - xCos - ySin;\\n    var x2 = x + xCos - ySin;\\n    var x3 = x + xCos + ySin;\\n    var y0 = y - xSin - yCos;\\n    var y1 = y - xSin + yCos;\\n    var y2 = y + xSin + yCos;\\n    var y3 = y + xSin - yCos;\\n    return createOrUpdate(Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3), Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3), opt_extent);\\n}\\n/**\\n * Get the height of an extent.\\n * @param {Extent} extent Extent.\\n * @return {number} Height.\\n * @api\\n */\\nexport function getHeight(extent) {\\n    return extent[3] - extent[1];\\n}\\n/**\\n * @param {Extent} extent1 Extent 1.\\n * @param {Extent} extent2 Extent 2.\\n * @return {number} Intersection area.\\n */\\nexport function getIntersectionArea(extent1, extent2) {\\n    var intersection = getIntersection(extent1, extent2);\\n    return getArea(intersection);\\n}\\n/**\\n * Get the intersection of two extents.\\n * @param {Extent} extent1 Extent 1.\\n * @param {Extent} extent2 Extent 2.\\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\\n * @return {Extent} Intersecting extent.\\n * @api\\n */\\nexport function getIntersection(extent1, extent2, opt_extent) {\\n    var intersection = opt_extent ? opt_extent : createEmpty();\\n    if (intersects(extent1, extent2)) {\\n        if (extent1[0] > extent2[0]) {\\n            intersection[0] = extent1[0];\\n        }\\n        else {\\n            intersection[0] = extent2[0];\\n        }\\n        if (extent1[1] > extent2[1]) {\\n            intersection[1] = extent1[1];\\n        }\\n        else {\\n            intersection[1] = extent2[1];\\n        }\\n        if (extent1[2] < extent2[2]) {\\n            intersection[2] = extent1[2];\\n        }\\n        else {\\n            intersection[2] = extent2[2];\\n        }\\n        if (extent1[3] < extent2[3]) {\\n            intersection[3] = extent1[3];\\n        }\\n        else {\\n            intersection[3] = extent2[3];\\n        }\\n    }\\n    else {\\n        createOrUpdateEmpty(intersection);\\n    }\\n    return intersection;\\n}\\n/**\\n * @param {Extent} extent Extent.\\n * @return {number} Margin.\\n */\\nexport function getMargin(extent) {\\n    return getWidth(extent) + getHeight(extent);\\n}\\n/**\\n * Get the size (width, height) of an extent.\\n * @param {Extent} extent The extent.\\n * @return {import(\\\"./size.js\\\").Size} The extent size.\\n * @api\\n */\\nexport function getSize(extent) {\\n    return [extent[2] - extent[0], extent[3] - extent[1]];\\n}\\n/**\\n * Get the top left coordinate of an extent.\\n * @param {Extent} extent Extent.\\n * @return {import(\\\"./coordinate.js\\\").Coordinate} Top left coordinate.\\n * @api\\n */\\nexport function getTopLeft(extent) {\\n    return [extent[0], extent[3]];\\n}\\n/**\\n * Get the top right coordinate of an extent.\\n * @param {Extent} extent Extent.\\n * @return {import(\\\"./coordinate.js\\\").Coordinate} Top right coordinate.\\n * @api\\n */\\nexport function getTopRight(extent) {\\n    return [extent[2], extent[3]];\\n}\\n/**\\n * Get the width of an extent.\\n * @param {Extent} extent Extent.\\n * @return {number} Width.\\n * @api\\n */\\nexport function getWidth(extent) {\\n    return extent[2] - extent[0];\\n}\\n/**\\n * Determine if one extent intersects another.\\n * @param {Extent} extent1 Extent 1.\\n * @param {Extent} extent2 Extent.\\n * @return {boolean} The two extents intersect.\\n * @api\\n */\\nexport function intersects(extent1, extent2) {\\n    return extent1[0] <= extent2[2] &&\\n        extent1[2] >= extent2[0] &&\\n        extent1[1] <= extent2[3] &&\\n        extent1[3] >= extent2[1];\\n}\\n/**\\n * Determine if an extent is empty.\\n * @param {Extent} extent Extent.\\n * @return {boolean} Is empty.\\n * @api\\n */\\nexport function isEmpty(extent) {\\n    return extent[2] < extent[0] || extent[3] < extent[1];\\n}\\n/**\\n * @param {Extent} extent Extent.\\n * @param {Extent=} opt_extent Extent.\\n * @return {Extent} Extent.\\n */\\nexport function returnOrUpdate(extent, opt_extent) {\\n    if (opt_extent) {\\n        opt_extent[0] = extent[0];\\n        opt_extent[1] = extent[1];\\n        opt_extent[2] = extent[2];\\n        opt_extent[3] = extent[3];\\n        return opt_extent;\\n    }\\n    else {\\n        return extent;\\n    }\\n}\\n/**\\n * @param {Extent} extent Extent.\\n * @param {number} value Value.\\n */\\nexport function scaleFromCenter(extent, value) {\\n    var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\\n    var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\\n    extent[0] -= deltaX;\\n    extent[2] += deltaX;\\n    extent[1] -= deltaY;\\n    extent[3] += deltaY;\\n}\\n/**\\n * Determine if the segment between two coordinates intersects (crosses,\\n * touches, or is contained by) the provided extent.\\n * @param {Extent} extent The extent.\\n * @param {import(\\\"./coordinate.js\\\").Coordinate} start Segment start coordinate.\\n * @param {import(\\\"./coordinate.js\\\").Coordinate} end Segment end coordinate.\\n * @return {boolean} The segment intersects the extent.\\n */\\nexport function intersectsSegment(extent, start, end) {\\n    var intersects = false;\\n    var startRel = coordinateRelationship(extent, start);\\n    var endRel = coordinateRelationship(extent, end);\\n    if (startRel === Relationship.INTERSECTING ||\\n        endRel === Relationship.INTERSECTING) {\\n        intersects = true;\\n    }\\n    else {\\n        var minX = extent[0];\\n        var minY = extent[1];\\n        var maxX = extent[2];\\n        var maxY = extent[3];\\n        var startX = start[0];\\n        var startY = start[1];\\n        var endX = end[0];\\n        var endY = end[1];\\n        var slope = (endY - startY) / (endX - startX);\\n        var x = void 0, y = void 0;\\n        if (!!(endRel & Relationship.ABOVE) &&\\n            !(startRel & Relationship.ABOVE)) {\\n            // potentially intersects top\\n            x = endX - ((endY - maxY) / slope);\\n            intersects = x >= minX && x <= maxX;\\n        }\\n        if (!intersects && !!(endRel & Relationship.RIGHT) &&\\n            !(startRel & Relationship.RIGHT)) {\\n            // potentially intersects right\\n            y = endY - ((endX - maxX) * slope);\\n            intersects = y >= minY && y <= maxY;\\n        }\\n        if (!intersects && !!(endRel & Relationship.BELOW) &&\\n            !(startRel & Relationship.BELOW)) {\\n            // potentially intersects bottom\\n            x = endX - ((endY - minY) / slope);\\n            intersects = x >= minX && x <= maxX;\\n        }\\n        if (!intersects && !!(endRel & Relationship.LEFT) &&\\n            !(startRel & Relationship.LEFT)) {\\n            // potentially intersects left\\n            y = endY - ((endX - minX) * slope);\\n            intersects = y >= minY && y <= maxY;\\n        }\\n    }\\n    return intersects;\\n}\\n/**\\n * Apply a transform function to the extent.\\n * @param {Extent} extent Extent.\\n * @param {import(\\\"./proj.js\\\").TransformFunction} transformFn Transform function.\\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\\n * @param {Extent=} opt_extent Destination extent.\\n * @return {Extent} Extent.\\n * @api\\n */\\nexport function applyTransform(extent, transformFn, opt_extent) {\\n    var coordinates = [\\n        extent[0], extent[1],\\n        extent[0], extent[3],\\n        extent[2], extent[1],\\n        extent[2], extent[3]\\n    ];\\n    transformFn(coordinates, coordinates, 2);\\n    var xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\\n    var ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\\n    return _boundingExtentXYs(xs, ys, opt_extent);\\n}\\n//# sourceMappingURL=extent.js.map\",\"/**\\n * @module ol/resolutionconstraint\\n */\\nimport { linearFindNearest } from './array.js';\\nimport { getHeight, getWidth } from './extent';\\nimport { clamp } from './math';\\n/**\\n * @typedef {function((number|undefined), number, import(\\\"./size.js\\\").Size, boolean=): (number|undefined)} Type\\n */\\n/**\\n * Returns a modified resolution taking into acocunt the viewport size and maximum\\n * allowed extent.\\n * @param {number} resolution Resolution\\n * @param {import(\\\"./extent.js\\\").Extent=} maxExtent Maximum allowed extent.\\n * @param {import(\\\"./size.js\\\").Size} viewportSize Viewport size.\\n * @return {number} Capped resolution.\\n */\\nfunction getViewportClampedResolution(resolution, maxExtent, viewportSize) {\\n    var xResolution = getWidth(maxExtent) / viewportSize[0];\\n    var yResolution = getHeight(maxExtent) / viewportSize[1];\\n    return Math.min(resolution, Math.min(xResolution, yResolution));\\n}\\n/**\\n * Returns a modified resolution to be between maxResolution and minResolution while\\n * still allowing the value to be slightly out of bounds.\\n * Note: the computation is based on the logarithm function (ln):\\n *  - at 1, ln(x) is 0\\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\\n * The final result is clamped to prevent getting too far away from bounds.\\n * @param {number} resolution Resolution.\\n * @param {number} maxResolution Max resolution.\\n * @param {number} minResolution Min resolution.\\n * @return {number} Smoothed resolution.\\n */\\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\\n    var result = Math.min(resolution, maxResolution);\\n    var ratio = 50;\\n    result *= Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio + 1;\\n    if (minResolution) {\\n        result = Math.max(result, minResolution);\\n        result /= Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) / ratio + 1;\\n    }\\n    return clamp(result, minResolution / 2, maxResolution * 2);\\n}\\n/**\\n * @param {Array<number>} resolutions Resolutions.\\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\\n * @param {import(\\\"./extent.js\\\").Extent=} opt_maxExtent Maximum allowed extent.\\n * @return {Type} Zoom function.\\n */\\nexport function createSnapToResolutions(resolutions, opt_smooth, opt_maxExtent) {\\n    return (\\n    /**\\n     * @param {number|undefined} resolution Resolution.\\n     * @param {number} direction Direction.\\n     * @param {import(\\\"./size.js\\\").Size} size Viewport size.\\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\\n     * @return {number|undefined} Resolution.\\n     */\\n    function (resolution, direction, size, opt_isMoving) {\\n        if (resolution !== undefined) {\\n            var maxResolution = resolutions[0];\\n            var minResolution = resolutions[resolutions.length - 1];\\n            var cappedMaxRes = opt_maxExtent ?\\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\\n                maxResolution;\\n            // during interacting or animating, allow intermediary values\\n            if (opt_isMoving) {\\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\\n                if (!smooth) {\\n                    return clamp(resolution, minResolution, cappedMaxRes);\\n                }\\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\\n            }\\n            var capped = Math.min(cappedMaxRes, resolution);\\n            var z = Math.floor(linearFindNearest(resolutions, capped, direction));\\n            return resolutions[z];\\n        }\\n        else {\\n            return undefined;\\n        }\\n    });\\n}\\n/**\\n * @param {number} power Power.\\n * @param {number} maxResolution Maximum resolution.\\n * @param {number=} opt_minResolution Minimum resolution.\\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\\n * @param {import(\\\"./extent.js\\\").Extent=} opt_maxExtent Maximum allowed extent.\\n * @return {Type} Zoom function.\\n */\\nexport function createSnapToPower(power, maxResolution, opt_minResolution, opt_smooth, opt_maxExtent) {\\n    return (\\n    /**\\n     * @param {number|undefined} resolution Resolution.\\n     * @param {number} direction Direction.\\n     * @param {import(\\\"./size.js\\\").Size} size Viewport size.\\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\\n     * @return {number|undefined} Resolution.\\n     */\\n    function (resolution, direction, size, opt_isMoving) {\\n        if (resolution !== undefined) {\\n            var cappedMaxRes = opt_maxExtent ?\\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\\n                maxResolution;\\n            var minResolution = opt_minResolution !== undefined ? opt_minResolution : 0;\\n            // during interacting or animating, allow intermediary values\\n            if (opt_isMoving) {\\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\\n                if (!smooth) {\\n                    return clamp(resolution, minResolution, cappedMaxRes);\\n                }\\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\\n            }\\n            var offset = -direction * (0.5 - 1e-9) + 0.5;\\n            var capped = Math.min(cappedMaxRes, resolution);\\n            var zoomLevel = Math.floor(Math.log(maxResolution / capped) / Math.log(power) + offset);\\n            var newResolution = maxResolution / Math.pow(power, zoomLevel);\\n            return clamp(newResolution, minResolution, cappedMaxRes);\\n        }\\n        else {\\n            return undefined;\\n        }\\n    });\\n}\\n/**\\n * @param {number} maxResolution Max resolution.\\n * @param {number} minResolution Min resolution.\\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\\n * @param {import(\\\"./extent.js\\\").Extent=} opt_maxExtent Maximum allowed extent.\\n * @return {Type} Zoom function.\\n */\\nexport function createMinMaxResolution(maxResolution, minResolution, opt_smooth, opt_maxExtent) {\\n    return (\\n    /**\\n     * @param {number|undefined} resolution Resolution.\\n     * @param {number} direction Direction.\\n     * @param {import(\\\"./size.js\\\").Size} size Viewport size.\\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\\n     * @return {number|undefined} Resolution.\\n     */\\n    function (resolution, direction, size, opt_isMoving) {\\n        if (resolution !== undefined) {\\n            var cappedMaxRes = opt_maxExtent ?\\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\\n                maxResolution;\\n            var smooth = opt_smooth !== undefined ? opt_smooth : true;\\n            if (!smooth || !opt_isMoving) {\\n                return clamp(resolution, minResolution, cappedMaxRes);\\n            }\\n            return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\\n        }\\n        else {\\n            return undefined;\\n        }\\n    });\\n}\\n//# sourceMappingURL=resolutionconstraint.js.map\",\"/**\\n * @module ol/rotationconstraint\\n */\\nimport { toRadians } from './math.js';\\n/**\\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\\n */\\n/**\\n * @param {number|undefined} rotation Rotation.\\n * @return {number|undefined} Rotation.\\n */\\nexport function disable(rotation) {\\n    if (rotation !== undefined) {\\n        return 0;\\n    }\\n    else {\\n        return undefined;\\n    }\\n}\\n/**\\n * @param {number|undefined} rotation Rotation.\\n * @return {number|undefined} Rotation.\\n */\\nexport function none(rotation) {\\n    if (rotation !== undefined) {\\n        return rotation;\\n    }\\n    else {\\n        return undefined;\\n    }\\n}\\n/**\\n * @param {number} n N.\\n * @return {Type} Rotation constraint.\\n */\\nexport function createSnapToN(n) {\\n    var theta = 2 * Math.PI / n;\\n    return (\\n    /**\\n     * @param {number|undefined} rotation Rotation.\\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\\n     * @return {number|undefined} Rotation.\\n     */\\n    function (rotation, opt_isMoving) {\\n        if (opt_isMoving) {\\n            return rotation;\\n        }\\n        if (rotation !== undefined) {\\n            rotation = Math.floor(rotation / theta + 0.5) * theta;\\n            return rotation;\\n        }\\n        else {\\n            return undefined;\\n        }\\n    });\\n}\\n/**\\n * @param {number=} opt_tolerance Tolerance.\\n * @return {Type} Rotation constraint.\\n */\\nexport function createSnapToZero(opt_tolerance) {\\n    var tolerance = opt_tolerance || toRadians(5);\\n    return (\\n    /**\\n     * @param {number|undefined} rotation Rotation.\\n     * @param {boolean} opt_isMoving True if an interaction or animation is in progress.\\n     * @return {number|undefined} Rotation.\\n     */\\n    function (rotation, opt_isMoving) {\\n        if (opt_isMoving) {\\n            return rotation;\\n        }\\n        if (rotation !== undefined) {\\n            if (Math.abs(rotation) <= tolerance) {\\n                return 0;\\n            }\\n            else {\\n                return rotation;\\n            }\\n        }\\n        else {\\n            return undefined;\\n        }\\n    });\\n}\\n//# sourceMappingURL=rotationconstraint.js.map\",\"/**\\n * @module ol/ViewHint\\n */\\n/**\\n * @enum {number}\\n */\\nexport default {\\n    ANIMATING: 0,\\n    INTERACTING: 1\\n};\\n//# sourceMappingURL=ViewHint.js.map\",\"/**\\n * @module ol/ViewProperty\\n */\\n/**\\n * @enum {string}\\n */\\nexport default {\\n    CENTER: 'center',\\n    RESOLUTION: 'resolution',\\n    ROTATION: 'rotation'\\n};\\n//# sourceMappingURL=ViewProperty.js.map\",\"/**\\n * @module ol/coordinate\\n */\\nimport { modulo } from './math.js';\\nimport { padNumber } from './string.js';\\n/**\\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\\n * @typedef {Array<number>} Coordinate\\n * @api\\n */\\n/**\\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\\n * transforms it into a `{string}`.\\n *\\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\\n * @api\\n */\\n/**\\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\\n * by the function.\\n *\\n * Example:\\n *\\n *     import {add} from 'ol/coordinate';\\n *\\n *     var coord = [7.85, 47.983333];\\n *     add(coord, [-2, 4]);\\n *     // coord is now [5.85, 51.983333]\\n *\\n * @param {Coordinate} coordinate Coordinate.\\n * @param {Coordinate} delta Delta.\\n * @return {Coordinate} The input coordinate adjusted by\\n * the given delta.\\n * @api\\n */\\nexport function add(coordinate, delta) {\\n    coordinate[0] += +delta[0];\\n    coordinate[1] += +delta[1];\\n    return coordinate;\\n}\\n/**\\n * Calculates the point closest to the passed coordinate on the passed circle.\\n *\\n * @param {Coordinate} coordinate The coordinate.\\n * @param {import(\\\"./geom/Circle.js\\\").default} circle The circle.\\n * @return {Coordinate} Closest point on the circumference.\\n */\\nexport function closestOnCircle(coordinate, circle) {\\n    var r = circle.getRadius();\\n    var center = circle.getCenter();\\n    var x0 = center[0];\\n    var y0 = center[1];\\n    var x1 = coordinate[0];\\n    var y1 = coordinate[1];\\n    var dx = x1 - x0;\\n    var dy = y1 - y0;\\n    if (dx === 0 && dy === 0) {\\n        dx = 1;\\n    }\\n    var d = Math.sqrt(dx * dx + dy * dy);\\n    var x = x0 + r * dx / d;\\n    var y = y0 + r * dy / d;\\n    return [x, y];\\n}\\n/**\\n * Calculates the point closest to the passed coordinate on the passed segment.\\n * This is the foot of the perpendicular of the coordinate to the segment when\\n * the foot is on the segment, or the closest segment coordinate when the foot\\n * is outside the segment.\\n *\\n * @param {Coordinate} coordinate The coordinate.\\n * @param {Array<Coordinate>} segment The two coordinates\\n * of the segment.\\n * @return {Coordinate} The foot of the perpendicular of\\n * the coordinate to the segment.\\n */\\nexport function closestOnSegment(coordinate, segment) {\\n    var x0 = coordinate[0];\\n    var y0 = coordinate[1];\\n    var start = segment[0];\\n    var end = segment[1];\\n    var x1 = start[0];\\n    var y1 = start[1];\\n    var x2 = end[0];\\n    var y2 = end[1];\\n    var dx = x2 - x1;\\n    var dy = y2 - y1;\\n    var along = (dx === 0 && dy === 0) ? 0 :\\n        ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\\n    var x, y;\\n    if (along <= 0) {\\n        x = x1;\\n        y = y1;\\n    }\\n    else if (along >= 1) {\\n        x = x2;\\n        y = y2;\\n    }\\n    else {\\n        x = x1 + along * dx;\\n        y = y1 + along * dy;\\n    }\\n    return [x, y];\\n}\\n/**\\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\\n * used to format\\n * a {Coordinate} to a string.\\n *\\n * Example without specifying the fractional digits:\\n *\\n *     import {createStringXY} from 'ol/coordinate';\\n *\\n *     var coord = [7.85, 47.983333];\\n *     var stringifyFunc = createStringXY();\\n *     var out = stringifyFunc(coord);\\n *     // out is now '8, 48'\\n *\\n * Example with explicitly specifying 2 fractional digits:\\n *\\n *     import {createStringXY} from 'ol/coordinate';\\n *\\n *     var coord = [7.85, 47.983333];\\n *     var stringifyFunc = createStringXY(2);\\n *     var out = stringifyFunc(coord);\\n *     // out is now '7.85, 47.98'\\n *\\n * @param {number=} opt_fractionDigits The number of digits to include\\n *    after the decimal point. Default is `0`.\\n * @return {CoordinateFormat} Coordinate format.\\n * @api\\n */\\nexport function createStringXY(opt_fractionDigits) {\\n    return (\\n    /**\\n     * @param {Coordinate} coordinate Coordinate.\\n     * @return {string} String XY.\\n     */\\n    function (coordinate) {\\n        return toStringXY(coordinate, opt_fractionDigits);\\n    });\\n}\\n/**\\n * @param {string} hemispheres Hemispheres.\\n * @param {number} degrees Degrees.\\n * @param {number=} opt_fractionDigits The number of digits to include\\n *    after the decimal point. Default is `0`.\\n * @return {string} String.\\n */\\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\\n    var normalizedDegrees = modulo(degrees + 180, 360) - 180;\\n    var x = Math.abs(3600 * normalizedDegrees);\\n    var dflPrecision = opt_fractionDigits || 0;\\n    var precision = Math.pow(10, dflPrecision);\\n    var deg = Math.floor(x / 3600);\\n    var min = Math.floor((x - deg * 3600) / 60);\\n    var sec = x - (deg * 3600) - (min * 60);\\n    sec = Math.ceil(sec * precision) / precision;\\n    if (sec >= 60) {\\n        sec = 0;\\n        min += 1;\\n    }\\n    if (min >= 60) {\\n        min = 0;\\n        deg += 1;\\n    }\\n    return deg + '\\\\u00b0 ' + padNumber(min, 2) + '\\\\u2032 ' +\\n        padNumber(sec, 2, dflPrecision) + '\\\\u2033' +\\n        (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\\n}\\n/**\\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\\n * using the given string template. The strings `{x}` and `{y}` in the template\\n * will be replaced with the first and second coordinate values respectively.\\n *\\n * Example without specifying the fractional digits:\\n *\\n *     import {format} from 'ol/coordinate';\\n *\\n *     var coord = [7.85, 47.983333];\\n *     var template = 'Coordinate is ({x}|{y}).';\\n *     var out = format(coord, template);\\n *     // out is now 'Coordinate is (8|48).'\\n *\\n * Example explicitly specifying the fractional digits:\\n *\\n *     import {format} from 'ol/coordinate';\\n *\\n *     var coord = [7.85, 47.983333];\\n *     var template = 'Coordinate is ({x}|{y}).';\\n *     var out = format(coord, template, 2);\\n *     // out is now 'Coordinate is (7.85|47.98).'\\n *\\n * @param {Coordinate} coordinate Coordinate.\\n * @param {string} template A template string with `{x}` and `{y}` placeholders\\n *     that will be replaced by first and second coordinate values.\\n * @param {number=} opt_fractionDigits The number of digits to include\\n *    after the decimal point. Default is `0`.\\n * @return {string} Formatted coordinate.\\n * @api\\n */\\nexport function format(coordinate, template, opt_fractionDigits) {\\n    if (coordinate) {\\n        return template\\n            .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\\n            .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\\n    }\\n    else {\\n        return '';\\n    }\\n}\\n/**\\n * @param {Coordinate} coordinate1 First coordinate.\\n * @param {Coordinate} coordinate2 Second coordinate.\\n * @return {boolean} The two coordinates are equal.\\n */\\nexport function equals(coordinate1, coordinate2) {\\n    var equals = true;\\n    for (var i = coordinate1.length - 1; i >= 0; --i) {\\n        if (coordinate1[i] != coordinate2[i]) {\\n            equals = false;\\n            break;\\n        }\\n    }\\n    return equals;\\n}\\n/**\\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\\n * returned by the function.\\n *\\n * Example:\\n *\\n *     import {rotate} from 'ol/coordinate';\\n *\\n *     var coord = [7.85, 47.983333];\\n *     var rotateRadians = Math.PI / 2; // 90 degrees\\n *     rotate(coord, rotateRadians);\\n *     // coord is now [-47.983333, 7.85]\\n *\\n * @param {Coordinate} coordinate Coordinate.\\n * @param {number} angle Angle in radian.\\n * @return {Coordinate} Coordinate.\\n * @api\\n */\\nexport function rotate(coordinate, angle) {\\n    var cosAngle = Math.cos(angle);\\n    var sinAngle = Math.sin(angle);\\n    var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\\n    var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\\n    coordinate[0] = x;\\n    coordinate[1] = y;\\n    return coordinate;\\n}\\n/**\\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\\n * by the function.\\n *\\n * Example:\\n *\\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\\n *\\n *     var coord = [7.85, 47.983333];\\n *     var scale = 1.2;\\n *     scaleCoordinate(coord, scale);\\n *     // coord is now [9.42, 57.5799996]\\n *\\n * @param {Coordinate} coordinate Coordinate.\\n * @param {number} scale Scale factor.\\n * @return {Coordinate} Coordinate.\\n */\\nexport function scale(coordinate, scale) {\\n    coordinate[0] *= scale;\\n    coordinate[1] *= scale;\\n    return coordinate;\\n}\\n/**\\n * @param {Coordinate} coord1 First coordinate.\\n * @param {Coordinate} coord2 Second coordinate.\\n * @return {number} Squared distance between coord1 and coord2.\\n */\\nexport function squaredDistance(coord1, coord2) {\\n    var dx = coord1[0] - coord2[0];\\n    var dy = coord1[1] - coord2[1];\\n    return dx * dx + dy * dy;\\n}\\n/**\\n * @param {Coordinate} coord1 First coordinate.\\n * @param {Coordinate} coord2 Second coordinate.\\n * @return {number} Distance between coord1 and coord2.\\n */\\nexport function distance(coord1, coord2) {\\n    return Math.sqrt(squaredDistance(coord1, coord2));\\n}\\n/**\\n * Calculate the squared distance from a coordinate to a line segment.\\n *\\n * @param {Coordinate} coordinate Coordinate of the point.\\n * @param {Array<Coordinate>} segment Line segment (2\\n * coordinates).\\n * @return {number} Squared distance from the point to the line segment.\\n */\\nexport function squaredDistanceToSegment(coordinate, segment) {\\n    return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\\n}\\n/**\\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\\n * seconds.\\n *\\n * Example without specifying fractional digits:\\n *\\n *     import {toStringHDMS} from 'ol/coordinate';\\n *\\n *     var coord = [7.85, 47.983333];\\n *     var out = toStringHDMS(coord);\\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\\n *\\n * Example explicitly specifying 1 fractional digit:\\n *\\n *     import {toStringHDMS} from 'ol/coordinate';\\n *\\n *     var coord = [7.85, 47.983333];\\n *     var out = toStringHDMS(coord, 1);\\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\\n *\\n * @param {Coordinate} coordinate Coordinate.\\n * @param {number=} opt_fractionDigits The number of digits to include\\n *    after the decimal point. Default is `0`.\\n * @return {string} Hemisphere, degrees, minutes and seconds.\\n * @api\\n */\\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\\n    if (coordinate) {\\n        return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\\n            degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\\n    }\\n    else {\\n        return '';\\n    }\\n}\\n/**\\n * Format a coordinate as a comma delimited string.\\n *\\n * Example without specifying fractional digits:\\n *\\n *     import {toStringXY} from 'ol/coordinate';\\n *\\n *     var coord = [7.85, 47.983333];\\n *     var out = toStringXY(coord);\\n *     // out is now '8, 48'\\n *\\n * Example explicitly specifying 1 fractional digit:\\n *\\n *     import {toStringXY} from 'ol/coordinate';\\n *\\n *     var coord = [7.85, 47.983333];\\n *     var out = toStringXY(coord, 1);\\n *     // out is now '7.8, 48.0'\\n *\\n * @param {Coordinate} coordinate Coordinate.\\n * @param {number=} opt_fractionDigits The number of digits to include\\n *    after the decimal point. Default is `0`.\\n * @return {string} XY.\\n * @api\\n */\\nexport function toStringXY(coordinate, opt_fractionDigits) {\\n    return format(coordinate, '{x}, {y}', opt_fractionDigits);\\n}\\n//# sourceMappingURL=coordinate.js.map\",\"/**\\n * @module ol/easing\\n */\\n/**\\n * Start slow and speed up.\\n * @param {number} t Input between 0 and 1.\\n * @return {number} Output between 0 and 1.\\n * @api\\n */\\nexport function easeIn(t) {\\n    return Math.pow(t, 3);\\n}\\n/**\\n * Start fast and slow down.\\n * @param {number} t Input between 0 and 1.\\n * @return {number} Output between 0 and 1.\\n * @api\\n */\\nexport function easeOut(t) {\\n    return 1 - easeIn(1 - t);\\n}\\n/**\\n * Start slow, speed up, and then slow down again.\\n * @param {number} t Input between 0 and 1.\\n * @return {number} Output between 0 and 1.\\n * @api\\n */\\nexport function inAndOut(t) {\\n    return 3 * t * t - 2 * t * t * t;\\n}\\n/**\\n * Maintain a constant speed over time.\\n * @param {number} t Input between 0 and 1.\\n * @return {number} Output between 0 and 1.\\n * @api\\n */\\nexport function linear(t) {\\n    return t;\\n}\\n/**\\n * Start slow, speed up, and at the very end slow down again.  This has the\\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\\n * slowdown is delayed.\\n * @param {number} t Input between 0 and 1.\\n * @return {number} Output between 0 and 1.\\n * @api\\n */\\nexport function upAndDown(t) {\\n    if (t < 0.5) {\\n        return inAndOut(2 * t);\\n    }\\n    else {\\n        return 1 - inAndOut(2 * (t - 0.5));\\n    }\\n}\\n//# sourceMappingURL=easing.js.map\",\"/**\\n * @module ol/geom/GeometryType\\n */\\n/**\\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\\n * `'GeometryCollection'`, `'Circle'`.\\n * @enum {string}\\n */\\nexport default {\\n    POINT: 'Point',\\n    LINE_STRING: 'LineString',\\n    LINEAR_RING: 'LinearRing',\\n    POLYGON: 'Polygon',\\n    MULTI_POINT: 'MultiPoint',\\n    MULTI_LINE_STRING: 'MultiLineString',\\n    MULTI_POLYGON: 'MultiPolygon',\\n    GEOMETRY_COLLECTION: 'GeometryCollection',\\n    CIRCLE: 'Circle'\\n};\\n//# sourceMappingURL=GeometryType.js.map\",\"/**\\n * @module ol/geom/GeometryLayout\\n */\\n/**\\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\\n * @enum {string}\\n */\\nexport default {\\n    XY: 'XY',\\n    XYZ: 'XYZ',\\n    XYM: 'XYM',\\n    XYZM: 'XYZM'\\n};\\n//# sourceMappingURL=GeometryLayout.js.map\",\"/**\\n * @module ol/geom/flat/transform\\n */\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @param {import(\\\"../../transform.js\\\").Transform} transform Transform.\\n * @param {Array<number>=} opt_dest Destination.\\n * @return {Array<number>} Transformed coordinates.\\n */\\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\\n    var dest = opt_dest ? opt_dest : [];\\n    var i = 0;\\n    for (var j = offset; j < end; j += stride) {\\n        var x = flatCoordinates[j];\\n        var y = flatCoordinates[j + 1];\\n        dest[i++] = transform[0] * x + transform[2] * y + transform[4];\\n        dest[i++] = transform[1] * x + transform[3] * y + transform[5];\\n    }\\n    if (opt_dest && dest.length != i) {\\n        dest.length = i;\\n    }\\n    return dest;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @param {number} angle Angle.\\n * @param {Array<number>} anchor Rotation anchor point.\\n * @param {Array<number>=} opt_dest Destination.\\n * @return {Array<number>} Transformed coordinates.\\n */\\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\\n    var dest = opt_dest ? opt_dest : [];\\n    var cos = Math.cos(angle);\\n    var sin = Math.sin(angle);\\n    var anchorX = anchor[0];\\n    var anchorY = anchor[1];\\n    var i = 0;\\n    for (var j = offset; j < end; j += stride) {\\n        var deltaX = flatCoordinates[j] - anchorX;\\n        var deltaY = flatCoordinates[j + 1] - anchorY;\\n        dest[i++] = anchorX + deltaX * cos - deltaY * sin;\\n        dest[i++] = anchorY + deltaX * sin + deltaY * cos;\\n        for (var k = j + 2; k < j + stride; ++k) {\\n            dest[i++] = flatCoordinates[k];\\n        }\\n    }\\n    if (opt_dest && dest.length != i) {\\n        dest.length = i;\\n    }\\n    return dest;\\n}\\n/**\\n * Scale the coordinates.\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @param {number} sx Scale factor in the x-direction.\\n * @param {number} sy Scale factor in the y-direction.\\n * @param {Array<number>} anchor Scale anchor point.\\n * @param {Array<number>=} opt_dest Destination.\\n * @return {Array<number>} Transformed coordinates.\\n */\\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\\n    var dest = opt_dest ? opt_dest : [];\\n    var anchorX = anchor[0];\\n    var anchorY = anchor[1];\\n    var i = 0;\\n    for (var j = offset; j < end; j += stride) {\\n        var deltaX = flatCoordinates[j] - anchorX;\\n        var deltaY = flatCoordinates[j + 1] - anchorY;\\n        dest[i++] = anchorX + sx * deltaX;\\n        dest[i++] = anchorY + sy * deltaY;\\n        for (var k = j + 2; k < j + stride; ++k) {\\n            dest[i++] = flatCoordinates[k];\\n        }\\n    }\\n    if (opt_dest && dest.length != i) {\\n        dest.length = i;\\n    }\\n    return dest;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @param {number} deltaX Delta X.\\n * @param {number} deltaY Delta Y.\\n * @param {Array<number>=} opt_dest Destination.\\n * @return {Array<number>} Transformed coordinates.\\n */\\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\\n    var dest = opt_dest ? opt_dest : [];\\n    var i = 0;\\n    for (var j = offset; j < end; j += stride) {\\n        dest[i++] = flatCoordinates[j] + deltaX;\\n        dest[i++] = flatCoordinates[j + 1] + deltaY;\\n        for (var k = j + 2; k < j + stride; ++k) {\\n            dest[i++] = flatCoordinates[k];\\n        }\\n    }\\n    if (opt_dest && dest.length != i) {\\n        dest.length = i;\\n    }\\n    return dest;\\n}\\n//# sourceMappingURL=transform.js.map\",\"/**\\n * @license\\n * Latitude/longitude spherical geodesy formulae taken from\\n * http://www.movable-type.co.uk/scripts/latlong.html\\n * Licensed under CC-BY-3.0.\\n */\\n/**\\n * @module ol/sphere\\n */\\nimport { toRadians, toDegrees } from './math.js';\\nimport GeometryType from './geom/GeometryType.js';\\n/**\\n * Object literal with options for the {@link getLength} or {@link getArea}\\n * functions.\\n * @typedef {Object} SphereMetricOptions\\n * @property {import(\\\"./proj.js\\\").ProjectionLike} [projection='EPSG:3857']\\n * Projection of the  geometry.  By default, the geometry is assumed to be in\\n * Web Mercator.\\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the radius of the\\n * earth is used (Clarke 1866 Authalic Sphere).\\n */\\n/**\\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\\n * @type {number}\\n */\\nexport var DEFAULT_RADIUS = 6371008.8;\\n/**\\n * Get the great circle distance (in meters) between two geographic coordinates.\\n * @param {Array} c1 Starting coordinate.\\n * @param {Array} c2 Ending coordinate.\\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\\n *     mean radius using the WGS84 ellipsoid.\\n * @return {number} The great circle distance between the points (in meters).\\n * @api\\n */\\nexport function getDistance(c1, c2, opt_radius) {\\n    var radius = opt_radius || DEFAULT_RADIUS;\\n    var lat1 = toRadians(c1[1]);\\n    var lat2 = toRadians(c2[1]);\\n    var deltaLatBy2 = (lat2 - lat1) / 2;\\n    var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\\n    var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\\n        Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\\n            Math.cos(lat1) * Math.cos(lat2);\\n    return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\\n}\\n/**\\n * Get the cumulative great circle length of linestring coordinates (geographic).\\n * @param {Array} coordinates Linestring coordinates.\\n * @param {number} radius The sphere radius to use.\\n * @return {number} The length (in meters).\\n */\\nfunction getLengthInternal(coordinates, radius) {\\n    var length = 0;\\n    for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\\n        length += getDistance(coordinates[i], coordinates[i + 1], radius);\\n    }\\n    return length;\\n}\\n/**\\n * Get the spherical length of a geometry.  This length is the sum of the\\n * great circle distances between coordinates.  For polygons, the length is\\n * the sum of all rings.  For points, the length is zero.  For multi-part\\n * geometries, the length is the sum of the length of each part.\\n * @param {import(\\\"./geom/Geometry.js\\\").default} geometry A geometry.\\n * @param {SphereMetricOptions=} opt_options Options for the\\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\\n * You can change this by providing a `projection` option.\\n * @return {number} The spherical length (in meters).\\n * @api\\n */\\nexport function getLength(geometry, opt_options) {\\n    var options = opt_options || {};\\n    var radius = options.radius || DEFAULT_RADIUS;\\n    var projection = options.projection || 'EPSG:3857';\\n    var type = geometry.getType();\\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\\n    }\\n    var length = 0;\\n    var coordinates, coords, i, ii, j, jj;\\n    switch (type) {\\n        case GeometryType.POINT:\\n        case GeometryType.MULTI_POINT: {\\n            break;\\n        }\\n        case GeometryType.LINE_STRING:\\n        case GeometryType.LINEAR_RING: {\\n            coordinates = /** @type {import(\\\"./geom/SimpleGeometry.js\\\").default} */ (geometry).getCoordinates();\\n            length = getLengthInternal(coordinates, radius);\\n            break;\\n        }\\n        case GeometryType.MULTI_LINE_STRING:\\n        case GeometryType.POLYGON: {\\n            coordinates = /** @type {import(\\\"./geom/SimpleGeometry.js\\\").default} */ (geometry).getCoordinates();\\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\\n                length += getLengthInternal(coordinates[i], radius);\\n            }\\n            break;\\n        }\\n        case GeometryType.MULTI_POLYGON: {\\n            coordinates = /** @type {import(\\\"./geom/SimpleGeometry.js\\\").default} */ (geometry).getCoordinates();\\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\\n                coords = coordinates[i];\\n                for (j = 0, jj = coords.length; j < jj; ++j) {\\n                    length += getLengthInternal(coords[j], radius);\\n                }\\n            }\\n            break;\\n        }\\n        case GeometryType.GEOMETRY_COLLECTION: {\\n            var geometries = /** @type {import(\\\"./geom/GeometryCollection.js\\\").default} */ (geometry).getGeometries();\\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\\n                length += getLength(geometries[i], opt_options);\\n            }\\n            break;\\n        }\\n        default: {\\n            throw new Error('Unsupported geometry type: ' + type);\\n        }\\n    }\\n    return length;\\n}\\n/**\\n * Returns the spherical area for a list of coordinates.\\n *\\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\\n * Robert. G. Chamberlain and William H. Duquette, \\\"Some Algorithms for\\n * Polygons on a Sphere\\\", JPL Publication 07-03, Jet Propulsion\\n * Laboratory, Pasadena, CA, June 2007\\n *\\n * @param {Array<import(\\\"./coordinate.js\\\").Coordinate>} coordinates List of coordinates of a linear\\n * ring. If the ring is oriented clockwise, the area will be positive,\\n * otherwise it will be negative.\\n * @param {number} radius The sphere radius.\\n * @return {number} Area (in square meters).\\n */\\nfunction getAreaInternal(coordinates, radius) {\\n    var area = 0;\\n    var len = coordinates.length;\\n    var x1 = coordinates[len - 1][0];\\n    var y1 = coordinates[len - 1][1];\\n    for (var i = 0; i < len; i++) {\\n        var x2 = coordinates[i][0];\\n        var y2 = coordinates[i][1];\\n        area += toRadians(x2 - x1) *\\n            (2 + Math.sin(toRadians(y1)) +\\n                Math.sin(toRadians(y2)));\\n        x1 = x2;\\n        y1 = y2;\\n    }\\n    return area * radius * radius / 2.0;\\n}\\n/**\\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\\n * that polygon edges are segments of great circles on a sphere.\\n * @param {import(\\\"./geom/Geometry.js\\\").default} geometry A geometry.\\n * @param {SphereMetricOptions=} opt_options Options for the area\\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\\n *     You can change this by providing a `projection` option.\\n * @return {number} The spherical area (in square meters).\\n * @api\\n */\\nexport function getArea(geometry, opt_options) {\\n    var options = opt_options || {};\\n    var radius = options.radius || DEFAULT_RADIUS;\\n    var projection = options.projection || 'EPSG:3857';\\n    var type = geometry.getType();\\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\\n    }\\n    var area = 0;\\n    var coordinates, coords, i, ii, j, jj;\\n    switch (type) {\\n        case GeometryType.POINT:\\n        case GeometryType.MULTI_POINT:\\n        case GeometryType.LINE_STRING:\\n        case GeometryType.MULTI_LINE_STRING:\\n        case GeometryType.LINEAR_RING: {\\n            break;\\n        }\\n        case GeometryType.POLYGON: {\\n            coordinates = /** @type {import(\\\"./geom/Polygon.js\\\").default} */ (geometry).getCoordinates();\\n            area = Math.abs(getAreaInternal(coordinates[0], radius));\\n            for (i = 1, ii = coordinates.length; i < ii; ++i) {\\n                area -= Math.abs(getAreaInternal(coordinates[i], radius));\\n            }\\n            break;\\n        }\\n        case GeometryType.MULTI_POLYGON: {\\n            coordinates = /** @type {import(\\\"./geom/SimpleGeometry.js\\\").default} */ (geometry).getCoordinates();\\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\\n                coords = coordinates[i];\\n                area += Math.abs(getAreaInternal(coords[0], radius));\\n                for (j = 1, jj = coords.length; j < jj; ++j) {\\n                    area -= Math.abs(getAreaInternal(coords[j], radius));\\n                }\\n            }\\n            break;\\n        }\\n        case GeometryType.GEOMETRY_COLLECTION: {\\n            var geometries = /** @type {import(\\\"./geom/GeometryCollection.js\\\").default} */ (geometry).getGeometries();\\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\\n                area += getArea(geometries[i], opt_options);\\n            }\\n            break;\\n        }\\n        default: {\\n            throw new Error('Unsupported geometry type: ' + type);\\n        }\\n    }\\n    return area;\\n}\\n/**\\n * Returns the coordinate at the given distance and bearing from `c1`.\\n *\\n * @param {import(\\\"./coordinate.js\\\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\\n * @param {number} distance The great-circle distance between the origin\\n *     point and the target point.\\n * @param {number} bearing The bearing (in radians).\\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\\n *     mean radius using the WGS84 ellipsoid.\\n * @return {import(\\\"./coordinate.js\\\").Coordinate} The target point.\\n */\\nexport function offset(c1, distance, bearing, opt_radius) {\\n    var radius = opt_radius || DEFAULT_RADIUS;\\n    var lat1 = toRadians(c1[1]);\\n    var lon1 = toRadians(c1[0]);\\n    var dByR = distance / radius;\\n    var lat = Math.asin(Math.sin(lat1) * Math.cos(dByR) +\\n        Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\\n    var lon = lon1 + Math.atan2(Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1), Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\\n    return [toDegrees(lon), toDegrees(lat)];\\n}\\n//# sourceMappingURL=sphere.js.map\",\"/**\\n * @module ol/proj/Units\\n */\\n/**\\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\\n * `'us-ft'`.\\n * @enum {string}\\n */\\nvar Units = {\\n    DEGREES: 'degrees',\\n    FEET: 'ft',\\n    METERS: 'm',\\n    PIXELS: 'pixels',\\n    TILE_PIXELS: 'tile-pixels',\\n    USFEET: 'us-ft'\\n};\\n/**\\n * Meters per unit lookup table.\\n * @const\\n * @type {Object<Units, number>}\\n * @api\\n */\\nexport var METERS_PER_UNIT = {};\\n// use the radius of the Normal sphere\\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\\nMETERS_PER_UNIT[Units.METERS] = 1;\\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\\nexport default Units;\\n//# sourceMappingURL=Units.js.map\",\"/**\\n * @module ol/proj/Projection\\n */\\nimport { METERS_PER_UNIT } from './Units.js';\\n/**\\n * @typedef {Object} Options\\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\\n * @property {import(\\\"./Units.js\\\").default|string} [units] Units. Required unless a\\n * proj4 projection is defined for `code`.\\n * @property {import(\\\"../extent.js\\\").Extent} [extent] The validity extent for the SRS.\\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\\n * lookup table.\\n * @property {import(\\\"../extent.js\\\").Extent} [worldExtent] The world extent for the SRS.\\n * @property {function(number, import(\\\"../coordinate.js\\\").Coordinate):number} [getPointResolution]\\n * Function to determine resolution at a point. The function is called with a\\n * `{number}` view resolution and an `{import(\\\"../coordinate.js\\\").Coordinate}` as arguments, and returns\\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\\n * the default {@link module:ol/proj#getPointResolution} function will be used.\\n */\\n/**\\n * @classdesc\\n * Projection definition class. One of these is created for each projection\\n * supported in the application and stored in the {@link module:ol/proj} namespace.\\n * You can use these in applications, but this is not required, as API params\\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\\n * code will suffice.\\n *\\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\\n * projection.\\n *\\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\\n * with the following aliases:\\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\\n *     urn:x-ogc:def:crs:EPSG:4326\\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\\n *\\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\\n * be added using `proj4.defs()`. After all required projection definitions are\\n * added, call the {@link module:ol/proj/proj4~register} function.\\n *\\n * @api\\n */\\nvar Projection = /** @class */ (function () {\\n    /**\\n     * @param {Options} options Projection options.\\n     */\\n    function Projection(options) {\\n        /**\\n         * @private\\n         * @type {string}\\n         */\\n        this.code_ = options.code;\\n        /**\\n         * Units of projected coordinates. When set to `TILE_PIXELS`, a\\n         * `this.extent_` and `this.worldExtent_` must be configured properly for each\\n         * tile.\\n         * @private\\n         * @type {import(\\\"./Units.js\\\").default}\\n         */\\n        this.units_ = /** @type {import(\\\"./Units.js\\\").default} */ (options.units);\\n        /**\\n         * Validity extent of the projection in projected coordinates. For projections\\n         * with `TILE_PIXELS` units, this is the extent of the tile in\\n         * tile pixel space.\\n         * @private\\n         * @type {import(\\\"../extent.js\\\").Extent}\\n         */\\n        this.extent_ = options.extent !== undefined ? options.extent : null;\\n        /**\\n         * Extent of the world in EPSG:4326. For projections with\\n         * `TILE_PIXELS` units, this is the extent of the tile in\\n         * projected coordinate space.\\n         * @private\\n         * @type {import(\\\"../extent.js\\\").Extent}\\n         */\\n        this.worldExtent_ = options.worldExtent !== undefined ?\\n            options.worldExtent : null;\\n        /**\\n         * @private\\n         * @type {string}\\n         */\\n        this.axisOrientation_ = options.axisOrientation !== undefined ?\\n            options.axisOrientation : 'enu';\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        this.global_ = options.global !== undefined ? options.global : false;\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        this.canWrapX_ = !!(this.global_ && this.extent_);\\n        /**\\n         * @private\\n         * @type {function(number, import(\\\"../coordinate.js\\\").Coordinate):number|undefined}\\n         */\\n        this.getPointResolutionFunc_ = options.getPointResolution;\\n        /**\\n         * @private\\n         * @type {import(\\\"../tilegrid/TileGrid.js\\\").default}\\n         */\\n        this.defaultTileGrid_ = null;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        this.metersPerUnit_ = options.metersPerUnit;\\n    }\\n    /**\\n     * @return {boolean} The projection is suitable for wrapping the x-axis\\n     */\\n    Projection.prototype.canWrapX = function () {\\n        return this.canWrapX_;\\n    };\\n    /**\\n     * Get the code for this projection, e.g. 'EPSG:4326'.\\n     * @return {string} Code.\\n     * @api\\n     */\\n    Projection.prototype.getCode = function () {\\n        return this.code_;\\n    };\\n    /**\\n     * Get the validity extent for this projection.\\n     * @return {import(\\\"../extent.js\\\").Extent} Extent.\\n     * @api\\n     */\\n    Projection.prototype.getExtent = function () {\\n        return this.extent_;\\n    };\\n    /**\\n     * Get the units of this projection.\\n     * @return {import(\\\"./Units.js\\\").default} Units.\\n     * @api\\n     */\\n    Projection.prototype.getUnits = function () {\\n        return this.units_;\\n    };\\n    /**\\n     * Get the amount of meters per unit of this projection.  If the projection is\\n     * not configured with `metersPerUnit` or a units identifier, the return is\\n     * `undefined`.\\n     * @return {number|undefined} Meters.\\n     * @api\\n     */\\n    Projection.prototype.getMetersPerUnit = function () {\\n        return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\\n    };\\n    /**\\n     * Get the world extent for this projection.\\n     * @return {import(\\\"../extent.js\\\").Extent} Extent.\\n     * @api\\n     */\\n    Projection.prototype.getWorldExtent = function () {\\n        return this.worldExtent_;\\n    };\\n    /**\\n     * Get the axis orientation of this projection.\\n     * Example values are:\\n     * enu - the default easting, northing, elevation.\\n     * neu - northing, easting, up - useful for \\\"lat/long\\\" geographic coordinates,\\n     *     or south orientated transverse mercator.\\n     * wnu - westing, northing, up - some planetary coordinate systems have\\n     *     \\\"west positive\\\" coordinate systems\\n     * @return {string} Axis orientation.\\n     * @api\\n     */\\n    Projection.prototype.getAxisOrientation = function () {\\n        return this.axisOrientation_;\\n    };\\n    /**\\n     * Is this projection a global projection which spans the whole world?\\n     * @return {boolean} Whether the projection is global.\\n     * @api\\n     */\\n    Projection.prototype.isGlobal = function () {\\n        return this.global_;\\n    };\\n    /**\\n     * Set if the projection is a global projection which spans the whole world\\n     * @param {boolean} global Whether the projection is global.\\n     * @api\\n     */\\n    Projection.prototype.setGlobal = function (global) {\\n        this.global_ = global;\\n        this.canWrapX_ = !!(global && this.extent_);\\n    };\\n    /**\\n     * @return {import(\\\"../tilegrid/TileGrid.js\\\").default} The default tile grid.\\n     */\\n    Projection.prototype.getDefaultTileGrid = function () {\\n        return this.defaultTileGrid_;\\n    };\\n    /**\\n     * @param {import(\\\"../tilegrid/TileGrid.js\\\").default} tileGrid The default tile grid.\\n     */\\n    Projection.prototype.setDefaultTileGrid = function (tileGrid) {\\n        this.defaultTileGrid_ = tileGrid;\\n    };\\n    /**\\n     * Set the validity extent for this projection.\\n     * @param {import(\\\"../extent.js\\\").Extent} extent Extent.\\n     * @api\\n     */\\n    Projection.prototype.setExtent = function (extent) {\\n        this.extent_ = extent;\\n        this.canWrapX_ = !!(this.global_ && extent);\\n    };\\n    /**\\n     * Set the world extent for this projection.\\n     * @param {import(\\\"../extent.js\\\").Extent} worldExtent World extent\\n     *     [minlon, minlat, maxlon, maxlat].\\n     * @api\\n     */\\n    Projection.prototype.setWorldExtent = function (worldExtent) {\\n        this.worldExtent_ = worldExtent;\\n    };\\n    /**\\n     * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\\n     * for this projection.\\n     * @param {function(number, import(\\\"../coordinate.js\\\").Coordinate):number} func Function\\n     * @api\\n     */\\n    Projection.prototype.setGetPointResolution = function (func) {\\n        this.getPointResolutionFunc_ = func;\\n    };\\n    /**\\n     * Get the custom point resolution function for this projection (if set).\\n     * @return {function(number, import(\\\"../coordinate.js\\\").Coordinate):number|undefined} The custom point\\n     * resolution function (if set).\\n     */\\n    Projection.prototype.getPointResolutionFunc = function () {\\n        return this.getPointResolutionFunc_;\\n    };\\n    return Projection;\\n}());\\nexport default Projection;\\n//# sourceMappingURL=Projection.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/proj/epsg3857\\n */\\nimport { cosh } from '../math.js';\\nimport Projection from './Projection.js';\\nimport Units from './Units.js';\\n/**\\n * Radius of WGS84 sphere\\n *\\n * @const\\n * @type {number}\\n */\\nexport var RADIUS = 6378137;\\n/**\\n * @const\\n * @type {number}\\n */\\nexport var HALF_SIZE = Math.PI * RADIUS;\\n/**\\n * @const\\n * @type {import(\\\"../extent.js\\\").Extent}\\n */\\nexport var EXTENT = [\\n    -HALF_SIZE, -HALF_SIZE,\\n    HALF_SIZE, HALF_SIZE\\n];\\n/**\\n * @const\\n * @type {import(\\\"../extent.js\\\").Extent}\\n */\\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\\n/**\\n * @classdesc\\n * Projection object for web/spherical Mercator (EPSG:3857).\\n */\\nvar EPSG3857Projection = /** @class */ (function (_super) {\\n    __extends(EPSG3857Projection, _super);\\n    /**\\n     * @param {string} code Code.\\n     */\\n    function EPSG3857Projection(code) {\\n        return _super.call(this, {\\n            code: code,\\n            units: Units.METERS,\\n            extent: EXTENT,\\n            global: true,\\n            worldExtent: WORLD_EXTENT,\\n            getPointResolution: function (resolution, point) {\\n                return resolution / cosh(point[1] / RADIUS);\\n            }\\n        }) || this;\\n    }\\n    return EPSG3857Projection;\\n}(Projection));\\n/**\\n * Projections equal to EPSG:3857.\\n *\\n * @const\\n * @type {Array<import(\\\"./Projection.js\\\").default>}\\n */\\nexport var PROJECTIONS = [\\n    new EPSG3857Projection('EPSG:3857'),\\n    new EPSG3857Projection('EPSG:102100'),\\n    new EPSG3857Projection('EPSG:102113'),\\n    new EPSG3857Projection('EPSG:900913'),\\n    new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\\n    new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\\n    new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\\n];\\n/**\\n * Transformation from EPSG:4326 to EPSG:3857.\\n *\\n * @param {Array<number>} input Input array of coordinate values.\\n * @param {Array<number>=} opt_output Output array of coordinate values.\\n * @param {number=} opt_dimension Dimension (default is `2`).\\n * @return {Array<number>} Output array of coordinate values.\\n */\\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\\n    var length = input.length;\\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\\n    var output = opt_output;\\n    if (output === undefined) {\\n        if (dimension > 2) {\\n            // preserve values beyond second dimension\\n            output = input.slice();\\n        }\\n        else {\\n            output = new Array(length);\\n        }\\n    }\\n    var halfSize = HALF_SIZE;\\n    for (var i = 0; i < length; i += dimension) {\\n        output[i] = halfSize * input[i] / 180;\\n        var y = RADIUS *\\n            Math.log(Math.tan(Math.PI * (+input[i + 1] + 90) / 360));\\n        if (y > halfSize) {\\n            y = halfSize;\\n        }\\n        else if (y < -halfSize) {\\n            y = -halfSize;\\n        }\\n        output[i + 1] = y;\\n    }\\n    return output;\\n}\\n/**\\n * Transformation from EPSG:3857 to EPSG:4326.\\n *\\n * @param {Array<number>} input Input array of coordinate values.\\n * @param {Array<number>=} opt_output Output array of coordinate values.\\n * @param {number=} opt_dimension Dimension (default is `2`).\\n * @return {Array<number>} Output array of coordinate values.\\n */\\nexport function toEPSG4326(input, opt_output, opt_dimension) {\\n    var length = input.length;\\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\\n    var output = opt_output;\\n    if (output === undefined) {\\n        if (dimension > 2) {\\n            // preserve values beyond second dimension\\n            output = input.slice();\\n        }\\n        else {\\n            output = new Array(length);\\n        }\\n    }\\n    for (var i = 0; i < length; i += dimension) {\\n        output[i] = 180 * input[i] / HALF_SIZE;\\n        output[i + 1] = 360 * Math.atan(Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\\n    }\\n    return output;\\n}\\n//# sourceMappingURL=epsg3857.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/proj/epsg4326\\n */\\nimport Projection from './Projection.js';\\nimport Units from './Units.js';\\n/**\\n * Semi-major radius of the WGS84 ellipsoid.\\n *\\n * @const\\n * @type {number}\\n */\\nexport var RADIUS = 6378137;\\n/**\\n * Extent of the EPSG:4326 projection which is the whole world.\\n *\\n * @const\\n * @type {import(\\\"../extent.js\\\").Extent}\\n */\\nexport var EXTENT = [-180, -90, 180, 90];\\n/**\\n * @const\\n * @type {number}\\n */\\nexport var METERS_PER_UNIT = Math.PI * RADIUS / 180;\\n/**\\n * @classdesc\\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\\n *\\n * Note that OpenLayers does not strictly comply with the EPSG definition.\\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\\n */\\nvar EPSG4326Projection = /** @class */ (function (_super) {\\n    __extends(EPSG4326Projection, _super);\\n    /**\\n     * @param {string} code Code.\\n     * @param {string=} opt_axisOrientation Axis orientation.\\n     */\\n    function EPSG4326Projection(code, opt_axisOrientation) {\\n        return _super.call(this, {\\n            code: code,\\n            units: Units.DEGREES,\\n            extent: EXTENT,\\n            axisOrientation: opt_axisOrientation,\\n            global: true,\\n            metersPerUnit: METERS_PER_UNIT,\\n            worldExtent: EXTENT\\n        }) || this;\\n    }\\n    return EPSG4326Projection;\\n}(Projection));\\n/**\\n * Projections equal to EPSG:4326.\\n *\\n * @const\\n * @type {Array<import(\\\"./Projection.js\\\").default>}\\n */\\nexport var PROJECTIONS = [\\n    new EPSG4326Projection('CRS:84'),\\n    new EPSG4326Projection('EPSG:4326', 'neu'),\\n    new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\\n    new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\\n    new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\\n    new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\\n];\\n//# sourceMappingURL=epsg4326.js.map\",\"/**\\n * @module ol/proj/projections\\n */\\n/**\\n * @type {Object<string, import(\\\"./Projection.js\\\").default>}\\n */\\nvar cache = {};\\n/**\\n * Clear the projections cache.\\n */\\nexport function clear() {\\n    cache = {};\\n}\\n/**\\n * Get a cached projection by code.\\n * @param {string} code The code for the projection.\\n * @return {import(\\\"./Projection.js\\\").default} The projection (if cached).\\n */\\nexport function get(code) {\\n    return cache[code] || null;\\n}\\n/**\\n * Add a projection to the cache.\\n * @param {string} code The projection code.\\n * @param {import(\\\"./Projection.js\\\").default} projection The projection to cache.\\n */\\nexport function add(code, projection) {\\n    cache[code] = projection;\\n}\\n//# sourceMappingURL=projections.js.map\",\"/**\\n * @module ol/proj/transforms\\n */\\nimport { isEmpty } from '../obj.js';\\n/**\\n * @private\\n * @type {!Object<string, Object<string, import(\\\"../proj.js\\\").TransformFunction>>}\\n */\\nvar transforms = {};\\n/**\\n * Clear the transform cache.\\n */\\nexport function clear() {\\n    transforms = {};\\n}\\n/**\\n * Registers a conversion function to convert coordinates from the source\\n * projection to the destination projection.\\n *\\n * @param {import(\\\"./Projection.js\\\").default} source Source.\\n * @param {import(\\\"./Projection.js\\\").default} destination Destination.\\n * @param {import(\\\"../proj.js\\\").TransformFunction} transformFn Transform.\\n */\\nexport function add(source, destination, transformFn) {\\n    var sourceCode = source.getCode();\\n    var destinationCode = destination.getCode();\\n    if (!(sourceCode in transforms)) {\\n        transforms[sourceCode] = {};\\n    }\\n    transforms[sourceCode][destinationCode] = transformFn;\\n}\\n/**\\n * Unregisters the conversion function to convert coordinates from the source\\n * projection to the destination projection.  This method is used to clean up\\n * cached transforms during testing.\\n *\\n * @param {import(\\\"./Projection.js\\\").default} source Source projection.\\n * @param {import(\\\"./Projection.js\\\").default} destination Destination projection.\\n * @return {import(\\\"../proj.js\\\").TransformFunction} transformFn The unregistered transform.\\n */\\nexport function remove(source, destination) {\\n    var sourceCode = source.getCode();\\n    var destinationCode = destination.getCode();\\n    var transform = transforms[sourceCode][destinationCode];\\n    delete transforms[sourceCode][destinationCode];\\n    if (isEmpty(transforms[sourceCode])) {\\n        delete transforms[sourceCode];\\n    }\\n    return transform;\\n}\\n/**\\n * Get a transform given a source code and a destination code.\\n * @param {string} sourceCode The code for the source projection.\\n * @param {string} destinationCode The code for the destination projection.\\n * @return {import(\\\"../proj.js\\\").TransformFunction|undefined} The transform function (if found).\\n */\\nexport function get(sourceCode, destinationCode) {\\n    var transform;\\n    if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\\n        transform = transforms[sourceCode][destinationCode];\\n    }\\n    return transform;\\n}\\n//# sourceMappingURL=transforms.js.map\",\"/**\\n * @module ol/proj\\n */\\n/**\\n * The ol/proj module stores:\\n * * a list of {@link module:ol/proj/Projection}\\n * objects, one for each projection supported by the application\\n * * a list of transform functions needed to convert coordinates in one projection\\n * into another.\\n *\\n * The static functions are the methods used to maintain these.\\n * Each transform function can handle not only simple coordinate pairs, but also\\n * large arrays of coordinates such as vector geometries.\\n *\\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\\n * for example by Bing Maps or OpenStreetMap), together with the relevant\\n * transform functions.\\n *\\n * Additional transforms may be added by using the http://proj4js.org/\\n * library (version 2.2 or later). You can use the full build supplied by\\n * Proj4js, or create a custom build to support those projections you need; see\\n * the Proj4js website for how to do this. You also need the Proj4js definitions\\n * for the required projections. These definitions can be obtained from\\n * https://epsg.io/, and are a JS function, so can be loaded in a script\\n * tag (as in the examples) or pasted into your application.\\n *\\n * After all required projection definitions are added to proj4's registry (by\\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\\n * package. Existing transforms are not changed by this function. See\\n * examples/wms-image-custom-proj for an example of this.\\n *\\n * Additional projection definitions can be registered with `proj4.defs()` any\\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\\n * know in advance what projections are needed, you can initially load minimal\\n * support and then load whichever are requested.\\n *\\n * Note that Proj4js does not support projection extents. If you want to add\\n * one for creating default tile grids, you can add it after the Projection\\n * object has been created with `setExtent`, for example,\\n * `get('EPSG:1234').setExtent(extent)`.\\n *\\n * In addition to Proj4js support, any transform functions can be added with\\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\\n * examples/wms-custom-proj for an example of this.\\n *\\n * Note that if no transforms are needed and you only need to define the\\n * projection, just add a {@link module:ol/proj/Projection} with\\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\\n * this.\\n */\\nimport { getDistance } from './sphere.js';\\nimport { applyTransform } from './extent.js';\\nimport { modulo } from './math.js';\\nimport { toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS } from './proj/epsg3857.js';\\nimport { PROJECTIONS as EPSG4326_PROJECTIONS } from './proj/epsg4326.js';\\nimport Projection from './proj/Projection.js';\\nimport Units, { METERS_PER_UNIT } from './proj/Units.js';\\nimport * as projections from './proj/projections.js';\\nimport { add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc } from './proj/transforms.js';\\n/**\\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\\n * string or undefined.\\n * @typedef {Projection|string|undefined} ProjectionLike\\n * @api\\n */\\n/**\\n * A transform function accepts an array of input coordinate values, an optional\\n * output array, and an optional dimension (default should be 2).  The function\\n * transforms the input coordinate values, populates the output array, and\\n * returns the output array.\\n *\\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\\n * @api\\n */\\nexport { METERS_PER_UNIT };\\nexport { Projection };\\n/**\\n * @param {Array<number>} input Input coordinate array.\\n * @param {Array<number>=} opt_output Output array of coordinate values.\\n * @param {number=} opt_dimension Dimension.\\n * @return {Array<number>} Output coordinate array (new array, same coordinate\\n *     values).\\n */\\nexport function cloneTransform(input, opt_output, opt_dimension) {\\n    var output;\\n    if (opt_output !== undefined) {\\n        for (var i = 0, ii = input.length; i < ii; ++i) {\\n            opt_output[i] = input[i];\\n        }\\n        output = opt_output;\\n    }\\n    else {\\n        output = input.slice();\\n    }\\n    return output;\\n}\\n/**\\n * @param {Array<number>} input Input coordinate array.\\n * @param {Array<number>=} opt_output Output array of coordinate values.\\n * @param {number=} opt_dimension Dimension.\\n * @return {Array<number>} Input coordinate array (same array as input).\\n */\\nexport function identityTransform(input, opt_output, opt_dimension) {\\n    if (opt_output !== undefined && input !== opt_output) {\\n        for (var i = 0, ii = input.length; i < ii; ++i) {\\n            opt_output[i] = input[i];\\n        }\\n        input = opt_output;\\n    }\\n    return input;\\n}\\n/**\\n * Add a Projection object to the list of supported projections that can be\\n * looked up by their code.\\n *\\n * @param {Projection} projection Projection instance.\\n * @api\\n */\\nexport function addProjection(projection) {\\n    projections.add(projection.getCode(), projection);\\n    addTransformFunc(projection, projection, cloneTransform);\\n}\\n/**\\n * @param {Array<Projection>} projections Projections.\\n */\\nexport function addProjections(projections) {\\n    projections.forEach(addProjection);\\n}\\n/**\\n * Fetches a Projection object for the code specified.\\n *\\n * @param {ProjectionLike} projectionLike Either a code string which is\\n *     a combination of authority and identifier such as \\\"EPSG:4326\\\", or an\\n *     existing projection object, or undefined.\\n * @return {Projection} Projection object, or null if not in list.\\n * @api\\n */\\nexport function get(projectionLike) {\\n    return typeof projectionLike === 'string' ?\\n        projections.get(/** @type {string} */ (projectionLike)) :\\n        ( /** @type {Projection} */(projectionLike) || null);\\n}\\n/**\\n * Get the resolution of the point in degrees or distance units.\\n * For projections with degrees as the unit this will simply return the\\n * provided resolution. For other projections the point resolution is\\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\\n * measuring its width and height on the normal sphere,\\n * and taking the average of the width and height.\\n * A custom function can be provided for a specific projection, either\\n * by setting the `getPointResolution` option in the\\n * {@link module:ol/proj/Projection~Projection} constructor or by using\\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\\n * projection object.\\n * @param {ProjectionLike} projection The projection.\\n * @param {number} resolution Nominal resolution in projection units.\\n * @param {import(\\\"./coordinate.js\\\").Coordinate} point Point to find adjusted resolution at.\\n * @param {Units=} opt_units Units to get the point resolution in.\\n * Default is the projection's units.\\n * @return {number} Point resolution.\\n * @api\\n */\\nexport function getPointResolution(projection, resolution, point, opt_units) {\\n    projection = get(projection);\\n    var pointResolution;\\n    var getter = projection.getPointResolutionFunc();\\n    if (getter) {\\n        pointResolution = getter(resolution, point);\\n        if (opt_units && opt_units !== projection.getUnits()) {\\n            var metersPerUnit = projection.getMetersPerUnit();\\n            if (metersPerUnit) {\\n                pointResolution = pointResolution * metersPerUnit / METERS_PER_UNIT[opt_units];\\n            }\\n        }\\n    }\\n    else {\\n        var units = projection.getUnits();\\n        if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\\n            pointResolution = resolution;\\n        }\\n        else {\\n            // Estimate point resolution by transforming the center pixel to EPSG:4326,\\n            // measuring its width and height on the normal sphere, and taking the\\n            // average of the width and height.\\n            var toEPSG4326_1 = getTransformFromProjections(projection, get('EPSG:4326'));\\n            var vertices = [\\n                point[0] - resolution / 2, point[1],\\n                point[0] + resolution / 2, point[1],\\n                point[0], point[1] - resolution / 2,\\n                point[0], point[1] + resolution / 2\\n            ];\\n            vertices = toEPSG4326_1(vertices, vertices, 2);\\n            var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\\n            var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\\n            pointResolution = (width + height) / 2;\\n            var metersPerUnit = opt_units ?\\n                METERS_PER_UNIT[opt_units] :\\n                projection.getMetersPerUnit();\\n            if (metersPerUnit !== undefined) {\\n                pointResolution /= metersPerUnit;\\n            }\\n        }\\n    }\\n    return pointResolution;\\n}\\n/**\\n * Registers transformation functions that don't alter coordinates. Those allow\\n * to transform between projections with equal meaning.\\n *\\n * @param {Array<Projection>} projections Projections.\\n * @api\\n */\\nexport function addEquivalentProjections(projections) {\\n    addProjections(projections);\\n    projections.forEach(function (source) {\\n        projections.forEach(function (destination) {\\n            if (source !== destination) {\\n                addTransformFunc(source, destination, cloneTransform);\\n            }\\n        });\\n    });\\n}\\n/**\\n * Registers transformation functions to convert coordinates in any projection\\n * in projection1 to any projection in projection2.\\n *\\n * @param {Array<Projection>} projections1 Projections with equal\\n *     meaning.\\n * @param {Array<Projection>} projections2 Projections with equal\\n *     meaning.\\n * @param {TransformFunction} forwardTransform Transformation from any\\n *   projection in projection1 to any projection in projection2.\\n * @param {TransformFunction} inverseTransform Transform from any projection\\n *   in projection2 to any projection in projection1..\\n */\\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\\n    projections1.forEach(function (projection1) {\\n        projections2.forEach(function (projection2) {\\n            addTransformFunc(projection1, projection2, forwardTransform);\\n            addTransformFunc(projection2, projection1, inverseTransform);\\n        });\\n    });\\n}\\n/**\\n * Clear all cached projections and transforms.\\n */\\nexport function clearAllProjections() {\\n    projections.clear();\\n    clearTransformFuncs();\\n}\\n/**\\n * @param {Projection|string|undefined} projection Projection.\\n * @param {string} defaultCode Default code.\\n * @return {Projection} Projection.\\n */\\nexport function createProjection(projection, defaultCode) {\\n    if (!projection) {\\n        return get(defaultCode);\\n    }\\n    else if (typeof projection === 'string') {\\n        return get(projection);\\n    }\\n    else {\\n        return (\\n        /** @type {Projection} */ (projection));\\n    }\\n}\\n/**\\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\\n * function.\\n * @param {function(import(\\\"./coordinate.js\\\").Coordinate): import(\\\"./coordinate.js\\\").Coordinate} coordTransform Coordinate\\n *     transform.\\n * @return {TransformFunction} Transform function.\\n */\\nexport function createTransformFromCoordinateTransform(coordTransform) {\\n    return (\\n    /**\\n     * @param {Array<number>} input Input.\\n     * @param {Array<number>=} opt_output Output.\\n     * @param {number=} opt_dimension Dimension.\\n     * @return {Array<number>} Output.\\n     */\\n    function (input, opt_output, opt_dimension) {\\n        var length = input.length;\\n        var dimension = opt_dimension !== undefined ? opt_dimension : 2;\\n        var output = opt_output !== undefined ? opt_output : new Array(length);\\n        for (var i = 0; i < length; i += dimension) {\\n            var point = coordTransform([input[i], input[i + 1]]);\\n            output[i] = point[0];\\n            output[i + 1] = point[1];\\n            for (var j = dimension - 1; j >= 2; --j) {\\n                output[i + j] = input[i + j];\\n            }\\n        }\\n        return output;\\n    });\\n}\\n/**\\n * Registers coordinate transform functions to convert coordinates between the\\n * source projection and the destination projection.\\n * The forward and inverse functions convert coordinate pairs; this function\\n * converts these into the functions used internally which also handle\\n * extents and coordinate arrays.\\n *\\n * @param {ProjectionLike} source Source projection.\\n * @param {ProjectionLike} destination Destination projection.\\n * @param {function(import(\\\"./coordinate.js\\\").Coordinate): import(\\\"./coordinate.js\\\").Coordinate} forward The forward transform\\n *     function (that is, from the source projection to the destination\\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\\n *     the transformed {@link module:ol/coordinate~Coordinate}.\\n * @param {function(import(\\\"./coordinate.js\\\").Coordinate): import(\\\"./coordinate.js\\\").Coordinate} inverse The inverse transform\\n *     function (that is, from the destination projection to the source\\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\\n *     the transformed {@link module:ol/coordinate~Coordinate}.\\n * @api\\n */\\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\\n    var sourceProj = get(source);\\n    var destProj = get(destination);\\n    addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\\n    addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\\n}\\n/**\\n * Transforms a coordinate from longitude/latitude to a different projection.\\n * @param {import(\\\"./coordinate.js\\\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\\n *     an array with longitude as 1st and latitude as 2nd element.\\n * @param {ProjectionLike=} opt_projection Target projection. The\\n *     default is Web Mercator, i.e. 'EPSG:3857'.\\n * @return {import(\\\"./coordinate.js\\\").Coordinate} Coordinate projected to the target projection.\\n * @api\\n */\\nexport function fromLonLat(coordinate, opt_projection) {\\n    return transform(coordinate, 'EPSG:4326', opt_projection !== undefined ? opt_projection : 'EPSG:3857');\\n}\\n/**\\n * Transforms a coordinate to longitude/latitude.\\n * @param {import(\\\"./coordinate.js\\\").Coordinate} coordinate Projected coordinate.\\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\\n * @return {import(\\\"./coordinate.js\\\").Coordinate} Coordinate as longitude and latitude, i.e. an array\\n *     with longitude as 1st and latitude as 2nd element.\\n * @api\\n */\\nexport function toLonLat(coordinate, opt_projection) {\\n    var lonLat = transform(coordinate, opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\\n    var lon = lonLat[0];\\n    if (lon < -180 || lon > 180) {\\n        lonLat[0] = modulo(lon + 180, 360) - 180;\\n    }\\n    return lonLat;\\n}\\n/**\\n * Checks if two projections are the same, that is every coordinate in one\\n * projection does represent the same geographic point as the same coordinate in\\n * the other projection.\\n *\\n * @param {Projection} projection1 Projection 1.\\n * @param {Projection} projection2 Projection 2.\\n * @return {boolean} Equivalent.\\n * @api\\n */\\nexport function equivalent(projection1, projection2) {\\n    if (projection1 === projection2) {\\n        return true;\\n    }\\n    var equalUnits = projection1.getUnits() === projection2.getUnits();\\n    if (projection1.getCode() === projection2.getCode()) {\\n        return equalUnits;\\n    }\\n    else {\\n        var transformFunc = getTransformFromProjections(projection1, projection2);\\n        return transformFunc === cloneTransform && equalUnits;\\n    }\\n}\\n/**\\n * Searches in the list of transform functions for the function for converting\\n * coordinates from the source projection to the destination projection.\\n *\\n * @param {Projection} sourceProjection Source Projection object.\\n * @param {Projection} destinationProjection Destination Projection\\n *     object.\\n * @return {TransformFunction} Transform function.\\n */\\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\\n    var sourceCode = sourceProjection.getCode();\\n    var destinationCode = destinationProjection.getCode();\\n    var transformFunc = getTransformFunc(sourceCode, destinationCode);\\n    if (!transformFunc) {\\n        transformFunc = identityTransform;\\n    }\\n    return transformFunc;\\n}\\n/**\\n * Given the projection-like objects, searches for a transformation\\n * function to convert a coordinates array from the source projection to the\\n * destination projection.\\n *\\n * @param {ProjectionLike} source Source.\\n * @param {ProjectionLike} destination Destination.\\n * @return {TransformFunction} Transform function.\\n * @api\\n */\\nexport function getTransform(source, destination) {\\n    var sourceProjection = get(source);\\n    var destinationProjection = get(destination);\\n    return getTransformFromProjections(sourceProjection, destinationProjection);\\n}\\n/**\\n * Transforms a coordinate from source projection to destination projection.\\n * This returns a new coordinate (and does not modify the original).\\n *\\n * See {@link module:ol/proj~transformExtent} for extent transformation.\\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\\n * subclasses for geometry transforms.\\n *\\n * @param {import(\\\"./coordinate.js\\\").Coordinate} coordinate Coordinate.\\n * @param {ProjectionLike} source Source projection-like.\\n * @param {ProjectionLike} destination Destination projection-like.\\n * @return {import(\\\"./coordinate.js\\\").Coordinate} Coordinate.\\n * @api\\n */\\nexport function transform(coordinate, source, destination) {\\n    var transformFunc = getTransform(source, destination);\\n    return transformFunc(coordinate, undefined, coordinate.length);\\n}\\n/**\\n * Transforms an extent from source projection to destination projection.  This\\n * returns a new extent (and does not modify the original).\\n *\\n * @param {import(\\\"./extent.js\\\").Extent} extent The extent to transform.\\n * @param {ProjectionLike} source Source projection-like.\\n * @param {ProjectionLike} destination Destination projection-like.\\n * @return {import(\\\"./extent.js\\\").Extent} The transformed extent.\\n * @api\\n */\\nexport function transformExtent(extent, source, destination) {\\n    var transformFunc = getTransform(source, destination);\\n    return applyTransform(extent, transformFunc);\\n}\\n/**\\n * Transforms the given point to the destination projection.\\n *\\n * @param {import(\\\"./coordinate.js\\\").Coordinate} point Point.\\n * @param {Projection} sourceProjection Source projection.\\n * @param {Projection} destinationProjection Destination projection.\\n * @return {import(\\\"./coordinate.js\\\").Coordinate} Point.\\n */\\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\\n    var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\\n    return transformFunc(point);\\n}\\n/**\\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\\n * by when this module is executed and should only need to be called again after\\n * `clearAllProjections()` is called (e.g. in tests).\\n */\\nexport function addCommon() {\\n    // Add transformations that don't alter coordinates to convert within set of\\n    // projections with equal meaning.\\n    addEquivalentProjections(EPSG3857_PROJECTIONS);\\n    addEquivalentProjections(EPSG4326_PROJECTIONS);\\n    // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\\n    // coordinates and back.\\n    addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\\n}\\naddCommon();\\n//# sourceMappingURL=proj.js.map\",\"/**\\n * @module ol/transform\\n */\\nimport { assert } from './asserts.js';\\n/**\\n * An array representing an affine 2d transformation for use with\\n * {@link module:ol/transform} functions. The array has 6 elements.\\n * @typedef {!Array<number>} Transform\\n */\\n/**\\n * Collection of affine 2d transformation functions. The functions work on an\\n * array of 6 elements. The element order is compatible with the [SVGMatrix\\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\\n * a subset (elements a to f) of a 3×3 matrix:\\n * ```\\n * [ a c e ]\\n * [ b d f ]\\n * [ 0 0 1 ]\\n * ```\\n */\\n/**\\n * @private\\n * @type {Transform}\\n */\\nvar tmp_ = new Array(6);\\n/**\\n * Create an identity transform.\\n * @return {!Transform} Identity transform.\\n */\\nexport function create() {\\n    return [1, 0, 0, 1, 0, 0];\\n}\\n/**\\n * Resets the given transform to an identity transform.\\n * @param {!Transform} transform Transform.\\n * @return {!Transform} Transform.\\n */\\nexport function reset(transform) {\\n    return set(transform, 1, 0, 0, 1, 0, 0);\\n}\\n/**\\n * Multiply the underlying matrices of two transforms and return the result in\\n * the first transform.\\n * @param {!Transform} transform1 Transform parameters of matrix 1.\\n * @param {!Transform} transform2 Transform parameters of matrix 2.\\n * @return {!Transform} transform1 multiplied with transform2.\\n */\\nexport function multiply(transform1, transform2) {\\n    var a1 = transform1[0];\\n    var b1 = transform1[1];\\n    var c1 = transform1[2];\\n    var d1 = transform1[3];\\n    var e1 = transform1[4];\\n    var f1 = transform1[5];\\n    var a2 = transform2[0];\\n    var b2 = transform2[1];\\n    var c2 = transform2[2];\\n    var d2 = transform2[3];\\n    var e2 = transform2[4];\\n    var f2 = transform2[5];\\n    transform1[0] = a1 * a2 + c1 * b2;\\n    transform1[1] = b1 * a2 + d1 * b2;\\n    transform1[2] = a1 * c2 + c1 * d2;\\n    transform1[3] = b1 * c2 + d1 * d2;\\n    transform1[4] = a1 * e2 + c1 * f2 + e1;\\n    transform1[5] = b1 * e2 + d1 * f2 + f1;\\n    return transform1;\\n}\\n/**\\n * Set the transform components a-f on a given transform.\\n * @param {!Transform} transform Transform.\\n * @param {number} a The a component of the transform.\\n * @param {number} b The b component of the transform.\\n * @param {number} c The c component of the transform.\\n * @param {number} d The d component of the transform.\\n * @param {number} e The e component of the transform.\\n * @param {number} f The f component of the transform.\\n * @return {!Transform} Matrix with transform applied.\\n */\\nexport function set(transform, a, b, c, d, e, f) {\\n    transform[0] = a;\\n    transform[1] = b;\\n    transform[2] = c;\\n    transform[3] = d;\\n    transform[4] = e;\\n    transform[5] = f;\\n    return transform;\\n}\\n/**\\n * Set transform on one matrix from another matrix.\\n * @param {!Transform} transform1 Matrix to set transform to.\\n * @param {!Transform} transform2 Matrix to set transform from.\\n * @return {!Transform} transform1 with transform from transform2 applied.\\n */\\nexport function setFromArray(transform1, transform2) {\\n    transform1[0] = transform2[0];\\n    transform1[1] = transform2[1];\\n    transform1[2] = transform2[2];\\n    transform1[3] = transform2[3];\\n    transform1[4] = transform2[4];\\n    transform1[5] = transform2[5];\\n    return transform1;\\n}\\n/**\\n * Transforms the given coordinate with the given transform returning the\\n * resulting, transformed coordinate. The coordinate will be modified in-place.\\n *\\n * @param {Transform} transform The transformation.\\n * @param {import(\\\"./coordinate.js\\\").Coordinate|import(\\\"./pixel.js\\\").Pixel} coordinate The coordinate to transform.\\n * @return {import(\\\"./coordinate.js\\\").Coordinate|import(\\\"./pixel.js\\\").Pixel} return coordinate so that operations can be\\n *     chained together.\\n */\\nexport function apply(transform, coordinate) {\\n    var x = coordinate[0];\\n    var y = coordinate[1];\\n    coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\\n    coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\\n    return coordinate;\\n}\\n/**\\n * Applies rotation to the given transform.\\n * @param {!Transform} transform Transform.\\n * @param {number} angle Angle in radians.\\n * @return {!Transform} The rotated transform.\\n */\\nexport function rotate(transform, angle) {\\n    var cos = Math.cos(angle);\\n    var sin = Math.sin(angle);\\n    return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\\n}\\n/**\\n * Applies scale to a given transform.\\n * @param {!Transform} transform Transform.\\n * @param {number} x Scale factor x.\\n * @param {number} y Scale factor y.\\n * @return {!Transform} The scaled transform.\\n */\\nexport function scale(transform, x, y) {\\n    return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\\n}\\n/**\\n * Creates a scale transform.\\n * @param {!Transform} target Transform to overwrite.\\n * @param {number} x Scale factor x.\\n * @param {number} y Scale factor y.\\n * @return {!Transform} The scale transform.\\n */\\nexport function makeScale(target, x, y) {\\n    return set(target, x, 0, 0, y, 0, 0);\\n}\\n/**\\n * Applies translation to the given transform.\\n * @param {!Transform} transform Transform.\\n * @param {number} dx Translation x.\\n * @param {number} dy Translation y.\\n * @return {!Transform} The translated transform.\\n */\\nexport function translate(transform, dx, dy) {\\n    return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\\n}\\n/**\\n * Creates a composite transform given an initial translation, scale, rotation, and\\n * final translation (in that order only, not commutative).\\n * @param {!Transform} transform The transform (will be modified in place).\\n * @param {number} dx1 Initial translation x.\\n * @param {number} dy1 Initial translation y.\\n * @param {number} sx Scale factor x.\\n * @param {number} sy Scale factor y.\\n * @param {number} angle Rotation (in counter-clockwise radians).\\n * @param {number} dx2 Final translation x.\\n * @param {number} dy2 Final translation y.\\n * @return {!Transform} The composite transform.\\n */\\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\\n    var sin = Math.sin(angle);\\n    var cos = Math.cos(angle);\\n    transform[0] = sx * cos;\\n    transform[1] = sy * sin;\\n    transform[2] = -sx * sin;\\n    transform[3] = sy * cos;\\n    transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\\n    transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\\n    return transform;\\n}\\n/**\\n * Invert the given transform.\\n * @param {!Transform} source The source transform to invert.\\n * @return {!Transform} The inverted (source) transform.\\n */\\nexport function invert(source) {\\n    return makeInverse(source, source);\\n}\\n/**\\n * Invert the given transform.\\n * @param {!Transform} target Transform to be set as the inverse of\\n *     the source transform.\\n * @param {!Transform} source The source transform to invert.\\n * @return {!Transform} The inverted (target) transform.\\n */\\nexport function makeInverse(target, source) {\\n    var det = determinant(source);\\n    assert(det !== 0, 32); // Transformation matrix cannot be inverted\\n    var a = source[0];\\n    var b = source[1];\\n    var c = source[2];\\n    var d = source[3];\\n    var e = source[4];\\n    var f = source[5];\\n    target[0] = d / det;\\n    target[1] = -b / det;\\n    target[2] = -c / det;\\n    target[3] = a / det;\\n    target[4] = (c * f - d * e) / det;\\n    target[5] = -(a * f - b * e) / det;\\n    return target;\\n}\\n/**\\n * Returns the determinant of the given matrix.\\n * @param {!Transform} mat Matrix.\\n * @return {number} Determinant.\\n */\\nexport function determinant(mat) {\\n    return mat[0] * mat[3] - mat[1] * mat[2];\\n}\\n/**\\n * A string version of the transform.  This can be used\\n * for CSS transforms.\\n * @param {!Transform} mat Matrix.\\n * @return {string} The transform as a string.\\n */\\nexport function toString(mat) {\\n    return 'matrix(' + mat.join(', ') + ')';\\n}\\n//# sourceMappingURL=transform.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/geom/Geometry\\n */\\nimport { abstract } from '../util.js';\\nimport BaseObject from '../Object.js';\\nimport { createEmpty, getHeight, returnOrUpdate } from '../extent.js';\\nimport { transform2D } from './flat/transform.js';\\nimport { get as getProjection, getTransform } from '../proj.js';\\nimport Units from '../proj/Units.js';\\nimport { create as createTransform, compose as composeTransform } from '../transform.js';\\n/**\\n * @type {import(\\\"../transform.js\\\").Transform}\\n */\\nvar tmpTransform = createTransform();\\n/**\\n * @classdesc\\n * Abstract base class; normally only used for creating subclasses and not\\n * instantiated in apps.\\n * Base class for vector geometries.\\n *\\n * To get notified of changes to the geometry, register a listener for the\\n * generic `change` event on your geometry instance.\\n *\\n * @abstract\\n * @api\\n */\\nvar Geometry = /** @class */ (function (_super) {\\n    __extends(Geometry, _super);\\n    function Geometry() {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * @private\\n         * @type {import(\\\"../extent.js\\\").Extent}\\n         */\\n        _this.extent_ = createEmpty();\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.extentRevision_ = -1;\\n        /**\\n         * @protected\\n         * @type {Object<string, Geometry>}\\n         */\\n        _this.simplifiedGeometryCache = {};\\n        /**\\n         * @protected\\n         * @type {number}\\n         */\\n        _this.simplifiedGeometryMaxMinSquaredTolerance = 0;\\n        /**\\n         * @protected\\n         * @type {number}\\n         */\\n        _this.simplifiedGeometryRevision = 0;\\n        return _this;\\n    }\\n    /**\\n     * Make a complete copy of the geometry.\\n     * @abstract\\n     * @return {!Geometry} Clone.\\n     */\\n    Geometry.prototype.clone = function () {\\n        return abstract();\\n    };\\n    /**\\n     * @abstract\\n     * @param {number} x X.\\n     * @param {number} y Y.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} closestPoint Closest point.\\n     * @param {number} minSquaredDistance Minimum squared distance.\\n     * @return {number} Minimum squared distance.\\n     */\\n    Geometry.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\\n        return abstract();\\n    };\\n    /**\\n     * @param {number} x X.\\n     * @param {number} y Y.\\n     * @return {boolean} Contains (x, y).\\n     */\\n    Geometry.prototype.containsXY = function (x, y) {\\n        var coord = this.getClosestPoint([x, y]);\\n        return coord[0] === x && coord[1] === y;\\n    };\\n    /**\\n     * Return the closest point of the geometry to the passed point as\\n     * {@link module:ol/coordinate~Coordinate coordinate}.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} point Point.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate=} opt_closestPoint Closest point.\\n     * @return {import(\\\"../coordinate.js\\\").Coordinate} Closest point.\\n     * @api\\n     */\\n    Geometry.prototype.getClosestPoint = function (point, opt_closestPoint) {\\n        var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\\n        this.closestPointXY(point[0], point[1], closestPoint, Infinity);\\n        return closestPoint;\\n    };\\n    /**\\n     * Returns true if this geometry includes the specified coordinate. If the\\n     * coordinate is on the boundary of the geometry, returns false.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} coordinate Coordinate.\\n     * @return {boolean} Contains coordinate.\\n     * @api\\n     */\\n    Geometry.prototype.intersectsCoordinate = function (coordinate) {\\n        return this.containsXY(coordinate[0], coordinate[1]);\\n    };\\n    /**\\n     * @abstract\\n     * @param {import(\\\"../extent.js\\\").Extent} extent Extent.\\n     * @protected\\n     * @return {import(\\\"../extent.js\\\").Extent} extent Extent.\\n     */\\n    Geometry.prototype.computeExtent = function (extent) {\\n        return abstract();\\n    };\\n    /**\\n     * Get the extent of the geometry.\\n     * @param {import(\\\"../extent.js\\\").Extent=} opt_extent Extent.\\n     * @return {import(\\\"../extent.js\\\").Extent} extent Extent.\\n     * @api\\n     */\\n    Geometry.prototype.getExtent = function (opt_extent) {\\n        if (this.extentRevision_ != this.getRevision()) {\\n            this.extent_ = this.computeExtent(this.extent_);\\n            this.extentRevision_ = this.getRevision();\\n        }\\n        return returnOrUpdate(this.extent_, opt_extent);\\n    };\\n    /**\\n     * Rotate the geometry around a given coordinate. This modifies the geometry\\n     * coordinates in place.\\n     * @abstract\\n     * @param {number} angle Rotation angle in radians.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} anchor The rotation center.\\n     * @api\\n     */\\n    Geometry.prototype.rotate = function (angle, anchor) {\\n        abstract();\\n    };\\n    /**\\n     * Scale the geometry (with an optional origin).  This modifies the geometry\\n     * coordinates in place.\\n     * @abstract\\n     * @param {number} sx The scaling factor in the x-direction.\\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\\n     *     sx).\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate=} opt_anchor The scale origin (defaults to the center\\n     *     of the geometry extent).\\n     * @api\\n     */\\n    Geometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\\n        abstract();\\n    };\\n    /**\\n     * Create a simplified version of this geometry.  For linestrings, this uses\\n     * the the {@link\\n     * https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\\n     * Douglas Peucker} algorithm.  For polygons, a quantization-based\\n     * simplification is used to preserve topology.\\n     * @param {number} tolerance The tolerance distance for simplification.\\n     * @return {Geometry} A new, simplified version of the original geometry.\\n     * @api\\n     */\\n    Geometry.prototype.simplify = function (tolerance) {\\n        return this.getSimplifiedGeometry(tolerance * tolerance);\\n    };\\n    /**\\n     * Create a simplified version of this geometry using the Douglas Peucker\\n     * algorithm.\\n     * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\\n     * @abstract\\n     * @param {number} squaredTolerance Squared tolerance.\\n     * @return {Geometry} Simplified geometry.\\n     */\\n    Geometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\\n        return abstract();\\n    };\\n    /**\\n     * Get the type of this geometry.\\n     * @abstract\\n     * @return {import(\\\"./GeometryType.js\\\").default} Geometry type.\\n     */\\n    Geometry.prototype.getType = function () {\\n        return abstract();\\n    };\\n    /**\\n     * Apply a transform function to each coordinate of the geometry.\\n     * The geometry is modified in place.\\n     * If you do not want the geometry modified in place, first `clone()` it and\\n     * then use this function on the clone.\\n     * @abstract\\n     * @param {import(\\\"../proj.js\\\").TransformFunction} transformFn Transform.\\n     */\\n    Geometry.prototype.applyTransform = function (transformFn) {\\n        abstract();\\n    };\\n    /**\\n     * Test if the geometry and the passed extent intersect.\\n     * @abstract\\n     * @param {import(\\\"../extent.js\\\").Extent} extent Extent.\\n     * @return {boolean} `true` if the geometry and the extent intersect.\\n     */\\n    Geometry.prototype.intersectsExtent = function (extent) {\\n        return abstract();\\n    };\\n    /**\\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\\n     * instead you want a new geometry, first `clone()` this geometry.\\n     * @abstract\\n     * @param {number} deltaX Delta X.\\n     * @param {number} deltaY Delta Y.\\n     * @api\\n     */\\n    Geometry.prototype.translate = function (deltaX, deltaY) {\\n        abstract();\\n    };\\n    /**\\n     * Transform each coordinate of the geometry from one coordinate reference\\n     * system to another. The geometry is modified in place.\\n     * For example, a line will be transformed to a line and a circle to a circle.\\n     * If you do not want the geometry modified in place, first `clone()` it and\\n     * then use this function on the clone.\\n     *\\n     * @param {import(\\\"../proj.js\\\").ProjectionLike} source The current projection.  Can be a\\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\\n     * @param {import(\\\"../proj.js\\\").ProjectionLike} destination The desired projection.  Can be a\\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\\n     * @return {Geometry} This geometry.  Note that original geometry is\\n     *     modified in place.\\n     * @api\\n     */\\n    Geometry.prototype.transform = function (source, destination) {\\n        /** @type {import(\\\"../proj/Projection.js\\\").default} */\\n        var sourceProj = getProjection(source);\\n        var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS ?\\n            function (inCoordinates, outCoordinates, stride) {\\n                var pixelExtent = sourceProj.getExtent();\\n                var projectedExtent = sourceProj.getWorldExtent();\\n                var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\\n                composeTransform(tmpTransform, projectedExtent[0], projectedExtent[3], scale, -scale, 0, 0, 0);\\n                transform2D(inCoordinates, 0, inCoordinates.length, stride, tmpTransform, outCoordinates);\\n                return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\\n            } :\\n            getTransform(sourceProj, destination);\\n        this.applyTransform(transformFn);\\n        return this;\\n    };\\n    return Geometry;\\n}(BaseObject));\\nexport default Geometry;\\n//# sourceMappingURL=Geometry.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/geom/SimpleGeometry\\n */\\nimport { abstract } from '../util.js';\\nimport { createOrUpdateFromFlatCoordinates, getCenter } from '../extent.js';\\nimport Geometry from './Geometry.js';\\nimport GeometryLayout from './GeometryLayout.js';\\nimport { rotate, scale, translate, transform2D } from './flat/transform.js';\\nimport { clear } from '../obj.js';\\n/**\\n * @classdesc\\n * Abstract base class; only used for creating subclasses; do not instantiate\\n * in apps, as cannot be rendered.\\n *\\n * @abstract\\n * @api\\n */\\nvar SimpleGeometry = /** @class */ (function (_super) {\\n    __extends(SimpleGeometry, _super);\\n    function SimpleGeometry() {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * @protected\\n         * @type {GeometryLayout}\\n         */\\n        _this.layout = GeometryLayout.XY;\\n        /**\\n         * @protected\\n         * @type {number}\\n         */\\n        _this.stride = 2;\\n        /**\\n         * @protected\\n         * @type {Array<number>}\\n         */\\n        _this.flatCoordinates = null;\\n        return _this;\\n    }\\n    /**\\n     * @inheritDoc\\n     */\\n    SimpleGeometry.prototype.computeExtent = function (extent) {\\n        return createOrUpdateFromFlatCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\\n    };\\n    /**\\n     * @abstract\\n     * @return {Array<*>} Coordinates.\\n     */\\n    SimpleGeometry.prototype.getCoordinates = function () {\\n        return abstract();\\n    };\\n    /**\\n     * Return the first coordinate of the geometry.\\n     * @return {import(\\\"../coordinate.js\\\").Coordinate} First coordinate.\\n     * @api\\n     */\\n    SimpleGeometry.prototype.getFirstCoordinate = function () {\\n        return this.flatCoordinates.slice(0, this.stride);\\n    };\\n    /**\\n     * @return {Array<number>} Flat coordinates.\\n     */\\n    SimpleGeometry.prototype.getFlatCoordinates = function () {\\n        return this.flatCoordinates;\\n    };\\n    /**\\n     * Return the last coordinate of the geometry.\\n     * @return {import(\\\"../coordinate.js\\\").Coordinate} Last point.\\n     * @api\\n     */\\n    SimpleGeometry.prototype.getLastCoordinate = function () {\\n        return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\\n    };\\n    /**\\n     * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\\n     * @return {GeometryLayout} Layout.\\n     * @api\\n     */\\n    SimpleGeometry.prototype.getLayout = function () {\\n        return this.layout;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    SimpleGeometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\\n        if (this.simplifiedGeometryRevision != this.getRevision()) {\\n            clear(this.simplifiedGeometryCache);\\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\\n            this.simplifiedGeometryRevision = this.getRevision();\\n        }\\n        // If squaredTolerance is negative or if we know that simplification will not\\n        // have any effect then just return this.\\n        if (squaredTolerance < 0 ||\\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\\n                squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\\n            return this;\\n        }\\n        var key = squaredTolerance.toString();\\n        if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\\n            return this.simplifiedGeometryCache[key];\\n        }\\n        else {\\n            var simplifiedGeometry = this.getSimplifiedGeometryInternal(squaredTolerance);\\n            var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\\n            if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\\n                this.simplifiedGeometryCache[key] = simplifiedGeometry;\\n                return simplifiedGeometry;\\n            }\\n            else {\\n                // Simplification did not actually remove any coordinates.  We now know\\n                // that any calls to getSimplifiedGeometry with a squaredTolerance less\\n                // than or equal to the current squaredTolerance will also not have any\\n                // effect.  This allows us to short circuit simplification (saving CPU\\n                // cycles) and prevents the cache of simplified geometries from filling\\n                // up with useless identical copies of this geometry (saving memory).\\n                this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\\n                return this;\\n            }\\n        }\\n    };\\n    /**\\n     * @param {number} squaredTolerance Squared tolerance.\\n     * @return {SimpleGeometry} Simplified geometry.\\n     * @protected\\n     */\\n    SimpleGeometry.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\\n        return this;\\n    };\\n    /**\\n     * @return {number} Stride.\\n     */\\n    SimpleGeometry.prototype.getStride = function () {\\n        return this.stride;\\n    };\\n    /**\\n     * @param {GeometryLayout} layout Layout.\\n     * @param {Array<number>} flatCoordinates Flat coordinates.\\n     */\\n    SimpleGeometry.prototype.setFlatCoordinates = function (layout, flatCoordinates) {\\n        this.stride = getStrideForLayout(layout);\\n        this.layout = layout;\\n        this.flatCoordinates = flatCoordinates;\\n    };\\n    /**\\n     * @abstract\\n     * @param {!Array<*>} coordinates Coordinates.\\n     * @param {GeometryLayout=} opt_layout Layout.\\n     */\\n    SimpleGeometry.prototype.setCoordinates = function (coordinates, opt_layout) {\\n        abstract();\\n    };\\n    /**\\n     * @param {GeometryLayout|undefined} layout Layout.\\n     * @param {Array<*>} coordinates Coordinates.\\n     * @param {number} nesting Nesting.\\n     * @protected\\n     */\\n    SimpleGeometry.prototype.setLayout = function (layout, coordinates, nesting) {\\n        /** @type {number} */\\n        var stride;\\n        if (layout) {\\n            stride = getStrideForLayout(layout);\\n        }\\n        else {\\n            for (var i = 0; i < nesting; ++i) {\\n                if (coordinates.length === 0) {\\n                    this.layout = GeometryLayout.XY;\\n                    this.stride = 2;\\n                    return;\\n                }\\n                else {\\n                    coordinates = /** @type {Array} */ (coordinates[0]);\\n                }\\n            }\\n            stride = coordinates.length;\\n            layout = getLayoutForStride(stride);\\n        }\\n        this.layout = layout;\\n        this.stride = stride;\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    SimpleGeometry.prototype.applyTransform = function (transformFn) {\\n        if (this.flatCoordinates) {\\n            transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\\n            this.changed();\\n        }\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    SimpleGeometry.prototype.rotate = function (angle, anchor) {\\n        var flatCoordinates = this.getFlatCoordinates();\\n        if (flatCoordinates) {\\n            var stride = this.getStride();\\n            rotate(flatCoordinates, 0, flatCoordinates.length, stride, angle, anchor, flatCoordinates);\\n            this.changed();\\n        }\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    SimpleGeometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\\n        var sy = opt_sy;\\n        if (sy === undefined) {\\n            sy = sx;\\n        }\\n        var anchor = opt_anchor;\\n        if (!anchor) {\\n            anchor = getCenter(this.getExtent());\\n        }\\n        var flatCoordinates = this.getFlatCoordinates();\\n        if (flatCoordinates) {\\n            var stride = this.getStride();\\n            scale(flatCoordinates, 0, flatCoordinates.length, stride, sx, sy, anchor, flatCoordinates);\\n            this.changed();\\n        }\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    SimpleGeometry.prototype.translate = function (deltaX, deltaY) {\\n        var flatCoordinates = this.getFlatCoordinates();\\n        if (flatCoordinates) {\\n            var stride = this.getStride();\\n            translate(flatCoordinates, 0, flatCoordinates.length, stride, deltaX, deltaY, flatCoordinates);\\n            this.changed();\\n        }\\n    };\\n    return SimpleGeometry;\\n}(Geometry));\\n/**\\n * @param {number} stride Stride.\\n * @return {GeometryLayout} layout Layout.\\n */\\nfunction getLayoutForStride(stride) {\\n    var layout;\\n    if (stride == 2) {\\n        layout = GeometryLayout.XY;\\n    }\\n    else if (stride == 3) {\\n        layout = GeometryLayout.XYZ;\\n    }\\n    else if (stride == 4) {\\n        layout = GeometryLayout.XYZM;\\n    }\\n    return (\\n    /** @type {GeometryLayout} */ (layout));\\n}\\n/**\\n * @param {GeometryLayout} layout Layout.\\n * @return {number} Stride.\\n */\\nexport function getStrideForLayout(layout) {\\n    var stride;\\n    if (layout == GeometryLayout.XY) {\\n        stride = 2;\\n    }\\n    else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\\n        stride = 3;\\n    }\\n    else if (layout == GeometryLayout.XYZM) {\\n        stride = 4;\\n    }\\n    return /** @type {number} */ (stride);\\n}\\n/**\\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\\n * @param {import(\\\"../transform.js\\\").Transform} transform Transform.\\n * @param {Array<number>=} opt_dest Destination.\\n * @return {Array<number>} Transformed flat coordinates.\\n */\\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\\n    var flatCoordinates = simpleGeometry.getFlatCoordinates();\\n    if (!flatCoordinates) {\\n        return null;\\n    }\\n    else {\\n        var stride = simpleGeometry.getStride();\\n        return transform2D(flatCoordinates, 0, flatCoordinates.length, stride, transform, opt_dest);\\n    }\\n}\\nexport default SimpleGeometry;\\n//# sourceMappingURL=SimpleGeometry.js.map\",\"/**\\n * @module ol/geom/flat/area\\n */\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @return {number} Area.\\n */\\nexport function linearRing(flatCoordinates, offset, end, stride) {\\n    var twiceArea = 0;\\n    var x1 = flatCoordinates[end - stride];\\n    var y1 = flatCoordinates[end - stride + 1];\\n    for (; offset < end; offset += stride) {\\n        var x2 = flatCoordinates[offset];\\n        var y2 = flatCoordinates[offset + 1];\\n        twiceArea += y1 * x2 - x1 * y2;\\n        x1 = x2;\\n        y1 = y2;\\n    }\\n    return twiceArea / 2;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<number>} ends Ends.\\n * @param {number} stride Stride.\\n * @return {number} Area.\\n */\\nexport function linearRings(flatCoordinates, offset, ends, stride) {\\n    var area = 0;\\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\\n        var end = ends[i];\\n        area += linearRing(flatCoordinates, offset, end, stride);\\n        offset = end;\\n    }\\n    return area;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<Array<number>>} endss Endss.\\n * @param {number} stride Stride.\\n * @return {number} Area.\\n */\\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\\n    var area = 0;\\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\\n        var ends = endss[i];\\n        area += linearRings(flatCoordinates, offset, ends, stride);\\n        offset = ends[ends.length - 1];\\n    }\\n    return area;\\n}\\n//# sourceMappingURL=area.js.map\",\"/**\\n * @module ol/geom/flat/closest\\n */\\nimport { lerp, squaredDistance as squaredDx } from '../../math.js';\\n/**\\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\\n * dimensions are linearly interpolated.\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset1 Offset 1.\\n * @param {number} offset2 Offset 2.\\n * @param {number} stride Stride.\\n * @param {number} x X.\\n * @param {number} y Y.\\n * @param {Array<number>} closestPoint Closest point.\\n */\\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\\n    var x1 = flatCoordinates[offset1];\\n    var y1 = flatCoordinates[offset1 + 1];\\n    var dx = flatCoordinates[offset2] - x1;\\n    var dy = flatCoordinates[offset2 + 1] - y1;\\n    var offset;\\n    if (dx === 0 && dy === 0) {\\n        offset = offset1;\\n    }\\n    else {\\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\\n        if (t > 1) {\\n            offset = offset2;\\n        }\\n        else if (t > 0) {\\n            for (var i = 0; i < stride; ++i) {\\n                closestPoint[i] = lerp(flatCoordinates[offset1 + i], flatCoordinates[offset2 + i], t);\\n            }\\n            closestPoint.length = stride;\\n            return;\\n        }\\n        else {\\n            offset = offset1;\\n        }\\n    }\\n    for (var i = 0; i < stride; ++i) {\\n        closestPoint[i] = flatCoordinates[offset + i];\\n    }\\n    closestPoint.length = stride;\\n}\\n/**\\n * Return the squared of the largest distance between any pair of consecutive\\n * coordinates.\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @param {number} max Max squared delta.\\n * @return {number} Max squared delta.\\n */\\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\\n    var x1 = flatCoordinates[offset];\\n    var y1 = flatCoordinates[offset + 1];\\n    for (offset += stride; offset < end; offset += stride) {\\n        var x2 = flatCoordinates[offset];\\n        var y2 = flatCoordinates[offset + 1];\\n        var squaredDelta = squaredDx(x1, y1, x2, y2);\\n        if (squaredDelta > max) {\\n            max = squaredDelta;\\n        }\\n        x1 = x2;\\n        y1 = y2;\\n    }\\n    return max;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<number>} ends Ends.\\n * @param {number} stride Stride.\\n * @param {number} max Max squared delta.\\n * @return {number} Max squared delta.\\n */\\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\\n        var end = ends[i];\\n        max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\\n        offset = end;\\n    }\\n    return max;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<Array<number>>} endss Endss.\\n * @param {number} stride Stride.\\n * @param {number} max Max squared delta.\\n * @return {number} Max squared delta.\\n */\\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\\n        var ends = endss[i];\\n        max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\\n        offset = ends[ends.length - 1];\\n    }\\n    return max;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @param {number} maxDelta Max delta.\\n * @param {boolean} isRing Is ring.\\n * @param {number} x X.\\n * @param {number} y Y.\\n * @param {Array<number>} closestPoint Closest point.\\n * @param {number} minSquaredDistance Minimum squared distance.\\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\\n * @return {number} Minimum squared distance.\\n */\\nexport function assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\\n    if (offset == end) {\\n        return minSquaredDistance;\\n    }\\n    var i, squaredDistance;\\n    if (maxDelta === 0) {\\n        // All points are identical, so just test the first point.\\n        squaredDistance = squaredDx(x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\\n        if (squaredDistance < minSquaredDistance) {\\n            for (i = 0; i < stride; ++i) {\\n                closestPoint[i] = flatCoordinates[offset + i];\\n            }\\n            closestPoint.length = stride;\\n            return squaredDistance;\\n        }\\n        else {\\n            return minSquaredDistance;\\n        }\\n    }\\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\\n    var index = offset + stride;\\n    while (index < end) {\\n        assignClosest(flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\\n        if (squaredDistance < minSquaredDistance) {\\n            minSquaredDistance = squaredDistance;\\n            for (i = 0; i < stride; ++i) {\\n                closestPoint[i] = tmpPoint[i];\\n            }\\n            closestPoint.length = stride;\\n            index += stride;\\n        }\\n        else {\\n            // Skip ahead multiple points, because we know that all the skipped\\n            // points cannot be any closer than the closest point we have found so\\n            // far.  We know this because we know how close the current point is, how\\n            // close the closest point we have found so far is, and the maximum\\n            // distance between consecutive points.  For example, if we're currently\\n            // at distance 10, the best we've found so far is 3, and that the maximum\\n            // distance between consecutive points is 2, then we'll need to skip at\\n            // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\\n            // finding a closer point.  We use Math.max(..., 1) to ensure that we\\n            // always advance at least one point, to avoid an infinite loop.\\n            index += stride * Math.max(((Math.sqrt(squaredDistance) -\\n                Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\\n        }\\n    }\\n    if (isRing) {\\n        // Check the closing segment.\\n        assignClosest(flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\\n        if (squaredDistance < minSquaredDistance) {\\n            minSquaredDistance = squaredDistance;\\n            for (i = 0; i < stride; ++i) {\\n                closestPoint[i] = tmpPoint[i];\\n            }\\n            closestPoint.length = stride;\\n        }\\n    }\\n    return minSquaredDistance;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<number>} ends Ends.\\n * @param {number} stride Stride.\\n * @param {number} maxDelta Max delta.\\n * @param {boolean} isRing Is ring.\\n * @param {number} x X.\\n * @param {number} y Y.\\n * @param {Array<number>} closestPoint Closest point.\\n * @param {number} minSquaredDistance Minimum squared distance.\\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\\n * @return {number} Minimum squared distance.\\n */\\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\\n        var end = ends[i];\\n        minSquaredDistance = assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\\n        offset = end;\\n    }\\n    return minSquaredDistance;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<Array<number>>} endss Endss.\\n * @param {number} stride Stride.\\n * @param {number} maxDelta Max delta.\\n * @param {boolean} isRing Is ring.\\n * @param {number} x X.\\n * @param {number} y Y.\\n * @param {Array<number>} closestPoint Closest point.\\n * @param {number} minSquaredDistance Minimum squared distance.\\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\\n * @return {number} Minimum squared distance.\\n */\\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset, endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\\n        var ends = endss[i];\\n        minSquaredDistance = assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\\n        offset = ends[ends.length - 1];\\n    }\\n    return minSquaredDistance;\\n}\\n//# sourceMappingURL=closest.js.map\",\"/**\\n * @module ol/geom/flat/deflate\\n */\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {import(\\\"../../coordinate.js\\\").Coordinate} coordinate Coordinate.\\n * @param {number} stride Stride.\\n * @return {number} offset Offset.\\n */\\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\\n    for (var i = 0, ii = coordinate.length; i < ii; ++i) {\\n        flatCoordinates[offset++] = coordinate[i];\\n    }\\n    return offset;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<import(\\\"../../coordinate.js\\\").Coordinate>} coordinates Coordinates.\\n * @param {number} stride Stride.\\n * @return {number} offset Offset.\\n */\\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\\n        var coordinate = coordinates[i];\\n        for (var j = 0; j < stride; ++j) {\\n            flatCoordinates[offset++] = coordinate[j];\\n        }\\n    }\\n    return offset;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<Array<import(\\\"../../coordinate.js\\\").Coordinate>>} coordinatess Coordinatess.\\n * @param {number} stride Stride.\\n * @param {Array<number>=} opt_ends Ends.\\n * @return {Array<number>} Ends.\\n */\\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\\n    var ends = opt_ends ? opt_ends : [];\\n    var i = 0;\\n    for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\\n        var end = deflateCoordinates(flatCoordinates, offset, coordinatess[j], stride);\\n        ends[i++] = end;\\n        offset = end;\\n    }\\n    ends.length = i;\\n    return ends;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<Array<Array<import(\\\"../../coordinate.js\\\").Coordinate>>>} coordinatesss Coordinatesss.\\n * @param {number} stride Stride.\\n * @param {Array<Array<number>>=} opt_endss Endss.\\n * @return {Array<Array<number>>} Endss.\\n */\\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\\n    var endss = opt_endss ? opt_endss : [];\\n    var i = 0;\\n    for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\\n        var ends = deflateCoordinatesArray(flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\\n        endss[i++] = ends;\\n        offset = ends[ends.length - 1];\\n    }\\n    endss.length = i;\\n    return endss;\\n}\\n//# sourceMappingURL=deflate.js.map\",\"/**\\n * @module ol/geom/flat/inflate\\n */\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @param {Array<import(\\\"../../coordinate.js\\\").Coordinate>=} opt_coordinates Coordinates.\\n * @return {Array<import(\\\"../../coordinate.js\\\").Coordinate>} Coordinates.\\n */\\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\\n    var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\\n    var i = 0;\\n    for (var j = offset; j < end; j += stride) {\\n        coordinates[i++] = flatCoordinates.slice(j, j + stride);\\n    }\\n    coordinates.length = i;\\n    return coordinates;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<number>} ends Ends.\\n * @param {number} stride Stride.\\n * @param {Array<Array<import(\\\"../../coordinate.js\\\").Coordinate>>=} opt_coordinatess Coordinatess.\\n * @return {Array<Array<import(\\\"../../coordinate.js\\\").Coordinate>>} Coordinatess.\\n */\\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\\n    var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\\n    var i = 0;\\n    for (var j = 0, jj = ends.length; j < jj; ++j) {\\n        var end = ends[j];\\n        coordinatess[i++] = inflateCoordinates(flatCoordinates, offset, end, stride, coordinatess[i]);\\n        offset = end;\\n    }\\n    coordinatess.length = i;\\n    return coordinatess;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<Array<number>>} endss Endss.\\n * @param {number} stride Stride.\\n * @param {Array<Array<Array<import(\\\"../../coordinate.js\\\").Coordinate>>>=} opt_coordinatesss\\n *     Coordinatesss.\\n * @return {Array<Array<Array<import(\\\"../../coordinate.js\\\").Coordinate>>>} Coordinatesss.\\n */\\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\\n    var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\\n    var i = 0;\\n    for (var j = 0, jj = endss.length; j < jj; ++j) {\\n        var ends = endss[j];\\n        coordinatesss[i++] = inflateCoordinatesArray(flatCoordinates, offset, ends, stride, coordinatesss[i]);\\n        offset = ends[ends.length - 1];\\n    }\\n    coordinatesss.length = i;\\n    return coordinatesss;\\n}\\n//# sourceMappingURL=inflate.js.map\",\"/**\\n * @module ol/geom/flat/simplify\\n */\\n// Based on simplify-js https://github.com/mourner/simplify-js\\n// Copyright (c) 2012, Vladimir Agafonkin\\n// All rights reserved.\\n//\\n// Redistribution and use in source and binary forms, with or without\\n// modification, are permitted provided that the following conditions are met:\\n//\\n//    1. Redistributions of source code must retain the above copyright notice,\\n//       this list of conditions and the following disclaimer.\\n//\\n//    2. Redistributions in binary form must reproduce the above copyright\\n//       notice, this list of conditions and the following disclaimer in the\\n//       documentation and/or other materials provided with the distribution.\\n//\\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \\\"AS IS\\\"\\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\\n// POSSIBILITY OF SUCH DAMAGE.\\nimport { squaredSegmentDistance, squaredDistance } from '../../math.js';\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @param {number} squaredTolerance Squared tolerance.\\n * @param {boolean} highQuality Highest quality.\\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\\n *     coordinates.\\n * @return {Array<number>} Simplified line string.\\n */\\nexport function simplifyLineString(flatCoordinates, offset, end, stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\\n    var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\\n        opt_simplifiedFlatCoordinates : [];\\n    if (!highQuality) {\\n        end = radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\\n        flatCoordinates = simplifiedFlatCoordinates;\\n        offset = 0;\\n        stride = 2;\\n    }\\n    simplifiedFlatCoordinates.length = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\\n    return simplifiedFlatCoordinates;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @param {number} squaredTolerance Squared tolerance.\\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\\n *     coordinates.\\n * @param {number} simplifiedOffset Simplified offset.\\n * @return {number} Simplified offset.\\n */\\nexport function douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\\n    var n = (end - offset) / stride;\\n    if (n < 3) {\\n        for (; offset < end; offset += stride) {\\n            simplifiedFlatCoordinates[simplifiedOffset++] =\\n                flatCoordinates[offset];\\n            simplifiedFlatCoordinates[simplifiedOffset++] =\\n                flatCoordinates[offset + 1];\\n        }\\n        return simplifiedOffset;\\n    }\\n    /** @type {Array<number>} */\\n    var markers = new Array(n);\\n    markers[0] = 1;\\n    markers[n - 1] = 1;\\n    /** @type {Array<number>} */\\n    var stack = [offset, end - stride];\\n    var index = 0;\\n    while (stack.length > 0) {\\n        var last = stack.pop();\\n        var first = stack.pop();\\n        var maxSquaredDistance = 0;\\n        var x1 = flatCoordinates[first];\\n        var y1 = flatCoordinates[first + 1];\\n        var x2 = flatCoordinates[last];\\n        var y2 = flatCoordinates[last + 1];\\n        for (var i = first + stride; i < last; i += stride) {\\n            var x = flatCoordinates[i];\\n            var y = flatCoordinates[i + 1];\\n            var squaredDistance_1 = squaredSegmentDistance(x, y, x1, y1, x2, y2);\\n            if (squaredDistance_1 > maxSquaredDistance) {\\n                index = i;\\n                maxSquaredDistance = squaredDistance_1;\\n            }\\n        }\\n        if (maxSquaredDistance > squaredTolerance) {\\n            markers[(index - offset) / stride] = 1;\\n            if (first + stride < index) {\\n                stack.push(first, index);\\n            }\\n            if (index + stride < last) {\\n                stack.push(index, last);\\n            }\\n        }\\n    }\\n    for (var i = 0; i < n; ++i) {\\n        if (markers[i]) {\\n            simplifiedFlatCoordinates[simplifiedOffset++] =\\n                flatCoordinates[offset + i * stride];\\n            simplifiedFlatCoordinates[simplifiedOffset++] =\\n                flatCoordinates[offset + i * stride + 1];\\n        }\\n    }\\n    return simplifiedOffset;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<number>} ends Ends.\\n * @param {number} stride Stride.\\n * @param {number} squaredTolerance Squared tolerance.\\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\\n *     coordinates.\\n * @param {number} simplifiedOffset Simplified offset.\\n * @param {Array<number>} simplifiedEnds Simplified ends.\\n * @return {number} Simplified offset.\\n */\\nexport function douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\\n        var end = ends[i];\\n        simplifiedOffset = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset);\\n        simplifiedEnds.push(simplifiedOffset);\\n        offset = end;\\n    }\\n    return simplifiedOffset;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<Array<number>>} endss Endss.\\n * @param {number} stride Stride.\\n * @param {number} squaredTolerance Squared tolerance.\\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\\n *     coordinates.\\n * @param {number} simplifiedOffset Simplified offset.\\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\\n * @return {number} Simplified offset.\\n */\\nexport function douglasPeuckerMultiArray(flatCoordinates, offset, endss, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\\n        var ends = endss[i];\\n        var simplifiedEnds = [];\\n        simplifiedOffset = douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\\n        simplifiedEndss.push(simplifiedEnds);\\n        offset = ends[ends.length - 1];\\n    }\\n    return simplifiedOffset;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @param {number} squaredTolerance Squared tolerance.\\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\\n *     coordinates.\\n * @param {number} simplifiedOffset Simplified offset.\\n * @return {number} Simplified offset.\\n */\\nexport function radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\\n    if (end <= offset + stride) {\\n        // zero or one point, no simplification possible, so copy and return\\n        for (; offset < end; offset += stride) {\\n            simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\\n            simplifiedFlatCoordinates[simplifiedOffset++] =\\n                flatCoordinates[offset + 1];\\n        }\\n        return simplifiedOffset;\\n    }\\n    var x1 = flatCoordinates[offset];\\n    var y1 = flatCoordinates[offset + 1];\\n    // copy first point\\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\\n    var x2 = x1;\\n    var y2 = y1;\\n    for (offset += stride; offset < end; offset += stride) {\\n        x2 = flatCoordinates[offset];\\n        y2 = flatCoordinates[offset + 1];\\n        if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\\n            // copy point at offset\\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\\n            x1 = x2;\\n            y1 = y2;\\n        }\\n    }\\n    if (x2 != x1 || y2 != y1) {\\n        // copy last point\\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\\n    }\\n    return simplifiedOffset;\\n}\\n/**\\n * @param {number} value Value.\\n * @param {number} tolerance Tolerance.\\n * @return {number} Rounded value.\\n */\\nexport function snap(value, tolerance) {\\n    return tolerance * Math.round(value / tolerance);\\n}\\n/**\\n * Simplifies a line string using an algorithm designed by Tim Schaub.\\n * Coordinates are snapped to the nearest value in a virtual grid and\\n * consecutive duplicate coordinates are discarded.  This effectively preserves\\n * topology as the simplification of any subsection of a line string is\\n * independent of the rest of the line string.  This means that, for examples,\\n * the common edge between two polygons will be simplified to the same line\\n * string independently in both polygons.  This implementation uses a single\\n * pass over the coordinates and eliminates intermediate collinear points.\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @param {number} tolerance Tolerance.\\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\\n *     coordinates.\\n * @param {number} simplifiedOffset Simplified offset.\\n * @return {number} Simplified offset.\\n */\\nexport function quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\\n    // do nothing if the line is empty\\n    if (offset == end) {\\n        return simplifiedOffset;\\n    }\\n    // snap the first coordinate (P1)\\n    var x1 = snap(flatCoordinates[offset], tolerance);\\n    var y1 = snap(flatCoordinates[offset + 1], tolerance);\\n    offset += stride;\\n    // add the first coordinate to the output\\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\\n    // find the next coordinate that does not snap to the same value as the first\\n    // coordinate (P2)\\n    var x2, y2;\\n    do {\\n        x2 = snap(flatCoordinates[offset], tolerance);\\n        y2 = snap(flatCoordinates[offset + 1], tolerance);\\n        offset += stride;\\n        if (offset == end) {\\n            // all coordinates snap to the same value, the line collapses to a point\\n            // push the last snapped value anyway to ensure that the output contains\\n            // at least two points\\n            // FIXME should we really return at least two points anyway?\\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\\n            return simplifiedOffset;\\n        }\\n    } while (x2 == x1 && y2 == y1);\\n    while (offset < end) {\\n        // snap the next coordinate (P3)\\n        var x3 = snap(flatCoordinates[offset], tolerance);\\n        var y3 = snap(flatCoordinates[offset + 1], tolerance);\\n        offset += stride;\\n        // skip P3 if it is equal to P2\\n        if (x3 == x2 && y3 == y2) {\\n            continue;\\n        }\\n        // calculate the delta between P1 and P2\\n        var dx1 = x2 - x1;\\n        var dy1 = y2 - y1;\\n        // calculate the delta between P3 and P1\\n        var dx2 = x3 - x1;\\n        var dy2 = y3 - y1;\\n        // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\\n        // P1 in the same direction then P2 is on the straight line between P1 and\\n        // P3\\n        if ((dx1 * dy2 == dy1 * dx2) &&\\n            ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\\n            ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\\n            // discard P2 and set P2 = P3\\n            x2 = x3;\\n            y2 = y3;\\n            continue;\\n        }\\n        // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\\n        // between P3 and P1 or on the opposite half of the line to P2.  add P2,\\n        // and continue with P1 = P2 and P2 = P3\\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\\n        x1 = x2;\\n        y1 = y2;\\n        x2 = x3;\\n        y2 = y3;\\n    }\\n    // add the last point (P2)\\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\\n    return simplifiedOffset;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<number>} ends Ends.\\n * @param {number} stride Stride.\\n * @param {number} tolerance Tolerance.\\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\\n *     coordinates.\\n * @param {number} simplifiedOffset Simplified offset.\\n * @param {Array<number>} simplifiedEnds Simplified ends.\\n * @return {number} Simplified offset.\\n */\\nexport function quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\\n        var end = ends[i];\\n        simplifiedOffset = quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset);\\n        simplifiedEnds.push(simplifiedOffset);\\n        offset = end;\\n    }\\n    return simplifiedOffset;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<Array<number>>} endss Endss.\\n * @param {number} stride Stride.\\n * @param {number} tolerance Tolerance.\\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\\n *     coordinates.\\n * @param {number} simplifiedOffset Simplified offset.\\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\\n * @return {number} Simplified offset.\\n */\\nexport function quantizeMultiArray(flatCoordinates, offset, endss, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\\n        var ends = endss[i];\\n        var simplifiedEnds = [];\\n        simplifiedOffset = quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\\n        simplifiedEndss.push(simplifiedEnds);\\n        offset = ends[ends.length - 1];\\n    }\\n    return simplifiedOffset;\\n}\\n//# sourceMappingURL=simplify.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/geom/LinearRing\\n */\\nimport { closestSquaredDistanceXY } from '../extent.js';\\nimport GeometryLayout from './GeometryLayout.js';\\nimport GeometryType from './GeometryType.js';\\nimport SimpleGeometry from './SimpleGeometry.js';\\nimport { linearRing as linearRingArea } from './flat/area.js';\\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\\nimport { deflateCoordinates } from './flat/deflate.js';\\nimport { inflateCoordinates } from './flat/inflate.js';\\nimport { douglasPeucker } from './flat/simplify.js';\\n/**\\n * @classdesc\\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\\n * on its own.\\n *\\n * @api\\n */\\nvar LinearRing = /** @class */ (function (_super) {\\n    __extends(LinearRing, _super);\\n    /**\\n     * @param {Array<import(\\\"../coordinate.js\\\").Coordinate>|Array<number>} coordinates Coordinates.\\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\\n     * @param {GeometryLayout=} opt_layout Layout.\\n     */\\n    function LinearRing(coordinates, opt_layout) {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.maxDelta_ = -1;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.maxDeltaRevision_ = -1;\\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\\n        }\\n        else {\\n            _this.setCoordinates(/** @type {Array<import(\\\"../coordinate.js\\\").Coordinate>} */ (coordinates), opt_layout);\\n        }\\n        return _this;\\n    }\\n    /**\\n     * Make a complete copy of the geometry.\\n     * @return {!LinearRing} Clone.\\n     * @override\\n     * @api\\n     */\\n    LinearRing.prototype.clone = function () {\\n        return new LinearRing(this.flatCoordinates.slice(), this.layout);\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    LinearRing.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\\n            return minSquaredDistance;\\n        }\\n        if (this.maxDeltaRevision_ != this.getRevision()) {\\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\\n            this.maxDeltaRevision_ = this.getRevision();\\n        }\\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\\n    };\\n    /**\\n     * Return the area of the linear ring on projected plane.\\n     * @return {number} Area (on projected plane).\\n     * @api\\n     */\\n    LinearRing.prototype.getArea = function () {\\n        return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\\n    };\\n    /**\\n     * Return the coordinates of the linear ring.\\n     * @return {Array<import(\\\"../coordinate.js\\\").Coordinate>} Coordinates.\\n     * @override\\n     * @api\\n     */\\n    LinearRing.prototype.getCoordinates = function () {\\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    LinearRing.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\\n        var simplifiedFlatCoordinates = [];\\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\\n        return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    LinearRing.prototype.getType = function () {\\n        return GeometryType.LINEAR_RING;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    LinearRing.prototype.intersectsExtent = function (extent) {\\n        return false;\\n    };\\n    /**\\n     * Set the coordinates of the linear ring.\\n     * @param {!Array<import(\\\"../coordinate.js\\\").Coordinate>} coordinates Coordinates.\\n     * @param {GeometryLayout=} opt_layout Layout.\\n     * @override\\n     * @api\\n     */\\n    LinearRing.prototype.setCoordinates = function (coordinates, opt_layout) {\\n        this.setLayout(opt_layout, coordinates, 1);\\n        if (!this.flatCoordinates) {\\n            this.flatCoordinates = [];\\n        }\\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\\n        this.changed();\\n    };\\n    return LinearRing;\\n}(SimpleGeometry));\\nexport default LinearRing;\\n//# sourceMappingURL=LinearRing.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/geom/Point\\n */\\nimport { createOrUpdateFromCoordinate, containsXY } from '../extent.js';\\nimport GeometryType from './GeometryType.js';\\nimport SimpleGeometry from './SimpleGeometry.js';\\nimport { deflateCoordinate } from './flat/deflate.js';\\nimport { squaredDistance as squaredDx } from '../math.js';\\n/**\\n * @classdesc\\n * Point geometry.\\n *\\n * @api\\n */\\nvar Point = /** @class */ (function (_super) {\\n    __extends(Point, _super);\\n    /**\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} coordinates Coordinates.\\n     * @param {import(\\\"./GeometryLayout.js\\\").default=} opt_layout Layout.\\n     */\\n    function Point(coordinates, opt_layout) {\\n        var _this = _super.call(this) || this;\\n        _this.setCoordinates(coordinates, opt_layout);\\n        return _this;\\n    }\\n    /**\\n     * Make a complete copy of the geometry.\\n     * @return {!Point} Clone.\\n     * @override\\n     * @api\\n     */\\n    Point.prototype.clone = function () {\\n        var point = new Point(this.flatCoordinates.slice(), this.layout);\\n        return point;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    Point.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\\n        var flatCoordinates = this.flatCoordinates;\\n        var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\\n        if (squaredDistance < minSquaredDistance) {\\n            var stride = this.stride;\\n            for (var i = 0; i < stride; ++i) {\\n                closestPoint[i] = flatCoordinates[i];\\n            }\\n            closestPoint.length = stride;\\n            return squaredDistance;\\n        }\\n        else {\\n            return minSquaredDistance;\\n        }\\n    };\\n    /**\\n     * Return the coordinate of the point.\\n     * @return {import(\\\"../coordinate.js\\\").Coordinate} Coordinates.\\n     * @override\\n     * @api\\n     */\\n    Point.prototype.getCoordinates = function () {\\n        return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    Point.prototype.computeExtent = function (extent) {\\n        return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    Point.prototype.getType = function () {\\n        return GeometryType.POINT;\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    Point.prototype.intersectsExtent = function (extent) {\\n        return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    Point.prototype.setCoordinates = function (coordinates, opt_layout) {\\n        this.setLayout(opt_layout, coordinates, 0);\\n        if (!this.flatCoordinates) {\\n            this.flatCoordinates = [];\\n        }\\n        this.flatCoordinates.length = deflateCoordinate(this.flatCoordinates, 0, coordinates, this.stride);\\n        this.changed();\\n    };\\n    return Point;\\n}(SimpleGeometry));\\nexport default Point;\\n//# sourceMappingURL=Point.js.map\",\"/**\\n * @module ol/geom/flat/contains\\n */\\nimport { forEachCorner } from '../../extent.js';\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @param {import(\\\"../../extent.js\\\").Extent} extent Extent.\\n * @return {boolean} Contains extent.\\n */\\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\\n    var outside = forEachCorner(extent, \\n    /**\\n     * @param {import(\\\"../../coordinate.js\\\").Coordinate} coordinate Coordinate.\\n     * @return {boolean} Contains (x, y).\\n     */\\n    function (coordinate) {\\n        return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\\n    });\\n    return !outside;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @param {number} x X.\\n * @param {number} y Y.\\n * @return {boolean} Contains (x, y).\\n */\\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\\n    // http://geomalgorithms.com/a03-_inclusion.html\\n    // Copyright 2000 softSurfer, 2012 Dan Sunday\\n    // This code may be freely used and modified for any purpose\\n    // providing that this copyright notice is included with it.\\n    // SoftSurfer makes no warranty for this code, and cannot be held\\n    // liable for any real or imagined damage resulting from its use.\\n    // Users of this code must verify correctness for their application.\\n    var wn = 0;\\n    var x1 = flatCoordinates[end - stride];\\n    var y1 = flatCoordinates[end - stride + 1];\\n    for (; offset < end; offset += stride) {\\n        var x2 = flatCoordinates[offset];\\n        var y2 = flatCoordinates[offset + 1];\\n        if (y1 <= y) {\\n            if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\\n                wn++;\\n            }\\n        }\\n        else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\\n            wn--;\\n        }\\n        x1 = x2;\\n        y1 = y2;\\n    }\\n    return wn !== 0;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<number>} ends Ends.\\n * @param {number} stride Stride.\\n * @param {number} x X.\\n * @param {number} y Y.\\n * @return {boolean} Contains (x, y).\\n */\\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\\n    if (ends.length === 0) {\\n        return false;\\n    }\\n    if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\\n        return false;\\n    }\\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\\n        if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\\n            return false;\\n        }\\n    }\\n    return true;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<Array<number>>} endss Endss.\\n * @param {number} stride Stride.\\n * @param {number} x X.\\n * @param {number} y Y.\\n * @return {boolean} Contains (x, y).\\n */\\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\\n    if (endss.length === 0) {\\n        return false;\\n    }\\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\\n        var ends = endss[i];\\n        if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\\n            return true;\\n        }\\n        offset = ends[ends.length - 1];\\n    }\\n    return false;\\n}\\n//# sourceMappingURL=contains.js.map\",\"/**\\n * @module ol/geom/flat/interiorpoint\\n */\\nimport { numberSafeCompareFunction } from '../../array.js';\\nimport { linearRingsContainsXY } from './contains.js';\\n/**\\n * Calculates a point that is likely to lie in the interior of the linear rings.\\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<number>} ends Ends.\\n * @param {number} stride Stride.\\n * @param {Array<number>} flatCenters Flat centers.\\n * @param {number} flatCentersOffset Flat center offset.\\n * @param {Array<number>=} opt_dest Destination.\\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\\n * length of the horizontal intersection that the point belongs to.\\n */\\nexport function getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, flatCentersOffset, opt_dest) {\\n    var i, ii, x, x1, x2, y1, y2;\\n    var y = flatCenters[flatCentersOffset + 1];\\n    /** @type {Array<number>} */\\n    var intersections = [];\\n    // Calculate intersections with the horizontal line\\n    for (var r = 0, rr = ends.length; r < rr; ++r) {\\n        var end = ends[r];\\n        x1 = flatCoordinates[end - stride];\\n        y1 = flatCoordinates[end - stride + 1];\\n        for (i = offset; i < end; i += stride) {\\n            x2 = flatCoordinates[i];\\n            y2 = flatCoordinates[i + 1];\\n            if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\\n                x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\\n                intersections.push(x);\\n            }\\n            x1 = x2;\\n            y1 = y2;\\n        }\\n    }\\n    // Find the longest segment of the horizontal line that has its center point\\n    // inside the linear ring.\\n    var pointX = NaN;\\n    var maxSegmentLength = -Infinity;\\n    intersections.sort(numberSafeCompareFunction);\\n    x1 = intersections[0];\\n    for (i = 1, ii = intersections.length; i < ii; ++i) {\\n        x2 = intersections[i];\\n        var segmentLength = Math.abs(x2 - x1);\\n        if (segmentLength > maxSegmentLength) {\\n            x = (x1 + x2) / 2;\\n            if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\\n                pointX = x;\\n                maxSegmentLength = segmentLength;\\n            }\\n        }\\n        x1 = x2;\\n    }\\n    if (isNaN(pointX)) {\\n        // There is no horizontal line that has its center point inside the linear\\n        // ring.  Use the center of the the linear ring's extent.\\n        pointX = flatCenters[flatCentersOffset];\\n    }\\n    if (opt_dest) {\\n        opt_dest.push(pointX, y, maxSegmentLength);\\n        return opt_dest;\\n    }\\n    else {\\n        return [pointX, y, maxSegmentLength];\\n    }\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<Array<number>>} endss Endss.\\n * @param {number} stride Stride.\\n * @param {Array<number>} flatCenters Flat centers.\\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\\n * length of the horizontal intersection that the point belongs to.\\n */\\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\\n    var interiorPoints = [];\\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\\n        var ends = endss[i];\\n        interiorPoints = getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, 2 * i, interiorPoints);\\n        offset = ends[ends.length - 1];\\n    }\\n    return interiorPoints;\\n}\\n//# sourceMappingURL=interiorpoint.js.map\",\"/**\\n * @module ol/geom/flat/segments\\n */\\n/**\\n * This function calls `callback` for each segment of the flat coordinates\\n * array. If the callback returns a truthy value the function returns that\\n * value immediately. Otherwise the function returns `false`.\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @param {function(import(\\\"../../coordinate.js\\\").Coordinate, import(\\\"../../coordinate.js\\\").Coordinate): T} callback Function\\n *     called for each segment.\\n * @return {T|boolean} Value.\\n * @template T\\n */\\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\\n    var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\\n    var point2 = [];\\n    var ret;\\n    for (; (offset + stride) < end; offset += stride) {\\n        point2[0] = flatCoordinates[offset + stride];\\n        point2[1] = flatCoordinates[offset + stride + 1];\\n        ret = callback(point1, point2);\\n        if (ret) {\\n            return ret;\\n        }\\n        point1[0] = point2[0];\\n        point1[1] = point2[1];\\n    }\\n    return false;\\n}\\n//# sourceMappingURL=segments.js.map\",\"/**\\n * @module ol/geom/flat/intersectsextent\\n */\\nimport { containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment } from '../../extent.js';\\nimport { linearRingContainsXY, linearRingContainsExtent } from './contains.js';\\nimport { forEach as forEachSegment } from './segments.js';\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @param {import(\\\"../../extent.js\\\").Extent} extent Extent.\\n * @return {boolean} True if the geometry and the extent intersect.\\n */\\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\\n    var coordinatesExtent = extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\\n    if (!intersects(extent, coordinatesExtent)) {\\n        return false;\\n    }\\n    if (containsExtent(extent, coordinatesExtent)) {\\n        return true;\\n    }\\n    if (coordinatesExtent[0] >= extent[0] &&\\n        coordinatesExtent[2] <= extent[2]) {\\n        return true;\\n    }\\n    if (coordinatesExtent[1] >= extent[1] &&\\n        coordinatesExtent[3] <= extent[3]) {\\n        return true;\\n    }\\n    return forEachSegment(flatCoordinates, offset, end, stride, \\n    /**\\n     * @param {import(\\\"../../coordinate.js\\\").Coordinate} point1 Start point.\\n     * @param {import(\\\"../../coordinate.js\\\").Coordinate} point2 End point.\\n     * @return {boolean} `true` if the segment and the extent intersect,\\n     *     `false` otherwise.\\n     */\\n    function (point1, point2) {\\n        return intersectsSegment(extent, point1, point2);\\n    });\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<number>} ends Ends.\\n * @param {number} stride Stride.\\n * @param {import(\\\"../../extent.js\\\").Extent} extent Extent.\\n * @return {boolean} True if the geometry and the extent intersect.\\n */\\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\\n        if (intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)) {\\n            return true;\\n        }\\n        offset = ends[i];\\n    }\\n    return false;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @param {import(\\\"../../extent.js\\\").Extent} extent Extent.\\n * @return {boolean} True if the geometry and the extent intersect.\\n */\\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\\n    if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\\n        return true;\\n    }\\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\\n        return true;\\n    }\\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\\n        return true;\\n    }\\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\\n        return true;\\n    }\\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\\n        return true;\\n    }\\n    return false;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<number>} ends Ends.\\n * @param {number} stride Stride.\\n * @param {import(\\\"../../extent.js\\\").Extent} extent Extent.\\n * @return {boolean} True if the geometry and the extent intersect.\\n */\\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\\n    if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\\n        return false;\\n    }\\n    if (ends.length === 1) {\\n        return true;\\n    }\\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\\n        if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\\n            if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\\n                return false;\\n            }\\n        }\\n    }\\n    return true;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<Array<number>>} endss Endss.\\n * @param {number} stride Stride.\\n * @param {import(\\\"../../extent.js\\\").Extent} extent Extent.\\n * @return {boolean} True if the geometry and the extent intersect.\\n */\\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\\n        var ends = endss[i];\\n        if (intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)) {\\n            return true;\\n        }\\n        offset = ends[ends.length - 1];\\n    }\\n    return false;\\n}\\n//# sourceMappingURL=intersectsextent.js.map\",\"/**\\n * @module ol/geom/flat/reverse\\n */\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n */\\nexport function coordinates(flatCoordinates, offset, end, stride) {\\n    while (offset < end - stride) {\\n        for (var i = 0; i < stride; ++i) {\\n            var tmp = flatCoordinates[offset + i];\\n            flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\\n            flatCoordinates[end - stride + i] = tmp;\\n        }\\n        offset += stride;\\n        end -= stride;\\n    }\\n}\\n//# sourceMappingURL=reverse.js.map\",\"/**\\n * @module ol/geom/flat/orient\\n */\\nimport { coordinates as reverseCoordinates } from './reverse.js';\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @return {boolean} Is clockwise.\\n */\\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\\n    // http://tinyurl.com/clockwise-method\\n    // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\\n    var edge = 0;\\n    var x1 = flatCoordinates[end - stride];\\n    var y1 = flatCoordinates[end - stride + 1];\\n    for (; offset < end; offset += stride) {\\n        var x2 = flatCoordinates[offset];\\n        var y2 = flatCoordinates[offset + 1];\\n        edge += (x2 - x1) * (y2 + y1);\\n        x1 = x2;\\n        y1 = y2;\\n    }\\n    return edge > 0;\\n}\\n/**\\n * Determines if linear rings are oriented.  By default, left-hand orientation\\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\\n * To test for right-hand orientation, use the `opt_right` argument.\\n *\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<number>} ends Array of end indexes.\\n * @param {number} stride Stride.\\n * @param {boolean=} opt_right Test for right-hand orientation\\n *     (counter-clockwise exterior ring and clockwise interior rings).\\n * @return {boolean} Rings are correctly oriented.\\n */\\nexport function linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right) {\\n    var right = opt_right !== undefined ? opt_right : false;\\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\\n        var end = ends[i];\\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\\n        if (i === 0) {\\n            if ((right && isClockwise) || (!right && !isClockwise)) {\\n                return false;\\n            }\\n        }\\n        else {\\n            if ((right && !isClockwise) || (!right && isClockwise)) {\\n                return false;\\n            }\\n        }\\n        offset = end;\\n    }\\n    return true;\\n}\\n/**\\n * Determines if linear rings are oriented.  By default, left-hand orientation\\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\\n * To test for right-hand orientation, use the `opt_right` argument.\\n *\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<Array<number>>} endss Array of array of end indexes.\\n * @param {number} stride Stride.\\n * @param {boolean=} opt_right Test for right-hand orientation\\n *     (counter-clockwise exterior ring and clockwise interior rings).\\n * @return {boolean} Rings are correctly oriented.\\n */\\nexport function linearRingssAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\\n        var ends = endss[i];\\n        if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)) {\\n            return false;\\n        }\\n        if (ends.length) {\\n            offset = ends[ends.length - 1];\\n        }\\n    }\\n    return true;\\n}\\n/**\\n * Orient coordinates in a flat array of linear rings.  By default, rings\\n * are oriented following the left-hand rule (clockwise for exterior and\\n * counter-clockwise for interior rings).  To orient according to the\\n * right-hand rule, use the `opt_right` argument.\\n *\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<number>} ends Ends.\\n * @param {number} stride Stride.\\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\\n * @return {number} End.\\n */\\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\\n    var right = opt_right !== undefined ? opt_right : false;\\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\\n        var end = ends[i];\\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\\n        var reverse = i === 0 ?\\n            (right && isClockwise) || (!right && !isClockwise) :\\n            (right && !isClockwise) || (!right && isClockwise);\\n        if (reverse) {\\n            reverseCoordinates(flatCoordinates, offset, end, stride);\\n        }\\n        offset = end;\\n    }\\n    return offset;\\n}\\n/**\\n * Orient coordinates in a flat array of linear rings.  By default, rings\\n * are oriented following the left-hand rule (clockwise for exterior and\\n * counter-clockwise for interior rings).  To orient according to the\\n * right-hand rule, use the `opt_right` argument.\\n *\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<Array<number>>} endss Array of array of end indexes.\\n * @param {number} stride Stride.\\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\\n * @return {number} End.\\n */\\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\\n        offset = orientLinearRings(flatCoordinates, offset, endss[i], stride, opt_right);\\n    }\\n    return offset;\\n}\\n//# sourceMappingURL=orient.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/geom/Polygon\\n */\\nimport { extend } from '../array.js';\\nimport { closestSquaredDistanceXY, getCenter } from '../extent.js';\\nimport GeometryLayout from './GeometryLayout.js';\\nimport GeometryType from './GeometryType.js';\\nimport LinearRing from './LinearRing.js';\\nimport Point from './Point.js';\\nimport SimpleGeometry from './SimpleGeometry.js';\\nimport { offset as sphereOffset } from '../sphere.js';\\nimport { linearRings as linearRingsArea } from './flat/area.js';\\nimport { assignClosestArrayPoint, arrayMaxSquaredDelta } from './flat/closest.js';\\nimport { linearRingsContainsXY } from './flat/contains.js';\\nimport { deflateCoordinatesArray } from './flat/deflate.js';\\nimport { inflateCoordinatesArray } from './flat/inflate.js';\\nimport { getInteriorPointOfArray } from './flat/interiorpoint.js';\\nimport { intersectsLinearRingArray } from './flat/intersectsextent.js';\\nimport { linearRingsAreOriented, orientLinearRings } from './flat/orient.js';\\nimport { quantizeArray } from './flat/simplify.js';\\nimport { modulo } from '../math.js';\\n/**\\n * @classdesc\\n * Polygon geometry.\\n *\\n * @api\\n */\\nvar Polygon = /** @class */ (function (_super) {\\n    __extends(Polygon, _super);\\n    /**\\n     * @param {!Array<Array<import(\\\"../coordinate.js\\\").Coordinate>>|!Array<number>} coordinates\\n     *     Array of linear rings that define the polygon. The first linear ring of the\\n     *     array defines the outer-boundary or surface of the polygon. Each subsequent\\n     *     linear ring defines a hole in the surface of the polygon. A linear ring is\\n     *     an array of vertices' coordinates where the first coordinate and the last are\\n     *     equivalent. (For internal use, flat coordinates in combination with\\n     *     `opt_layout` and `opt_ends` are also accepted.)\\n     * @param {GeometryLayout=} opt_layout Layout.\\n     * @param {Array<number>=} opt_ends Ends (for internal use with flat coordinates).\\n     */\\n    function Polygon(coordinates, opt_layout, opt_ends) {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * @type {Array<number>}\\n         * @private\\n         */\\n        _this.ends_ = [];\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.flatInteriorPointRevision_ = -1;\\n        /**\\n         * @private\\n         * @type {import(\\\"../coordinate.js\\\").Coordinate}\\n         */\\n        _this.flatInteriorPoint_ = null;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.maxDelta_ = -1;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.maxDeltaRevision_ = -1;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.orientedRevision_ = -1;\\n        /**\\n         * @private\\n         * @type {Array<number>}\\n         */\\n        _this.orientedFlatCoordinates_ = null;\\n        if (opt_layout !== undefined && opt_ends) {\\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\\n            _this.ends_ = opt_ends;\\n        }\\n        else {\\n            _this.setCoordinates(/** @type {Array<Array<import(\\\"../coordinate.js\\\").Coordinate>>} */ (coordinates), opt_layout);\\n        }\\n        return _this;\\n    }\\n    /**\\n     * Append the passed linear ring to this polygon.\\n     * @param {LinearRing} linearRing Linear ring.\\n     * @api\\n     */\\n    Polygon.prototype.appendLinearRing = function (linearRing) {\\n        if (!this.flatCoordinates) {\\n            this.flatCoordinates = linearRing.getFlatCoordinates().slice();\\n        }\\n        else {\\n            extend(this.flatCoordinates, linearRing.getFlatCoordinates());\\n        }\\n        this.ends_.push(this.flatCoordinates.length);\\n        this.changed();\\n    };\\n    /**\\n     * Make a complete copy of the geometry.\\n     * @return {!Polygon} Clone.\\n     * @override\\n     * @api\\n     */\\n    Polygon.prototype.clone = function () {\\n        return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    Polygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\\n            return minSquaredDistance;\\n        }\\n        if (this.maxDeltaRevision_ != this.getRevision()) {\\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\\n            this.maxDeltaRevision_ = this.getRevision();\\n        }\\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    Polygon.prototype.containsXY = function (x, y) {\\n        return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\\n    };\\n    /**\\n     * Return the area of the polygon on projected plane.\\n     * @return {number} Area (on projected plane).\\n     * @api\\n     */\\n    Polygon.prototype.getArea = function () {\\n        return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\\n    };\\n    /**\\n     * Get the coordinate array for this geometry.  This array has the structure\\n     * of a GeoJSON coordinate array for polygons.\\n     *\\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\\n     *     If `false`, coordinates will be oriented according to the left-hand rule\\n     *     (clockwise for exterior and counter-clockwise for interior rings).\\n     *     By default, coordinate orientation will depend on how the geometry was\\n     *     constructed.\\n     * @return {Array<Array<import(\\\"../coordinate.js\\\").Coordinate>>} Coordinates.\\n     * @override\\n     * @api\\n     */\\n    Polygon.prototype.getCoordinates = function (opt_right) {\\n        var flatCoordinates;\\n        if (opt_right !== undefined) {\\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\\n            orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\\n        }\\n        else {\\n            flatCoordinates = this.flatCoordinates;\\n        }\\n        return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\\n    };\\n    /**\\n     * @return {Array<number>} Ends.\\n     */\\n    Polygon.prototype.getEnds = function () {\\n        return this.ends_;\\n    };\\n    /**\\n     * @return {Array<number>} Interior point.\\n     */\\n    Polygon.prototype.getFlatInteriorPoint = function () {\\n        if (this.flatInteriorPointRevision_ != this.getRevision()) {\\n            var flatCenter = getCenter(this.getExtent());\\n            this.flatInteriorPoint_ = getInteriorPointOfArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, flatCenter, 0);\\n            this.flatInteriorPointRevision_ = this.getRevision();\\n        }\\n        return this.flatInteriorPoint_;\\n    };\\n    /**\\n     * Return an interior point of the polygon.\\n     * @return {Point} Interior point as XYM coordinate, where M is the\\n     * length of the horizontal intersection that the point belongs to.\\n     * @api\\n     */\\n    Polygon.prototype.getInteriorPoint = function () {\\n        return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\\n    };\\n    /**\\n     * Return the number of rings of the polygon,  this includes the exterior\\n     * ring and any interior rings.\\n     *\\n     * @return {number} Number of rings.\\n     * @api\\n     */\\n    Polygon.prototype.getLinearRingCount = function () {\\n        return this.ends_.length;\\n    };\\n    /**\\n     * Return the Nth linear ring of the polygon geometry. Return `null` if the\\n     * given index is out of range.\\n     * The exterior linear ring is available at index `0` and the interior rings\\n     * at index `1` and beyond.\\n     *\\n     * @param {number} index Index.\\n     * @return {LinearRing} Linear ring.\\n     * @api\\n     */\\n    Polygon.prototype.getLinearRing = function (index) {\\n        if (index < 0 || this.ends_.length <= index) {\\n            return null;\\n        }\\n        return new LinearRing(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\\n    };\\n    /**\\n     * Return the linear rings of the polygon.\\n     * @return {Array<LinearRing>} Linear rings.\\n     * @api\\n     */\\n    Polygon.prototype.getLinearRings = function () {\\n        var layout = this.layout;\\n        var flatCoordinates = this.flatCoordinates;\\n        var ends = this.ends_;\\n        var linearRings = [];\\n        var offset = 0;\\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\\n            var end = ends[i];\\n            var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\\n            linearRings.push(linearRing);\\n            offset = end;\\n        }\\n        return linearRings;\\n    };\\n    /**\\n     * @return {Array<number>} Oriented flat coordinates.\\n     */\\n    Polygon.prototype.getOrientedFlatCoordinates = function () {\\n        if (this.orientedRevision_ != this.getRevision()) {\\n            var flatCoordinates = this.flatCoordinates;\\n            if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\\n                this.orientedFlatCoordinates_ = flatCoordinates;\\n            }\\n            else {\\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\\n                this.orientedFlatCoordinates_.length =\\n                    orientLinearRings(this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\\n            }\\n            this.orientedRevision_ = this.getRevision();\\n        }\\n        return this.orientedFlatCoordinates_;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    Polygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\\n        var simplifiedFlatCoordinates = [];\\n        var simplifiedEnds = [];\\n        simplifiedFlatCoordinates.length = quantizeArray(this.flatCoordinates, 0, this.ends_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEnds);\\n        return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    Polygon.prototype.getType = function () {\\n        return GeometryType.POLYGON;\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    Polygon.prototype.intersectsExtent = function (extent) {\\n        return intersectsLinearRingArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\\n    };\\n    /**\\n     * Set the coordinates of the polygon.\\n     * @param {!Array<Array<import(\\\"../coordinate.js\\\").Coordinate>>} coordinates Coordinates.\\n     * @param {GeometryLayout=} opt_layout Layout.\\n     * @override\\n     * @api\\n     */\\n    Polygon.prototype.setCoordinates = function (coordinates, opt_layout) {\\n        this.setLayout(opt_layout, coordinates, 2);\\n        if (!this.flatCoordinates) {\\n            this.flatCoordinates = [];\\n        }\\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\\n        this.changed();\\n    };\\n    return Polygon;\\n}(SimpleGeometry));\\nexport default Polygon;\\n/**\\n * Create an approximation of a circle on the surface of a sphere.\\n * @param {import(\\\"../coordinate.js\\\").Coordinate} center Center (`[lon, lat]` in degrees).\\n * @param {number} radius The great-circle distance from the center to\\n *     the polygon vertices.\\n * @param {number=} opt_n Optional number of vertices for the resulting\\n *     polygon. Default is `32`.\\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\\n *     the Earth's mean radius using the WGS84 ellipsoid).\\n * @return {Polygon} The \\\"circular\\\" polygon.\\n * @api\\n */\\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\\n    var n = opt_n ? opt_n : 32;\\n    /** @type {Array<number>} */\\n    var flatCoordinates = [];\\n    for (var i = 0; i < n; ++i) {\\n        extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\\n    }\\n    flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\\n}\\n/**\\n * Create a polygon from an extent. The layout used is `XY`.\\n * @param {import(\\\"../extent.js\\\").Extent} extent The extent.\\n * @return {Polygon} The polygon.\\n * @api\\n */\\nexport function fromExtent(extent) {\\n    var minX = extent[0];\\n    var minY = extent[1];\\n    var maxX = extent[2];\\n    var maxY = extent[3];\\n    var flatCoordinates = [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\\n}\\n/**\\n * Create a regular polygon from a circle.\\n * @param {import(\\\"./Circle.js\\\").default} circle Circle geometry.\\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\\n *     radians. Default is 0.\\n * @return {Polygon} Polygon geometry.\\n * @api\\n */\\nexport function fromCircle(circle, opt_sides, opt_angle) {\\n    var sides = opt_sides ? opt_sides : 32;\\n    var stride = circle.getStride();\\n    var layout = circle.getLayout();\\n    var center = circle.getCenter();\\n    var arrayLength = stride * (sides + 1);\\n    var flatCoordinates = new Array(arrayLength);\\n    for (var i = 0; i < arrayLength; i += stride) {\\n        flatCoordinates[i] = 0;\\n        flatCoordinates[i + 1] = 0;\\n        for (var j = 2; j < stride; j++) {\\n            flatCoordinates[i + j] = center[j];\\n        }\\n    }\\n    var ends = [flatCoordinates.length];\\n    var polygon = new Polygon(flatCoordinates, layout, ends);\\n    makeRegular(polygon, center, circle.getRadius(), opt_angle);\\n    return polygon;\\n}\\n/**\\n * Modify the coordinates of a polygon to make it a regular polygon.\\n * @param {Polygon} polygon Polygon geometry.\\n * @param {import(\\\"../coordinate.js\\\").Coordinate} center Center of the regular polygon.\\n * @param {number} radius Radius of the regular polygon.\\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\\n *     radians. Default is 0.\\n */\\nexport function makeRegular(polygon, center, radius, opt_angle) {\\n    var flatCoordinates = polygon.getFlatCoordinates();\\n    var stride = polygon.getStride();\\n    var sides = flatCoordinates.length / stride - 1;\\n    var startAngle = opt_angle ? opt_angle : 0;\\n    for (var i = 0; i <= sides; ++i) {\\n        var offset = i * stride;\\n        var angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\\n        flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\\n        flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\\n    }\\n    polygon.changed();\\n}\\n//# sourceMappingURL=Polygon.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/View\\n */\\nimport { DEFAULT_TILE_SIZE } from './tilegrid/common.js';\\nimport { getUid } from './util.js';\\nimport { VOID } from './functions.js';\\nimport { createExtent, none as centerNone } from './centerconstraint.js';\\nimport BaseObject from './Object.js';\\nimport { createSnapToResolutions, createSnapToPower } from './resolutionconstraint.js';\\nimport { createSnapToZero, createSnapToN, none as rotationNone, disable } from './rotationconstraint.js';\\nimport ViewHint from './ViewHint.js';\\nimport ViewProperty from './ViewProperty.js';\\nimport { linearFindNearest } from './array.js';\\nimport { assert } from './asserts.js';\\nimport { add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual } from './coordinate.js';\\nimport { inAndOut } from './easing.js';\\nimport { getForViewAndSize, getCenter, getHeight, getWidth, isEmpty } from './extent.js';\\nimport GeometryType from './geom/GeometryType.js';\\nimport { fromExtent as polygonFromExtent } from './geom/Polygon.js';\\nimport { clamp, modulo } from './math.js';\\nimport { assign } from './obj.js';\\nimport { createProjection, METERS_PER_UNIT } from './proj.js';\\nimport Units from './proj/Units.js';\\nimport { equals } from './coordinate';\\nimport { easeOut } from './easing';\\nimport { createMinMaxResolution } from './resolutionconstraint';\\n/**\\n * An animation configuration\\n *\\n * @typedef {Object} Animation\\n * @property {import(\\\"./coordinate.js\\\").Coordinate} [sourceCenter]\\n * @property {import(\\\"./coordinate.js\\\").Coordinate} [targetCenter]\\n * @property {number} [sourceResolution]\\n * @property {number} [targetResolution]\\n * @property {number} [sourceRotation]\\n * @property {number} [targetRotation]\\n * @property {import(\\\"./coordinate.js\\\").Coordinate} [anchor]\\n * @property {number} start\\n * @property {number} duration\\n * @property {boolean} complete\\n * @property {function(number):number} easing\\n * @property {function(boolean)} callback\\n */\\n/**\\n * @typedef {Object} Constraints\\n * @property {import(\\\"./centerconstraint.js\\\").Type} center\\n * @property {import(\\\"./resolutionconstraint.js\\\").Type} resolution\\n * @property {import(\\\"./rotationconstraint.js\\\").Type} rotation\\n */\\n/**\\n * @typedef {Object} FitOptions\\n * @property {import(\\\"./size.js\\\").Size} [size] The size in pixels of the box to fit\\n * the extent into. Default is the current size of the first map in the DOM that\\n * uses this view, or `[100, 100]` if no such map is found.\\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\\n * cleared inside the view. Values in the array are top, right, bottom and left\\n * padding.\\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\\n * get the nearest extent instead of the closest that actually fits the view.\\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\\n * `minResolution` is given, this property is ignored.\\n * @property {number} [duration] The duration of the animation in milliseconds.\\n * By default, there is no animation to the target extent.\\n * @property {function(number):number} [easing] The easing function used during\\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\\n * The function will be called for each frame with a number representing a\\n * fraction of the animation's duration.  The function should return a number\\n * between 0 and 1 representing the progress toward the destination state.\\n * @property {function(boolean)} [callback] Function called when the view is in\\n * its final position. The callback will be called with `true` if the animation\\n * series completed on its own or `false` if it was cancelled.\\n */\\n/**\\n * @typedef {Object} ViewOptions\\n * @property {import(\\\"./coordinate.js\\\").Coordinate} [center] The initial center for\\n * the view. The coordinate system for the center is specified with the\\n * `projection` option. Layer sources will not be fetched if this is not set,\\n * but the center can be set later with {@link #setCenter}.\\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\\n * `false` means no constraint. `true` means no constraint, but snap to zero\\n * near zero. A number constrains the rotation to that number of values. For\\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\\n * @property {boolean} [enableRotation=true] Enable rotation.\\n * If `false`, a rotation constraint that always sets the rotation to zero is\\n * used. The `constrainRotation` option has no effect if `enableRotation` is\\n * `false`.\\n * @property {import(\\\"./extent.js\\\").Extent} [extent] The extent that constrains the\\n * view, in other words, nothing outside of this extent can be visible on the map.\\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\\n * constraint will only apply to the view center and not the whole extent.\\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\\n * of the given `extent`.\\n * @property {number} [maxResolution] The maximum resolution used to determine\\n * the resolution constraint. It is used together with `minResolution` (or\\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\\n * that the projection's validity extent fits in a 256x256 px tile. If the\\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\\n * to `40075016.68557849 / 256 = 156543.03392804097`.\\n * @property {number} [minResolution] The minimum resolution used to determine\\n * the resolution constraint.  It is used together with `maxResolution` (or\\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\\n * (the default) then `minResolution` defaults to\\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\\n * resolution constraint. It is used together with `minZoom` (or\\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\\n * provided, it is given precedence over `maxZoom`.\\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\\n * resolution constraint. It is used together with `maxZoom` (or\\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\\n * provided, it is given precedence over `minZoom`.\\n * @property {boolean} [multiWorld=false] No more than one world is visible.\\n * @property {boolean} [constrainResolution=false] If true, the view will always\\n * animate to the closest zoom level after an interaction; false means\\n * intermediary zoom levels are allowed.\\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\\n * the given resolution or zoom bounds.\\n * @property {import(\\\"./proj.js\\\").ProjectionLike} [projection='EPSG:3857'] The\\n * projection. The default is Spherical Mercator.\\n * @property {number} [resolution] The initial resolution for the view. The\\n * units are `projection` units per pixel (e.g. meters per pixel). An\\n * alternative to setting this is to set `zoom`. Layer sources will not be\\n * fetched if neither this nor `zoom` are defined, but they can be set later\\n * with {@link #setZoom} or {@link #setResolution}.\\n * @property {Array<number>} [resolutions] Resolutions to determine the\\n * resolution constraint. If set the `maxResolution`, `minResolution`,\\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\\n * @property {number} [rotation=0] The initial rotation for the view in radians\\n * (positive rotation clockwise, 0 means North).\\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\\n * level used to calculate the initial resolution for the view.\\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\\n * corresponding resolution.\\n */\\n/**\\n * @typedef {Object} AnimationOptions\\n * @property {import(\\\"./coordinate.js\\\").Coordinate} [center] The center of the view at the end of\\n * the animation.\\n * @property {number} [zoom] The zoom level of the view at the end of the\\n * animation. This takes precedence over `resolution`.\\n * @property {number} [resolution] The resolution of the view at the end\\n * of the animation.  If `zoom` is also provided, this option will be ignored.\\n * @property {number} [rotation] The rotation of the view at the end of\\n * the animation.\\n * @property {import(\\\"./coordinate.js\\\").Coordinate} [anchor] Optional anchor to remain fixed\\n * during a rotation or resolution animation.\\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\\n * @property {function(number):number} [easing] The easing function used\\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\\n * The function will be called for each frame with a number representing a\\n * fraction of the animation's duration.  The function should return a number\\n * between 0 and 1 representing the progress toward the destination state.\\n */\\n/**\\n * @typedef {Object} State\\n * @property {import(\\\"./coordinate.js\\\").Coordinate} center\\n * @property {import(\\\"./proj/Projection.js\\\").default} projection\\n * @property {number} resolution\\n * @property {number} rotation\\n * @property {number} zoom\\n */\\n/**\\n * Default min zoom level for the map view.\\n * @type {number}\\n */\\nvar DEFAULT_MIN_ZOOM = 0;\\n/**\\n * @classdesc\\n * A View object represents a simple 2D view of the map.\\n *\\n * This is the object to act upon to change the center, resolution,\\n * and rotation of the map.\\n *\\n * ### The view states\\n *\\n * An View is determined by three states: `center`, `resolution`,\\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\\n * `getCenter` and `setCenter` for the `center` state.\\n *\\n * The `zoom` state is actually not saved on the view: all computations\\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\\n * methods are available, as well as `getResolutionForZoom` and\\n * `getZoomForResolution` to switch from one system to the other.\\n *\\n * A View has a `projection`. The projection determines the\\n * coordinate system of the center, and its units determine the units of the\\n * resolution (projection units per pixel). The default projection is\\n * Spherical Mercator (EPSG:3857).\\n *\\n * ### The constraints\\n *\\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\\n * states of the view, but any constraint defined in the constructor will\\n * be applied along the way.\\n *\\n * A View object can have a *resolution constraint*, a *rotation constraint*\\n * and a *center constraint*.\\n *\\n * The *resolution constraint* typically restricts min/max values and\\n * snaps to specific resolutions. It is determined by the following\\n * options: `resolutions`, `maxResolution`, `maxZoom`, and `zoomFactor`.\\n * If `resolutions` is set, the other three options are ignored. See\\n * documentation for each option for more information. By default, the view\\n * only has a min/max restriction and allow intermediary zoom levels when\\n * pinch-zooming for example.\\n *\\n * The *rotation constraint* snaps to specific angles. It is determined\\n * by the following options: `enableRotation` and `constrainRotation`.\\n * By default the rotation value is snapped to zero when approaching the\\n * horizontal.\\n *\\n * The *center constraint* is determined by the `extent` option. By\\n * default the view center is not constrained at all.\\n *\\n * ### Changing the view state\\n *\\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\\n * `setRotation` are subject to the above mentioned constraints. As such, it\\n * may sometimes not be possible to know in advance the resulting state of the\\n * View. For example, calling `setResolution(10)` does not guarantee that\\n * `getResolution()` will return `10`.\\n *\\n * A consequence of this is that, when applying a delta on the view state, one\\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\\n * rather than the corresponding setters. This will let view do its internal\\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\\n * argument which allows specifying an origin for the transformation.\\n *\\n * ### Interacting with the view\\n *\\n * View constraints are usually only applied when the view is *at rest*, meaning that\\n * no interaction or animation is ongoing. As such, if the user puts the view in a\\n * state that is not equivalent to a constrained one (e.g. rotating the view when\\n * the snap angle is 0), an animation will be triggered at the interaction end to\\n * put back the view to a stable state;\\n *\\n * @api\\n */\\nvar View = /** @class */ (function (_super) {\\n    __extends(View, _super);\\n    /**\\n     * @param {ViewOptions=} opt_options View options.\\n     */\\n    function View(opt_options) {\\n        var _this = _super.call(this) || this;\\n        var options = assign({}, opt_options);\\n        /**\\n         * @private\\n         * @type {Array<number>}\\n         */\\n        _this.hints_ = [0, 0];\\n        /**\\n         * @private\\n         * @type {Array<Array<Animation>>}\\n         */\\n        _this.animations_ = [];\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        _this.updateAnimationKey_;\\n        /**\\n         * @private\\n         * @const\\n         * @type {import(\\\"./proj/Projection.js\\\").default}\\n         */\\n        _this.projection_ = createProjection(options.projection, 'EPSG:3857');\\n        /**\\n         * @private\\n         * @type {import(\\\"./coordinate.js\\\").Coordinate|undefined}\\n         */\\n        _this.targetCenter_ = null;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        _this.targetResolution_;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        _this.targetRotation_;\\n        _this.applyOptions_(options);\\n        return _this;\\n    }\\n    /**\\n     * Set up the view with the given options.\\n     * @param {ViewOptions} options View options.\\n     */\\n    View.prototype.applyOptions_ = function (options) {\\n        /**\\n         * @type {Object<string, *>}\\n         */\\n        var properties = {};\\n        var resolutionConstraintInfo = createResolutionConstraint(options);\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        this.maxResolution_ = resolutionConstraintInfo.maxResolution;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        this.minResolution_ = resolutionConstraintInfo.minResolution;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\\n        /**\\n         * @private\\n         * @type {Array<number>|undefined}\\n         */\\n        this.resolutions_ = options.resolutions;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        this.minZoom_ = resolutionConstraintInfo.minZoom;\\n        var centerConstraint = createCenterConstraint(options);\\n        var resolutionConstraint = resolutionConstraintInfo.constraint;\\n        var rotationConstraint = createRotationConstraint(options);\\n        /**\\n         * @private\\n         * @type {Constraints}\\n         */\\n        this.constraints_ = {\\n            center: centerConstraint,\\n            resolution: resolutionConstraint,\\n            rotation: rotationConstraint\\n        };\\n        this.setRotation(options.rotation !== undefined ? options.rotation : 0);\\n        this.setCenter(options.center !== undefined ? options.center : null);\\n        if (options.resolution !== undefined) {\\n            this.setResolution(options.resolution);\\n        }\\n        else if (options.zoom !== undefined) {\\n            this.setZoom(options.zoom);\\n        }\\n        this.resolveConstraints(0);\\n        this.setProperties(properties);\\n        /**\\n         * @private\\n         * @type {ViewOptions}\\n         */\\n        this.options_ = options;\\n    };\\n    /**\\n     * Get an updated version of the view options used to construct the view.  The\\n     * current resolution (or zoom), center, and rotation are applied to any stored\\n     * options.  The provided options can be used to apply new min/max zoom or\\n     * resolution limits.\\n     * @param {ViewOptions} newOptions New options to be applied.\\n     * @return {ViewOptions} New options updated with the current view state.\\n     */\\n    View.prototype.getUpdatedOptions_ = function (newOptions) {\\n        var options = assign({}, this.options_);\\n        // preserve resolution (or zoom)\\n        if (options.resolution !== undefined) {\\n            options.resolution = this.getResolution();\\n        }\\n        else {\\n            options.zoom = this.getZoom();\\n        }\\n        // preserve center\\n        options.center = this.getCenter();\\n        // preserve rotation\\n        options.rotation = this.getRotation();\\n        return assign({}, options, newOptions);\\n    };\\n    /**\\n     * Animate the view.  The view's center, zoom (or resolution), and rotation\\n     * can be animated for smooth transitions between view states.  For example,\\n     * to animate the view to a new zoom level:\\n     *\\n     *     view.animate({zoom: view.getZoom() + 1});\\n     *\\n     * By default, the animation lasts one second and uses in-and-out easing.  You\\n     * can customize this behavior by including `duration` (in milliseconds) and\\n     * `easing` options (see {@link module:ol/easing}).\\n     *\\n     * To chain together multiple animations, call the method with multiple\\n     * animation objects.  For example, to first zoom and then pan:\\n     *\\n     *     view.animate({zoom: 10}, {center: [0, 0]});\\n     *\\n     * If you provide a function as the last argument to the animate method, it\\n     * will get called at the end of an animation series.  The callback will be\\n     * called with `true` if the animation series completed on its own or `false`\\n     * if it was cancelled.\\n     *\\n     * Animations are cancelled by user interactions (e.g. dragging the map) or by\\n     * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\\n     * (or another method that calls one of these).\\n     *\\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\\n     *     options.  Multiple animations can be run in series by passing multiple\\n     *     options objects.  To run multiple animations in parallel, call the method\\n     *     multiple times.  An optional callback can be provided as a final\\n     *     argument.  The callback will be called with a boolean indicating whether\\n     *     the animation completed without being cancelled.\\n     * @api\\n     */\\n    View.prototype.animate = function (var_args) {\\n        if (this.isDef() && !this.getAnimating()) {\\n            this.resolveConstraints(0);\\n        }\\n        this.animate_.apply(this, arguments);\\n    };\\n    /**\\n     * @private\\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\\n     */\\n    View.prototype.animate_ = function (var_args) {\\n        var animationCount = arguments.length;\\n        var callback;\\n        if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\\n            callback = arguments[animationCount - 1];\\n            --animationCount;\\n        }\\n        if (!this.isDef()) {\\n            // if view properties are not yet set, shortcut to the final state\\n            var state = arguments[animationCount - 1];\\n            if (state.center) {\\n                this.setCenter(state.center);\\n            }\\n            if (state.zoom !== undefined) {\\n                this.setZoom(state.zoom);\\n            }\\n            if (state.rotation !== undefined) {\\n                this.setRotation(state.rotation);\\n            }\\n            if (callback) {\\n                animationCallback(callback, true);\\n            }\\n            return;\\n        }\\n        var start = Date.now();\\n        var center = this.targetCenter_.slice();\\n        var resolution = this.targetResolution_;\\n        var rotation = this.targetRotation_;\\n        var series = [];\\n        for (var i = 0; i < animationCount; ++i) {\\n            var options = /** @type {AnimationOptions} */ (arguments[i]);\\n            var animation = {\\n                start: start,\\n                complete: false,\\n                anchor: options.anchor,\\n                duration: options.duration !== undefined ? options.duration : 1000,\\n                easing: options.easing || inAndOut,\\n                callback: callback\\n            };\\n            if (options.center) {\\n                animation.sourceCenter = center;\\n                animation.targetCenter = options.center.slice();\\n                center = animation.targetCenter;\\n            }\\n            if (options.zoom !== undefined) {\\n                animation.sourceResolution = resolution;\\n                animation.targetResolution = this.getResolutionForZoom(options.zoom);\\n                resolution = animation.targetResolution;\\n            }\\n            else if (options.resolution) {\\n                animation.sourceResolution = resolution;\\n                animation.targetResolution = options.resolution;\\n                resolution = animation.targetResolution;\\n            }\\n            if (options.rotation !== undefined) {\\n                animation.sourceRotation = rotation;\\n                var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\\n                animation.targetRotation = rotation + delta;\\n                rotation = animation.targetRotation;\\n            }\\n            // check if animation is a no-op\\n            if (isNoopAnimation(animation)) {\\n                animation.complete = true;\\n                // we still push it onto the series for callback handling\\n            }\\n            else {\\n                start += animation.duration;\\n            }\\n            series.push(animation);\\n        }\\n        this.animations_.push(series);\\n        this.setHint(ViewHint.ANIMATING, 1);\\n        this.updateAnimations_();\\n    };\\n    /**\\n     * Determine if the view is being animated.\\n     * @return {boolean} The view is being animated.\\n     * @api\\n     */\\n    View.prototype.getAnimating = function () {\\n        return this.hints_[ViewHint.ANIMATING] > 0;\\n    };\\n    /**\\n     * Determine if the user is interacting with the view, such as panning or zooming.\\n     * @return {boolean} The view is being interacted with.\\n     * @api\\n     */\\n    View.prototype.getInteracting = function () {\\n        return this.hints_[ViewHint.INTERACTING] > 0;\\n    };\\n    /**\\n     * Cancel any ongoing animations.\\n     * @api\\n     */\\n    View.prototype.cancelAnimations = function () {\\n        this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\\n        for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\\n            var series = this.animations_[i];\\n            if (series[0].callback) {\\n                animationCallback(series[0].callback, false);\\n            }\\n        }\\n        this.animations_.length = 0;\\n    };\\n    /**\\n     * Update all animations.\\n     */\\n    View.prototype.updateAnimations_ = function () {\\n        if (this.updateAnimationKey_ !== undefined) {\\n            cancelAnimationFrame(this.updateAnimationKey_);\\n            this.updateAnimationKey_ = undefined;\\n        }\\n        if (!this.getAnimating()) {\\n            return;\\n        }\\n        var now = Date.now();\\n        var more = false;\\n        for (var i = this.animations_.length - 1; i >= 0; --i) {\\n            var series = this.animations_[i];\\n            var seriesComplete = true;\\n            for (var j = 0, jj = series.length; j < jj; ++j) {\\n                var animation = series[j];\\n                if (animation.complete) {\\n                    continue;\\n                }\\n                var elapsed = now - animation.start;\\n                var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\\n                if (fraction >= 1) {\\n                    animation.complete = true;\\n                    fraction = 1;\\n                }\\n                else {\\n                    seriesComplete = false;\\n                }\\n                var progress = animation.easing(fraction);\\n                if (animation.sourceCenter) {\\n                    var x0 = animation.sourceCenter[0];\\n                    var y0 = animation.sourceCenter[1];\\n                    var x1 = animation.targetCenter[0];\\n                    var y1 = animation.targetCenter[1];\\n                    var x = x0 + progress * (x1 - x0);\\n                    var y = y0 + progress * (y1 - y0);\\n                    this.targetCenter_ = [x, y];\\n                }\\n                if (animation.sourceResolution && animation.targetResolution) {\\n                    var resolution = progress === 1 ?\\n                        animation.targetResolution :\\n                        animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\\n                    if (animation.anchor) {\\n                        var size = this.getSizeFromViewport_(this.getRotation());\\n                        var constrainedResolution = this.constraints_.resolution(resolution, 0, size, true);\\n                        this.targetCenter_ = this.calculateCenterZoom(constrainedResolution, animation.anchor);\\n                    }\\n                    this.targetResolution_ = resolution;\\n                    this.applyTargetState_(true);\\n                }\\n                if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\\n                    var rotation = progress === 1 ?\\n                        modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\\n                        animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\\n                    if (animation.anchor) {\\n                        var constrainedRotation = this.constraints_.rotation(rotation, true);\\n                        this.targetCenter_ = this.calculateCenterRotate(constrainedRotation, animation.anchor);\\n                    }\\n                    this.targetRotation_ = rotation;\\n                }\\n                this.applyTargetState_(true);\\n                more = true;\\n                if (!animation.complete) {\\n                    break;\\n                }\\n            }\\n            if (seriesComplete) {\\n                this.animations_[i] = null;\\n                this.setHint(ViewHint.ANIMATING, -1);\\n                var callback = series[0].callback;\\n                if (callback) {\\n                    animationCallback(callback, true);\\n                }\\n            }\\n        }\\n        // prune completed series\\n        this.animations_ = this.animations_.filter(Boolean);\\n        if (more && this.updateAnimationKey_ === undefined) {\\n            this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_.bind(this));\\n        }\\n    };\\n    /**\\n     * @param {number} rotation Target rotation.\\n     * @param {import(\\\"./coordinate.js\\\").Coordinate} anchor Rotation anchor.\\n     * @return {import(\\\"./coordinate.js\\\").Coordinate|undefined} Center for rotation and anchor.\\n     */\\n    View.prototype.calculateCenterRotate = function (rotation, anchor) {\\n        var center;\\n        var currentCenter = this.getCenter();\\n        if (currentCenter !== undefined) {\\n            center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\\n            rotateCoordinate(center, rotation - this.getRotation());\\n            addCoordinate(center, anchor);\\n        }\\n        return center;\\n    };\\n    /**\\n     * @param {number} resolution Target resolution.\\n     * @param {import(\\\"./coordinate.js\\\").Coordinate} anchor Zoom anchor.\\n     * @return {import(\\\"./coordinate.js\\\").Coordinate|undefined} Center for resolution and anchor.\\n     */\\n    View.prototype.calculateCenterZoom = function (resolution, anchor) {\\n        var center;\\n        var currentCenter = this.getCenter();\\n        var currentResolution = this.getResolution();\\n        if (currentCenter !== undefined && currentResolution !== undefined) {\\n            var x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\\n            var y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\\n            center = [x, y];\\n        }\\n        return center;\\n    };\\n    /**\\n     * @private\\n     * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\\n     * @return {import(\\\"./size.js\\\").Size} Viewport size or `[100, 100]` when no viewport is found.\\n     */\\n    View.prototype.getSizeFromViewport_ = function (opt_rotation) {\\n        var size = [100, 100];\\n        var selector = '.ol-viewport[data-view=\\\"' + getUid(this) + '\\\"]';\\n        var element = document.querySelector(selector);\\n        if (element) {\\n            var metrics = getComputedStyle(element);\\n            size[0] = parseInt(metrics.width, 10);\\n            size[1] = parseInt(metrics.height, 10);\\n        }\\n        if (opt_rotation) {\\n            var w = size[0];\\n            var h = size[1];\\n            size[0] = Math.abs(w * Math.cos(opt_rotation)) + Math.abs(h * Math.sin(opt_rotation));\\n            size[1] = Math.abs(w * Math.sin(opt_rotation)) + Math.abs(h * Math.cos(opt_rotation));\\n        }\\n        return size;\\n    };\\n    /**\\n     * Get the view center.\\n     * @return {import(\\\"./coordinate.js\\\").Coordinate|undefined} The center of the view.\\n     * @observable\\n     * @api\\n     */\\n    View.prototype.getCenter = function () {\\n        return (\\n        /** @type {import(\\\"./coordinate.js\\\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER)));\\n    };\\n    /**\\n     * @return {Constraints} Constraints.\\n     */\\n    View.prototype.getConstraints = function () {\\n        return this.constraints_;\\n    };\\n    /**\\n     * @param {Array<number>=} opt_hints Destination array.\\n     * @return {Array<number>} Hint.\\n     */\\n    View.prototype.getHints = function (opt_hints) {\\n        if (opt_hints !== undefined) {\\n            opt_hints[0] = this.hints_[0];\\n            opt_hints[1] = this.hints_[1];\\n            return opt_hints;\\n        }\\n        else {\\n            return this.hints_.slice();\\n        }\\n    };\\n    /**\\n     * Calculate the extent for the current view state and the passed size.\\n     * The size is the pixel dimensions of the box into which the calculated extent\\n     * should fit. In most cases you want to get the extent of the entire map,\\n     * that is `map.getSize()`.\\n     * @param {import(\\\"./size.js\\\").Size=} opt_size Box pixel size. If not provided, the size of the\\n     * first map that uses this view will be used.\\n     * @return {import(\\\"./extent.js\\\").Extent} Extent.\\n     * @api\\n     */\\n    View.prototype.calculateExtent = function (opt_size) {\\n        var size = opt_size || this.getSizeFromViewport_();\\n        var center = /** @type {!import(\\\"./coordinate.js\\\").Coordinate} */ (this.getCenter());\\n        assert(center, 1); // The view center is not defined\\n        var resolution = /** @type {!number} */ (this.getResolution());\\n        assert(resolution !== undefined, 2); // The view resolution is not defined\\n        var rotation = /** @type {!number} */ (this.getRotation());\\n        assert(rotation !== undefined, 3); // The view rotation is not defined\\n        return getForViewAndSize(center, resolution, rotation, size);\\n    };\\n    /**\\n     * Get the maximum resolution of the view.\\n     * @return {number} The maximum resolution of the view.\\n     * @api\\n     */\\n    View.prototype.getMaxResolution = function () {\\n        return this.maxResolution_;\\n    };\\n    /**\\n     * Get the minimum resolution of the view.\\n     * @return {number} The minimum resolution of the view.\\n     * @api\\n     */\\n    View.prototype.getMinResolution = function () {\\n        return this.minResolution_;\\n    };\\n    /**\\n     * Get the maximum zoom level for the view.\\n     * @return {number} The maximum zoom level.\\n     * @api\\n     */\\n    View.prototype.getMaxZoom = function () {\\n        return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\\n    };\\n    /**\\n     * Set a new maximum zoom level for the view.\\n     * @param {number} zoom The maximum zoom level.\\n     * @api\\n     */\\n    View.prototype.setMaxZoom = function (zoom) {\\n        this.applyOptions_(this.getUpdatedOptions_({ maxZoom: zoom }));\\n    };\\n    /**\\n     * Get the minimum zoom level for the view.\\n     * @return {number} The minimum zoom level.\\n     * @api\\n     */\\n    View.prototype.getMinZoom = function () {\\n        return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\\n    };\\n    /**\\n     * Set a new minimum zoom level for the view.\\n     * @param {number} zoom The minimum zoom level.\\n     * @api\\n     */\\n    View.prototype.setMinZoom = function (zoom) {\\n        this.applyOptions_(this.getUpdatedOptions_({ minZoom: zoom }));\\n    };\\n    /**\\n     * Set whether the view shoud allow intermediary zoom levels.\\n     * @param {boolean} enabled Whether the resolution is constrained.\\n     * @api\\n     */\\n    View.prototype.setConstrainResolution = function (enabled) {\\n        this.applyOptions_(this.getUpdatedOptions_({ constrainResolution: enabled }));\\n    };\\n    /**\\n     * Get the view projection.\\n     * @return {import(\\\"./proj/Projection.js\\\").default} The projection of the view.\\n     * @api\\n     */\\n    View.prototype.getProjection = function () {\\n        return this.projection_;\\n    };\\n    /**\\n     * Get the view resolution.\\n     * @return {number|undefined} The resolution of the view.\\n     * @observable\\n     * @api\\n     */\\n    View.prototype.getResolution = function () {\\n        return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\\n    };\\n    /**\\n     * Get the resolutions for the view. This returns the array of resolutions\\n     * passed to the constructor of the View, or undefined if none were given.\\n     * @return {Array<number>|undefined} The resolutions of the view.\\n     * @api\\n     */\\n    View.prototype.getResolutions = function () {\\n        return this.resolutions_;\\n    };\\n    /**\\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\\n     * @param {import(\\\"./extent.js\\\").Extent} extent Extent.\\n     * @param {import(\\\"./size.js\\\").Size=} opt_size Box pixel size.\\n     * @return {number} The resolution at which the provided extent will render at\\n     *     the given size.\\n     * @api\\n     */\\n    View.prototype.getResolutionForExtent = function (extent, opt_size) {\\n        var size = opt_size || this.getSizeFromViewport_();\\n        var xResolution = getWidth(extent) / size[0];\\n        var yResolution = getHeight(extent) / size[1];\\n        return Math.max(xResolution, yResolution);\\n    };\\n    /**\\n     * Return a function that returns a value between 0 and 1 for a\\n     * resolution. Exponential scaling is assumed.\\n     * @param {number=} opt_power Power.\\n     * @return {function(number): number} Resolution for value function.\\n     */\\n    View.prototype.getResolutionForValueFunction = function (opt_power) {\\n        var power = opt_power || 2;\\n        var maxResolution = this.maxResolution_;\\n        var minResolution = this.minResolution_;\\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\\n        return (\\n        /**\\n         * @param {number} value Value.\\n         * @return {number} Resolution.\\n         */\\n        function (value) {\\n            var resolution = maxResolution / Math.pow(power, value * max);\\n            return resolution;\\n        });\\n    };\\n    /**\\n     * Get the view rotation.\\n     * @return {number} The rotation of the view in radians.\\n     * @observable\\n     * @api\\n     */\\n    View.prototype.getRotation = function () {\\n        return /** @type {number} */ (this.get(ViewProperty.ROTATION));\\n    };\\n    /**\\n     * Return a function that returns a resolution for a value between\\n     * 0 and 1. Exponential scaling is assumed.\\n     * @param {number=} opt_power Power.\\n     * @return {function(number): number} Value for resolution function.\\n     */\\n    View.prototype.getValueForResolutionFunction = function (opt_power) {\\n        var power = opt_power || 2;\\n        var maxResolution = this.maxResolution_;\\n        var minResolution = this.minResolution_;\\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\\n        return (\\n        /**\\n         * @param {number} resolution Resolution.\\n         * @return {number} Value.\\n         */\\n        function (resolution) {\\n            var value = (Math.log(maxResolution / resolution) / Math.log(power)) / max;\\n            return value;\\n        });\\n    };\\n    /**\\n     * @param {number} pixelRatio Pixel ratio for center rounding.\\n     * @return {State} View state.\\n     */\\n    View.prototype.getState = function (pixelRatio) {\\n        var center = /** @type {import(\\\"./coordinate.js\\\").Coordinate} */ (this.getCenter());\\n        var projection = this.getProjection();\\n        var resolution = /** @type {number} */ (this.getResolution());\\n        var rotation = this.getRotation();\\n        return {\\n            center: center.slice(0),\\n            projection: projection !== undefined ? projection : null,\\n            resolution: resolution,\\n            rotation: rotation,\\n            zoom: this.getZoom()\\n        };\\n    };\\n    /**\\n     * Get the current zoom level. This method may return non-integer zoom levels\\n     * if the view does not constrain the resolution, or if an interaction or\\n     * animation is underway.\\n     * @return {number|undefined} Zoom.\\n     * @api\\n     */\\n    View.prototype.getZoom = function () {\\n        var zoom;\\n        var resolution = this.getResolution();\\n        if (resolution !== undefined) {\\n            zoom = this.getZoomForResolution(resolution);\\n        }\\n        return zoom;\\n    };\\n    /**\\n     * Get the zoom level for a resolution.\\n     * @param {number} resolution The resolution.\\n     * @return {number|undefined} The zoom level for the provided resolution.\\n     * @api\\n     */\\n    View.prototype.getZoomForResolution = function (resolution) {\\n        var offset = this.minZoom_ || 0;\\n        var max, zoomFactor;\\n        if (this.resolutions_) {\\n            var nearest = linearFindNearest(this.resolutions_, resolution, 1);\\n            offset = nearest;\\n            max = this.resolutions_[nearest];\\n            if (nearest == this.resolutions_.length - 1) {\\n                zoomFactor = 2;\\n            }\\n            else {\\n                zoomFactor = max / this.resolutions_[nearest + 1];\\n            }\\n        }\\n        else {\\n            max = this.maxResolution_;\\n            zoomFactor = this.zoomFactor_;\\n        }\\n        return offset + Math.log(max / resolution) / Math.log(zoomFactor);\\n    };\\n    /**\\n     * Get the resolution for a zoom level.\\n     * @param {number} zoom Zoom level.\\n     * @return {number} The view resolution for the provided zoom level.\\n     * @api\\n     */\\n    View.prototype.getResolutionForZoom = function (zoom) {\\n        if (this.resolutions_) {\\n            if (this.resolutions_.length <= 1) {\\n                return 0;\\n            }\\n            var baseLevel = clamp(Math.floor(zoom), 0, this.resolutions_.length - 2);\\n            var zoomFactor = this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\\n            return this.resolutions_[baseLevel] / Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1));\\n        }\\n        else {\\n            return this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_);\\n        }\\n    };\\n    /**\\n     * Fit the given geometry or extent based on the given map size and border.\\n     * The size is pixel dimensions of the box to fit the extent into.\\n     * In most cases you will want to use the map size, that is `map.getSize()`.\\n     * Takes care of the map angle.\\n     * @param {import(\\\"./geom/SimpleGeometry.js\\\").default|import(\\\"./extent.js\\\").Extent} geometryOrExtent The geometry or\\n     *     extent to fit the view to.\\n     * @param {FitOptions=} opt_options Options.\\n     * @api\\n     */\\n    View.prototype.fit = function (geometryOrExtent, opt_options) {\\n        var options = opt_options || {};\\n        var size = options.size;\\n        if (!size) {\\n            size = this.getSizeFromViewport_();\\n        }\\n        /** @type {import(\\\"./geom/SimpleGeometry.js\\\").default} */\\n        var geometry;\\n        assert(Array.isArray(geometryOrExtent) || typeof /** @type {?} */ (geometryOrExtent).getSimplifiedGeometry === 'function', 24); // Invalid extent or geometry provided as `geometry`\\n        if (Array.isArray(geometryOrExtent)) {\\n            assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\\n            geometry = polygonFromExtent(geometryOrExtent);\\n        }\\n        else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\\n            geometryOrExtent = geometryOrExtent.getExtent();\\n            geometry = polygonFromExtent(geometryOrExtent);\\n            geometry.rotate(this.getRotation(), getCenter(geometryOrExtent));\\n        }\\n        else {\\n            geometry = geometryOrExtent;\\n        }\\n        var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\\n        var nearest = options.nearest !== undefined ? options.nearest : false;\\n        var minResolution;\\n        if (options.minResolution !== undefined) {\\n            minResolution = options.minResolution;\\n        }\\n        else if (options.maxZoom !== undefined) {\\n            minResolution = this.getResolutionForZoom(options.maxZoom);\\n        }\\n        else {\\n            minResolution = 0;\\n        }\\n        var coords = geometry.getFlatCoordinates();\\n        // calculate rotated extent\\n        var rotation = this.getRotation();\\n        var cosAngle = Math.cos(-rotation);\\n        var sinAngle = Math.sin(-rotation);\\n        var minRotX = +Infinity;\\n        var minRotY = +Infinity;\\n        var maxRotX = -Infinity;\\n        var maxRotY = -Infinity;\\n        var stride = geometry.getStride();\\n        for (var i = 0, ii = coords.length; i < ii; i += stride) {\\n            var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\\n            var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\\n            minRotX = Math.min(minRotX, rotX);\\n            minRotY = Math.min(minRotY, rotY);\\n            maxRotX = Math.max(maxRotX, rotX);\\n            maxRotY = Math.max(maxRotY, rotY);\\n        }\\n        // calculate resolution\\n        var resolution = this.getResolutionForExtent([minRotX, minRotY, maxRotX, maxRotY], [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\\n        resolution = isNaN(resolution) ? minResolution :\\n            Math.max(resolution, minResolution);\\n        resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\\n        // calculate center\\n        sinAngle = -sinAngle; // go back to original rotation\\n        var centerRotX = (minRotX + maxRotX) / 2;\\n        var centerRotY = (minRotY + maxRotY) / 2;\\n        centerRotX += (padding[1] - padding[3]) / 2 * resolution;\\n        centerRotY += (padding[0] - padding[2]) / 2 * resolution;\\n        var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\\n        var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\\n        var center = [centerX, centerY];\\n        var callback = options.callback ? options.callback : VOID;\\n        if (options.duration !== undefined) {\\n            this.animate_({\\n                resolution: resolution,\\n                center: this.getConstrainedCenter(center, resolution),\\n                duration: options.duration,\\n                easing: options.easing\\n            }, callback);\\n        }\\n        else {\\n            this.targetResolution_ = resolution;\\n            this.targetCenter_ = center;\\n            this.applyTargetState_(false, true);\\n            animationCallback(callback, true);\\n        }\\n    };\\n    /**\\n     * Center on coordinate and view position.\\n     * @param {import(\\\"./coordinate.js\\\").Coordinate} coordinate Coordinate.\\n     * @param {import(\\\"./size.js\\\").Size} size Box pixel size.\\n     * @param {import(\\\"./pixel.js\\\").Pixel} position Position on the view to center on.\\n     * @api\\n     */\\n    View.prototype.centerOn = function (coordinate, size, position) {\\n        // calculate rotated position\\n        var rotation = this.getRotation();\\n        var cosAngle = Math.cos(-rotation);\\n        var sinAngle = Math.sin(-rotation);\\n        var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\\n        var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\\n        var resolution = this.getResolution();\\n        rotX += (size[0] / 2 - position[0]) * resolution;\\n        rotY += (position[1] - size[1] / 2) * resolution;\\n        // go back to original angle\\n        sinAngle = -sinAngle; // go back to original rotation\\n        var centerX = rotX * cosAngle - rotY * sinAngle;\\n        var centerY = rotY * cosAngle + rotX * sinAngle;\\n        this.setCenter([centerX, centerY]);\\n    };\\n    /**\\n     * @return {boolean} Is defined.\\n     */\\n    View.prototype.isDef = function () {\\n        return !!this.getCenter() && this.getResolution() !== undefined;\\n    };\\n    /**\\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\\n     * @param {import(\\\"./coordinate.js\\\").Coordinate} deltaCoordinates Relative value to add.\\n     * @api\\n     */\\n    View.prototype.adjustCenter = function (deltaCoordinates) {\\n        var center = this.targetCenter_;\\n        this.setCenter([center[0] + deltaCoordinates[0], center[1] + deltaCoordinates[1]]);\\n    };\\n    /**\\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\\n     * constraint will apply.\\n     * @param {number} ratio The ratio to apply on the view resolution.\\n     * @param {import(\\\"./coordinate.js\\\").Coordinate=} opt_anchor The origin of the transformation.\\n     * @observable\\n     * @api\\n     */\\n    View.prototype.adjustResolution = function (ratio, opt_anchor) {\\n        var isMoving = this.getAnimating() || this.getInteracting();\\n        var size = this.getSizeFromViewport_(this.getRotation());\\n        var newResolution = this.constraints_.resolution(this.targetResolution_ * ratio, 0, size, isMoving);\\n        if (opt_anchor !== undefined) {\\n            this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\\n        }\\n        this.targetResolution_ *= ratio;\\n        this.applyTargetState_();\\n    };\\n    /**\\n     * Adds a value to the view zoom level, optionally using an anchor. Any resolution\\n     * constraint will apply.\\n     * @param {number} delta Relative value to add to the zoom level.\\n     * @param {import(\\\"./coordinate.js\\\").Coordinate=} opt_anchor The origin of the transformation.\\n     * @api\\n     */\\n    View.prototype.adjustZoom = function (delta, opt_anchor) {\\n        this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\\n    };\\n    /**\\n     * Adds a value to the view rotation, optionally using an anchor. Any rotation\\n     * constraint will apply.\\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\\n     * @param {import(\\\"./coordinate.js\\\").Coordinate=} opt_anchor The rotation center.\\n     * @observable\\n     * @api\\n     */\\n    View.prototype.adjustRotation = function (delta, opt_anchor) {\\n        var isMoving = this.getAnimating() || this.getInteracting();\\n        var newRotation = this.constraints_.rotation(this.targetRotation_ + delta, isMoving);\\n        if (opt_anchor !== undefined) {\\n            this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\\n        }\\n        this.targetRotation_ += delta;\\n        this.applyTargetState_();\\n    };\\n    /**\\n     * Set the center of the current view. Any extent constraint will apply.\\n     * @param {import(\\\"./coordinate.js\\\").Coordinate|undefined} center The center of the view.\\n     * @observable\\n     * @api\\n     */\\n    View.prototype.setCenter = function (center) {\\n        this.targetCenter_ = center;\\n        this.applyTargetState_();\\n    };\\n    /**\\n     * @param {ViewHint} hint Hint.\\n     * @param {number} delta Delta.\\n     * @return {number} New value.\\n     */\\n    View.prototype.setHint = function (hint, delta) {\\n        this.hints_[hint] += delta;\\n        this.changed();\\n        return this.hints_[hint];\\n    };\\n    /**\\n     * Set the resolution for this view. Any resolution constraint will apply.\\n     * @param {number|undefined} resolution The resolution of the view.\\n     * @observable\\n     * @api\\n     */\\n    View.prototype.setResolution = function (resolution) {\\n        this.targetResolution_ = resolution;\\n        this.applyTargetState_();\\n    };\\n    /**\\n     * Set the rotation for this view. Any rotation constraint will apply.\\n     * @param {number} rotation The rotation of the view in radians.\\n     * @observable\\n     * @api\\n     */\\n    View.prototype.setRotation = function (rotation) {\\n        this.targetRotation_ = rotation;\\n        this.applyTargetState_();\\n    };\\n    /**\\n     * Zoom to a specific zoom level. Any resolution constrain will apply.\\n     * @param {number} zoom Zoom level.\\n     * @api\\n     */\\n    View.prototype.setZoom = function (zoom) {\\n        this.setResolution(this.getResolutionForZoom(zoom));\\n    };\\n    /**\\n     * Recompute rotation/resolution/center based on target values.\\n     * Note: we have to compute rotation first, then resolution and center considering that\\n     * parameters can influence one another in case a view extent constraint is present.\\n     * @param {boolean=} opt_doNotCancelAnims Do not cancel animations.\\n     * @param {boolean=} opt_forceMoving Apply constraints as if the view is moving.\\n     * @private\\n     */\\n    View.prototype.applyTargetState_ = function (opt_doNotCancelAnims, opt_forceMoving) {\\n        var isMoving = this.getAnimating() || this.getInteracting() || opt_forceMoving;\\n        // compute rotation\\n        var newRotation = this.constraints_.rotation(this.targetRotation_, isMoving);\\n        var size = this.getSizeFromViewport_(newRotation);\\n        var newResolution = this.constraints_.resolution(this.targetResolution_, 0, size, isMoving);\\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, isMoving);\\n        if (this.get(ViewProperty.ROTATION) !== newRotation) {\\n            this.set(ViewProperty.ROTATION, newRotation);\\n        }\\n        if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\\n            this.set(ViewProperty.RESOLUTION, newResolution);\\n        }\\n        if (!this.get(ViewProperty.CENTER) || !equals(this.get(ViewProperty.CENTER), newCenter)) {\\n            this.set(ViewProperty.CENTER, newCenter);\\n        }\\n        if (this.getAnimating() && !opt_doNotCancelAnims) {\\n            this.cancelAnimations();\\n        }\\n    };\\n    /**\\n     * If any constraints need to be applied, an animation will be triggered.\\n     * This is typically done on interaction end.\\n     * Note: calling this with a duration of 0 will apply the constrained values straight away,\\n     * without animation.\\n     * @param {number=} opt_duration The animation duration in ms.\\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\\n     * @param {import(\\\"./coordinate.js\\\").Coordinate=} opt_anchor The origin of the transformation.\\n     */\\n    View.prototype.resolveConstraints = function (opt_duration, opt_resolutionDirection, opt_anchor) {\\n        var duration = opt_duration !== undefined ? opt_duration : 200;\\n        var direction = opt_resolutionDirection || 0;\\n        var newRotation = this.constraints_.rotation(this.targetRotation_);\\n        var size = this.getSizeFromViewport_(newRotation);\\n        var newResolution = this.constraints_.resolution(this.targetResolution_, direction, size);\\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size);\\n        if (duration === 0) {\\n            this.targetResolution_ = newResolution;\\n            this.targetRotation_ = newRotation;\\n            this.targetCenter_ = newCenter;\\n            this.applyTargetState_();\\n            return;\\n        }\\n        if (this.getResolution() !== newResolution ||\\n            this.getRotation() !== newRotation ||\\n            !this.getCenter() ||\\n            !equals(this.getCenter(), newCenter)) {\\n            if (this.getAnimating()) {\\n                this.cancelAnimations();\\n            }\\n            this.animate_({\\n                rotation: newRotation,\\n                center: newCenter,\\n                resolution: newResolution,\\n                duration: duration,\\n                easing: easeOut,\\n                anchor: opt_anchor\\n            });\\n        }\\n    };\\n    /**\\n     * Notify the View that an interaction has started.\\n     * The view state will be resolved to a stable one if needed\\n     * (depending on its constraints).\\n     * @api\\n     */\\n    View.prototype.beginInteraction = function () {\\n        this.resolveConstraints(0);\\n        this.setHint(ViewHint.INTERACTING, 1);\\n    };\\n    /**\\n     * Notify the View that an interaction has ended. The view state will be resolved\\n     * to a stable one if needed (depending on its constraints).\\n     * @param {number=} opt_duration Animation duration in ms.\\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\\n     * @param {import(\\\"./coordinate.js\\\").Coordinate=} opt_anchor The origin of the transformation.\\n     * @api\\n     */\\n    View.prototype.endInteraction = function (opt_duration, opt_resolutionDirection, opt_anchor) {\\n        this.setHint(ViewHint.INTERACTING, -1);\\n        this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\\n    };\\n    /**\\n     * Get a valid position for the view center according to the current constraints.\\n     * @param {import(\\\"./coordinate.js\\\").Coordinate|undefined} targetCenter Target center position.\\n     * @param {number=} opt_targetResolution Target resolution. If not supplied, the current one will be used.\\n     * This is useful to guess a valid center position at a different zoom level.\\n     * @return {import(\\\"./coordinate.js\\\").Coordinate|undefined} Valid center position.\\n     */\\n    View.prototype.getConstrainedCenter = function (targetCenter, opt_targetResolution) {\\n        var size = this.getSizeFromViewport_(this.getRotation());\\n        return this.constraints_.center(targetCenter, opt_targetResolution || this.getResolution(), size);\\n    };\\n    /**\\n     * Get a valid zoom level according to the current view constraints.\\n     * @param {number|undefined} targetZoom Target zoom.\\n     * @param {number=} opt_direction Direction. Default is `0`. Specify `-1` or `1` to return\\n     * the available value respectively lower or greater than the target one. Leaving `0` will simply choose\\n     * the nearest available value.\\n     * @return {number|undefined} Valid zoom level.\\n     */\\n    View.prototype.getConstrainedZoom = function (targetZoom, opt_direction) {\\n        var targetRes = this.getResolutionForZoom(targetZoom);\\n        return this.getZoomForResolution(this.getConstrainedResolution(targetRes));\\n    };\\n    /**\\n     * Get a valid resolution according to the current view constraints.\\n     * @param {number|undefined} targetResolution Target resolution.\\n     * @param {number=} opt_direction Direction. Default is `0`. Specify `-1` or `1` to return\\n     * the available value respectively lower or greater than the target one. Leaving `0` will simply choose\\n     * the nearest available value.\\n     * @return {number|undefined} Valid resolution.\\n     */\\n    View.prototype.getConstrainedResolution = function (targetResolution, opt_direction) {\\n        var direction = opt_direction || 0;\\n        var size = this.getSizeFromViewport_(this.getRotation());\\n        return this.constraints_.resolution(targetResolution, direction, size);\\n    };\\n    return View;\\n}(BaseObject));\\n/**\\n * @param {Function} callback Callback.\\n * @param {*} returnValue Return value.\\n */\\nfunction animationCallback(callback, returnValue) {\\n    setTimeout(function () {\\n        callback(returnValue);\\n    }, 0);\\n}\\n/**\\n * @param {ViewOptions} options View options.\\n * @return {import(\\\"./centerconstraint.js\\\").Type} The constraint.\\n */\\nexport function createCenterConstraint(options) {\\n    if (options.extent !== undefined) {\\n        return createExtent(options.extent, options.constrainOnlyCenter, options.smoothExtentConstraint !== undefined ? options.smoothExtentConstraint : true);\\n    }\\n    else {\\n        return centerNone;\\n    }\\n}\\n/**\\n * @param {ViewOptions} options View options.\\n * @return {{constraint: import(\\\"./resolutionconstraint.js\\\").Type, maxResolution: number,\\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\\n */\\nexport function createResolutionConstraint(options) {\\n    var resolutionConstraint;\\n    var maxResolution;\\n    var minResolution;\\n    // TODO: move these to be ol constants\\n    // see https://github.com/openlayers/openlayers/issues/2076\\n    var defaultMaxZoom = 28;\\n    var defaultZoomFactor = 2;\\n    var minZoom = options.minZoom !== undefined ?\\n        options.minZoom : DEFAULT_MIN_ZOOM;\\n    var maxZoom = options.maxZoom !== undefined ?\\n        options.maxZoom : defaultMaxZoom;\\n    var zoomFactor = options.zoomFactor !== undefined ?\\n        options.zoomFactor : defaultZoomFactor;\\n    var multiWorld = options.multiWorld !== undefined ?\\n        options.multiWorld : false;\\n    var smooth = options.smoothResolutionConstraint !== undefined ? options.smoothResolutionConstraint : true;\\n    if (options.resolutions !== undefined) {\\n        var resolutions = options.resolutions;\\n        maxResolution = resolutions[minZoom];\\n        minResolution = resolutions[maxZoom] !== undefined ?\\n            resolutions[maxZoom] : resolutions[resolutions.length - 1];\\n        if (options.constrainResolution) {\\n            resolutionConstraint = createSnapToResolutions(resolutions, smooth, !options.constrainOnlyCenter && options.extent);\\n        }\\n        else {\\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !options.constrainOnlyCenter && options.extent);\\n        }\\n    }\\n    else {\\n        // calculate the default min and max resolution\\n        var projection = createProjection(options.projection, 'EPSG:3857');\\n        var extent = projection.getExtent();\\n        var size = !extent ?\\n            // use an extent that can fit the whole world if need be\\n            360 * METERS_PER_UNIT[Units.DEGREES] /\\n                projection.getMetersPerUnit() :\\n            Math.max(getWidth(extent), getHeight(extent));\\n        var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\\n        var defaultMinResolution = defaultMaxResolution / Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\\n        // user provided maxResolution takes precedence\\n        maxResolution = options.maxResolution;\\n        if (maxResolution !== undefined) {\\n            minZoom = 0;\\n        }\\n        else {\\n            maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\\n        }\\n        // user provided minResolution takes precedence\\n        minResolution = options.minResolution;\\n        if (minResolution === undefined) {\\n            if (options.maxZoom !== undefined) {\\n                if (options.maxResolution !== undefined) {\\n                    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\\n                }\\n                else {\\n                    minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\\n                }\\n            }\\n            else {\\n                minResolution = defaultMinResolution;\\n            }\\n        }\\n        // given discrete zoom levels, minResolution may be different than provided\\n        maxZoom = minZoom + Math.floor(Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\\n        minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\\n        if (options.constrainResolution) {\\n            resolutionConstraint = createSnapToPower(zoomFactor, maxResolution, minResolution, smooth, !options.constrainOnlyCenter && options.extent);\\n        }\\n        else {\\n            var constrainOnlyCenter = options.constrainOnlyCenter;\\n            var extent_1 = options.extent;\\n            if (!multiWorld && !extent_1 && projection.isGlobal()) {\\n                constrainOnlyCenter = false;\\n                extent_1 = projection.getExtent();\\n            }\\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent_1);\\n        }\\n    }\\n    return { constraint: resolutionConstraint, maxResolution: maxResolution,\\n        minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor };\\n}\\n/**\\n * @param {ViewOptions} options View options.\\n * @return {import(\\\"./rotationconstraint.js\\\").Type} Rotation constraint.\\n */\\nexport function createRotationConstraint(options) {\\n    var enableRotation = options.enableRotation !== undefined ?\\n        options.enableRotation : true;\\n    if (enableRotation) {\\n        var constrainRotation = options.constrainRotation;\\n        if (constrainRotation === undefined || constrainRotation === true) {\\n            return createSnapToZero();\\n        }\\n        else if (constrainRotation === false) {\\n            return rotationNone;\\n        }\\n        else if (typeof constrainRotation === 'number') {\\n            return createSnapToN(constrainRotation);\\n        }\\n        else {\\n            return rotationNone;\\n        }\\n    }\\n    else {\\n        return disable;\\n    }\\n}\\n/**\\n * Determine if an animation involves no view change.\\n * @param {Animation} animation The animation.\\n * @return {boolean} The animation involves no view change.\\n */\\nexport function isNoopAnimation(animation) {\\n    if (animation.sourceCenter && animation.targetCenter) {\\n        if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\\n            return false;\\n        }\\n    }\\n    if (animation.sourceResolution !== animation.targetResolution) {\\n        return false;\\n    }\\n    if (animation.sourceRotation !== animation.targetRotation) {\\n        return false;\\n    }\\n    return true;\\n}\\nexport default View;\\n//# sourceMappingURL=View.js.map\",\"/**\\n * @module ol/dom\\n */\\n/**\\n * Create an html canvas element and returns its 2d context.\\n * @param {number=} opt_width Canvas width.\\n * @param {number=} opt_height Canvas height.\\n * @return {CanvasRenderingContext2D} The context.\\n */\\nexport function createCanvasContext2D(opt_width, opt_height) {\\n    var canvas = document.createElement('canvas');\\n    if (opt_width) {\\n        canvas.width = opt_width;\\n    }\\n    if (opt_height) {\\n        canvas.height = opt_height;\\n    }\\n    return canvas.getContext('2d');\\n}\\n/**\\n * Get the current computed width for the given element including margin,\\n * padding and border.\\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\\n * @param {!HTMLElement} element Element.\\n * @return {number} The width.\\n */\\nexport function outerWidth(element) {\\n    var width = element.offsetWidth;\\n    var style = getComputedStyle(element);\\n    width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\\n    return width;\\n}\\n/**\\n * Get the current computed height for the given element including margin,\\n * padding and border.\\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\\n * @param {!HTMLElement} element Element.\\n * @return {number} The height.\\n */\\nexport function outerHeight(element) {\\n    var height = element.offsetHeight;\\n    var style = getComputedStyle(element);\\n    height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\\n    return height;\\n}\\n/**\\n * @param {Node} newNode Node to replace old node\\n * @param {Node} oldNode The node to be replaced\\n */\\nexport function replaceNode(newNode, oldNode) {\\n    var parent = oldNode.parentNode;\\n    if (parent) {\\n        parent.replaceChild(newNode, oldNode);\\n    }\\n}\\n/**\\n * @param {Node} node The node to remove.\\n * @returns {Node} The node that was removed or null.\\n */\\nexport function removeNode(node) {\\n    return node && node.parentNode ? node.parentNode.removeChild(node) : null;\\n}\\n/**\\n * @param {Node} node The node to remove the children from.\\n */\\nexport function removeChildren(node) {\\n    while (node.lastChild) {\\n        node.removeChild(node.lastChild);\\n    }\\n}\\n/**\\n * Transform the children of a parent node so they match the\\n * provided list of children.  This function aims to efficiently\\n * remove, add, and reorder child nodes while maintaining a simple\\n * implementation (it is not guaranteed to minimize DOM operations).\\n * @param {Node} node The parent node whose children need reworking.\\n * @param {Array<Node>} children The desired children.\\n */\\nexport function replaceChildren(node, children) {\\n    var oldChildren = node.childNodes;\\n    for (var i = 0; true; ++i) {\\n        var oldChild = oldChildren[i];\\n        var newChild = children[i];\\n        // check if our work is done\\n        if (!oldChild && !newChild) {\\n            break;\\n        }\\n        // check if children match\\n        if (oldChild === newChild) {\\n            continue;\\n        }\\n        // check if a new child needs to be added\\n        if (!oldChild) {\\n            node.appendChild(newChild);\\n            continue;\\n        }\\n        // check if an old child needs to be removed\\n        if (!newChild) {\\n            node.removeChild(oldChild);\\n            --i;\\n            continue;\\n        }\\n        // reorder\\n        node.insertBefore(newChild, oldChild);\\n    }\\n}\\n//# sourceMappingURL=dom.js.map\",\"/**\\n * @module ol/layer/Property\\n */\\n/**\\n * @enum {string}\\n */\\nexport default {\\n    OPACITY: 'opacity',\\n    VISIBLE: 'visible',\\n    EXTENT: 'extent',\\n    Z_INDEX: 'zIndex',\\n    MAX_RESOLUTION: 'maxResolution',\\n    MIN_RESOLUTION: 'minResolution',\\n    SOURCE: 'source'\\n};\\n//# sourceMappingURL=Property.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/layer/Base\\n */\\nimport { abstract } from '../util.js';\\nimport BaseObject from '../Object.js';\\nimport LayerProperty from './Property.js';\\nimport { clamp } from '../math.js';\\nimport { assign } from '../obj.js';\\n/**\\n * @typedef {Object} Options\\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\\n * @property {number} [opacity=1] Opacity (0, 1).\\n * @property {boolean} [visible=true] Visibility.\\n * @property {import(\\\"../extent.js\\\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\\n * rendered outside of this extent.\\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\\n * method was used.\\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\\n * visible.\\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\\n * be visible.\\n */\\n/**\\n * @classdesc\\n * Abstract base class; normally only used for creating subclasses and not\\n * instantiated in apps.\\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\\n * the options is set as a {@link module:ol/Object} property on the layer object, so\\n * is observable, and has get/set accessors.\\n *\\n * @api\\n */\\nvar BaseLayer = /** @class */ (function (_super) {\\n    __extends(BaseLayer, _super);\\n    /**\\n     * @param {Options} options Layer options.\\n     */\\n    function BaseLayer(options) {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * @type {Object<string, *>}\\n         */\\n        var properties = assign({}, options);\\n        properties[LayerProperty.OPACITY] =\\n            options.opacity !== undefined ? options.opacity : 1;\\n        properties[LayerProperty.VISIBLE] =\\n            options.visible !== undefined ? options.visible : true;\\n        properties[LayerProperty.Z_INDEX] = options.zIndex;\\n        properties[LayerProperty.MAX_RESOLUTION] =\\n            options.maxResolution !== undefined ? options.maxResolution : Infinity;\\n        properties[LayerProperty.MIN_RESOLUTION] =\\n            options.minResolution !== undefined ? options.minResolution : 0;\\n        /**\\n         * @type {string}\\n         * @private\\n         */\\n        _this.className_ = properties.className !== undefined ? options.className : 'ol-layer';\\n        delete properties.className;\\n        _this.setProperties(properties);\\n        /**\\n         * @type {import(\\\"./Layer.js\\\").State}\\n         * @private\\n         */\\n        _this.state_ = null;\\n        return _this;\\n    }\\n    /**\\n     * @return {string} CSS class name.\\n     */\\n    BaseLayer.prototype.getClassName = function () {\\n        return this.className_;\\n    };\\n    /**\\n     * @return {import(\\\"./Layer.js\\\").State} Layer state.\\n     */\\n    BaseLayer.prototype.getLayerState = function () {\\n        /** @type {import(\\\"./Layer.js\\\").State} */\\n        var state = this.state_ || /** @type {?} */ ({\\n            layer: this,\\n            managed: true\\n        });\\n        state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\\n        state.sourceState = this.getSourceState();\\n        state.visible = this.getVisible();\\n        state.extent = this.getExtent();\\n        state.zIndex = this.getZIndex() || 0;\\n        state.maxResolution = this.getMaxResolution();\\n        state.minResolution = Math.max(this.getMinResolution(), 0);\\n        this.state_ = state;\\n        return state;\\n    };\\n    /**\\n     * @abstract\\n     * @param {Array<import(\\\"./Layer.js\\\").default>=} opt_array Array of layers (to be\\n     *     modified in place).\\n     * @return {Array<import(\\\"./Layer.js\\\").default>} Array of layers.\\n     */\\n    BaseLayer.prototype.getLayersArray = function (opt_array) {\\n        return abstract();\\n    };\\n    /**\\n     * @abstract\\n     * @param {Array<import(\\\"./Layer.js\\\").State>=} opt_states Optional list of layer\\n     *     states (to be modified in place).\\n     * @return {Array<import(\\\"./Layer.js\\\").State>} List of layer states.\\n     */\\n    BaseLayer.prototype.getLayerStatesArray = function (opt_states) {\\n        return abstract();\\n    };\\n    /**\\n     * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\\n     * will be visible regardless of extent.\\n     * @return {import(\\\"../extent.js\\\").Extent|undefined} The layer extent.\\n     * @observable\\n     * @api\\n     */\\n    BaseLayer.prototype.getExtent = function () {\\n        return (\\n        /** @type {import(\\\"../extent.js\\\").Extent|undefined} */ (this.get(LayerProperty.EXTENT)));\\n    };\\n    /**\\n     * Return the maximum resolution of the layer.\\n     * @return {number} The maximum resolution of the layer.\\n     * @observable\\n     * @api\\n     */\\n    BaseLayer.prototype.getMaxResolution = function () {\\n        return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\\n    };\\n    /**\\n     * Return the minimum resolution of the layer.\\n     * @return {number} The minimum resolution of the layer.\\n     * @observable\\n     * @api\\n     */\\n    BaseLayer.prototype.getMinResolution = function () {\\n        return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\\n    };\\n    /**\\n     * Return the opacity of the layer (between 0 and 1).\\n     * @return {number} The opacity of the layer.\\n     * @observable\\n     * @api\\n     */\\n    BaseLayer.prototype.getOpacity = function () {\\n        return /** @type {number} */ (this.get(LayerProperty.OPACITY));\\n    };\\n    /**\\n     * @abstract\\n     * @return {import(\\\"../source/State.js\\\").default} Source state.\\n     */\\n    BaseLayer.prototype.getSourceState = function () {\\n        return abstract();\\n    };\\n    /**\\n     * Return the visibility of the layer (`true` or `false`).\\n     * @return {boolean} The visibility of the layer.\\n     * @observable\\n     * @api\\n     */\\n    BaseLayer.prototype.getVisible = function () {\\n        return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\\n    };\\n    /**\\n     * Return the Z-index of the layer, which is used to order layers before\\n     * rendering. The default Z-index is 0.\\n     * @return {number} The Z-index of the layer.\\n     * @observable\\n     * @api\\n     */\\n    BaseLayer.prototype.getZIndex = function () {\\n        return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\\n    };\\n    /**\\n     * Set the extent at which the layer is visible.  If `undefined`, the layer\\n     * will be visible at all extents.\\n     * @param {import(\\\"../extent.js\\\").Extent|undefined} extent The extent of the layer.\\n     * @observable\\n     * @api\\n     */\\n    BaseLayer.prototype.setExtent = function (extent) {\\n        this.set(LayerProperty.EXTENT, extent);\\n    };\\n    /**\\n     * Set the maximum resolution at which the layer is visible.\\n     * @param {number} maxResolution The maximum resolution of the layer.\\n     * @observable\\n     * @api\\n     */\\n    BaseLayer.prototype.setMaxResolution = function (maxResolution) {\\n        this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\\n    };\\n    /**\\n     * Set the minimum resolution at which the layer is visible.\\n     * @param {number} minResolution The minimum resolution of the layer.\\n     * @observable\\n     * @api\\n     */\\n    BaseLayer.prototype.setMinResolution = function (minResolution) {\\n        this.set(LayerProperty.MIN_RESOLUTION, minResolution);\\n    };\\n    /**\\n     * Set the opacity of the layer, allowed values range from 0 to 1.\\n     * @param {number} opacity The opacity of the layer.\\n     * @observable\\n     * @api\\n     */\\n    BaseLayer.prototype.setOpacity = function (opacity) {\\n        this.set(LayerProperty.OPACITY, opacity);\\n    };\\n    /**\\n     * Set the visibility of the layer (`true` or `false`).\\n     * @param {boolean} visible The visibility of the layer.\\n     * @observable\\n     * @api\\n     */\\n    BaseLayer.prototype.setVisible = function (visible) {\\n        this.set(LayerProperty.VISIBLE, visible);\\n    };\\n    /**\\n     * Set Z-index of the layer, which is used to order layers before rendering.\\n     * The default Z-index is 0.\\n     * @param {number} zindex The z-index of the layer.\\n     * @observable\\n     * @api\\n     */\\n    BaseLayer.prototype.setZIndex = function (zindex) {\\n        this.set(LayerProperty.Z_INDEX, zindex);\\n    };\\n    return BaseLayer;\\n}(BaseObject));\\nexport default BaseLayer;\\n//# sourceMappingURL=Base.js.map\",\"/**\\n * @module ol/source/State\\n */\\n/**\\n * @enum {string}\\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\\n */\\nexport default {\\n    UNDEFINED: 'undefined',\\n    LOADING: 'loading',\\n    READY: 'ready',\\n    ERROR: 'error'\\n};\\n//# sourceMappingURL=State.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/layer/Group\\n */\\nimport { getUid } from '../util.js';\\nimport Collection from '../Collection.js';\\nimport CollectionEventType from '../CollectionEventType.js';\\nimport { getChangeEventType } from '../Object.js';\\nimport ObjectEventType from '../ObjectEventType.js';\\nimport { assert } from '../asserts.js';\\nimport { listen, unlistenByKey } from '../events.js';\\nimport EventType from '../events/EventType.js';\\nimport { getIntersection } from '../extent.js';\\nimport BaseLayer from './Base.js';\\nimport { assign, clear } from '../obj.js';\\nimport SourceState from '../source/State.js';\\n/**\\n * @typedef {Object} Options\\n * @property {number} [opacity=1] Opacity (0, 1).\\n * @property {boolean} [visible=true] Visibility.\\n * @property {import(\\\"../extent.js\\\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\\n * rendered outside of this extent.\\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\\n * method was used.\\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\\n * visible.\\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\\n * be visible.\\n * @property {Array<import(\\\"./Base.js\\\").default>|import(\\\"../Collection.js\\\").default<import(\\\"./Base.js\\\").default>} [layers] Child layers.\\n */\\n/**\\n * @enum {string}\\n * @private\\n */\\nvar Property = {\\n    LAYERS: 'layers'\\n};\\n/**\\n * @classdesc\\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\\n *\\n * A generic `change` event is triggered when the group/Collection changes.\\n *\\n * @api\\n */\\nvar LayerGroup = /** @class */ (function (_super) {\\n    __extends(LayerGroup, _super);\\n    /**\\n     * @param {Options=} opt_options Layer options.\\n     */\\n    function LayerGroup(opt_options) {\\n        var _this = this;\\n        var options = opt_options || {};\\n        var baseOptions = /** @type {Options} */ (assign({}, options));\\n        delete baseOptions.layers;\\n        var layers = options.layers;\\n        _this = _super.call(this, baseOptions) || this;\\n        /**\\n         * @private\\n         * @type {Array<import(\\\"../events.js\\\").EventsKey>}\\n         */\\n        _this.layersListenerKeys_ = [];\\n        /**\\n         * @private\\n         * @type {Object<string, Array<import(\\\"../events.js\\\").EventsKey>>}\\n         */\\n        _this.listenerKeys_ = {};\\n        listen(_this, getChangeEventType(Property.LAYERS), _this.handleLayersChanged_, _this);\\n        if (layers) {\\n            if (Array.isArray(layers)) {\\n                layers = new Collection(layers.slice(), { unique: true });\\n            }\\n            else {\\n                assert(typeof /** @type {?} */ (layers).getArray === 'function', 43); // Expected `layers` to be an array or a `Collection`\\n            }\\n        }\\n        else {\\n            layers = new Collection(undefined, { unique: true });\\n        }\\n        _this.setLayers(layers);\\n        return _this;\\n    }\\n    /**\\n     * @private\\n     */\\n    LayerGroup.prototype.handleLayerChange_ = function () {\\n        this.changed();\\n    };\\n    /**\\n     * @private\\n     */\\n    LayerGroup.prototype.handleLayersChanged_ = function () {\\n        this.layersListenerKeys_.forEach(unlistenByKey);\\n        this.layersListenerKeys_.length = 0;\\n        var layers = this.getLayers();\\n        this.layersListenerKeys_.push(listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this), listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this));\\n        for (var id in this.listenerKeys_) {\\n            this.listenerKeys_[id].forEach(unlistenByKey);\\n        }\\n        clear(this.listenerKeys_);\\n        var layersArray = layers.getArray();\\n        for (var i = 0, ii = layersArray.length; i < ii; i++) {\\n            var layer = layersArray[i];\\n            this.listenerKeys_[getUid(layer)] = [\\n                listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\\n                listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\\n            ];\\n        }\\n        this.changed();\\n    };\\n    /**\\n     * @param {import(\\\"../Collection.js\\\").CollectionEvent} collectionEvent CollectionEvent.\\n     * @private\\n     */\\n    LayerGroup.prototype.handleLayersAdd_ = function (collectionEvent) {\\n        var layer = /** @type {import(\\\"./Base.js\\\").default} */ (collectionEvent.element);\\n        this.listenerKeys_[getUid(layer)] = [\\n            listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\\n            listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\\n        ];\\n        this.changed();\\n    };\\n    /**\\n     * @param {import(\\\"../Collection.js\\\").CollectionEvent} collectionEvent CollectionEvent.\\n     * @private\\n     */\\n    LayerGroup.prototype.handleLayersRemove_ = function (collectionEvent) {\\n        var layer = /** @type {import(\\\"./Base.js\\\").default} */ (collectionEvent.element);\\n        var key = getUid(layer);\\n        this.listenerKeys_[key].forEach(unlistenByKey);\\n        delete this.listenerKeys_[key];\\n        this.changed();\\n    };\\n    /**\\n     * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\\n     * in this group.\\n     * @return {!import(\\\"../Collection.js\\\").default<import(\\\"./Base.js\\\").default>} Collection of\\n     *   {@link module:ol/layer/Base layers} that are part of this group.\\n     * @observable\\n     * @api\\n     */\\n    LayerGroup.prototype.getLayers = function () {\\n        return (\\n        /** @type {!import(\\\"../Collection.js\\\").default<import(\\\"./Base.js\\\").default>} */ (this.get(Property.LAYERS)));\\n    };\\n    /**\\n     * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\\n     * in this group.\\n     * @param {!import(\\\"../Collection.js\\\").default<import(\\\"./Base.js\\\").default>} layers Collection of\\n     *   {@link module:ol/layer/Base layers} that are part of this group.\\n     * @observable\\n     * @api\\n     */\\n    LayerGroup.prototype.setLayers = function (layers) {\\n        this.set(Property.LAYERS, layers);\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    LayerGroup.prototype.getLayersArray = function (opt_array) {\\n        var array = opt_array !== undefined ? opt_array : [];\\n        this.getLayers().forEach(function (layer) {\\n            layer.getLayersArray(array);\\n        });\\n        return array;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    LayerGroup.prototype.getLayerStatesArray = function (opt_states) {\\n        var states = opt_states !== undefined ? opt_states : [];\\n        var pos = states.length;\\n        this.getLayers().forEach(function (layer) {\\n            layer.getLayerStatesArray(states);\\n        });\\n        var ownLayerState = this.getLayerState();\\n        for (var i = pos, ii = states.length; i < ii; i++) {\\n            var layerState = states[i];\\n            layerState.opacity *= ownLayerState.opacity;\\n            layerState.visible = layerState.visible && ownLayerState.visible;\\n            layerState.maxResolution = Math.min(layerState.maxResolution, ownLayerState.maxResolution);\\n            layerState.minResolution = Math.max(layerState.minResolution, ownLayerState.minResolution);\\n            if (ownLayerState.extent !== undefined) {\\n                if (layerState.extent !== undefined) {\\n                    layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\\n                }\\n                else {\\n                    layerState.extent = ownLayerState.extent;\\n                }\\n            }\\n        }\\n        return states;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    LayerGroup.prototype.getSourceState = function () {\\n        return SourceState.READY;\\n    };\\n    return LayerGroup;\\n}(BaseLayer));\\nexport default LayerGroup;\\n//# sourceMappingURL=Group.js.map\",\"/**\\n * @module ol/size\\n */\\n/**\\n * An array of numbers representing a size: `[width, height]`.\\n * @typedef {Array<number>} Size\\n * @api\\n */\\n/**\\n * Returns a buffered size.\\n * @param {Size} size Size.\\n * @param {number} num The amount by which to buffer.\\n * @param {Size=} opt_size Optional reusable size array.\\n * @return {Size} The buffered size.\\n */\\nexport function buffer(size, num, opt_size) {\\n    if (opt_size === undefined) {\\n        opt_size = [0, 0];\\n    }\\n    opt_size[0] = size[0] + 2 * num;\\n    opt_size[1] = size[1] + 2 * num;\\n    return opt_size;\\n}\\n/**\\n * Determines if a size has a positive area.\\n * @param {Size} size The size to test.\\n * @return {boolean} The size has a positive area.\\n */\\nexport function hasArea(size) {\\n    return size[0] > 0 && size[1] > 0;\\n}\\n/**\\n * Returns a size scaled by a ratio. The result will be an array of integers.\\n * @param {Size} size Size.\\n * @param {number} ratio Ratio.\\n * @param {Size=} opt_size Optional reusable size array.\\n * @return {Size} The scaled size.\\n */\\nexport function scale(size, ratio, opt_size) {\\n    if (opt_size === undefined) {\\n        opt_size = [0, 0];\\n    }\\n    opt_size[0] = (size[0] * ratio + 0.5) | 0;\\n    opt_size[1] = (size[1] * ratio + 0.5) | 0;\\n    return opt_size;\\n}\\n/**\\n * Returns an `Size` array for the passed in number (meaning: square) or\\n * `Size` array.\\n * (meaning: non-square),\\n * @param {number|Size} size Width and height.\\n * @param {Size=} opt_size Optional reusable size array.\\n * @return {Size} Size.\\n * @api\\n */\\nexport function toSize(size, opt_size) {\\n    if (Array.isArray(size)) {\\n        return size;\\n    }\\n    else {\\n        if (opt_size === undefined) {\\n            opt_size = [size, size];\\n        }\\n        else {\\n            opt_size[0] = opt_size[1] = /** @type {number} */ (size);\\n        }\\n        return opt_size;\\n    }\\n}\\n//# sourceMappingURL=size.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/PluggableMap\\n */\\nimport { getUid } from './util.js';\\nimport Collection from './Collection.js';\\nimport CollectionEventType from './CollectionEventType.js';\\nimport MapBrowserEvent from './MapBrowserEvent.js';\\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\\nimport MapBrowserEventType from './MapBrowserEventType.js';\\nimport MapEvent from './MapEvent.js';\\nimport MapEventType from './MapEventType.js';\\nimport MapProperty from './MapProperty.js';\\nimport RenderEventType from './render/EventType.js';\\nimport BaseObject, { getChangeEventType } from './Object.js';\\nimport ObjectEventType from './ObjectEventType.js';\\nimport TileQueue from './TileQueue.js';\\nimport View from './View.js';\\nimport ViewHint from './ViewHint.js';\\nimport { assert } from './asserts.js';\\nimport { removeNode } from './dom.js';\\nimport { listen, unlistenByKey, unlisten } from './events.js';\\nimport EventType from './events/EventType.js';\\nimport { createEmpty, clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty } from './extent.js';\\nimport { TRUE } from './functions.js';\\nimport { DEVICE_PIXEL_RATIO, TOUCH } from './has.js';\\nimport LayerGroup from './layer/Group.js';\\nimport { hasArea } from './size.js';\\nimport { DROP } from './structs/PriorityQueue.js';\\nimport { create as createTransform, apply as applyTransform } from './transform.js';\\n/**\\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\\n * be used in applications.\\n * @typedef {Object} FrameState\\n * @property {number} pixelRatio The pixel ratio of the frame.\\n * @property {number} time The time when rendering of the frame was requested.\\n * @property {import(\\\"./View.js\\\").State} viewState The state of the current view.\\n * @property {boolean} animate\\n * @property {import(\\\"./transform.js\\\").Transform} coordinateToPixelTransform\\n * @property {null|import(\\\"./extent.js\\\").Extent} extent\\n * @property {import(\\\"./coordinate.js\\\").Coordinate} focus\\n * @property {number} index\\n * @property {Array<import(\\\"./layer/Layer.js\\\").State>} layerStatesArray\\n * @property {import(\\\"./transform.js\\\").Transform} pixelToCoordinateTransform\\n * @property {Array<PostRenderFunction>} postRenderFunctions\\n * @property {import(\\\"./size.js\\\").Size} size\\n * @property {!Object<string, boolean>} skippedFeatureUids\\n * @property {TileQueue} tileQueue\\n * @property {!Object<string, Object<string, boolean>>} usedTiles\\n * @property {Array<number>} viewHints\\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\\n */\\n/**\\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\\n */\\n/**\\n * @typedef {Object} AtPixelOptions\\n * @property {undefined|function(import(\\\"./layer/Layer.js\\\").default): boolean} [layerFilter] Layer filter\\n * function. The filter function will receive one argument, the\\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\\n * Only layers which are visible and for which this function returns `true`\\n * will be tested for features. By default, all visible layers will be tested.\\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\\n * inside the radius around the given position will be checked for features.\\n */\\n/**\\n * @typedef {Object} MapOptionsInternal\\n * @property {Collection<import(\\\"./control/Control.js\\\").default>} [controls]\\n * @property {Collection<import(\\\"./interaction/Interaction.js\\\").default>} [interactions]\\n * @property {HTMLElement|Document} keyboardEventTarget\\n * @property {Collection<import(\\\"./Overlay.js\\\").default>} overlays\\n * @property {Object<string, *>} values\\n */\\n/**\\n * Object literal with config options for the map.\\n * @typedef {Object} MapOptions\\n * @property {Collection<import(\\\"./control/Control.js\\\").default>|Array<import(\\\"./control/Control.js\\\").default>} [controls]\\n * Controls initially added to the map. If not specified,\\n * {@link module:ol/control~defaults} is used.\\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\\n * physical pixels and device-independent pixels (dips) on the device.\\n * @property {Collection<import(\\\"./interaction/Interaction.js\\\").default>|Array<import(\\\"./interaction/Interaction.js\\\").default>} [interactions]\\n * Interactions that are initially added to the map. If not specified,\\n * {@link module:ol/interaction~defaults} is used.\\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\\n * listen to keyboard events on. This determines when the `KeyboardPan` and\\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\\n * `document` the keyboard interactions will always trigger. If this option is\\n * not specified, the element the library listens to keyboard events on is the\\n * map target (i.e. the user-provided div for the map). If this is not\\n * `document`, the target element needs to be focused for key events to be\\n * emitted, requiring that the target element has a `tabindex` attribute.\\n * @property {Array<import(\\\"./layer/Base.js\\\").default>|Collection<import(\\\"./layer/Base.js\\\").default>|LayerGroup} [layers]\\n * Layers. If this is not defined, a map with no layers will be rendered. Note\\n * that layers are rendered in the order supplied, so if you want, for example,\\n * a vector layer to appear on top of a tile layer, it must come after the tile\\n * layer.\\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\\n * simultaneously.\\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\\n * cursor must move to be detected as a map move event instead of a click.\\n * Increasing this value can make it easier to click on the map.\\n * @property {Collection<import(\\\"./Overlay.js\\\").default>|Array<import(\\\"./Overlay.js\\\").default>} [overlays]\\n * Overlays initially added to the map. By default, no overlays are added.\\n * @property {HTMLElement|string} [target] The container for the map, either the\\n * element itself or the `id` of the element. If not specified at construction\\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\\n * rendered.\\n * @property {View} [view] The map's view.  No layer sources will be\\n * fetched unless this is specified at construction time or through\\n * {@link module:ol/Map~Map#setView}.\\n */\\n/**\\n * @fires import(\\\"./MapBrowserEvent.js\\\").MapBrowserEvent\\n * @fires import(\\\"./MapEvent.js\\\").MapEvent\\n * @fires import(\\\"./render/Event.js\\\").default#precompose\\n * @fires import(\\\"./render/Event.js\\\").default#postcompose\\n * @fires import(\\\"./render/Event.js\\\").default#rendercomplete\\n * @api\\n */\\nvar PluggableMap = /** @class */ (function (_super) {\\n    __extends(PluggableMap, _super);\\n    /**\\n     * @param {MapOptions} options Map options.\\n     */\\n    function PluggableMap(options) {\\n        var _this = _super.call(this) || this;\\n        var optionsInternal = createOptionsInternal(options);\\n        /**\\n         * @type {number}\\n         * @private\\n         */\\n        _this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.pixelRatio_ = options.pixelRatio !== undefined ?\\n            options.pixelRatio : DEVICE_PIXEL_RATIO;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        _this.animationDelayKey_;\\n        /**\\n         * @private\\n         */\\n        _this.animationDelay_ = function () {\\n            this.animationDelayKey_ = undefined;\\n            this.renderFrame_(Date.now());\\n        }.bind(_this);\\n        /**\\n         * @private\\n         * @type {import(\\\"./transform.js\\\").Transform}\\n         */\\n        _this.coordinateToPixelTransform_ = createTransform();\\n        /**\\n         * @private\\n         * @type {import(\\\"./transform.js\\\").Transform}\\n         */\\n        _this.pixelToCoordinateTransform_ = createTransform();\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.frameIndex_ = 0;\\n        /**\\n         * @private\\n         * @type {?FrameState}\\n         */\\n        _this.frameState_ = null;\\n        /**\\n         * The extent at the previous 'moveend' event.\\n         * @private\\n         * @type {import(\\\"./extent.js\\\").Extent}\\n         */\\n        _this.previousExtent_ = null;\\n        /**\\n         * @private\\n         * @type {?import(\\\"./events.js\\\").EventsKey}\\n         */\\n        _this.viewPropertyListenerKey_ = null;\\n        /**\\n         * @private\\n         * @type {?import(\\\"./events.js\\\").EventsKey}\\n         */\\n        _this.viewChangeListenerKey_ = null;\\n        /**\\n         * @private\\n         * @type {Array<import(\\\"./events.js\\\").EventsKey>}\\n         */\\n        _this.layerGroupPropertyListenerKeys_ = null;\\n        /**\\n         * @private\\n         * @type {!HTMLElement}\\n         */\\n        _this.viewport_ = document.createElement('div');\\n        _this.viewport_.className = 'ol-viewport' + (TOUCH ? ' ol-touch' : '');\\n        _this.viewport_.style.position = 'relative';\\n        _this.viewport_.style.overflow = 'hidden';\\n        _this.viewport_.style.width = '100%';\\n        _this.viewport_.style.height = '100%';\\n        // prevent page zoom on IE >= 10 browsers\\n        _this.viewport_.style.msTouchAction = 'none';\\n        _this.viewport_.style.touchAction = 'none';\\n        /**\\n         * @private\\n         * @type {!HTMLElement}\\n         */\\n        _this.overlayContainer_ = document.createElement('div');\\n        _this.overlayContainer_.style.position = 'absolute';\\n        _this.overlayContainer_.style.zIndex = '0';\\n        _this.overlayContainer_.style.width = '100%';\\n        _this.overlayContainer_.style.height = '100%';\\n        _this.overlayContainer_.className = 'ol-overlaycontainer';\\n        _this.viewport_.appendChild(_this.overlayContainer_);\\n        /**\\n         * @private\\n         * @type {!HTMLElement}\\n         */\\n        _this.overlayContainerStopEvent_ = document.createElement('div');\\n        _this.overlayContainerStopEvent_.style.position = 'absolute';\\n        _this.overlayContainerStopEvent_.style.zIndex = '0';\\n        _this.overlayContainerStopEvent_.style.width = '100%';\\n        _this.overlayContainerStopEvent_.style.height = '100%';\\n        _this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\\n        _this.viewport_.appendChild(_this.overlayContainerStopEvent_);\\n        /**\\n         * @private\\n         * @type {MapBrowserEventHandler}\\n         */\\n        _this.mapBrowserEventHandler_ = new MapBrowserEventHandler(_this, options.moveTolerance);\\n        for (var key in MapBrowserEventType) {\\n            listen(_this.mapBrowserEventHandler_, MapBrowserEventType[key], _this.handleMapBrowserEvent, _this);\\n        }\\n        /**\\n         * @private\\n         * @type {HTMLElement|Document}\\n         */\\n        _this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\\n        /**\\n         * @private\\n         * @type {Array<import(\\\"./events.js\\\").EventsKey>}\\n         */\\n        _this.keyHandlerKeys_ = null;\\n        listen(_this.viewport_, EventType.CONTEXTMENU, _this.handleBrowserEvent, _this);\\n        listen(_this.viewport_, EventType.WHEEL, _this.handleBrowserEvent, _this);\\n        listen(_this.viewport_, EventType.MOUSEWHEEL, _this.handleBrowserEvent, _this);\\n        /**\\n         * @type {Collection<import(\\\"./control/Control.js\\\").default>}\\n         * @protected\\n         */\\n        _this.controls = optionsInternal.controls || new Collection();\\n        /**\\n         * @type {Collection<import(\\\"./interaction/Interaction.js\\\").default>}\\n         * @protected\\n         */\\n        _this.interactions = optionsInternal.interactions || new Collection();\\n        /**\\n         * @type {Collection<import(\\\"./Overlay.js\\\").default>}\\n         * @private\\n         */\\n        _this.overlays_ = optionsInternal.overlays;\\n        /**\\n         * A lookup of overlays by id.\\n         * @private\\n         * @type {Object<string, import(\\\"./Overlay.js\\\").default>}\\n         */\\n        _this.overlayIdIndex_ = {};\\n        /**\\n         * @type {import(\\\"./renderer/Map.js\\\").default}\\n         * @private\\n         */\\n        _this.renderer_ = _this.createRenderer();\\n        /**\\n         * @type {function(Event): void|undefined}\\n         * @private\\n         */\\n        _this.handleResize_;\\n        /**\\n         * @private\\n         * @type {import(\\\"./coordinate.js\\\").Coordinate}\\n         */\\n        _this.focus_ = null;\\n        /**\\n         * @private\\n         * @type {!Array<PostRenderFunction>}\\n         */\\n        _this.postRenderFunctions_ = [];\\n        /**\\n         * @private\\n         * @type {TileQueue}\\n         */\\n        _this.tileQueue_ = new TileQueue(_this.getTilePriority.bind(_this), _this.handleTileChange_.bind(_this));\\n        /**\\n         * Uids of features to skip at rendering time.\\n         * @type {Object<string, boolean>}\\n         * @private\\n         */\\n        _this.skippedFeatureUids_ = {};\\n        listen(_this, getChangeEventType(MapProperty.LAYERGROUP), _this.handleLayerGroupChanged_, _this);\\n        listen(_this, getChangeEventType(MapProperty.VIEW), _this.handleViewChanged_, _this);\\n        listen(_this, getChangeEventType(MapProperty.SIZE), _this.handleSizeChanged_, _this);\\n        listen(_this, getChangeEventType(MapProperty.TARGET), _this.handleTargetChanged_, _this);\\n        // setProperties will trigger the rendering of the map if the map\\n        // is \\\"defined\\\" already.\\n        _this.setProperties(optionsInternal.values);\\n        _this.controls.forEach(\\n        /**\\n         * @param {import(\\\"./control/Control.js\\\").default} control Control.\\n         * @this {PluggableMap}\\n         */\\n        (function (control) {\\n            control.setMap(this);\\n        }).bind(_this));\\n        listen(_this.controls, CollectionEventType.ADD, \\n        /**\\n         * @param {import(\\\"./Collection.js\\\").CollectionEvent} event CollectionEvent.\\n         */\\n        function (event) {\\n            event.element.setMap(this);\\n        }, _this);\\n        listen(_this.controls, CollectionEventType.REMOVE, \\n        /**\\n         * @param {import(\\\"./Collection.js\\\").CollectionEvent} event CollectionEvent.\\n         */\\n        function (event) {\\n            event.element.setMap(null);\\n        }, _this);\\n        _this.interactions.forEach(\\n        /**\\n         * @param {import(\\\"./interaction/Interaction.js\\\").default} interaction Interaction.\\n         * @this {PluggableMap}\\n         */\\n        (function (interaction) {\\n            interaction.setMap(this);\\n        }).bind(_this));\\n        listen(_this.interactions, CollectionEventType.ADD, \\n        /**\\n         * @param {import(\\\"./Collection.js\\\").CollectionEvent} event CollectionEvent.\\n         */\\n        function (event) {\\n            event.element.setMap(this);\\n        }, _this);\\n        listen(_this.interactions, CollectionEventType.REMOVE, \\n        /**\\n         * @param {import(\\\"./Collection.js\\\").CollectionEvent} event CollectionEvent.\\n         */\\n        function (event) {\\n            event.element.setMap(null);\\n        }, _this);\\n        _this.overlays_.forEach(_this.addOverlayInternal_.bind(_this));\\n        listen(_this.overlays_, CollectionEventType.ADD, \\n        /**\\n         * @param {import(\\\"./Collection.js\\\").CollectionEvent} event CollectionEvent.\\n         */\\n        function (event) {\\n            this.addOverlayInternal_(/** @type {import(\\\"./Overlay.js\\\").default} */ (event.element));\\n        }, _this);\\n        listen(_this.overlays_, CollectionEventType.REMOVE, \\n        /**\\n         * @param {import(\\\"./Collection.js\\\").CollectionEvent} event CollectionEvent.\\n         */\\n        function (event) {\\n            var overlay = /** @type {import(\\\"./Overlay.js\\\").default} */ (event.element);\\n            var id = overlay.getId();\\n            if (id !== undefined) {\\n                delete this.overlayIdIndex_[id.toString()];\\n            }\\n            event.element.setMap(null);\\n        }, _this);\\n        return _this;\\n    }\\n    /**\\n     * @abstract\\n     * @return {import(\\\"./renderer/Map.js\\\").default} The map renderer\\n     */\\n    PluggableMap.prototype.createRenderer = function () {\\n        throw new Error('Use a map type that has a createRenderer method');\\n    };\\n    /**\\n     * Add the given control to the map.\\n     * @param {import(\\\"./control/Control.js\\\").default} control Control.\\n     * @api\\n     */\\n    PluggableMap.prototype.addControl = function (control) {\\n        this.getControls().push(control);\\n    };\\n    /**\\n     * Add the given interaction to the map. If you want to add an interaction\\n     * at another point of the collection use `getInteraction()` and the methods\\n     * available on {@link module:ol/Collection~Collection}. This can be used to\\n     * stop the event propagation from the handleEvent function. The interactions\\n     * get to handle the events in the reverse order of this collection.\\n     * @param {import(\\\"./interaction/Interaction.js\\\").default} interaction Interaction to add.\\n     * @api\\n     */\\n    PluggableMap.prototype.addInteraction = function (interaction) {\\n        this.getInteractions().push(interaction);\\n    };\\n    /**\\n     * Adds the given layer to the top of this map. If you want to add a layer\\n     * elsewhere in the stack, use `getLayers()` and the methods available on\\n     * {@link module:ol/Collection~Collection}.\\n     * @param {import(\\\"./layer/Base.js\\\").default} layer Layer.\\n     * @api\\n     */\\n    PluggableMap.prototype.addLayer = function (layer) {\\n        var layers = this.getLayerGroup().getLayers();\\n        layers.push(layer);\\n    };\\n    /**\\n     * Add the given overlay to the map.\\n     * @param {import(\\\"./Overlay.js\\\").default} overlay Overlay.\\n     * @api\\n     */\\n    PluggableMap.prototype.addOverlay = function (overlay) {\\n        this.getOverlays().push(overlay);\\n    };\\n    /**\\n     * This deals with map's overlay collection changes.\\n     * @param {import(\\\"./Overlay.js\\\").default} overlay Overlay.\\n     * @private\\n     */\\n    PluggableMap.prototype.addOverlayInternal_ = function (overlay) {\\n        var id = overlay.getId();\\n        if (id !== undefined) {\\n            this.overlayIdIndex_[id.toString()] = overlay;\\n        }\\n        overlay.setMap(this);\\n    };\\n    /**\\n     *\\n     * @inheritDoc\\n     */\\n    PluggableMap.prototype.disposeInternal = function () {\\n        this.mapBrowserEventHandler_.dispose();\\n        unlisten(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\\n        unlisten(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\\n        unlisten(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\\n        if (this.handleResize_ !== undefined) {\\n            removeEventListener(EventType.RESIZE, this.handleResize_, false);\\n            this.handleResize_ = undefined;\\n        }\\n        if (this.animationDelayKey_) {\\n            cancelAnimationFrame(this.animationDelayKey_);\\n            this.animationDelayKey_ = undefined;\\n        }\\n        this.setTarget(null);\\n        _super.prototype.disposeInternal.call(this);\\n    };\\n    /**\\n     * Detect features that intersect a pixel on the viewport, and execute a\\n     * callback with each intersecting feature. Layers included in the detection can\\n     * be configured through the `layerFilter` option in `opt_options`.\\n     * @param {import(\\\"./pixel.js\\\").Pixel} pixel Pixel.\\n     * @param {function(this: S, import(\\\"./Feature.js\\\").FeatureLike,\\n     *     import(\\\"./layer/Layer.js\\\").default): T} callback Feature callback. The callback will be\\n     *     called with two arguments. The first argument is one\\n     *     {@link module:ol/Feature feature} or\\n     *     {@link module:ol/render/Feature render feature} at the pixel, the second is\\n     *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\\n     *     unmanaged layers. To stop detection, callback functions can return a\\n     *     truthy value.\\n     * @param {AtPixelOptions=} opt_options Optional options.\\n     * @return {T|undefined} Callback result, i.e. the return value of last\\n     * callback execution, or the first truthy callback return value.\\n     * @template S,T\\n     * @api\\n     */\\n    PluggableMap.prototype.forEachFeatureAtPixel = function (pixel, callback, opt_options) {\\n        if (!this.frameState_) {\\n            return;\\n        }\\n        var coordinate = this.getCoordinateFromPixel(pixel);\\n        opt_options = opt_options !== undefined ? opt_options :\\n            /** @type {AtPixelOptions} */ ({});\\n        var hitTolerance = opt_options.hitTolerance !== undefined ?\\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\\n        var layerFilter = opt_options.layerFilter !== undefined ?\\n            opt_options.layerFilter : TRUE;\\n        return this.renderer_.forEachFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, callback, null, layerFilter, null);\\n    };\\n    /**\\n     * Get all features that intersect a pixel on the viewport.\\n     * @param {import(\\\"./pixel.js\\\").Pixel} pixel Pixel.\\n     * @param {AtPixelOptions=} opt_options Optional options.\\n     * @return {Array<import(\\\"./Feature.js\\\").FeatureLike>} The detected features or\\n     * `null` if none were found.\\n     * @api\\n     */\\n    PluggableMap.prototype.getFeaturesAtPixel = function (pixel, opt_options) {\\n        var features = null;\\n        this.forEachFeatureAtPixel(pixel, function (feature) {\\n            if (!features) {\\n                features = [];\\n            }\\n            features.push(feature);\\n        }, opt_options);\\n        return features;\\n    };\\n    /**\\n     * Detect layers that have a color value at a pixel on the viewport, and\\n     * execute a callback with each matching layer. Layers included in the\\n     * detection can be configured through `opt_layerFilter`.\\n     * @param {import(\\\"./pixel.js\\\").Pixel} pixel Pixel.\\n     * @param {function(this: S, import(\\\"./layer/Layer.js\\\").default, (Uint8ClampedArray|Uint8Array)): T} callback\\n     *     Layer callback. This callback will receive two arguments: first is the\\n     *     {@link module:ol/layer/Layer layer}, second argument is an array representing\\n     *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\\n     *     that do not currently support this argument. To stop detection, callback\\n     *     functions can return a truthy value.\\n     * @param {AtPixelOptions=} opt_options Configuration options.\\n     * @return {T|undefined} Callback result, i.e. the return value of last\\n     * callback execution, or the first truthy callback return value.\\n     * @template S,T\\n     * @api\\n     */\\n    PluggableMap.prototype.forEachLayerAtPixel = function (pixel, callback, opt_options) {\\n        if (!this.frameState_) {\\n            return;\\n        }\\n        var options = opt_options || /** @type {AtPixelOptions} */ ({});\\n        var hitTolerance = options.hitTolerance !== undefined ?\\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\\n        var layerFilter = options.layerFilter || TRUE;\\n        return this.renderer_.forEachLayerAtPixel(pixel, this.frameState_, hitTolerance, callback, layerFilter);\\n    };\\n    /**\\n     * Detect if features intersect a pixel on the viewport. Layers included in the\\n     * detection can be configured through `opt_layerFilter`.\\n     * @param {import(\\\"./pixel.js\\\").Pixel} pixel Pixel.\\n     * @param {AtPixelOptions=} opt_options Optional options.\\n     * @return {boolean} Is there a feature at the given pixel?\\n     * @api\\n     */\\n    PluggableMap.prototype.hasFeatureAtPixel = function (pixel, opt_options) {\\n        if (!this.frameState_) {\\n            return false;\\n        }\\n        var coordinate = this.getCoordinateFromPixel(pixel);\\n        opt_options = opt_options !== undefined ? opt_options :\\n            /** @type {AtPixelOptions} */ ({});\\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\\n        var hitTolerance = opt_options.hitTolerance !== undefined ?\\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\\n        return this.renderer_.hasFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, layerFilter, null);\\n    };\\n    /**\\n     * Returns the coordinate in view projection for a browser event.\\n     * @param {Event} event Event.\\n     * @return {import(\\\"./coordinate.js\\\").Coordinate} Coordinate.\\n     * @api\\n     */\\n    PluggableMap.prototype.getEventCoordinate = function (event) {\\n        return this.getCoordinateFromPixel(this.getEventPixel(event));\\n    };\\n    /**\\n     * Returns the map pixel position for a browser event relative to the viewport.\\n     * @param {Event|TouchEvent} event Event.\\n     * @return {import(\\\"./pixel.js\\\").Pixel} Pixel.\\n     * @api\\n     */\\n    PluggableMap.prototype.getEventPixel = function (event) {\\n        var viewportPosition = this.viewport_.getBoundingClientRect();\\n        var eventPosition = 'changedTouches' in event ?\\n            /** @type {TouchEvent} */ (event).changedTouches[0] :\\n            /** @type {MouseEvent} */ (event);\\n        return [\\n            eventPosition.clientX - viewportPosition.left,\\n            eventPosition.clientY - viewportPosition.top\\n        ];\\n    };\\n    /**\\n     * Get the target in which this map is rendered.\\n     * Note that this returns what is entered as an option or in setTarget:\\n     * if that was an element, it returns an element; if a string, it returns that.\\n     * @return {HTMLElement|string|undefined} The Element or id of the Element that the\\n     *     map is rendered in.\\n     * @observable\\n     * @api\\n     */\\n    PluggableMap.prototype.getTarget = function () {\\n        return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\\n    };\\n    /**\\n     * Get the DOM element into which this map is rendered. In contrast to\\n     * `getTarget` this method always return an `Element`, or `null` if the\\n     * map has no target.\\n     * @return {HTMLElement} The element that the map is rendered in.\\n     * @api\\n     */\\n    PluggableMap.prototype.getTargetElement = function () {\\n        var target = this.getTarget();\\n        if (target !== undefined) {\\n            return typeof target === 'string' ? document.getElementById(target) : target;\\n        }\\n        else {\\n            return null;\\n        }\\n    };\\n    /**\\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\\n     * map view projection.\\n     * @param {import(\\\"./pixel.js\\\").Pixel} pixel Pixel position in the map viewport.\\n     * @return {import(\\\"./coordinate.js\\\").Coordinate} The coordinate for the pixel position.\\n     * @api\\n     */\\n    PluggableMap.prototype.getCoordinateFromPixel = function (pixel) {\\n        var frameState = this.frameState_;\\n        if (!frameState) {\\n            return null;\\n        }\\n        else {\\n            return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\\n        }\\n    };\\n    /**\\n     * Get the map controls. Modifying this collection changes the controls\\n     * associated with the map.\\n     * @return {Collection<import(\\\"./control/Control.js\\\").default>} Controls.\\n     * @api\\n     */\\n    PluggableMap.prototype.getControls = function () {\\n        return this.controls;\\n    };\\n    /**\\n     * Get the map overlays. Modifying this collection changes the overlays\\n     * associated with the map.\\n     * @return {Collection<import(\\\"./Overlay.js\\\").default>} Overlays.\\n     * @api\\n     */\\n    PluggableMap.prototype.getOverlays = function () {\\n        return this.overlays_;\\n    };\\n    /**\\n     * Get an overlay by its identifier (the value returned by overlay.getId()).\\n     * Note that the index treats string and numeric identifiers as the same. So\\n     * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\\n     * @param {string|number} id Overlay identifier.\\n     * @return {import(\\\"./Overlay.js\\\").default} Overlay.\\n     * @api\\n     */\\n    PluggableMap.prototype.getOverlayById = function (id) {\\n        var overlay = this.overlayIdIndex_[id.toString()];\\n        return overlay !== undefined ? overlay : null;\\n    };\\n    /**\\n     * Get the map interactions. Modifying this collection changes the interactions\\n     * associated with the map.\\n     *\\n     * Interactions are used for e.g. pan, zoom and rotate.\\n     * @return {Collection<import(\\\"./interaction/Interaction.js\\\").default>} Interactions.\\n     * @api\\n     */\\n    PluggableMap.prototype.getInteractions = function () {\\n        return this.interactions;\\n    };\\n    /**\\n     * Get the layergroup associated with this map.\\n     * @return {LayerGroup} A layer group containing the layers in this map.\\n     * @observable\\n     * @api\\n     */\\n    PluggableMap.prototype.getLayerGroup = function () {\\n        return (\\n        /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP)));\\n    };\\n    /**\\n     * Get the collection of layers associated with this map.\\n     * @return {!Collection<import(\\\"./layer/Base.js\\\").default>} Layers.\\n     * @api\\n     */\\n    PluggableMap.prototype.getLayers = function () {\\n        var layers = this.getLayerGroup().getLayers();\\n        return layers;\\n    };\\n    /**\\n     * Get the pixel for a coordinate.  This takes a coordinate in the map view\\n     * projection and returns the corresponding pixel.\\n     * @param {import(\\\"./coordinate.js\\\").Coordinate} coordinate A map coordinate.\\n     * @return {import(\\\"./pixel.js\\\").Pixel} A pixel position in the map viewport.\\n     * @api\\n     */\\n    PluggableMap.prototype.getPixelFromCoordinate = function (coordinate) {\\n        var frameState = this.frameState_;\\n        if (!frameState) {\\n            return null;\\n        }\\n        else {\\n            return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\\n        }\\n    };\\n    /**\\n     * Get the map renderer.\\n     * @return {import(\\\"./renderer/Map.js\\\").default} Renderer\\n     */\\n    PluggableMap.prototype.getRenderer = function () {\\n        return this.renderer_;\\n    };\\n    /**\\n     * Get the size of this map.\\n     * @return {import(\\\"./size.js\\\").Size|undefined} The size in pixels of the map in the DOM.\\n     * @observable\\n     * @api\\n     */\\n    PluggableMap.prototype.getSize = function () {\\n        return (\\n        /** @type {import(\\\"./size.js\\\").Size|undefined} */ (this.get(MapProperty.SIZE)));\\n    };\\n    /**\\n     * Get the view associated with this map. A view manages properties such as\\n     * center and resolution.\\n     * @return {View} The view that controls this map.\\n     * @observable\\n     * @api\\n     */\\n    PluggableMap.prototype.getView = function () {\\n        return (\\n        /** @type {View} */ (this.get(MapProperty.VIEW)));\\n    };\\n    /**\\n     * Get the element that serves as the map viewport.\\n     * @return {HTMLElement} Viewport.\\n     * @api\\n     */\\n    PluggableMap.prototype.getViewport = function () {\\n        return this.viewport_;\\n    };\\n    /**\\n     * Get the element that serves as the container for overlays.  Elements added to\\n     * this container will let mousedown and touchstart events through to the map,\\n     * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\\n     * events.\\n     * @return {!HTMLElement} The map's overlay container.\\n     */\\n    PluggableMap.prototype.getOverlayContainer = function () {\\n        return this.overlayContainer_;\\n    };\\n    /**\\n     * Get the element that serves as a container for overlays that don't allow\\n     * event propagation. Elements added to this container won't let mousedown and\\n     * touchstart events through to the map, so clicks and gestures on an overlay\\n     * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\\n     * @return {!HTMLElement} The map's overlay container that stops events.\\n     */\\n    PluggableMap.prototype.getOverlayContainerStopEvent = function () {\\n        return this.overlayContainerStopEvent_;\\n    };\\n    /**\\n     * @param {import(\\\"./Tile.js\\\").default} tile Tile.\\n     * @param {string} tileSourceKey Tile source key.\\n     * @param {import(\\\"./coordinate.js\\\").Coordinate} tileCenter Tile center.\\n     * @param {number} tileResolution Tile resolution.\\n     * @return {number} Tile priority.\\n     */\\n    PluggableMap.prototype.getTilePriority = function (tile, tileSourceKey, tileCenter, tileResolution) {\\n        // Filter out tiles at higher zoom levels than the current zoom level, or that\\n        // are outside the visible extent.\\n        var frameState = this.frameState_;\\n        if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\\n            return DROP;\\n        }\\n        if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\\n            return DROP;\\n        }\\n        // Prioritize the highest zoom level tiles closest to the focus.\\n        // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\\n        // Within a zoom level, tiles are prioritized by the distance in pixels\\n        // between the center of the tile and the focus.  The factor of 65536 means\\n        // that the prioritization should behave as desired for tiles up to\\n        // 65536 * Math.log(2) = 45426 pixels from the focus.\\n        var deltaX = tileCenter[0] - frameState.focus[0];\\n        var deltaY = tileCenter[1] - frameState.focus[1];\\n        return 65536 * Math.log(tileResolution) +\\n            Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\\n    };\\n    /**\\n     * @param {Event} browserEvent Browser event.\\n     * @param {string=} opt_type Type.\\n     */\\n    PluggableMap.prototype.handleBrowserEvent = function (browserEvent, opt_type) {\\n        var type = opt_type || browserEvent.type;\\n        var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\\n        this.handleMapBrowserEvent(mapBrowserEvent);\\n    };\\n    /**\\n     * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\\n     */\\n    PluggableMap.prototype.handleMapBrowserEvent = function (mapBrowserEvent) {\\n        if (!this.frameState_) {\\n            // With no view defined, we cannot translate pixels into geographical\\n            // coordinates so interactions cannot be used.\\n            return;\\n        }\\n        var target = mapBrowserEvent.originalEvent.target;\\n        while (target instanceof HTMLElement) {\\n            if (target.parentElement === this.overlayContainerStopEvent_) {\\n                return;\\n            }\\n            target = target.parentElement;\\n        }\\n        this.focus_ = mapBrowserEvent.coordinate;\\n        mapBrowserEvent.frameState = this.frameState_;\\n        var interactionsArray = this.getInteractions().getArray();\\n        if (this.dispatchEvent(mapBrowserEvent) !== false) {\\n            for (var i = interactionsArray.length - 1; i >= 0; i--) {\\n                var interaction = interactionsArray[i];\\n                if (!interaction.getActive()) {\\n                    continue;\\n                }\\n                var cont = interaction.handleEvent(mapBrowserEvent);\\n                if (!cont) {\\n                    break;\\n                }\\n            }\\n        }\\n    };\\n    /**\\n     * @protected\\n     */\\n    PluggableMap.prototype.handlePostRender = function () {\\n        var frameState = this.frameState_;\\n        // Manage the tile queue\\n        // Image loads are expensive and a limited resource, so try to use them\\n        // efficiently:\\n        // * When the view is static we allow a large number of parallel tile loads\\n        //   to complete the frame as quickly as possible.\\n        // * When animating or interacting, image loads can cause janks, so we reduce\\n        //   the maximum number of loads per frame and limit the number of parallel\\n        //   tile loads to remain reactive to view changes and to reduce the chance of\\n        //   loading tiles that will quickly disappear from view.\\n        var tileQueue = this.tileQueue_;\\n        if (!tileQueue.isEmpty()) {\\n            var maxTotalLoading = this.maxTilesLoading_;\\n            var maxNewLoads = maxTotalLoading;\\n            if (frameState) {\\n                var hints = frameState.viewHints;\\n                if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\\n                    var lowOnFrameBudget = Date.now() - frameState.time > 8;\\n                    maxTotalLoading = lowOnFrameBudget ? 0 : 8;\\n                    maxNewLoads = lowOnFrameBudget ? 0 : 2;\\n                }\\n            }\\n            if (tileQueue.getTilesLoading() < maxTotalLoading) {\\n                tileQueue.reprioritize(); // FIXME only call if view has changed\\n                tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\\n            }\\n        }\\n        if (frameState && this.hasListener(RenderEventType.RENDERCOMPLETE) && !frameState.animate &&\\n            !this.tileQueue_.getTilesLoading() && !getLoading(this.getLayers().getArray())) {\\n            this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\\n        }\\n        var postRenderFunctions = this.postRenderFunctions_;\\n        for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\\n            postRenderFunctions[i](this, frameState);\\n        }\\n        postRenderFunctions.length = 0;\\n    };\\n    /**\\n     * @private\\n     */\\n    PluggableMap.prototype.handleSizeChanged_ = function () {\\n        if (this.getView()) {\\n            this.getView().resolveConstraints(0);\\n        }\\n        this.render();\\n    };\\n    /**\\n     * @private\\n     */\\n    PluggableMap.prototype.handleTargetChanged_ = function () {\\n        // target may be undefined, null, a string or an Element.\\n        // If it's a string we convert it to an Element before proceeding.\\n        // If it's not now an Element we remove the viewport from the DOM.\\n        // If it's an Element we append the viewport element to it.\\n        var targetElement;\\n        if (this.getTarget()) {\\n            targetElement = this.getTargetElement();\\n        }\\n        if (this.keyHandlerKeys_) {\\n            for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\\n                unlistenByKey(this.keyHandlerKeys_[i]);\\n            }\\n            this.keyHandlerKeys_ = null;\\n        }\\n        if (!targetElement) {\\n            this.renderer_.removeLayerRenderers();\\n            removeNode(this.viewport_);\\n            if (this.handleResize_ !== undefined) {\\n                removeEventListener(EventType.RESIZE, this.handleResize_, false);\\n                this.handleResize_ = undefined;\\n            }\\n        }\\n        else {\\n            targetElement.appendChild(this.viewport_);\\n            var keyboardEventTarget = !this.keyboardEventTarget_ ?\\n                targetElement : this.keyboardEventTarget_;\\n            this.keyHandlerKeys_ = [\\n                listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\\n                listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\\n            ];\\n            if (!this.handleResize_) {\\n                this.handleResize_ = this.updateSize.bind(this);\\n                addEventListener(EventType.RESIZE, this.handleResize_, false);\\n            }\\n        }\\n        this.updateSize();\\n        // updateSize calls setSize, so no need to call this.render\\n        // ourselves here.\\n    };\\n    /**\\n     * @private\\n     */\\n    PluggableMap.prototype.handleTileChange_ = function () {\\n        this.render();\\n    };\\n    /**\\n     * @private\\n     */\\n    PluggableMap.prototype.handleViewPropertyChanged_ = function () {\\n        this.render();\\n    };\\n    /**\\n     * @private\\n     */\\n    PluggableMap.prototype.handleViewChanged_ = function () {\\n        if (this.viewPropertyListenerKey_) {\\n            unlistenByKey(this.viewPropertyListenerKey_);\\n            this.viewPropertyListenerKey_ = null;\\n        }\\n        if (this.viewChangeListenerKey_) {\\n            unlistenByKey(this.viewChangeListenerKey_);\\n            this.viewChangeListenerKey_ = null;\\n        }\\n        var view = this.getView();\\n        if (view) {\\n            this.viewport_.setAttribute('data-view', getUid(view));\\n            this.viewPropertyListenerKey_ = listen(view, ObjectEventType.PROPERTYCHANGE, this.handleViewPropertyChanged_, this);\\n            this.viewChangeListenerKey_ = listen(view, EventType.CHANGE, this.handleViewPropertyChanged_, this);\\n            view.resolveConstraints(0);\\n        }\\n        this.render();\\n    };\\n    /**\\n     * @private\\n     */\\n    PluggableMap.prototype.handleLayerGroupChanged_ = function () {\\n        if (this.layerGroupPropertyListenerKeys_) {\\n            this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\\n            this.layerGroupPropertyListenerKeys_ = null;\\n        }\\n        var layerGroup = this.getLayerGroup();\\n        if (layerGroup) {\\n            this.layerGroupPropertyListenerKeys_ = [\\n                listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\\n                listen(layerGroup, EventType.CHANGE, this.render, this)\\n            ];\\n        }\\n        this.render();\\n    };\\n    /**\\n     * @return {boolean} Is rendered.\\n     */\\n    PluggableMap.prototype.isRendered = function () {\\n        return !!this.frameState_;\\n    };\\n    /**\\n     * Requests an immediate render in a synchronous manner.\\n     * @api\\n     */\\n    PluggableMap.prototype.renderSync = function () {\\n        if (this.animationDelayKey_) {\\n            cancelAnimationFrame(this.animationDelayKey_);\\n        }\\n        this.animationDelay_();\\n    };\\n    /**\\n     * Request a map rendering (at the next animation frame).\\n     * @api\\n     */\\n    PluggableMap.prototype.render = function () {\\n        if (this.animationDelayKey_ === undefined) {\\n            this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\\n        }\\n    };\\n    /**\\n     * Remove the given control from the map.\\n     * @param {import(\\\"./control/Control.js\\\").default} control Control.\\n     * @return {import(\\\"./control/Control.js\\\").default|undefined} The removed control (or undefined\\n     *     if the control was not found).\\n     * @api\\n     */\\n    PluggableMap.prototype.removeControl = function (control) {\\n        return this.getControls().remove(control);\\n    };\\n    /**\\n     * Remove the given interaction from the map.\\n     * @param {import(\\\"./interaction/Interaction.js\\\").default} interaction Interaction to remove.\\n     * @return {import(\\\"./interaction/Interaction.js\\\").default|undefined} The removed interaction (or\\n     *     undefined if the interaction was not found).\\n     * @api\\n     */\\n    PluggableMap.prototype.removeInteraction = function (interaction) {\\n        return this.getInteractions().remove(interaction);\\n    };\\n    /**\\n     * Removes the given layer from the map.\\n     * @param {import(\\\"./layer/Base.js\\\").default} layer Layer.\\n     * @return {import(\\\"./layer/Base.js\\\").default|undefined} The removed layer (or undefined if the\\n     *     layer was not found).\\n     * @api\\n     */\\n    PluggableMap.prototype.removeLayer = function (layer) {\\n        var layers = this.getLayerGroup().getLayers();\\n        return layers.remove(layer);\\n    };\\n    /**\\n     * Remove the given overlay from the map.\\n     * @param {import(\\\"./Overlay.js\\\").default} overlay Overlay.\\n     * @return {import(\\\"./Overlay.js\\\").default|undefined} The removed overlay (or undefined\\n     *     if the overlay was not found).\\n     * @api\\n     */\\n    PluggableMap.prototype.removeOverlay = function (overlay) {\\n        return this.getOverlays().remove(overlay);\\n    };\\n    /**\\n     * @param {number} time Time.\\n     * @private\\n     */\\n    PluggableMap.prototype.renderFrame_ = function (time) {\\n        var viewState;\\n        var size = this.getSize();\\n        var view = this.getView();\\n        var extent = createEmpty();\\n        var previousFrameState = this.frameState_;\\n        /** @type {?FrameState} */\\n        var frameState = null;\\n        if (size !== undefined && hasArea(size) && view && view.isDef()) {\\n            var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\\n            viewState = view.getState(this.pixelRatio_);\\n            frameState = /** @type {FrameState} */ ({\\n                animate: false,\\n                coordinateToPixelTransform: this.coordinateToPixelTransform_,\\n                extent: extent,\\n                focus: this.focus_ ? this.focus_ : viewState.center,\\n                index: this.frameIndex_++,\\n                layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\\n                pixelRatio: this.pixelRatio_,\\n                pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\\n                postRenderFunctions: [],\\n                size: size,\\n                skippedFeatureUids: this.skippedFeatureUids_,\\n                tileQueue: this.tileQueue_,\\n                time: time,\\n                usedTiles: {},\\n                viewState: viewState,\\n                viewHints: viewHints,\\n                wantedTiles: {}\\n            });\\n        }\\n        if (frameState) {\\n            frameState.extent = getForViewAndSize(viewState.center, viewState.resolution, viewState.rotation, frameState.size, extent);\\n        }\\n        this.frameState_ = frameState;\\n        this.renderer_.renderFrame(frameState);\\n        if (frameState) {\\n            if (frameState.animate) {\\n                this.render();\\n            }\\n            Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\\n            if (previousFrameState) {\\n                var moveStart = !this.previousExtent_ ||\\n                    (!isEmpty(this.previousExtent_) &&\\n                        !equals(frameState.extent, this.previousExtent_));\\n                if (moveStart) {\\n                    this.dispatchEvent(new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\\n                    this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\\n                }\\n            }\\n            var idle = this.previousExtent_ &&\\n                !frameState.viewHints[ViewHint.ANIMATING] &&\\n                !frameState.viewHints[ViewHint.INTERACTING] &&\\n                !equals(frameState.extent, this.previousExtent_);\\n            if (idle) {\\n                this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\\n                clone(frameState.extent, this.previousExtent_);\\n            }\\n        }\\n        this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\\n        setTimeout(this.handlePostRender.bind(this), 0);\\n    };\\n    /**\\n     * Sets the layergroup of this map.\\n     * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\\n     * @observable\\n     * @api\\n     */\\n    PluggableMap.prototype.setLayerGroup = function (layerGroup) {\\n        this.set(MapProperty.LAYERGROUP, layerGroup);\\n    };\\n    /**\\n     * Set the size of this map.\\n     * @param {import(\\\"./size.js\\\").Size|undefined} size The size in pixels of the map in the DOM.\\n     * @observable\\n     * @api\\n     */\\n    PluggableMap.prototype.setSize = function (size) {\\n        this.set(MapProperty.SIZE, size);\\n    };\\n    /**\\n     * Set the target element to render this map into.\\n     * @param {HTMLElement|string|undefined} target The Element or id of the Element\\n     *     that the map is rendered in.\\n     * @observable\\n     * @api\\n     */\\n    PluggableMap.prototype.setTarget = function (target) {\\n        this.set(MapProperty.TARGET, target);\\n    };\\n    /**\\n     * Set the view for this map.\\n     * @param {View} view The view that controls this map.\\n     * @observable\\n     * @api\\n     */\\n    PluggableMap.prototype.setView = function (view) {\\n        this.set(MapProperty.VIEW, view);\\n    };\\n    /**\\n     * @param {import(\\\"./Feature.js\\\").default} feature Feature.\\n     */\\n    PluggableMap.prototype.skipFeature = function (feature) {\\n        this.skippedFeatureUids_[getUid(feature)] = true;\\n        this.render();\\n    };\\n    /**\\n     * Force a recalculation of the map viewport size.  This should be called when\\n     * third-party code changes the size of the map viewport.\\n     * @api\\n     */\\n    PluggableMap.prototype.updateSize = function () {\\n        var targetElement = this.getTargetElement();\\n        if (!targetElement) {\\n            this.setSize(undefined);\\n        }\\n        else {\\n            var computedStyle = getComputedStyle(targetElement);\\n            this.setSize([\\n                targetElement.offsetWidth -\\n                    parseFloat(computedStyle['borderLeftWidth']) -\\n                    parseFloat(computedStyle['paddingLeft']) -\\n                    parseFloat(computedStyle['paddingRight']) -\\n                    parseFloat(computedStyle['borderRightWidth']),\\n                targetElement.offsetHeight -\\n                    parseFloat(computedStyle['borderTopWidth']) -\\n                    parseFloat(computedStyle['paddingTop']) -\\n                    parseFloat(computedStyle['paddingBottom']) -\\n                    parseFloat(computedStyle['borderBottomWidth'])\\n            ]);\\n        }\\n    };\\n    /**\\n     * @param {import(\\\"./Feature.js\\\").default} feature Feature.\\n     */\\n    PluggableMap.prototype.unskipFeature = function (feature) {\\n        delete this.skippedFeatureUids_[getUid(feature)];\\n        this.render();\\n    };\\n    return PluggableMap;\\n}(BaseObject));\\n/**\\n * @param {MapOptions} options Map options.\\n * @return {MapOptionsInternal} Internal map options.\\n */\\nfunction createOptionsInternal(options) {\\n    /**\\n     * @type {HTMLElement|Document}\\n     */\\n    var keyboardEventTarget = null;\\n    if (options.keyboardEventTarget !== undefined) {\\n        keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\\n            document.getElementById(options.keyboardEventTarget) :\\n            options.keyboardEventTarget;\\n    }\\n    /**\\n     * @type {Object<string, *>}\\n     */\\n    var values = {};\\n    var layerGroup = options.layers && typeof /** @type {?} */ (options.layers).getLayers === 'function' ?\\n        /** @type {LayerGroup} */ (options.layers) : new LayerGroup({ layers: /** @type {Collection} */ (options.layers) });\\n    values[MapProperty.LAYERGROUP] = layerGroup;\\n    values[MapProperty.TARGET] = options.target;\\n    values[MapProperty.VIEW] = options.view !== undefined ?\\n        options.view : new View();\\n    var controls;\\n    if (options.controls !== undefined) {\\n        if (Array.isArray(options.controls)) {\\n            controls = new Collection(options.controls.slice());\\n        }\\n        else {\\n            assert(typeof /** @type {?} */ (options.controls).getArray === 'function', 47); // Expected `controls` to be an array or an `import(\\\"./Collection.js\\\").Collection`\\n            controls = /** @type {Collection} */ (options.controls);\\n        }\\n    }\\n    var interactions;\\n    if (options.interactions !== undefined) {\\n        if (Array.isArray(options.interactions)) {\\n            interactions = new Collection(options.interactions.slice());\\n        }\\n        else {\\n            assert(typeof /** @type {?} */ (options.interactions).getArray === 'function', 48); // Expected `interactions` to be an array or an `import(\\\"./Collection.js\\\").Collection`\\n            interactions = /** @type {Collection} */ (options.interactions);\\n        }\\n    }\\n    var overlays;\\n    if (options.overlays !== undefined) {\\n        if (Array.isArray(options.overlays)) {\\n            overlays = new Collection(options.overlays.slice());\\n        }\\n        else {\\n            assert(typeof /** @type {?} */ (options.overlays).getArray === 'function', 49); // Expected `overlays` to be an array or an `import(\\\"./Collection.js\\\").Collection`\\n            overlays = options.overlays;\\n        }\\n    }\\n    else {\\n        overlays = new Collection();\\n    }\\n    return {\\n        controls: controls,\\n        interactions: interactions,\\n        keyboardEventTarget: keyboardEventTarget,\\n        overlays: overlays,\\n        values: values\\n    };\\n}\\nexport default PluggableMap;\\n/**\\n * @param  {Array<import(\\\"./layer/Base.js\\\").default>} layers Layers.\\n * @return {boolean} Layers have sources that are still loading.\\n */\\nfunction getLoading(layers) {\\n    for (var i = 0, ii = layers.length; i < ii; ++i) {\\n        var layer = layers[i];\\n        if (typeof /** @type {?} */ (layer).getLayers === 'function') {\\n            return getLoading(/** @type {LayerGroup} */ (layer).getLayers().getArray());\\n        }\\n        else {\\n            var source = /** @type {import(\\\"./layer/Layer.js\\\").default} */ (layer).getSource();\\n            if (source && source.loading) {\\n                return true;\\n            }\\n        }\\n    }\\n    return false;\\n}\\n//# sourceMappingURL=PluggableMap.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/control/Control\\n */\\nimport { VOID } from '../functions.js';\\nimport MapEventType from '../MapEventType.js';\\nimport BaseObject from '../Object.js';\\nimport { removeNode } from '../dom.js';\\nimport { listen, unlistenByKey } from '../events.js';\\n/**\\n * @typedef {Object} Options\\n * @property {HTMLElement} [element] The element is the control's\\n * container element. This only needs to be specified if you're developing\\n * a custom control.\\n * @property {function(import(\\\"../MapEvent.js\\\").default)} [render] Function called when\\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\\n * callback.\\n * @property {HTMLElement|string} [target] Specify a target if you want\\n * the control to be rendered outside of the map's viewport.\\n */\\n/**\\n * @classdesc\\n * A control is a visible widget with a DOM element in a fixed position on the\\n * screen. They can involve user input (buttons), or be informational only;\\n * the position is determined using CSS. By default these are placed in the\\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\\n * any outside DOM element.\\n *\\n * This is the base class for controls. You can use it for simple custom\\n * controls by creating the element with listeners, creating an instance:\\n * ```js\\n * var myControl = new Control({element: myElement});\\n * ```\\n * and then adding this to the map.\\n *\\n * The main advantage of having this as a control rather than a simple separate\\n * DOM element is that preventing propagation is handled for you. Controls\\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\\n *\\n * You can also extend this base for your own control class. See\\n * examples/custom-controls for an example of how to do this.\\n *\\n * @api\\n */\\nvar Control = /** @class */ (function (_super) {\\n    __extends(Control, _super);\\n    /**\\n     * @param {Options} options Control options.\\n     */\\n    function Control(options) {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * @protected\\n         * @type {HTMLElement}\\n         */\\n        _this.element = options.element ? options.element : null;\\n        /**\\n         * @private\\n         * @type {HTMLElement}\\n         */\\n        _this.target_ = null;\\n        /**\\n         * @private\\n         * @type {import(\\\"../PluggableMap.js\\\").default}\\n         */\\n        _this.map_ = null;\\n        /**\\n         * @protected\\n         * @type {!Array<import(\\\"../events.js\\\").EventsKey>}\\n         */\\n        _this.listenerKeys = [];\\n        /**\\n         * @type {function(import(\\\"../MapEvent.js\\\").default): void}\\n         */\\n        _this.render = options.render ? options.render : VOID;\\n        if (options.target) {\\n            _this.setTarget(options.target);\\n        }\\n        return _this;\\n    }\\n    /**\\n     * @inheritDoc\\n     */\\n    Control.prototype.disposeInternal = function () {\\n        removeNode(this.element);\\n        _super.prototype.disposeInternal.call(this);\\n    };\\n    /**\\n     * Get the map associated with this control.\\n     * @return {import(\\\"../PluggableMap.js\\\").default} Map.\\n     * @api\\n     */\\n    Control.prototype.getMap = function () {\\n        return this.map_;\\n    };\\n    /**\\n     * Remove the control from its current map and attach it to the new map.\\n     * Subclasses may set up event handlers to get notified about changes to\\n     * the map here.\\n     * @param {import(\\\"../PluggableMap.js\\\").default} map Map.\\n     * @api\\n     */\\n    Control.prototype.setMap = function (map) {\\n        if (this.map_) {\\n            removeNode(this.element);\\n        }\\n        for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\\n            unlistenByKey(this.listenerKeys[i]);\\n        }\\n        this.listenerKeys.length = 0;\\n        this.map_ = map;\\n        if (this.map_) {\\n            var target = this.target_ ?\\n                this.target_ : map.getOverlayContainerStopEvent();\\n            target.appendChild(this.element);\\n            if (this.render !== VOID) {\\n                this.listenerKeys.push(listen(map, MapEventType.POSTRENDER, this.render, this));\\n            }\\n            map.render();\\n        }\\n    };\\n    /**\\n     * This function is used to set a target element for the control. It has no\\n     * effect if it is called after the control has been added to the map (i.e.\\n     * after `setMap` is called on the control). If no `target` is set in the\\n     * options passed to the control constructor and if `setTarget` is not called\\n     * then the control is added to the map's overlay container.\\n     * @param {HTMLElement|string} target Target.\\n     * @api\\n     */\\n    Control.prototype.setTarget = function (target) {\\n        this.target_ = typeof target === 'string' ?\\n            document.getElementById(target) :\\n            target;\\n    };\\n    return Control;\\n}(BaseObject));\\nexport default Control;\\n//# sourceMappingURL=Control.js.map\",\"/**\\n * @module ol/css\\n */\\n/**\\n * The CSS class for hidden feature.\\n *\\n * @const\\n * @type {string}\\n */\\nexport var CLASS_HIDDEN = 'ol-hidden';\\n/**\\n * The CSS class that we'll give the DOM elements to have them selectable.\\n *\\n * @const\\n * @type {string}\\n */\\nexport var CLASS_SELECTABLE = 'ol-selectable';\\n/**\\n * The CSS class that we'll give the DOM elements to have them unselectable.\\n *\\n * @const\\n * @type {string}\\n */\\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\\n/**\\n * The CSS class for unsupported feature.\\n *\\n * @const\\n * @type {string}\\n */\\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\\n/**\\n * The CSS class for controls.\\n *\\n * @const\\n * @type {string}\\n */\\nexport var CLASS_CONTROL = 'ol-control';\\n/**\\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\\n * to those elements which usually can be expanded.\\n *\\n * @const\\n * @type {string}\\n */\\nexport var CLASS_COLLAPSED = 'ol-collapsed';\\n/**\\n * Get the list of font families from a font spec.  Note that this doesn't work\\n * for font families that have commas in them.\\n * @param {string} The CSS font property.\\n * @return {Object<string>} The font families (or null if the input spec is invalid).\\n */\\nexport var getFontFamilies = (function () {\\n    var style;\\n    var cache = {};\\n    return function (font) {\\n        if (!style) {\\n            style = document.createElement('div').style;\\n        }\\n        if (!(font in cache)) {\\n            style.font = font;\\n            var family = style.fontFamily;\\n            style.font = '';\\n            if (!family) {\\n                return null;\\n            }\\n            cache[font] = family.split(/,\\\\s?/);\\n        }\\n        return cache[font];\\n    };\\n})();\\n//# sourceMappingURL=css.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/layer/Layer\\n */\\nimport { listen, unlistenByKey } from '../events.js';\\nimport EventType from '../events/EventType.js';\\nimport { getChangeEventType } from '../Object.js';\\nimport BaseLayer from './Base.js';\\nimport LayerProperty from './Property.js';\\nimport { assign } from '../obj.js';\\nimport RenderEventType from '../render/EventType.js';\\nimport SourceState from '../source/State.js';\\n/**\\n * @typedef {Object} Options\\n * @property {number} [opacity=1] Opacity (0, 1).\\n * @property {boolean} [visible=true] Visibility.\\n * @property {import(\\\"../extent.js\\\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\\n * rendered outside of this extent.\\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\\n * method was used.\\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\\n * visible.\\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\\n * be visible.\\n * @property {import(\\\"../source/Source.js\\\").default} [source] Source for this layer.  If not provided to the constructor,\\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\\n * construction.\\n * @property {import(\\\"../PluggableMap.js\\\").default} [map] Map.\\n */\\n/**\\n * @typedef {Object} State\\n * @property {import(\\\"./Base.js\\\").default} layer\\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\\n * @property {SourceState} sourceState\\n * @property {boolean} visible\\n * @property {boolean} managed\\n * @property {import(\\\"../extent.js\\\").Extent} [extent]\\n * @property {number} zIndex\\n * @property {number} maxResolution\\n * @property {number} minResolution\\n */\\n/**\\n * @classdesc\\n * Abstract base class; normally only used for creating subclasses and not\\n * instantiated in apps.\\n * A visual representation of raster or vector map data.\\n * Layers group together those properties that pertain to how the data is to be\\n * displayed, irrespective of the source of that data.\\n *\\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\\n * internally. These unmanaged layers are associated with the map using\\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\\n *\\n * A generic `change` event is fired when the state of the source changes.\\n *\\n * @fires import(\\\"../render/Event.js\\\").RenderEvent#prerender\\n * @fires import(\\\"../render/Event.js\\\").RenderEvent#postrender\\n *\\n * @template {import(\\\"../source/Source.js\\\").default} SourceType\\n */\\nvar Layer = /** @class */ (function (_super) {\\n    __extends(Layer, _super);\\n    /**\\n     * @param {Options} options Layer options.\\n     */\\n    function Layer(options) {\\n        var _this = this;\\n        var baseOptions = assign({}, options);\\n        delete baseOptions.source;\\n        _this = _super.call(this, baseOptions) || this;\\n        /**\\n         * @private\\n         * @type {?import(\\\"../events.js\\\").EventsKey}\\n         */\\n        _this.mapPrecomposeKey_ = null;\\n        /**\\n         * @private\\n         * @type {?import(\\\"../events.js\\\").EventsKey}\\n         */\\n        _this.mapRenderKey_ = null;\\n        /**\\n         * @private\\n         * @type {?import(\\\"../events.js\\\").EventsKey}\\n         */\\n        _this.sourceChangeKey_ = null;\\n        /**\\n         * @private\\n         * @type {import(\\\"../renderer/Layer.js\\\").default}\\n         */\\n        _this.renderer_ = null;\\n        if (options.map) {\\n            _this.setMap(options.map);\\n        }\\n        listen(_this, getChangeEventType(LayerProperty.SOURCE), _this.handleSourcePropertyChange_, _this);\\n        var source = options.source ? /** @type {SourceType} */ (options.source) : null;\\n        _this.setSource(source);\\n        return _this;\\n    }\\n    /**\\n     * @inheritDoc\\n     */\\n    Layer.prototype.getLayersArray = function (opt_array) {\\n        var array = opt_array ? opt_array : [];\\n        array.push(this);\\n        return array;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    Layer.prototype.getLayerStatesArray = function (opt_states) {\\n        var states = opt_states ? opt_states : [];\\n        states.push(this.getLayerState());\\n        return states;\\n    };\\n    /**\\n     * Get the layer source.\\n     * @return {SourceType} The layer source (or `null` if not yet set).\\n     * @observable\\n     * @api\\n     */\\n    Layer.prototype.getSource = function () {\\n        return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\\n    };\\n    /**\\n      * @inheritDoc\\n      */\\n    Layer.prototype.getSourceState = function () {\\n        var source = this.getSource();\\n        return !source ? SourceState.UNDEFINED : source.getState();\\n    };\\n    /**\\n     * @private\\n     */\\n    Layer.prototype.handleSourceChange_ = function () {\\n        this.changed();\\n    };\\n    /**\\n     * @private\\n     */\\n    Layer.prototype.handleSourcePropertyChange_ = function () {\\n        if (this.sourceChangeKey_) {\\n            unlistenByKey(this.sourceChangeKey_);\\n            this.sourceChangeKey_ = null;\\n        }\\n        var source = this.getSource();\\n        if (source) {\\n            this.sourceChangeKey_ = listen(source, EventType.CHANGE, this.handleSourceChange_, this);\\n        }\\n        this.changed();\\n    };\\n    /**\\n     * In charge to manage the rendering of the layer. One layer type is\\n     * bounded with one layer renderer.\\n     * @param {?import(\\\"../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     * @return {HTMLElement} The rendered element.\\n     */\\n    Layer.prototype.render = function (frameState) {\\n        var layerRenderer = this.getRenderer();\\n        var layerState = this.getLayerState();\\n        if (layerRenderer.prepareFrame(frameState, layerState)) {\\n            return layerRenderer.renderFrame(frameState, layerState);\\n        }\\n    };\\n    /**\\n     * Sets the layer to be rendered on top of other layers on a map. The map will\\n     * not manage this layer in its layers collection, and the callback in\\n     * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\\n     * is useful for temporary layers. To remove an unmanaged layer from the map,\\n     * use `#setMap(null)`.\\n     *\\n     * To add the layer to a map and have it managed by the map, use\\n     * {@link module:ol/Map#addLayer} instead.\\n     * @param {import(\\\"../PluggableMap.js\\\").default} map Map.\\n     * @api\\n     */\\n    Layer.prototype.setMap = function (map) {\\n        if (this.mapPrecomposeKey_) {\\n            unlistenByKey(this.mapPrecomposeKey_);\\n            this.mapPrecomposeKey_ = null;\\n        }\\n        if (!map) {\\n            this.changed();\\n        }\\n        if (this.mapRenderKey_) {\\n            unlistenByKey(this.mapRenderKey_);\\n            this.mapRenderKey_ = null;\\n        }\\n        if (map) {\\n            this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function (evt) {\\n                var renderEvent = /** @type {import(\\\"../render/Event.js\\\").default} */ (evt);\\n                var layerState = this.getLayerState();\\n                layerState.managed = false;\\n                if (this.getZIndex() === undefined) {\\n                    layerState.zIndex = Infinity;\\n                }\\n                renderEvent.frameState.layerStatesArray.push(layerState);\\n            }, this);\\n            this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\\n            this.changed();\\n        }\\n    };\\n    /**\\n     * Set the layer source.\\n     * @param {SourceType} source The layer source.\\n     * @observable\\n     * @api\\n     */\\n    Layer.prototype.setSource = function (source) {\\n        this.set(LayerProperty.SOURCE, source);\\n    };\\n    /**\\n     * Get the renderer for this layer.\\n     * @return {import(\\\"../renderer/Layer.js\\\").default} The layer renderer.\\n     */\\n    Layer.prototype.getRenderer = function () {\\n        if (!this.renderer_) {\\n            this.renderer_ = this.createRenderer();\\n        }\\n        return this.renderer_;\\n    };\\n    /**\\n     * Create a renderer for this layer.\\n     * @return {import(\\\"../renderer/Layer.js\\\").default} A layer renderer.\\n     * @protected\\n     */\\n    Layer.prototype.createRenderer = function () {\\n        return null;\\n    };\\n    return Layer;\\n}(BaseLayer));\\n/**\\n * Return `true` if the layer is visible, and if the passed resolution is\\n * between the layer's minResolution and maxResolution. The comparison is\\n * inclusive for `minResolution` and exclusive for `maxResolution`.\\n * @param {State} layerState Layer state.\\n * @param {number} resolution Resolution.\\n * @return {boolean} The layer is visible at the given resolution.\\n */\\nexport function visibleAtResolution(layerState, resolution) {\\n    return layerState.visible && resolution >= layerState.minResolution &&\\n        resolution < layerState.maxResolution;\\n}\\nexport default Layer;\\n//# sourceMappingURL=Layer.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/control/Attribution\\n */\\nimport { equals } from '../array.js';\\nimport Control from './Control.js';\\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED } from '../css.js';\\nimport { removeChildren, replaceNode } from '../dom.js';\\nimport { listen } from '../events.js';\\nimport EventType from '../events/EventType.js';\\nimport { visibleAtResolution } from '../layer/Layer.js';\\n/**\\n * @typedef {Object} Options\\n * @property {string} [className='ol-attribution'] CSS class name.\\n * @property {HTMLElement|string} [target] Specify a target if you\\n * want the control to be rendered outside of the map's\\n * viewport.\\n * @property {boolean} [collapsible] Specify if attributions can\\n * be collapsed. If not specified, sources control this behavior with their\\n * `attributionsCollapsible` setting.\\n * @property {boolean} [collapsed=true] Specify if attributions should\\n * be collapsed at startup.\\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\\n * @property {string} [label='i'] Text label to use for the\\n * collapsed attributions button.\\n * Instead of text, also an element (e.g. a `span` element) can be used.\\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\\n * for the expanded attributions button.\\n * Instead of text, also an element (e.g. a `span` element) can be used.\\n * @property {function(import(\\\"../MapEvent.js\\\").default)} [render] Function called when\\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\\n * callback.\\n */\\n/**\\n * @classdesc\\n * Control to show all the attributions associated with the layer sources\\n * in the map. This control is one of the default controls included in maps.\\n * By default it will show in the bottom right portion of the map, but this can\\n * be changed by using a css selector for `.ol-attribution`.\\n *\\n * @api\\n */\\nvar Attribution = /** @class */ (function (_super) {\\n    __extends(Attribution, _super);\\n    /**\\n     * @param {Options=} opt_options Attribution options.\\n     */\\n    function Attribution(opt_options) {\\n        var _this = this;\\n        var options = opt_options ? opt_options : {};\\n        _this = _super.call(this, {\\n            element: document.createElement('div'),\\n            render: options.render || render,\\n            target: options.target\\n        }) || this;\\n        /**\\n         * @private\\n         * @type {HTMLElement}\\n         */\\n        _this.ulElement_ = document.createElement('ul');\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.overrideCollapsible_ = options.collapsible !== undefined;\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.collapsible_ = options.collapsible !== undefined ?\\n            options.collapsible : true;\\n        if (!_this.collapsible_) {\\n            _this.collapsed_ = false;\\n        }\\n        var className = options.className !== undefined ? options.className : 'ol-attribution';\\n        var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\\n        var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\\\u00BB';\\n        if (typeof collapseLabel === 'string') {\\n            /**\\n             * @private\\n             * @type {HTMLElement}\\n             */\\n            _this.collapseLabel_ = document.createElement('span');\\n            _this.collapseLabel_.textContent = collapseLabel;\\n        }\\n        else {\\n            _this.collapseLabel_ = collapseLabel;\\n        }\\n        var label = options.label !== undefined ? options.label : 'i';\\n        if (typeof label === 'string') {\\n            /**\\n             * @private\\n             * @type {HTMLElement}\\n             */\\n            _this.label_ = document.createElement('span');\\n            _this.label_.textContent = label;\\n        }\\n        else {\\n            _this.label_ = label;\\n        }\\n        var activeLabel = (_this.collapsible_ && !_this.collapsed_) ?\\n            _this.collapseLabel_ : _this.label_;\\n        var button = document.createElement('button');\\n        button.setAttribute('type', 'button');\\n        button.title = tipLabel;\\n        button.appendChild(activeLabel);\\n        listen(button, EventType.CLICK, _this.handleClick_, _this);\\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\\n            (_this.collapsed_ && _this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\\n            (_this.collapsible_ ? '' : ' ol-uncollapsible');\\n        var element = _this.element;\\n        element.className = cssClasses;\\n        element.appendChild(_this.ulElement_);\\n        element.appendChild(button);\\n        /**\\n         * A list of currently rendered resolutions.\\n         * @type {Array<string>}\\n         * @private\\n         */\\n        _this.renderedAttributions_ = [];\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.renderedVisible_ = true;\\n        return _this;\\n    }\\n    /**\\n     * Collect a list of visible attributions and set the collapsible state.\\n     * @param {import(\\\"../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     * @return {Array<string>} Attributions.\\n     * @private\\n     */\\n    Attribution.prototype.collectSourceAttributions_ = function (frameState) {\\n        /**\\n         * Used to determine if an attribution already exists.\\n         * @type {!Object<string, boolean>}\\n         */\\n        var lookup = {};\\n        /**\\n         * A list of visible attributions.\\n         * @type {Array<string>}\\n         */\\n        var visibleAttributions = [];\\n        var layerStatesArray = frameState.layerStatesArray;\\n        var resolution = frameState.viewState.resolution;\\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\\n            var layerState = layerStatesArray[i];\\n            if (!visibleAtResolution(layerState, resolution)) {\\n                continue;\\n            }\\n            var source = /** @type {import(\\\"../layer/Layer.js\\\").default} */ (layerState.layer).getSource();\\n            if (!source) {\\n                continue;\\n            }\\n            var attributionGetter = source.getAttributions();\\n            if (!attributionGetter) {\\n                continue;\\n            }\\n            var attributions = attributionGetter(frameState);\\n            if (!attributions) {\\n                continue;\\n            }\\n            if (!this.overrideCollapsible_ && source.getAttributionsCollapsible() === false) {\\n                this.setCollapsible(false);\\n            }\\n            if (Array.isArray(attributions)) {\\n                for (var j = 0, jj = attributions.length; j < jj; ++j) {\\n                    if (!(attributions[j] in lookup)) {\\n                        visibleAttributions.push(attributions[j]);\\n                        lookup[attributions[j]] = true;\\n                    }\\n                }\\n            }\\n            else {\\n                if (!(attributions in lookup)) {\\n                    visibleAttributions.push(attributions);\\n                    lookup[attributions] = true;\\n                }\\n            }\\n        }\\n        return visibleAttributions;\\n    };\\n    /**\\n     * @private\\n     * @param {?import(\\\"../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     */\\n    Attribution.prototype.updateElement_ = function (frameState) {\\n        if (!frameState) {\\n            if (this.renderedVisible_) {\\n                this.element.style.display = 'none';\\n                this.renderedVisible_ = false;\\n            }\\n            return;\\n        }\\n        var attributions = this.collectSourceAttributions_(frameState);\\n        var visible = attributions.length > 0;\\n        if (this.renderedVisible_ != visible) {\\n            this.element.style.display = visible ? '' : 'none';\\n            this.renderedVisible_ = visible;\\n        }\\n        if (equals(attributions, this.renderedAttributions_)) {\\n            return;\\n        }\\n        removeChildren(this.ulElement_);\\n        // append the attributions\\n        for (var i = 0, ii = attributions.length; i < ii; ++i) {\\n            var element = document.createElement('li');\\n            element.innerHTML = attributions[i];\\n            this.ulElement_.appendChild(element);\\n        }\\n        this.renderedAttributions_ = attributions;\\n    };\\n    /**\\n     * @param {MouseEvent} event The event to handle\\n     * @private\\n     */\\n    Attribution.prototype.handleClick_ = function (event) {\\n        event.preventDefault();\\n        this.handleToggle_();\\n    };\\n    /**\\n     * @private\\n     */\\n    Attribution.prototype.handleToggle_ = function () {\\n        this.element.classList.toggle(CLASS_COLLAPSED);\\n        if (this.collapsed_) {\\n            replaceNode(this.collapseLabel_, this.label_);\\n        }\\n        else {\\n            replaceNode(this.label_, this.collapseLabel_);\\n        }\\n        this.collapsed_ = !this.collapsed_;\\n    };\\n    /**\\n     * Return `true` if the attribution is collapsible, `false` otherwise.\\n     * @return {boolean} True if the widget is collapsible.\\n     * @api\\n     */\\n    Attribution.prototype.getCollapsible = function () {\\n        return this.collapsible_;\\n    };\\n    /**\\n     * Set whether the attribution should be collapsible.\\n     * @param {boolean} collapsible True if the widget is collapsible.\\n     * @api\\n     */\\n    Attribution.prototype.setCollapsible = function (collapsible) {\\n        if (this.collapsible_ === collapsible) {\\n            return;\\n        }\\n        this.collapsible_ = collapsible;\\n        this.element.classList.toggle('ol-uncollapsible');\\n        if (!collapsible && this.collapsed_) {\\n            this.handleToggle_();\\n        }\\n    };\\n    /**\\n     * Collapse or expand the attribution according to the passed parameter. Will\\n     * not do anything if the attribution isn't collapsible or if the current\\n     * collapsed state is already the one requested.\\n     * @param {boolean} collapsed True if the widget is collapsed.\\n     * @api\\n     */\\n    Attribution.prototype.setCollapsed = function (collapsed) {\\n        if (!this.collapsible_ || this.collapsed_ === collapsed) {\\n            return;\\n        }\\n        this.handleToggle_();\\n    };\\n    /**\\n     * Return `true` when the attribution is currently collapsed or `false`\\n     * otherwise.\\n     * @return {boolean} True if the widget is collapsed.\\n     * @api\\n     */\\n    Attribution.prototype.getCollapsed = function () {\\n        return this.collapsed_;\\n    };\\n    return Attribution;\\n}(Control));\\n/**\\n * Update the attribution element.\\n * @param {import(\\\"../MapEvent.js\\\").default} mapEvent Map event.\\n * @this {Attribution}\\n * @api\\n */\\nexport function render(mapEvent) {\\n    this.updateElement_(mapEvent.frameState);\\n}\\nexport default Attribution;\\n//# sourceMappingURL=Attribution.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/control/Rotate\\n */\\nimport Control from './Control.js';\\nimport { CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE } from '../css.js';\\nimport { easeOut } from '../easing.js';\\nimport { listen } from '../events.js';\\nimport EventType from '../events/EventType.js';\\n/**\\n * @typedef {Object} Options\\n * @property {string} [className='ol-rotate'] CSS class name.\\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\\n * Instead of text, also an element (e.g. a `span` element) can be used.\\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\\n * @property {number} [duration=250] Animation duration in milliseconds.\\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\\n * @property {function(import(\\\"../MapEvent.js\\\").default)} [render] Function called when the control should\\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\\n * @property {function()} [resetNorth] Function called when the control is clicked.\\n * This will override the default `resetNorth`.\\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\\n * rendered outside of the map's viewport.\\n */\\n/**\\n * @classdesc\\n * A button control to reset rotation to 0.\\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\\n * selector is added to the button when the rotation is 0.\\n *\\n * @api\\n */\\nvar Rotate = /** @class */ (function (_super) {\\n    __extends(Rotate, _super);\\n    /**\\n     * @param {Options=} opt_options Rotate options.\\n     */\\n    function Rotate(opt_options) {\\n        var _this = this;\\n        var options = opt_options ? opt_options : {};\\n        _this = _super.call(this, {\\n            element: document.createElement('div'),\\n            render: options.render || render,\\n            target: options.target\\n        }) || this;\\n        var className = options.className !== undefined ? options.className : 'ol-rotate';\\n        var label = options.label !== undefined ? options.label : '\\\\u21E7';\\n        /**\\n         * @type {HTMLElement}\\n         * @private\\n         */\\n        _this.label_ = null;\\n        if (typeof label === 'string') {\\n            _this.label_ = document.createElement('span');\\n            _this.label_.className = 'ol-compass';\\n            _this.label_.textContent = label;\\n        }\\n        else {\\n            _this.label_ = label;\\n            _this.label_.classList.add('ol-compass');\\n        }\\n        var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\\n        var button = document.createElement('button');\\n        button.className = className + '-reset';\\n        button.setAttribute('type', 'button');\\n        button.title = tipLabel;\\n        button.appendChild(_this.label_);\\n        listen(button, EventType.CLICK, _this.handleClick_, _this);\\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\\n        var element = _this.element;\\n        element.className = cssClasses;\\n        element.appendChild(button);\\n        _this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\\n        /**\\n         * @type {number}\\n         * @private\\n         */\\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\\n        /**\\n         * @type {boolean}\\n         * @private\\n         */\\n        _this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        _this.rotation_ = undefined;\\n        if (_this.autoHide_) {\\n            _this.element.classList.add(CLASS_HIDDEN);\\n        }\\n        return _this;\\n    }\\n    /**\\n     * @param {MouseEvent} event The event to handle\\n     * @private\\n     */\\n    Rotate.prototype.handleClick_ = function (event) {\\n        event.preventDefault();\\n        if (this.callResetNorth_ !== undefined) {\\n            this.callResetNorth_();\\n        }\\n        else {\\n            this.resetNorth_();\\n        }\\n    };\\n    /**\\n     * @private\\n     */\\n    Rotate.prototype.resetNorth_ = function () {\\n        var map = this.getMap();\\n        var view = map.getView();\\n        if (!view) {\\n            // the map does not have a view, so we can't act\\n            // upon it\\n            return;\\n        }\\n        if (view.getRotation() !== undefined) {\\n            if (this.duration_ > 0) {\\n                view.animate({\\n                    rotation: 0,\\n                    duration: this.duration_,\\n                    easing: easeOut\\n                });\\n            }\\n            else {\\n                view.setRotation(0);\\n            }\\n        }\\n    };\\n    return Rotate;\\n}(Control));\\n/**\\n * Update the rotate control element.\\n * @param {import(\\\"../MapEvent.js\\\").default} mapEvent Map event.\\n * @this {Rotate}\\n * @api\\n */\\nexport function render(mapEvent) {\\n    var frameState = mapEvent.frameState;\\n    if (!frameState) {\\n        return;\\n    }\\n    var rotation = frameState.viewState.rotation;\\n    if (rotation != this.rotation_) {\\n        var transform = 'rotate(' + rotation + 'rad)';\\n        if (this.autoHide_) {\\n            var contains = this.element.classList.contains(CLASS_HIDDEN);\\n            if (!contains && rotation === 0) {\\n                this.element.classList.add(CLASS_HIDDEN);\\n            }\\n            else if (contains && rotation !== 0) {\\n                this.element.classList.remove(CLASS_HIDDEN);\\n            }\\n        }\\n        this.label_.style.transform = transform;\\n    }\\n    this.rotation_ = rotation;\\n}\\nexport default Rotate;\\n//# sourceMappingURL=Rotate.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/control/Zoom\\n */\\nimport { listen } from '../events.js';\\nimport EventType from '../events/EventType.js';\\nimport Control from './Control.js';\\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\\nimport { easeOut } from '../easing.js';\\n/**\\n * @typedef {Object} Options\\n * @property {number} [duration=250] Animation duration in milliseconds.\\n * @property {string} [className='ol-zoom'] CSS class name.\\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\\n * Instead of text, also an element (e.g. a `span` element) can be used.\\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\\n * @property {number} [delta=1] The zoom delta applied on each click.\\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\\n * rendered outside of the map's viewport.\\n */\\n/**\\n * @classdesc\\n * A control with 2 buttons, one for zoom in and one for zoom out.\\n * This control is one of the default controls of a map. To style this control\\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\\n *\\n * @api\\n */\\nvar Zoom = /** @class */ (function (_super) {\\n    __extends(Zoom, _super);\\n    /**\\n     * @param {Options=} opt_options Zoom options.\\n     */\\n    function Zoom(opt_options) {\\n        var _this = this;\\n        var options = opt_options ? opt_options : {};\\n        _this = _super.call(this, {\\n            element: document.createElement('div'),\\n            target: options.target\\n        }) || this;\\n        var className = options.className !== undefined ? options.className : 'ol-zoom';\\n        var delta = options.delta !== undefined ? options.delta : 1;\\n        var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\\n        var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\\\u2212';\\n        var zoomInTipLabel = options.zoomInTipLabel !== undefined ?\\n            options.zoomInTipLabel : 'Zoom in';\\n        var zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\\n            options.zoomOutTipLabel : 'Zoom out';\\n        var inElement = document.createElement('button');\\n        inElement.className = className + '-in';\\n        inElement.setAttribute('type', 'button');\\n        inElement.title = zoomInTipLabel;\\n        inElement.appendChild(typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel);\\n        listen(inElement, EventType.CLICK, _this.handleClick_.bind(_this, delta));\\n        var outElement = document.createElement('button');\\n        outElement.className = className + '-out';\\n        outElement.setAttribute('type', 'button');\\n        outElement.title = zoomOutTipLabel;\\n        outElement.appendChild(typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel);\\n        listen(outElement, EventType.CLICK, _this.handleClick_.bind(_this, -delta));\\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\\n        var element = _this.element;\\n        element.className = cssClasses;\\n        element.appendChild(inElement);\\n        element.appendChild(outElement);\\n        /**\\n         * @type {number}\\n         * @private\\n         */\\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\\n        return _this;\\n    }\\n    /**\\n     * @param {number} delta Zoom delta.\\n     * @param {MouseEvent} event The event to handle\\n     * @private\\n     */\\n    Zoom.prototype.handleClick_ = function (delta, event) {\\n        event.preventDefault();\\n        this.zoomByDelta_(delta);\\n    };\\n    /**\\n     * @param {number} delta Zoom delta.\\n     * @private\\n     */\\n    Zoom.prototype.zoomByDelta_ = function (delta) {\\n        var map = this.getMap();\\n        var view = map.getView();\\n        if (!view) {\\n            // the map does not have a view, so we can't act\\n            // upon it\\n            return;\\n        }\\n        var currentZoom = view.getZoom();\\n        if (currentZoom !== undefined) {\\n            var newZoom = view.getConstrainedZoom(currentZoom + delta);\\n            if (this.duration_ > 0) {\\n                if (view.getAnimating()) {\\n                    view.cancelAnimations();\\n                }\\n                view.animate({\\n                    zoom: newZoom,\\n                    duration: this.duration_,\\n                    easing: easeOut\\n                });\\n            }\\n            else {\\n                view.setZoom(newZoom);\\n            }\\n        }\\n    };\\n    return Zoom;\\n}(Control));\\nexport default Zoom;\\n//# sourceMappingURL=Zoom.js.map\",\"/**\\n * @module ol/Kinetic\\n */\\n/**\\n * @classdesc\\n * Implementation of inertial deceleration for map movement.\\n *\\n * @api\\n */\\nvar Kinetic = /** @class */ (function () {\\n    /**\\n     * @param {number} decay Rate of decay (must be negative).\\n     * @param {number} minVelocity Minimum velocity (pixels/millisecond).\\n     * @param {number} delay Delay to consider to calculate the kinetic\\n     *     initial values (milliseconds).\\n     */\\n    function Kinetic(decay, minVelocity, delay) {\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        this.decay_ = decay;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        this.minVelocity_ = minVelocity;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        this.delay_ = delay;\\n        /**\\n         * @private\\n         * @type {Array<number>}\\n         */\\n        this.points_ = [];\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        this.angle_ = 0;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        this.initialVelocity_ = 0;\\n    }\\n    /**\\n     * FIXME empty description for jsdoc\\n     */\\n    Kinetic.prototype.begin = function () {\\n        this.points_.length = 0;\\n        this.angle_ = 0;\\n        this.initialVelocity_ = 0;\\n    };\\n    /**\\n     * @param {number} x X.\\n     * @param {number} y Y.\\n     */\\n    Kinetic.prototype.update = function (x, y) {\\n        this.points_.push(x, y, Date.now());\\n    };\\n    /**\\n     * @return {boolean} Whether we should do kinetic animation.\\n     */\\n    Kinetic.prototype.end = function () {\\n        if (this.points_.length < 6) {\\n            // at least 2 points are required (i.e. there must be at least 6 elements\\n            // in the array)\\n            return false;\\n        }\\n        var delay = Date.now() - this.delay_;\\n        var lastIndex = this.points_.length - 3;\\n        if (this.points_[lastIndex + 2] < delay) {\\n            // the last tracked point is too old, which means that the user stopped\\n            // panning before releasing the map\\n            return false;\\n        }\\n        // get the first point which still falls into the delay time\\n        var firstIndex = lastIndex - 3;\\n        while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\\n            firstIndex -= 3;\\n        }\\n        var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\\n        // we don't want a duration of 0 (divide by zero)\\n        // we also make sure the user panned for a duration of at least one frame\\n        // (1/60s) to compute sane displacement values\\n        if (duration < 1000 / 60) {\\n            return false;\\n        }\\n        var dx = this.points_[lastIndex] - this.points_[firstIndex];\\n        var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\\n        this.angle_ = Math.atan2(dy, dx);\\n        this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\\n        return this.initialVelocity_ > this.minVelocity_;\\n    };\\n    /**\\n     * @return {number} Total distance travelled (pixels).\\n     */\\n    Kinetic.prototype.getDistance = function () {\\n        return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\\n    };\\n    /**\\n     * @return {number} Angle of the kinetic panning animation (radians).\\n     */\\n    Kinetic.prototype.getAngle = function () {\\n        return this.angle_;\\n    };\\n    return Kinetic;\\n}());\\nexport default Kinetic;\\n//# sourceMappingURL=Kinetic.js.map\",\"/**\\n * @module ol/interaction/Property\\n */\\n/**\\n * @enum {string}\\n */\\nexport default {\\n    ACTIVE: 'active'\\n};\\n//# sourceMappingURL=Property.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/interaction/Interaction\\n */\\nimport BaseObject from '../Object.js';\\nimport { easeOut, linear } from '../easing.js';\\nimport InteractionProperty from './Property.js';\\n/**\\n * Object literal with config options for interactions.\\n * @typedef {Object} InteractionOptions\\n * @property {function(import(\\\"../MapBrowserEvent.js\\\").default):boolean} handleEvent\\n * Method called by the map to notify the interaction that a browser event was\\n * dispatched to the map. If the function returns a falsy value, propagation of\\n * the event to other interactions in the map's interactions chain will be\\n * prevented (this includes functions with no explicit return). The interactions\\n * are traversed in reverse order of the interactions collection of the map.\\n */\\n/**\\n * @classdesc\\n * Abstract base class; normally only used for creating subclasses and not\\n * instantiated in apps.\\n * User actions that change the state of the map. Some are similar to controls,\\n * but are not associated with a DOM element.\\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\\n * by a keyboard event not a button element event.\\n * Although interactions do not have a DOM element, some of them do render\\n * vectors and so are visible on the screen.\\n * @api\\n */\\nvar Interaction = /** @class */ (function (_super) {\\n    __extends(Interaction, _super);\\n    /**\\n     * @param {InteractionOptions} options Options.\\n     */\\n    function Interaction(options) {\\n        var _this = _super.call(this) || this;\\n        if (options.handleEvent) {\\n            _this.handleEvent = options.handleEvent;\\n        }\\n        /**\\n         * @private\\n         * @type {import(\\\"../PluggableMap.js\\\").default}\\n         */\\n        _this.map_ = null;\\n        _this.setActive(true);\\n        return _this;\\n    }\\n    /**\\n     * Return whether the interaction is currently active.\\n     * @return {boolean} `true` if the interaction is active, `false` otherwise.\\n     * @observable\\n     * @api\\n     */\\n    Interaction.prototype.getActive = function () {\\n        return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\\n    };\\n    /**\\n     * Get the map associated with this interaction.\\n     * @return {import(\\\"../PluggableMap.js\\\").default} Map.\\n     * @api\\n     */\\n    Interaction.prototype.getMap = function () {\\n        return this.map_;\\n    };\\n    /**\\n     * Handles the {@link module:ol/MapBrowserEvent map browser event}.\\n     * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n     * @return {boolean} `false` to stop event propagation.\\n     * @api\\n     */\\n    Interaction.prototype.handleEvent = function (mapBrowserEvent) {\\n        return true;\\n    };\\n    /**\\n     * Activate or deactivate the interaction.\\n     * @param {boolean} active Active.\\n     * @observable\\n     * @api\\n     */\\n    Interaction.prototype.setActive = function (active) {\\n        this.set(InteractionProperty.ACTIVE, active);\\n    };\\n    /**\\n     * Remove the interaction from its current map and attach it to the new map.\\n     * Subclasses may set up event handlers to get notified about changes to\\n     * the map here.\\n     * @param {import(\\\"../PluggableMap.js\\\").default} map Map.\\n     */\\n    Interaction.prototype.setMap = function (map) {\\n        this.map_ = map;\\n    };\\n    return Interaction;\\n}(BaseObject));\\n/**\\n * @param {import(\\\"../View.js\\\").default} view View.\\n * @param {import(\\\"../coordinate.js\\\").Coordinate} delta Delta.\\n * @param {number=} opt_duration Duration.\\n */\\nexport function pan(view, delta, opt_duration) {\\n    var currentCenter = view.getCenter();\\n    if (currentCenter) {\\n        var center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\\n        view.animate_({\\n            duration: opt_duration !== undefined ? opt_duration : 250,\\n            easing: linear,\\n            center: view.getConstrainedCenter(center)\\n        });\\n    }\\n}\\n/**\\n * @param {import(\\\"../View.js\\\").default} view View.\\n * @param {number} delta Delta from previous zoom level.\\n * @param {import(\\\"../coordinate.js\\\").Coordinate=} opt_anchor Anchor coordinate.\\n * @param {number=} opt_duration Duration.\\n */\\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\\n    var currentZoom = view.getZoom();\\n    if (currentZoom === undefined) {\\n        return;\\n    }\\n    var newZoom = view.getConstrainedZoom(currentZoom + delta);\\n    var newResolution = view.getResolutionForZoom(newZoom);\\n    if (view.getAnimating()) {\\n        view.cancelAnimations();\\n    }\\n    view.animate({\\n        resolution: newResolution,\\n        anchor: opt_anchor,\\n        duration: opt_duration !== undefined ? opt_duration : 250,\\n        easing: easeOut\\n    });\\n}\\nexport default Interaction;\\n//# sourceMappingURL=Interaction.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/interaction/DoubleClickZoom\\n */\\nimport MapBrowserEventType from '../MapBrowserEventType.js';\\nimport Interaction, { zoomByDelta } from './Interaction.js';\\n/**\\n * @typedef {Object} Options\\n * @property {number} [duration=250] Animation duration in milliseconds.\\n * @property {number} [delta=1] The zoom delta applied on each double click.\\n */\\n/**\\n * @classdesc\\n * Allows the user to zoom by double-clicking on the map.\\n * @api\\n */\\nvar DoubleClickZoom = /** @class */ (function (_super) {\\n    __extends(DoubleClickZoom, _super);\\n    /**\\n     * @param {Options=} opt_options Options.\\n     */\\n    function DoubleClickZoom(opt_options) {\\n        var _this = _super.call(this, {\\n            handleEvent: handleEvent\\n        }) || this;\\n        var options = opt_options ? opt_options : {};\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.delta_ = options.delta ? options.delta : 1;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\\n        return _this;\\n    }\\n    return DoubleClickZoom;\\n}(Interaction));\\n/**\\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\\n * doubleclick) and eventually zooms the map.\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n * @return {boolean} `false` to stop event propagation.\\n * @this {DoubleClickZoom}\\n */\\nfunction handleEvent(mapBrowserEvent) {\\n    var stopEvent = false;\\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\\n        var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\\n        var map = mapBrowserEvent.map;\\n        var anchor = mapBrowserEvent.coordinate;\\n        var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\\n        var view = map.getView();\\n        zoomByDelta(view, delta, anchor, this.duration_);\\n        mapBrowserEvent.preventDefault();\\n        stopEvent = true;\\n    }\\n    return !stopEvent;\\n}\\nexport default DoubleClickZoom;\\n//# sourceMappingURL=DoubleClickZoom.js.map\",\"/**\\n * @module ol/events/condition\\n */\\nimport MapBrowserEventType from '../MapBrowserEventType.js';\\nimport { assert } from '../asserts.js';\\nimport { TRUE, FALSE } from '../functions.js';\\nimport { WEBKIT, MAC } from '../has.js';\\n/**\\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\\n * `{boolean}`. If the condition is met, true should be returned.\\n *\\n * @typedef {function(this: ?, import(\\\"../MapBrowserEvent.js\\\").default): boolean} Condition\\n */\\n/**\\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\\n * additionally the shift-key is pressed).\\n *\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n * @return {boolean} True if only the alt key is pressed.\\n * @api\\n */\\nexport var altKeyOnly = function (mapBrowserEvent) {\\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\\n    return (originalEvent.altKey &&\\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\\n        !originalEvent.shiftKey);\\n};\\n/**\\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\\n * (e.g. when additionally the platform-modifier-key is pressed).\\n *\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n * @return {boolean} True if only the alt and shift keys are pressed.\\n * @api\\n */\\nexport var altShiftKeysOnly = function (mapBrowserEvent) {\\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\\n    return (originalEvent.altKey &&\\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\\n        originalEvent.shiftKey);\\n};\\n/**\\n * Return `true` if the map has the focus. This condition requires a map target\\n * element with a `tabindex` attribute, e.g. `<div id=\\\"map\\\" tabindex=\\\"1\\\">`.\\n *\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} event Map browser event.\\n * @return {boolean} The map has the focus.\\n * @api\\n */\\nexport var focus = function (event) {\\n    return event.target.getTargetElement() === document.activeElement;\\n};\\n/**\\n * Return always true.\\n *\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n * @return {boolean} True.\\n * @api\\n */\\nexport var always = TRUE;\\n/**\\n * Return `true` if the event is a `click` event, `false` otherwise.\\n *\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n * @return {boolean} True if the event is a map `click` event.\\n * @api\\n */\\nexport var click = function (mapBrowserEvent) {\\n    return mapBrowserEvent.type == MapBrowserEventType.CLICK;\\n};\\n/**\\n * Return `true` if the event has an \\\"action\\\"-producing mouse button.\\n *\\n * By definition, this includes left-click on windows/linux, and left-click\\n * without the ctrl key on Macs.\\n *\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n * @return {boolean} The result.\\n */\\nexport var mouseActionButton = function (mapBrowserEvent) {\\n    var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\\n    return originalEvent.button == 0 &&\\n        !(WEBKIT && MAC && originalEvent.ctrlKey);\\n};\\n/**\\n * Return always false.\\n *\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n * @return {boolean} False.\\n * @api\\n */\\nexport var never = FALSE;\\n/**\\n * Return `true` if the browser event is a `pointermove` event, `false`\\n * otherwise.\\n *\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n * @return {boolean} True if the browser event is a `pointermove` event.\\n * @api\\n */\\nexport var pointerMove = function (mapBrowserEvent) {\\n    return mapBrowserEvent.type == 'pointermove';\\n};\\n/**\\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\\n *\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n * @return {boolean} True if the event is a map `singleclick` event.\\n * @api\\n */\\nexport var singleClick = function (mapBrowserEvent) {\\n    return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\\n};\\n/**\\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\\n *\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n * @return {boolean} True if the event is a map `dblclick` event.\\n * @api\\n */\\nexport var doubleClick = function (mapBrowserEvent) {\\n    return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\\n};\\n/**\\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\\n * pressed.\\n *\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n * @return {boolean} True only if there no modifier keys are pressed.\\n * @api\\n */\\nexport var noModifierKeys = function (mapBrowserEvent) {\\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\\n    return (!originalEvent.altKey &&\\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\\n        !originalEvent.shiftKey);\\n};\\n/**\\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\\n * the shift-key is pressed).\\n *\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n * @return {boolean} True if only the platform modifier key is pressed.\\n * @api\\n */\\nexport var platformModifierKeyOnly = function (mapBrowserEvent) {\\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\\n    return !originalEvent.altKey &&\\n        (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\\n        !originalEvent.shiftKey;\\n};\\n/**\\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\\n * additionally the alt-key is pressed).\\n *\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n * @return {boolean} True if only the shift key is pressed.\\n * @api\\n */\\nexport var shiftKeyOnly = function (mapBrowserEvent) {\\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\\n    return (!originalEvent.altKey &&\\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\\n        originalEvent.shiftKey);\\n};\\n/**\\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\\n * `<select>`- or `<textarea>`-element, `false` otherwise.\\n *\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n * @return {boolean} True only if the target element is not editable.\\n * @api\\n */\\nexport var targetNotEditable = function (mapBrowserEvent) {\\n    var target = mapBrowserEvent.originalEvent.target;\\n    var tagName = /** @type {Element} */ (target).tagName;\\n    return (tagName !== 'INPUT' &&\\n        tagName !== 'SELECT' &&\\n        tagName !== 'TEXTAREA');\\n};\\n/**\\n * Return `true` if the event originates from a mouse device.\\n *\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n * @return {boolean} True if the event originates from a mouse device.\\n * @api\\n */\\nexport var mouseOnly = function (mapBrowserEvent) {\\n    var pointerEvent = /** @type {import(\\\"../MapBrowserPointerEvent\\\").default} */ (mapBrowserEvent).pointerEvent;\\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\\n    return pointerEvent.pointerType == 'mouse';\\n};\\n/**\\n * Return `true` if the event originates from a touchable device.\\n *\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n * @return {boolean} True if the event originates from a touchable device.\\n * @api\\n */\\nexport var touchOnly = function (mapBrowserEvent) {\\n    var pointerEvt = /** @type {import(\\\"../MapBrowserPointerEvent\\\").default} */ (mapBrowserEvent).pointerEvent;\\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\\n    return pointerEvt.pointerType === 'touch';\\n};\\n/**\\n * Return `true` if the event originates from a digital pen.\\n *\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n * @return {boolean} True if the event originates from a digital pen.\\n * @api\\n */\\nexport var penOnly = function (mapBrowserEvent) {\\n    var pointerEvt = /** @type {import(\\\"../MapBrowserPointerEvent\\\").default} */ (mapBrowserEvent).pointerEvent;\\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\\n    return pointerEvt.pointerType === 'pen';\\n};\\n/**\\n * Return `true` if the event originates from a primary pointer in\\n * contact with the surface or if the left mouse button is pressed.\\n * See http://www.w3.org/TR/pointerevents/#button-states.\\n *\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n * @return {boolean} True if the event originates from a primary pointer.\\n * @api\\n */\\nexport var primaryAction = function (mapBrowserEvent) {\\n    var pointerEvent = /** @type {import(\\\"../MapBrowserPointerEvent\\\").default} */ (mapBrowserEvent).pointerEvent;\\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\\n    return pointerEvent.isPrimary && pointerEvent.button === 0;\\n};\\n//# sourceMappingURL=condition.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/interaction/Pointer\\n */\\nimport MapBrowserEventType from '../MapBrowserEventType.js';\\nimport Interaction from './Interaction.js';\\nimport { getValues } from '../obj.js';\\n/**\\n * @typedef {Object} Options\\n * @property {function(import(\\\"../MapBrowserPointerEvent.js\\\").default):boolean} [handleDownEvent]\\n * Function handling \\\"down\\\" events. If the function returns `true` then a drag\\n * sequence is started.\\n * @property {function(import(\\\"../MapBrowserPointerEvent.js\\\").default)} [handleDragEvent]\\n * Function handling \\\"drag\\\" events. This function is called on \\\"move\\\" events\\n * during a drag sequence.\\n * @property {function(import(\\\"../MapBrowserEvent.js\\\").default):boolean} [handleEvent]\\n * Method called by the map to notify the interaction that a browser event was\\n * dispatched to the map. The function may return `false` to prevent the\\n * propagation of the event to other interactions in the map's interactions\\n * chain.\\n * @property {function(import(\\\"../MapBrowserPointerEvent.js\\\").default)} [handleMoveEvent]\\n * Function handling \\\"move\\\" events. This function is called on \\\"move\\\" events,\\n * also during a drag sequence (so during a drag sequence both the\\n * `handleDragEvent` function and this function are called).\\n * @property {function(import(\\\"../MapBrowserPointerEvent.js\\\").default):boolean} [handleUpEvent]\\n *  Function handling \\\"up\\\" events. If the function returns `false` then the\\n * current drag sequence is stopped.\\n * @property {function(boolean):boolean} [stopDown]\\n * Should the down event be propagated to other interactions, or should be\\n * stopped?\\n */\\n/**\\n * @classdesc\\n * Base class that calls user-defined functions on `down`, `move` and `up`\\n * events. This class also manages \\\"drag sequences\\\".\\n *\\n * When the `handleDownEvent` user function returns `true` a drag sequence is\\n * started. During a drag sequence the `handleDragEvent` user function is\\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\\n * user function is called and returns `false`.\\n * @api\\n */\\nvar PointerInteraction = /** @class */ (function (_super) {\\n    __extends(PointerInteraction, _super);\\n    /**\\n     * @param {Options=} opt_options Options.\\n     */\\n    function PointerInteraction(opt_options) {\\n        var _this = this;\\n        var options = opt_options ? opt_options : {};\\n        _this = _super.call(this, /** @type {import(\\\"./Interaction.js\\\").InteractionOptions} */ (options)) || this;\\n        if (options.handleDownEvent) {\\n            _this.handleDownEvent = options.handleDownEvent;\\n        }\\n        if (options.handleDragEvent) {\\n            _this.handleDragEvent = options.handleDragEvent;\\n        }\\n        if (options.handleMoveEvent) {\\n            _this.handleMoveEvent = options.handleMoveEvent;\\n        }\\n        if (options.handleUpEvent) {\\n            _this.handleUpEvent = options.handleUpEvent;\\n        }\\n        if (options.stopDown) {\\n            _this.stopDown = options.stopDown;\\n        }\\n        /**\\n         * @type {boolean}\\n         * @protected\\n         */\\n        _this.handlingDownUpSequence = false;\\n        /**\\n         * @type {!Object<string, import(\\\"../pointer/PointerEvent.js\\\").default>}\\n         * @private\\n         */\\n        _this.trackedPointers_ = {};\\n        /**\\n         * @type {Array<import(\\\"../pointer/PointerEvent.js\\\").default>}\\n         * @protected\\n         */\\n        _this.targetPointers = [];\\n        return _this;\\n    }\\n    /**\\n     * Handle pointer down events.\\n     * @param {import(\\\"../MapBrowserPointerEvent.js\\\").default} mapBrowserEvent Event.\\n     * @return {boolean} If the event was consumed.\\n     * @protected\\n     */\\n    PointerInteraction.prototype.handleDownEvent = function (mapBrowserEvent) {\\n        return false;\\n    };\\n    /**\\n     * Handle pointer drag events.\\n     * @param {import(\\\"../MapBrowserPointerEvent.js\\\").default} mapBrowserEvent Event.\\n     * @protected\\n     */\\n    PointerInteraction.prototype.handleDragEvent = function (mapBrowserEvent) { };\\n    /**\\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\\n     * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\\n     * detected.\\n     * @override\\n     * @api\\n     */\\n    PointerInteraction.prototype.handleEvent = function (mapBrowserEvent) {\\n        if (!( /** @type {import(\\\"../MapBrowserPointerEvent.js\\\").default} */(mapBrowserEvent).pointerEvent)) {\\n            return true;\\n        }\\n        var stopEvent = false;\\n        this.updateTrackedPointers_(mapBrowserEvent);\\n        if (this.handlingDownUpSequence) {\\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\\n                this.handleDragEvent(mapBrowserEvent);\\n            }\\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\\n                var handledUp = this.handleUpEvent(mapBrowserEvent);\\n                this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\\n            }\\n        }\\n        else {\\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\\n                var handled = this.handleDownEvent(mapBrowserEvent);\\n                if (handled) {\\n                    mapBrowserEvent.preventDefault();\\n                }\\n                this.handlingDownUpSequence = handled;\\n                stopEvent = this.stopDown(handled);\\n            }\\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\\n                this.handleMoveEvent(mapBrowserEvent);\\n            }\\n        }\\n        return !stopEvent;\\n    };\\n    /**\\n     * Handle pointer move events.\\n     * @param {import(\\\"../MapBrowserPointerEvent.js\\\").default} mapBrowserEvent Event.\\n     * @protected\\n     */\\n    PointerInteraction.prototype.handleMoveEvent = function (mapBrowserEvent) { };\\n    /**\\n     * Handle pointer up events.\\n     * @param {import(\\\"../MapBrowserPointerEvent.js\\\").default} mapBrowserEvent Event.\\n     * @return {boolean} If the event was consumed.\\n     * @protected\\n     */\\n    PointerInteraction.prototype.handleUpEvent = function (mapBrowserEvent) {\\n        return false;\\n    };\\n    /**\\n     * This function is used to determine if \\\"down\\\" events should be propagated\\n     * to other interactions or should be stopped.\\n     * @param {boolean} handled Was the event handled by the interaction?\\n     * @return {boolean} Should the `down` event be stopped?\\n     */\\n    PointerInteraction.prototype.stopDown = function (handled) {\\n        return handled;\\n    };\\n    /**\\n     * @param {import(\\\"../MapBrowserPointerEvent.js\\\").default} mapBrowserEvent Event.\\n     * @private\\n     */\\n    PointerInteraction.prototype.updateTrackedPointers_ = function (mapBrowserEvent) {\\n        if (isPointerDraggingEvent(mapBrowserEvent)) {\\n            var event_1 = mapBrowserEvent.pointerEvent;\\n            var id = event_1.pointerId.toString();\\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\\n                delete this.trackedPointers_[id];\\n            }\\n            else if (mapBrowserEvent.type ==\\n                MapBrowserEventType.POINTERDOWN) {\\n                this.trackedPointers_[id] = event_1;\\n            }\\n            else if (id in this.trackedPointers_) {\\n                // update only when there was a pointerdown event for this pointer\\n                this.trackedPointers_[id] = event_1;\\n            }\\n            this.targetPointers = getValues(this.trackedPointers_);\\n        }\\n    };\\n    return PointerInteraction;\\n}(Interaction));\\n/**\\n * @param {Array<import(\\\"../pointer/PointerEvent.js\\\").default>} pointerEvents List of events.\\n * @return {import(\\\"../pixel.js\\\").Pixel} Centroid pixel.\\n */\\nexport function centroid(pointerEvents) {\\n    var length = pointerEvents.length;\\n    var clientX = 0;\\n    var clientY = 0;\\n    for (var i = 0; i < length; i++) {\\n        clientX += pointerEvents[i].clientX;\\n        clientY += pointerEvents[i].clientY;\\n    }\\n    return [clientX / length, clientY / length];\\n}\\n/**\\n * @param {import(\\\"../MapBrowserPointerEvent.js\\\").default} mapBrowserEvent Event.\\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\\n *     or pointerup event.\\n */\\nfunction isPointerDraggingEvent(mapBrowserEvent) {\\n    var type = mapBrowserEvent.type;\\n    return type === MapBrowserEventType.POINTERDOWN ||\\n        type === MapBrowserEventType.POINTERDRAG ||\\n        type === MapBrowserEventType.POINTERUP;\\n}\\nexport default PointerInteraction;\\n//# sourceMappingURL=Pointer.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/interaction/DragPan\\n */\\nimport { scale as scaleCoordinate, rotate as rotateCoordinate } from '../coordinate.js';\\nimport { easeOut } from '../easing.js';\\nimport { noModifierKeys } from '../events/condition.js';\\nimport { FALSE } from '../functions.js';\\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\\n/**\\n * @typedef {Object} Options\\n * @property {import(\\\"../events/condition.js\\\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\\n * to indicate whether that event should be handled.\\n * Default is {@link module:ol/events/condition~noModifierKeys}.\\n * @property {import(\\\"../Kinetic.js\\\").default} [kinetic] Kinetic inertia to apply to the pan.\\n */\\n/**\\n * @classdesc\\n * Allows the user to pan the map by dragging the map.\\n * @api\\n */\\nvar DragPan = /** @class */ (function (_super) {\\n    __extends(DragPan, _super);\\n    /**\\n     * @param {Options=} opt_options Options.\\n     */\\n    function DragPan(opt_options) {\\n        var _this = _super.call(this, {\\n            stopDown: FALSE\\n        }) || this;\\n        var options = opt_options ? opt_options : {};\\n        /**\\n         * @private\\n         * @type {import(\\\"../Kinetic.js\\\").default|undefined}\\n         */\\n        _this.kinetic_ = options.kinetic;\\n        /**\\n         * @type {import(\\\"../pixel.js\\\").Pixel}\\n         */\\n        _this.lastCentroid = null;\\n        /**\\n         * @type {number}\\n         */\\n        _this.lastPointersCount_;\\n        /**\\n         * @type {boolean}\\n         */\\n        _this.panning_ = false;\\n        /**\\n         * @private\\n         * @type {import(\\\"../events/condition.js\\\").Condition}\\n         */\\n        _this.condition_ = options.condition ? options.condition : noModifierKeys;\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.noKinetic_ = false;\\n        return _this;\\n    }\\n    /**\\n     * @inheritDoc\\n     */\\n    DragPan.prototype.handleDragEvent = function (mapBrowserEvent) {\\n        var targetPointers = this.targetPointers;\\n        var centroid = centroidFromPointers(targetPointers);\\n        if (targetPointers.length == this.lastPointersCount_) {\\n            if (this.kinetic_) {\\n                this.kinetic_.update(centroid[0], centroid[1]);\\n            }\\n            if (this.lastCentroid) {\\n                var delta = [\\n                    this.lastCentroid[0] - centroid[0],\\n                    centroid[1] - this.lastCentroid[1]\\n                ];\\n                var map = mapBrowserEvent.map;\\n                var view = map.getView();\\n                scaleCoordinate(delta, view.getResolution());\\n                rotateCoordinate(delta, view.getRotation());\\n                view.adjustCenter(delta);\\n            }\\n        }\\n        else if (this.kinetic_) {\\n            // reset so we don't overestimate the kinetic energy after\\n            // after one finger down, tiny drag, second finger down\\n            this.kinetic_.begin();\\n        }\\n        this.lastCentroid = centroid;\\n        this.lastPointersCount_ = targetPointers.length;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    DragPan.prototype.handleUpEvent = function (mapBrowserEvent) {\\n        var map = mapBrowserEvent.map;\\n        var view = map.getView();\\n        if (this.targetPointers.length === 0) {\\n            if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\\n                var distance = this.kinetic_.getDistance();\\n                var angle = this.kinetic_.getAngle();\\n                var center = /** @type {!import(\\\"../coordinate.js\\\").Coordinate} */ (view.getCenter());\\n                var centerpx = map.getPixelFromCoordinate(center);\\n                var dest = map.getCoordinateFromPixel([\\n                    centerpx[0] - distance * Math.cos(angle),\\n                    centerpx[1] - distance * Math.sin(angle)\\n                ]);\\n                view.animate({\\n                    center: view.getConstrainedCenter(dest),\\n                    duration: 500,\\n                    easing: easeOut\\n                });\\n            }\\n            if (this.panning_) {\\n                this.panning_ = false;\\n                view.endInteraction();\\n            }\\n            return false;\\n        }\\n        else {\\n            if (this.kinetic_) {\\n                // reset so we don't overestimate the kinetic energy after\\n                // after one finger up, tiny drag, second finger up\\n                this.kinetic_.begin();\\n            }\\n            this.lastCentroid = null;\\n            return true;\\n        }\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    DragPan.prototype.handleDownEvent = function (mapBrowserEvent) {\\n        if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\\n            var map = mapBrowserEvent.map;\\n            var view = map.getView();\\n            this.lastCentroid = null;\\n            // stop any current animation\\n            if (view.getAnimating()) {\\n                view.cancelAnimations();\\n            }\\n            if (!this.panning_) {\\n                this.panning_ = true;\\n                this.getMap().getView().beginInteraction();\\n            }\\n            if (this.kinetic_) {\\n                this.kinetic_.begin();\\n            }\\n            // No kinetic as soon as more than one pointer on the screen is\\n            // detected. This is to prevent nasty pans after pinch.\\n            this.noKinetic_ = this.targetPointers.length > 1;\\n            return true;\\n        }\\n        else {\\n            return false;\\n        }\\n    };\\n    return DragPan;\\n}(PointerInteraction));\\nexport default DragPan;\\n//# sourceMappingURL=DragPan.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/interaction/DragRotate\\n */\\nimport { disable } from '../rotationconstraint.js';\\nimport { altShiftKeysOnly, mouseOnly, mouseActionButton } from '../events/condition.js';\\nimport { FALSE } from '../functions.js';\\nimport PointerInteraction from './Pointer.js';\\n/**\\n * @typedef {Object} Options\\n * @property {import(\\\"../events/condition.js\\\").Condition} [condition] A function that takes an\\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\\n * to indicate whether that event should be handled.\\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\\n * @property {number} [duration=250] Animation duration in milliseconds.\\n */\\n/**\\n * @classdesc\\n * Allows the user to rotate the map by clicking and dragging on the map,\\n * normally combined with an {@link module:ol/events/condition} that limits\\n * it to when the alt and shift keys are held down.\\n *\\n * This interaction is only supported for mouse devices.\\n * @api\\n */\\nvar DragRotate = /** @class */ (function (_super) {\\n    __extends(DragRotate, _super);\\n    /**\\n     * @param {Options=} opt_options Options.\\n     */\\n    function DragRotate(opt_options) {\\n        var _this = this;\\n        var options = opt_options ? opt_options : {};\\n        _this = _super.call(this, {\\n            stopDown: FALSE\\n        }) || this;\\n        /**\\n         * @private\\n         * @type {import(\\\"../events/condition.js\\\").Condition}\\n         */\\n        _this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        _this.lastAngle_ = undefined;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\\n        return _this;\\n    }\\n    /**\\n     * @inheritDoc\\n     */\\n    DragRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\\n        if (!mouseOnly(mapBrowserEvent)) {\\n            return;\\n        }\\n        var map = mapBrowserEvent.map;\\n        var view = map.getView();\\n        if (view.getConstraints().rotation === disable) {\\n            return;\\n        }\\n        var size = map.getSize();\\n        var offset = mapBrowserEvent.pixel;\\n        var theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\\n        if (this.lastAngle_ !== undefined) {\\n            var delta = theta - this.lastAngle_;\\n            view.adjustRotation(-delta);\\n        }\\n        this.lastAngle_ = theta;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    DragRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\\n        if (!mouseOnly(mapBrowserEvent)) {\\n            return true;\\n        }\\n        var map = mapBrowserEvent.map;\\n        var view = map.getView();\\n        view.endInteraction(this.duration_);\\n        return false;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    DragRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\\n        if (!mouseOnly(mapBrowserEvent)) {\\n            return false;\\n        }\\n        if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\\n            var map = mapBrowserEvent.map;\\n            map.getView().beginInteraction();\\n            this.lastAngle_ = undefined;\\n            return true;\\n        }\\n        else {\\n            return false;\\n        }\\n    };\\n    return DragRotate;\\n}(PointerInteraction));\\nexport default DragRotate;\\n//# sourceMappingURL=DragRotate.js.map\",\"/**\\n * @module ol/render/Box\\n */\\nvar __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\nimport Disposable from '../Disposable.js';\\nimport Polygon from '../geom/Polygon.js';\\nvar RenderBox = /** @class */ (function (_super) {\\n    __extends(RenderBox, _super);\\n    /**\\n     * @param {string} className CSS class name.\\n     */\\n    function RenderBox(className) {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * @type {import(\\\"../geom/Polygon.js\\\").default}\\n         * @private\\n         */\\n        _this.geometry_ = null;\\n        /**\\n         * @type {HTMLDivElement}\\n         * @private\\n         */\\n        _this.element_ = document.createElement('div');\\n        _this.element_.style.position = 'absolute';\\n        _this.element_.className = 'ol-box ' + className;\\n        /**\\n         * @private\\n         * @type {import(\\\"../PluggableMap.js\\\").default}\\n         */\\n        _this.map_ = null;\\n        /**\\n         * @private\\n         * @type {import(\\\"../pixel.js\\\").Pixel}\\n         */\\n        _this.startPixel_ = null;\\n        /**\\n         * @private\\n         * @type {import(\\\"../pixel.js\\\").Pixel}\\n         */\\n        _this.endPixel_ = null;\\n        return _this;\\n    }\\n    /**\\n     * @inheritDoc\\n     */\\n    RenderBox.prototype.disposeInternal = function () {\\n        this.setMap(null);\\n    };\\n    /**\\n     * @private\\n     */\\n    RenderBox.prototype.render_ = function () {\\n        var startPixel = this.startPixel_;\\n        var endPixel = this.endPixel_;\\n        var px = 'px';\\n        var style = this.element_.style;\\n        style.left = Math.min(startPixel[0], endPixel[0]) + px;\\n        style.top = Math.min(startPixel[1], endPixel[1]) + px;\\n        style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\\n        style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\\n    };\\n    /**\\n     * @param {import(\\\"../PluggableMap.js\\\").default} map Map.\\n     */\\n    RenderBox.prototype.setMap = function (map) {\\n        if (this.map_) {\\n            this.map_.getOverlayContainer().removeChild(this.element_);\\n            var style = this.element_.style;\\n            style.left = style.top = style.width = style.height = 'inherit';\\n        }\\n        this.map_ = map;\\n        if (this.map_) {\\n            this.map_.getOverlayContainer().appendChild(this.element_);\\n        }\\n    };\\n    /**\\n     * @param {import(\\\"../pixel.js\\\").Pixel} startPixel Start pixel.\\n     * @param {import(\\\"../pixel.js\\\").Pixel} endPixel End pixel.\\n     */\\n    RenderBox.prototype.setPixels = function (startPixel, endPixel) {\\n        this.startPixel_ = startPixel;\\n        this.endPixel_ = endPixel;\\n        this.createOrUpdateGeometry();\\n        this.render_();\\n    };\\n    /**\\n     * Creates or updates the cached geometry.\\n     */\\n    RenderBox.prototype.createOrUpdateGeometry = function () {\\n        var startPixel = this.startPixel_;\\n        var endPixel = this.endPixel_;\\n        var pixels = [\\n            startPixel,\\n            [startPixel[0], endPixel[1]],\\n            endPixel,\\n            [endPixel[0], startPixel[1]]\\n        ];\\n        var coordinates = pixels.map(this.map_.getCoordinateFromPixel, this.map_);\\n        // close the polygon\\n        coordinates[4] = coordinates[0].slice();\\n        if (!this.geometry_) {\\n            this.geometry_ = new Polygon([coordinates]);\\n        }\\n        else {\\n            this.geometry_.setCoordinates([coordinates]);\\n        }\\n    };\\n    /**\\n     * @return {import(\\\"../geom/Polygon.js\\\").default} Geometry.\\n     */\\n    RenderBox.prototype.getGeometry = function () {\\n        return this.geometry_;\\n    };\\n    return RenderBox;\\n}(Disposable));\\nexport default RenderBox;\\n//# sourceMappingURL=Box.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/interaction/DragBox\\n */\\n// FIXME draw drag box\\nimport Event from '../events/Event.js';\\nimport { always, mouseOnly, mouseActionButton } from '../events/condition.js';\\nimport { VOID } from '../functions.js';\\nimport PointerInteraction from './Pointer.js';\\nimport RenderBox from '../render/Box.js';\\n/**\\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\\n * true should be returned.\\n * @typedef {function(this: ?, import(\\\"../MapBrowserEvent.js\\\").default, import(\\\"../pixel.js\\\").Pixel, import(\\\"../pixel.js\\\").Pixel):boolean} EndCondition\\n */\\n/**\\n * @typedef {Object} Options\\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\\n * @property {import(\\\"../events/condition.js\\\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\\n * to indicate whether that event should be handled.\\n * Default is {@link ol/events/condition~always}.\\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\\n * `boxEndCondition` function.\\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\\n * Default is `true` if the area of the box is bigger than the `minArea` option.\\n * @property {function(this:DragBox, import(\\\"../MapBrowserEvent.js\\\").default)} [onBoxEnd] Code to execute just\\n * before `boxend` is fired.\\n */\\n/**\\n * @enum {string}\\n */\\nvar DragBoxEventType = {\\n    /**\\n     * Triggered upon drag box start.\\n     * @event DragBoxEvent#boxstart\\n     * @api\\n     */\\n    BOXSTART: 'boxstart',\\n    /**\\n     * Triggered on drag when box is active.\\n     * @event DragBoxEvent#boxdrag\\n     * @api\\n     */\\n    BOXDRAG: 'boxdrag',\\n    /**\\n     * Triggered upon drag box end.\\n     * @event DragBoxEvent#boxend\\n     * @api\\n     */\\n    BOXEND: 'boxend'\\n};\\n/**\\n * @classdesc\\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\\n * this type.\\n */\\nvar DragBoxEvent = /** @class */ (function (_super) {\\n    __extends(DragBoxEvent, _super);\\n    /**\\n     * @param {string} type The event type.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} coordinate The event coordinate.\\n     * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Originating event.\\n     */\\n    function DragBoxEvent(type, coordinate, mapBrowserEvent) {\\n        var _this = _super.call(this, type) || this;\\n        /**\\n         * The coordinate of the drag event.\\n         * @const\\n         * @type {import(\\\"../coordinate.js\\\").Coordinate}\\n         * @api\\n         */\\n        _this.coordinate = coordinate;\\n        /**\\n         * @const\\n         * @type {import(\\\"../MapBrowserEvent.js\\\").default}\\n         * @api\\n         */\\n        _this.mapBrowserEvent = mapBrowserEvent;\\n        return _this;\\n    }\\n    return DragBoxEvent;\\n}(Event));\\n/**\\n * @classdesc\\n * Allows the user to draw a vector box by clicking and dragging on the map,\\n * normally combined with an {@link module:ol/events/condition} that limits\\n * it to when the shift or other key is held down. This is used, for example,\\n * for zooming to a specific area of the map\\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\\n * {@link module:ol/interaction/DragRotateAndZoom}).\\n *\\n * This interaction is only supported for mouse devices.\\n *\\n * @fires DragBoxEvent\\n * @api\\n */\\nvar DragBox = /** @class */ (function (_super) {\\n    __extends(DragBox, _super);\\n    /**\\n     * @param {Options=} opt_options Options.\\n     */\\n    function DragBox(opt_options) {\\n        var _this = _super.call(this) || this;\\n        var options = opt_options ? opt_options : {};\\n        /**\\n         * @type {import(\\\"../render/Box.js\\\").default}\\n         * @private\\n         */\\n        _this.box_ = new RenderBox(options.className || 'ol-dragbox');\\n        /**\\n         * @type {number}\\n         * @private\\n         */\\n        _this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\\n        /**\\n         * Function to execute just before `onboxend` is fired\\n         * @type {function(this:DragBox, import(\\\"../MapBrowserEvent.js\\\").default): void}\\n         * @private\\n         */\\n        _this.onBoxEnd_ = options.onBoxEnd ? options.onBoxEnd : VOID;\\n        /**\\n         * @type {import(\\\"../pixel.js\\\").Pixel}\\n         * @private\\n         */\\n        _this.startPixel_ = null;\\n        /**\\n         * @private\\n         * @type {import(\\\"../events/condition.js\\\").Condition}\\n         */\\n        _this.condition_ = options.condition ? options.condition : always;\\n        /**\\n         * @private\\n         * @type {EndCondition}\\n         */\\n        _this.boxEndCondition_ = options.boxEndCondition ?\\n            options.boxEndCondition : _this.defaultBoxEndCondition;\\n        return _this;\\n    }\\n    /**\\n     * The default condition for determining whether the boxend event\\n     * should fire.\\n     * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent The originating MapBrowserEvent\\n     *     leading to the box end.\\n     * @param {import(\\\"../pixel.js\\\").Pixel} startPixel The starting pixel of the box.\\n     * @param {import(\\\"../pixel.js\\\").Pixel} endPixel The end pixel of the box.\\n     * @return {boolean} Whether or not the boxend condition should be fired.\\n     */\\n    DragBox.prototype.defaultBoxEndCondition = function (mapBrowserEvent, startPixel, endPixel) {\\n        var width = endPixel[0] - startPixel[0];\\n        var height = endPixel[1] - startPixel[1];\\n        return width * width + height * height >= this.minArea_;\\n    };\\n    /**\\n     * Returns geometry of last drawn box.\\n     * @return {import(\\\"../geom/Polygon.js\\\").default} Geometry.\\n     * @api\\n     */\\n    DragBox.prototype.getGeometry = function () {\\n        return this.box_.getGeometry();\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    DragBox.prototype.handleDragEvent = function (mapBrowserEvent) {\\n        if (!mouseOnly(mapBrowserEvent)) {\\n            return;\\n        }\\n        this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\\n        this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG, mapBrowserEvent.coordinate, mapBrowserEvent));\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    DragBox.prototype.handleUpEvent = function (mapBrowserEvent) {\\n        if (!mouseOnly(mapBrowserEvent)) {\\n            return true;\\n        }\\n        this.box_.setMap(null);\\n        if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\\n            this.onBoxEnd_(mapBrowserEvent);\\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND, mapBrowserEvent.coordinate, mapBrowserEvent));\\n        }\\n        return false;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    DragBox.prototype.handleDownEvent = function (mapBrowserEvent) {\\n        if (!mouseOnly(mapBrowserEvent)) {\\n            return false;\\n        }\\n        if (mouseActionButton(mapBrowserEvent) &&\\n            this.condition_(mapBrowserEvent)) {\\n            this.startPixel_ = mapBrowserEvent.pixel;\\n            this.box_.setMap(mapBrowserEvent.map);\\n            this.box_.setPixels(this.startPixel_, this.startPixel_);\\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART, mapBrowserEvent.coordinate, mapBrowserEvent));\\n            return true;\\n        }\\n        else {\\n            return false;\\n        }\\n    };\\n    return DragBox;\\n}(PointerInteraction));\\nexport default DragBox;\\n//# sourceMappingURL=DragBox.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/interaction/DragZoom\\n */\\nimport { easeOut } from '../easing.js';\\nimport { shiftKeyOnly } from '../events/condition.js';\\nimport { createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter } from '../extent.js';\\nimport DragBox from './DragBox.js';\\n/**\\n * @typedef {Object} Options\\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\\n * box.\\n * @property {import(\\\"../events/condition.js\\\").Condition} [condition] A function that\\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\\n * boolean to indicate whether that event should be handled.\\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\\n * @property {number} [duration=200] Animation duration in milliseconds.\\n * @property {boolean} [out=false] Use interaction for zooming out.\\n */\\n/**\\n * @classdesc\\n * Allows the user to zoom the map by clicking and dragging on the map,\\n * normally combined with an {@link module:ol/events/condition} that limits\\n * it to when a key, shift by default, is held down.\\n *\\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\\n * your custom one configured with `className`.\\n * @api\\n */\\nvar DragZoom = /** @class */ (function (_super) {\\n    __extends(DragZoom, _super);\\n    /**\\n     * @param {Options=} opt_options Options.\\n     */\\n    function DragZoom(opt_options) {\\n        var _this = this;\\n        var options = opt_options ? opt_options : {};\\n        var condition = options.condition ? options.condition : shiftKeyOnly;\\n        _this = _super.call(this, {\\n            condition: condition,\\n            className: options.className || 'ol-dragzoom',\\n            onBoxEnd: onBoxEnd\\n        }) || this;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.duration_ = options.duration !== undefined ? options.duration : 200;\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.out_ = options.out !== undefined ? options.out : false;\\n        return _this;\\n    }\\n    return DragZoom;\\n}(DragBox));\\n/**\\n * @this {DragZoom}\\n */\\nfunction onBoxEnd() {\\n    var map = this.getMap();\\n    var view = /** @type {!import(\\\"../View.js\\\").default} */ (map.getView());\\n    var size = /** @type {!import(\\\"../size.js\\\").Size} */ (map.getSize());\\n    var extent = this.getGeometry().getExtent();\\n    if (this.out_) {\\n        var mapExtent = view.calculateExtent(size);\\n        var boxPixelExtent = createOrUpdateFromCoordinates([\\n            map.getPixelFromCoordinate(getBottomLeft(extent)),\\n            map.getPixelFromCoordinate(getTopRight(extent))\\n        ]);\\n        var factor = view.getResolutionForExtent(boxPixelExtent, size);\\n        scaleFromCenter(mapExtent, 1 / factor);\\n        extent = mapExtent;\\n    }\\n    var resolution = view.getConstrainedResolution(view.getResolutionForExtent(extent, size));\\n    var center = view.getConstrainedCenter(getCenter(extent), resolution);\\n    view.animate({\\n        resolution: resolution,\\n        center: center,\\n        duration: this.duration_,\\n        easing: easeOut\\n    });\\n}\\nexport default DragZoom;\\n//# sourceMappingURL=DragZoom.js.map\",\"/**\\n * @module ol/events/KeyCode\\n */\\n/**\\n * @enum {number}\\n * @const\\n */\\nexport default {\\n    LEFT: 37,\\n    UP: 38,\\n    RIGHT: 39,\\n    DOWN: 40\\n};\\n//# sourceMappingURL=KeyCode.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/interaction/KeyboardPan\\n */\\nimport { rotate as rotateCoordinate } from '../coordinate.js';\\nimport EventType from '../events/EventType.js';\\nimport KeyCode from '../events/KeyCode.js';\\nimport { noModifierKeys, targetNotEditable } from '../events/condition.js';\\nimport Interaction, { pan } from './Interaction.js';\\n/**\\n * @typedef {Object} Options\\n * @property {import(\\\"../events/condition.js\\\").Condition} [condition] A function that\\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\\n * boolean to indicate whether that event should be handled. Default is\\n * {@link module:ol/events/condition~noModifierKeys} and\\n * {@link module:ol/events/condition~targetNotEditable}.\\n * @property {number} [duration=100] Animation duration in milliseconds.\\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\\n * press.\\n */\\n/**\\n * @classdesc\\n * Allows the user to pan the map using keyboard arrows.\\n * Note that, although this interaction is by default included in maps,\\n * the keys can only be used when browser focus is on the element to which\\n * the keyboard events are attached. By default, this is the map div,\\n * though you can change this with the `keyboardEventTarget` in\\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\\n * element, focus will have to be on, and returned to, this element if the keys\\n * are to function.\\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\\n * @api\\n */\\nvar KeyboardPan = /** @class */ (function (_super) {\\n    __extends(KeyboardPan, _super);\\n    /**\\n     * @param {Options=} opt_options Options.\\n     */\\n    function KeyboardPan(opt_options) {\\n        var _this = _super.call(this, {\\n            handleEvent: handleEvent\\n        }) || this;\\n        var options = opt_options || {};\\n        /**\\n         * @private\\n         * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Browser event.\\n         * @return {boolean} Combined condition result.\\n         */\\n        _this.defaultCondition_ = function (mapBrowserEvent) {\\n            return noModifierKeys(mapBrowserEvent) &&\\n                targetNotEditable(mapBrowserEvent);\\n        };\\n        /**\\n         * @private\\n         * @type {import(\\\"../events/condition.js\\\").Condition}\\n         */\\n        _this.condition_ = options.condition !== undefined ?\\n            options.condition : _this.defaultCondition_;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.pixelDelta_ = options.pixelDelta !== undefined ?\\n            options.pixelDelta : 128;\\n        return _this;\\n    }\\n    return KeyboardPan;\\n}(Interaction));\\n/**\\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\\n * pressed).\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n * @return {boolean} `false` to stop event propagation.\\n * @this {KeyboardPan}\\n */\\nfunction handleEvent(mapBrowserEvent) {\\n    var stopEvent = false;\\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\\n        var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\\n        var keyCode = keyEvent.keyCode;\\n        if (this.condition_(mapBrowserEvent) &&\\n            (keyCode == KeyCode.DOWN ||\\n                keyCode == KeyCode.LEFT ||\\n                keyCode == KeyCode.RIGHT ||\\n                keyCode == KeyCode.UP)) {\\n            var map = mapBrowserEvent.map;\\n            var view = map.getView();\\n            var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\\n            var deltaX = 0, deltaY = 0;\\n            if (keyCode == KeyCode.DOWN) {\\n                deltaY = -mapUnitsDelta;\\n            }\\n            else if (keyCode == KeyCode.LEFT) {\\n                deltaX = -mapUnitsDelta;\\n            }\\n            else if (keyCode == KeyCode.RIGHT) {\\n                deltaX = mapUnitsDelta;\\n            }\\n            else {\\n                deltaY = mapUnitsDelta;\\n            }\\n            var delta = [deltaX, deltaY];\\n            rotateCoordinate(delta, view.getRotation());\\n            pan(view, delta, this.duration_);\\n            mapBrowserEvent.preventDefault();\\n            stopEvent = true;\\n        }\\n    }\\n    return !stopEvent;\\n}\\nexport default KeyboardPan;\\n//# sourceMappingURL=KeyboardPan.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/interaction/KeyboardZoom\\n */\\nimport EventType from '../events/EventType.js';\\nimport { targetNotEditable } from '../events/condition.js';\\nimport Interaction, { zoomByDelta } from './Interaction.js';\\n/**\\n * @typedef {Object} Options\\n * @property {number} [duration=100] Animation duration in milliseconds.\\n * @property {import(\\\"../events/condition.js\\\").Condition} [condition] A function that\\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\\n * boolean to indicate whether that event should be handled. Default is\\n * {@link module:ol/events/condition~targetNotEditable}.\\n * @property {number} [delta=1] The zoom level delta on each key press.\\n */\\n/**\\n * @classdesc\\n * Allows the user to zoom the map using keyboard + and -.\\n * Note that, although this interaction is by default included in maps,\\n * the keys can only be used when browser focus is on the element to which\\n * the keyboard events are attached. By default, this is the map div,\\n * though you can change this with the `keyboardEventTarget` in\\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\\n * element, focus will have to be on, and returned to, this element if the keys\\n * are to function.\\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\\n * @api\\n */\\nvar KeyboardZoom = /** @class */ (function (_super) {\\n    __extends(KeyboardZoom, _super);\\n    /**\\n     * @param {Options=} opt_options Options.\\n     */\\n    function KeyboardZoom(opt_options) {\\n        var _this = _super.call(this, {\\n            handleEvent: handleEvent\\n        }) || this;\\n        var options = opt_options ? opt_options : {};\\n        /**\\n         * @private\\n         * @type {import(\\\"../events/condition.js\\\").Condition}\\n         */\\n        _this.condition_ = options.condition ? options.condition : targetNotEditable;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.delta_ = options.delta ? options.delta : 1;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\\n        return _this;\\n    }\\n    return KeyboardZoom;\\n}(Interaction));\\n/**\\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\\n * key pressed was '+' or '-').\\n * @param {import(\\\"../MapBrowserEvent.js\\\").default} mapBrowserEvent Map browser event.\\n * @return {boolean} `false` to stop event propagation.\\n * @this {KeyboardZoom}\\n */\\nfunction handleEvent(mapBrowserEvent) {\\n    var stopEvent = false;\\n    if (mapBrowserEvent.type == EventType.KEYDOWN ||\\n        mapBrowserEvent.type == EventType.KEYPRESS) {\\n        var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\\n        var charCode = keyEvent.charCode;\\n        if (this.condition_(mapBrowserEvent) &&\\n            (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\\n            var map = mapBrowserEvent.map;\\n            var delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\\n            var view = map.getView();\\n            zoomByDelta(view, delta, undefined, this.duration_);\\n            mapBrowserEvent.preventDefault();\\n            stopEvent = true;\\n        }\\n    }\\n    return !stopEvent;\\n}\\nexport default KeyboardZoom;\\n//# sourceMappingURL=KeyboardZoom.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/interaction/MouseWheelZoom\\n */\\nimport { always } from '../events/condition.js';\\nimport EventType from '../events/EventType.js';\\nimport { DEVICE_PIXEL_RATIO, FIREFOX, SAFARI } from '../has.js';\\nimport Interaction, { zoomByDelta } from './Interaction.js';\\nimport { clamp } from '../math.js';\\n/**\\n * @enum {string}\\n */\\nexport var Mode = {\\n    TRACKPAD: 'trackpad',\\n    WHEEL: 'wheel'\\n};\\n/**\\n * @typedef {Object} Options\\n * @property {import(\\\"../events/condition.js\\\").Condition} [condition] A function that\\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\\n * boolean to indicate whether that event should be handled. Default is\\n * {@link module:ol/events/condition~always}.\\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\\n * @property {number} [duration=250] Animation duration in milliseconds.\\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\\n * location as the anchor. When set to `false`, zooming in and out will zoom to\\n * the center of the screen instead of zooming on the mouse's location.\\n */\\n/**\\n * @classdesc\\n * Allows the user to zoom the map by scrolling the mouse wheel.\\n * @api\\n */\\nvar MouseWheelZoom = /** @class */ (function (_super) {\\n    __extends(MouseWheelZoom, _super);\\n    /**\\n     * @param {Options=} opt_options Options.\\n     */\\n    function MouseWheelZoom(opt_options) {\\n        var _this = this;\\n        var options = opt_options ? opt_options : {};\\n        _this = _super.call(this, /** @type {import(\\\"./Interaction.js\\\").InteractionOptions} */ (options)) || this;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.totalDelta_ = 0;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.lastDelta_ = 0;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\\n        /**\\n         * @private\\n         * @type {import(\\\"../events/condition.js\\\").Condition}\\n         */\\n        _this.condition_ = options.condition ? options.condition : always;\\n        /**\\n         * @private\\n         * @type {?import(\\\"../coordinate.js\\\").Coordinate}\\n         */\\n        _this.lastAnchor_ = null;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        _this.startTime_ = undefined;\\n        /**\\n         * @private\\n         * @type {?}\\n         */\\n        _this.timeoutId_;\\n        /**\\n         * @private\\n         * @type {Mode|undefined}\\n         */\\n        _this.mode_ = undefined;\\n        /**\\n         * Trackpad events separated by this delay will be considered separate\\n         * interactions.\\n         * @type {number}\\n         */\\n        _this.trackpadEventGap_ = 400;\\n        /**\\n         * @type {?}\\n         */\\n        _this.trackpadTimeoutId_;\\n        /**\\n         * The number of delta values per zoom level\\n         * @private\\n         * @type {number}\\n         */\\n        _this.trackpadDeltaPerZoom_ = 300;\\n        return _this;\\n    }\\n    /**\\n     * @private\\n     */\\n    MouseWheelZoom.prototype.endInteraction_ = function () {\\n        this.trackpadTimeoutId_ = undefined;\\n        var view = this.getMap().getView();\\n        view.endInteraction(undefined, Math.sign(this.lastDelta_), this.lastAnchor_);\\n    };\\n    /**\\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\\n     * zooms the map.\\n     * @override\\n     */\\n    MouseWheelZoom.prototype.handleEvent = function (mapBrowserEvent) {\\n        if (!this.condition_(mapBrowserEvent)) {\\n            return true;\\n        }\\n        var type = mapBrowserEvent.type;\\n        if (type !== EventType.WHEEL && type !== EventType.MOUSEWHEEL) {\\n            return true;\\n        }\\n        mapBrowserEvent.preventDefault();\\n        var map = mapBrowserEvent.map;\\n        var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\\n        if (this.useAnchor_) {\\n            this.lastAnchor_ = mapBrowserEvent.coordinate;\\n        }\\n        // Delta normalisation inspired by\\n        // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\\n        var delta;\\n        if (mapBrowserEvent.type == EventType.WHEEL) {\\n            delta = wheelEvent.deltaY;\\n            if (FIREFOX &&\\n                wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\\n                delta /= DEVICE_PIXEL_RATIO;\\n            }\\n            if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\\n                delta *= 40;\\n            }\\n        }\\n        else if (mapBrowserEvent.type == EventType.MOUSEWHEEL) {\\n            delta = -wheelEvent.wheelDeltaY;\\n            if (SAFARI) {\\n                delta /= 3;\\n            }\\n        }\\n        if (delta === 0) {\\n            return false;\\n        }\\n        else {\\n            this.lastDelta_ = delta;\\n        }\\n        var now = Date.now();\\n        if (this.startTime_ === undefined) {\\n            this.startTime_ = now;\\n        }\\n        if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\\n            this.mode_ = Math.abs(delta) < 4 ?\\n                Mode.TRACKPAD :\\n                Mode.WHEEL;\\n        }\\n        if (this.mode_ === Mode.TRACKPAD) {\\n            var view = map.getView();\\n            if (this.trackpadTimeoutId_) {\\n                clearTimeout(this.trackpadTimeoutId_);\\n            }\\n            else {\\n                view.beginInteraction();\\n            }\\n            this.trackpadTimeoutId_ = setTimeout(this.endInteraction_.bind(this), this.trackpadEventGap_);\\n            view.adjustZoom(-delta / this.trackpadDeltaPerZoom_, this.lastAnchor_);\\n            this.startTime_ = now;\\n            return false;\\n        }\\n        this.totalDelta_ += delta;\\n        var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\\n        clearTimeout(this.timeoutId_);\\n        this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\\n        return false;\\n    };\\n    /**\\n     * @private\\n     * @param {import(\\\"../PluggableMap.js\\\").default} map Map.\\n     */\\n    MouseWheelZoom.prototype.handleWheelZoom_ = function (map) {\\n        var view = map.getView();\\n        if (view.getAnimating()) {\\n            view.cancelAnimations();\\n        }\\n        var delta = clamp(this.totalDelta_, -this.maxDelta_, this.maxDelta_);\\n        zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\\n        this.mode_ = undefined;\\n        this.totalDelta_ = 0;\\n        this.lastAnchor_ = null;\\n        this.startTime_ = undefined;\\n        this.timeoutId_ = undefined;\\n    };\\n    /**\\n     * Enable or disable using the mouse's location as an anchor when zooming\\n     * @param {boolean} useAnchor true to zoom to the mouse's location, false\\n     * to zoom to the center of the map\\n     * @api\\n     */\\n    MouseWheelZoom.prototype.setMouseAnchor = function (useAnchor) {\\n        this.useAnchor_ = useAnchor;\\n        if (!useAnchor) {\\n            this.lastAnchor_ = null;\\n        }\\n    };\\n    return MouseWheelZoom;\\n}(Interaction));\\nexport default MouseWheelZoom;\\n//# sourceMappingURL=MouseWheelZoom.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/interaction/PinchRotate\\n */\\nimport { FALSE } from '../functions.js';\\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\\nimport { disable } from '../rotationconstraint.js';\\n/**\\n * @typedef {Object} Options\\n * @property {number} [duration=250] The duration of the animation in\\n * milliseconds.\\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\\n */\\n/**\\n * @classdesc\\n * Allows the user to rotate the map by twisting with two fingers\\n * on a touch screen.\\n * @api\\n */\\nvar PinchRotate = /** @class */ (function (_super) {\\n    __extends(PinchRotate, _super);\\n    /**\\n     * @param {Options=} opt_options Options.\\n     */\\n    function PinchRotate(opt_options) {\\n        var _this = this;\\n        var options = opt_options ? opt_options : {};\\n        var pointerOptions = /** @type {import(\\\"./Pointer.js\\\").Options} */ (options);\\n        if (!pointerOptions.stopDown) {\\n            pointerOptions.stopDown = FALSE;\\n        }\\n        _this = _super.call(this, pointerOptions) || this;\\n        /**\\n         * @private\\n         * @type {import(\\\"../coordinate.js\\\").Coordinate}\\n         */\\n        _this.anchor_ = null;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        _this.lastAngle_ = undefined;\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.rotating_ = false;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.rotationDelta_ = 0.0;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\\n        return _this;\\n    }\\n    /**\\n     * @inheritDoc\\n     */\\n    PinchRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\\n        var rotationDelta = 0.0;\\n        var touch0 = this.targetPointers[0];\\n        var touch1 = this.targetPointers[1];\\n        // angle between touches\\n        var angle = Math.atan2(touch1.clientY - touch0.clientY, touch1.clientX - touch0.clientX);\\n        if (this.lastAngle_ !== undefined) {\\n            var delta = angle - this.lastAngle_;\\n            this.rotationDelta_ += delta;\\n            if (!this.rotating_ &&\\n                Math.abs(this.rotationDelta_) > this.threshold_) {\\n                this.rotating_ = true;\\n            }\\n            rotationDelta = delta;\\n        }\\n        this.lastAngle_ = angle;\\n        var map = mapBrowserEvent.map;\\n        var view = map.getView();\\n        if (view.getConstraints().rotation === disable) {\\n            return;\\n        }\\n        // rotate anchor point.\\n        // FIXME: should be the intersection point between the lines:\\n        //     touch0,touch1 and previousTouch0,previousTouch1\\n        var viewportPosition = map.getViewport().getBoundingClientRect();\\n        var centroid = centroidFromPointers(this.targetPointers);\\n        centroid[0] -= viewportPosition.left;\\n        centroid[1] -= viewportPosition.top;\\n        this.anchor_ = map.getCoordinateFromPixel(centroid);\\n        // rotate\\n        if (this.rotating_) {\\n            map.render();\\n            view.adjustRotation(rotationDelta, this.anchor_);\\n        }\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    PinchRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\\n        if (this.targetPointers.length < 2) {\\n            var map = mapBrowserEvent.map;\\n            var view = map.getView();\\n            view.endInteraction(this.duration_);\\n            return false;\\n        }\\n        else {\\n            return true;\\n        }\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    PinchRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\\n        if (this.targetPointers.length >= 2) {\\n            var map = mapBrowserEvent.map;\\n            this.anchor_ = null;\\n            this.lastAngle_ = undefined;\\n            this.rotating_ = false;\\n            this.rotationDelta_ = 0.0;\\n            if (!this.handlingDownUpSequence) {\\n                map.getView().beginInteraction();\\n            }\\n            return true;\\n        }\\n        else {\\n            return false;\\n        }\\n    };\\n    return PinchRotate;\\n}(PointerInteraction));\\nexport default PinchRotate;\\n//# sourceMappingURL=PinchRotate.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/interaction/PinchZoom\\n */\\nimport { FALSE } from '../functions.js';\\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\\n/**\\n * @typedef {Object} Options\\n * @property {number} [duration=400] Animation duration in milliseconds.\\n */\\n/**\\n * @classdesc\\n * Allows the user to zoom the map by pinching with two fingers\\n * on a touch screen.\\n * @api\\n */\\nvar PinchZoom = /** @class */ (function (_super) {\\n    __extends(PinchZoom, _super);\\n    /**\\n     * @param {Options=} opt_options Options.\\n     */\\n    function PinchZoom(opt_options) {\\n        var _this = this;\\n        var options = opt_options ? opt_options : {};\\n        var pointerOptions = /** @type {import(\\\"./Pointer.js\\\").Options} */ (options);\\n        if (!pointerOptions.stopDown) {\\n            pointerOptions.stopDown = FALSE;\\n        }\\n        _this = _super.call(this, pointerOptions) || this;\\n        /**\\n         * @private\\n         * @type {import(\\\"../coordinate.js\\\").Coordinate}\\n         */\\n        _this.anchor_ = null;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.duration_ = options.duration !== undefined ? options.duration : 400;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        _this.lastDistance_ = undefined;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.lastScaleDelta_ = 1;\\n        return _this;\\n    }\\n    /**\\n     * @inheritDoc\\n     */\\n    PinchZoom.prototype.handleDragEvent = function (mapBrowserEvent) {\\n        var scaleDelta = 1.0;\\n        var touch0 = this.targetPointers[0];\\n        var touch1 = this.targetPointers[1];\\n        var dx = touch0.clientX - touch1.clientX;\\n        var dy = touch0.clientY - touch1.clientY;\\n        // distance between touches\\n        var distance = Math.sqrt(dx * dx + dy * dy);\\n        if (this.lastDistance_ !== undefined) {\\n            scaleDelta = this.lastDistance_ / distance;\\n        }\\n        this.lastDistance_ = distance;\\n        var map = mapBrowserEvent.map;\\n        var view = map.getView();\\n        if (scaleDelta != 1.0) {\\n            this.lastScaleDelta_ = scaleDelta;\\n        }\\n        // scale anchor point.\\n        var viewportPosition = map.getViewport().getBoundingClientRect();\\n        var centroid = centroidFromPointers(this.targetPointers);\\n        centroid[0] -= viewportPosition.left;\\n        centroid[1] -= viewportPosition.top;\\n        this.anchor_ = map.getCoordinateFromPixel(centroid);\\n        // scale, bypass the resolution constraint\\n        map.render();\\n        view.adjustResolution(scaleDelta, this.anchor_);\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    PinchZoom.prototype.handleUpEvent = function (mapBrowserEvent) {\\n        if (this.targetPointers.length < 2) {\\n            var map = mapBrowserEvent.map;\\n            var view = map.getView();\\n            var direction = this.lastScaleDelta_ > 1 ? 1 : -1;\\n            view.endInteraction(this.duration_, direction);\\n            return false;\\n        }\\n        else {\\n            return true;\\n        }\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    PinchZoom.prototype.handleDownEvent = function (mapBrowserEvent) {\\n        if (this.targetPointers.length >= 2) {\\n            var map = mapBrowserEvent.map;\\n            this.anchor_ = null;\\n            this.lastDistance_ = undefined;\\n            this.lastScaleDelta_ = 1;\\n            if (!this.handlingDownUpSequence) {\\n                map.getView().beginInteraction();\\n            }\\n            return true;\\n        }\\n        else {\\n            return false;\\n        }\\n    };\\n    return PinchZoom;\\n}(PointerInteraction));\\nexport default PinchZoom;\\n//# sourceMappingURL=PinchZoom.js.map\",\"/**\\n * @module ol/render/Event\\n */\\nvar __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\nimport Event from '../events/Event.js';\\nvar RenderEvent = /** @class */ (function (_super) {\\n    __extends(RenderEvent, _super);\\n    /**\\n     * @param {import(\\\"./EventType.js\\\").default} type Type.\\n     * @param {import(\\\"../transform.js\\\").Transform=} opt_inversePixelTransform Transform for\\n     *     CSS pixels to rendered pixels.\\n     * @param {import(\\\"../PluggableMap.js\\\").FrameState=} opt_frameState Frame state.\\n     * @param {?CanvasRenderingContext2D=} opt_context Context.\\n     * @param {?import(\\\"../webgl/Helper.js\\\").default=} opt_glContext WebGL Context.\\n     */\\n    function RenderEvent(type, opt_inversePixelTransform, opt_frameState, opt_context, opt_glContext) {\\n        var _this = _super.call(this, type) || this;\\n        /**\\n         * Transform from CSS pixels (relative to the top-left corner of the map viewport)\\n         * to rendered pixels on this event's `context`.\\n         * @type {import(\\\"../transform.js\\\").Transform|undefined}\\n         * @api\\n         */\\n        _this.inversePixelTransform = opt_inversePixelTransform;\\n        /**\\n         * An object representing the current render frame state.\\n         * @type {import(\\\"../PluggableMap.js\\\").FrameState|undefined}\\n         * @api\\n         */\\n        _this.frameState = opt_frameState;\\n        /**\\n         * Canvas context. Only available when a Canvas renderer is used, null\\n         * otherwise.\\n         * @type {CanvasRenderingContext2D|null|undefined}\\n         * @api\\n         */\\n        _this.context = opt_context;\\n        /**\\n         * WebGL context. Only available when a WebGL renderer is used, null\\n         * otherwise.\\n         * @type {import(\\\"../webgl/Helper.js\\\").default|null|undefined}\\n         * @api\\n         */\\n        _this.glContext = opt_glContext;\\n        return _this;\\n    }\\n    return RenderEvent;\\n}(Event));\\nexport default RenderEvent;\\n//# sourceMappingURL=Event.js.map\",\"/**\\n * @module ol/color\\n */\\nimport { assert } from './asserts.js';\\nimport { clamp } from './math.js';\\n/**\\n * A color represented as a short array [red, green, blue, alpha].\\n * red, green, and blue should be integers in the range 0..255 inclusive.\\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\\n * given then `1` will be used.\\n * @typedef {Array<number>} Color\\n * @api\\n */\\n/**\\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\\n * @const\\n * @type {RegExp}\\n * @private\\n */\\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\\n/**\\n * Regular expression for matching potential named color style strings.\\n * @const\\n * @type {RegExp}\\n * @private\\n */\\nvar NAMED_COLOR_RE_ = /^([a-z]*)$/i;\\n/**\\n * Return the color as an rgba string.\\n * @param {Color|string} color Color.\\n * @return {string} Rgba string.\\n * @api\\n */\\nexport function asString(color) {\\n    if (typeof color === 'string') {\\n        return color;\\n    }\\n    else {\\n        return toString(color);\\n    }\\n}\\n/**\\n * Return named color as an rgba string.\\n * @param {string} color Named color.\\n * @return {string} Rgb string.\\n */\\nfunction fromNamed(color) {\\n    var el = document.createElement('div');\\n    el.style.color = color;\\n    if (el.style.color !== '') {\\n        document.body.appendChild(el);\\n        var rgb = getComputedStyle(el).color;\\n        document.body.removeChild(el);\\n        return rgb;\\n    }\\n    else {\\n        return '';\\n    }\\n}\\n/**\\n * @param {string} s String.\\n * @return {Color} Color.\\n */\\nexport var fromString = (function () {\\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\\n    // semantics, whenever the cache grows too large we simply delete an\\n    // arbitrary 25% of the entries.\\n    /**\\n     * @const\\n     * @type {number}\\n     */\\n    var MAX_CACHE_SIZE = 1024;\\n    /**\\n     * @type {Object<string, Color>}\\n     */\\n    var cache = {};\\n    /**\\n     * @type {number}\\n     */\\n    var cacheSize = 0;\\n    return (\\n    /**\\n     * @param {string} s String.\\n     * @return {Color} Color.\\n     */\\n    function (s) {\\n        var color;\\n        if (cache.hasOwnProperty(s)) {\\n            color = cache[s];\\n        }\\n        else {\\n            if (cacheSize >= MAX_CACHE_SIZE) {\\n                var i = 0;\\n                for (var key in cache) {\\n                    if ((i++ & 3) === 0) {\\n                        delete cache[key];\\n                        --cacheSize;\\n                    }\\n                }\\n            }\\n            color = fromStringInternal_(s);\\n            cache[s] = color;\\n            ++cacheSize;\\n        }\\n        return color;\\n    });\\n})();\\n/**\\n * Return the color as an array. This function maintains a cache of calculated\\n * arrays which means the result should not be modified.\\n * @param {Color|string} color Color.\\n * @return {Color} Color.\\n * @api\\n */\\nexport function asArray(color) {\\n    if (Array.isArray(color)) {\\n        return color;\\n    }\\n    else {\\n        return fromString(color);\\n    }\\n}\\n/**\\n * @param {string} s String.\\n * @private\\n * @return {Color} Color.\\n */\\nfunction fromStringInternal_(s) {\\n    var r, g, b, a, color;\\n    if (NAMED_COLOR_RE_.exec(s)) {\\n        s = fromNamed(s);\\n    }\\n    if (HEX_COLOR_RE_.exec(s)) { // hex\\n        var n = s.length - 1; // number of hex digits\\n        var d = // number of digits per channel\\n         void 0; // number of digits per channel\\n        if (n <= 4) {\\n            d = 1;\\n        }\\n        else {\\n            d = 2;\\n        }\\n        var hasAlpha = n === 4 || n === 8;\\n        r = parseInt(s.substr(1 + 0 * d, d), 16);\\n        g = parseInt(s.substr(1 + 1 * d, d), 16);\\n        b = parseInt(s.substr(1 + 2 * d, d), 16);\\n        if (hasAlpha) {\\n            a = parseInt(s.substr(1 + 3 * d, d), 16);\\n        }\\n        else {\\n            a = 255;\\n        }\\n        if (d == 1) {\\n            r = (r << 4) + r;\\n            g = (g << 4) + g;\\n            b = (b << 4) + b;\\n            if (hasAlpha) {\\n                a = (a << 4) + a;\\n            }\\n        }\\n        color = [r, g, b, a / 255];\\n    }\\n    else if (s.indexOf('rgba(') == 0) { // rgba()\\n        color = s.slice(5, -1).split(',').map(Number);\\n        normalize(color);\\n    }\\n    else if (s.indexOf('rgb(') == 0) { // rgb()\\n        color = s.slice(4, -1).split(',').map(Number);\\n        color.push(1);\\n        normalize(color);\\n    }\\n    else {\\n        assert(false, 14); // Invalid color\\n    }\\n    return color;\\n}\\n/**\\n * TODO this function is only used in the test, we probably shouldn't export it\\n * @param {Color} color Color.\\n * @return {Color} Clamped color.\\n */\\nexport function normalize(color) {\\n    color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\\n    color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\\n    color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\\n    color[3] = clamp(color[3], 0, 1);\\n    return color;\\n}\\n/**\\n * @param {Color} color Color.\\n * @return {string} String.\\n */\\nexport function toString(color) {\\n    var r = color[0];\\n    if (r != (r | 0)) {\\n        r = (r + 0.5) | 0;\\n    }\\n    var g = color[1];\\n    if (g != (g | 0)) {\\n        g = (g + 0.5) | 0;\\n    }\\n    var b = color[2];\\n    if (b != (b | 0)) {\\n        b = (b + 0.5) | 0;\\n    }\\n    var a = color[3] === undefined ? 1 : color[3];\\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\\n}\\n//# sourceMappingURL=color.js.map\",\"/**\\n * @module ol/style/IconImageCache\\n */\\nimport { asString } from '../color.js';\\n/**\\n * @classdesc\\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\\n */\\nvar IconImageCache = /** @class */ (function () {\\n    function IconImageCache() {\\n        /**\\n        * @type {!Object<string, import(\\\"./IconImage.js\\\").default>}\\n        * @private\\n        */\\n        this.cache_ = {};\\n        /**\\n        * @type {number}\\n        * @private\\n        */\\n        this.cacheSize_ = 0;\\n        /**\\n        * @type {number}\\n        * @private\\n        */\\n        this.maxCacheSize_ = 32;\\n    }\\n    /**\\n    * FIXME empty description for jsdoc\\n    */\\n    IconImageCache.prototype.clear = function () {\\n        this.cache_ = {};\\n        this.cacheSize_ = 0;\\n    };\\n    /**\\n     * @return {boolean} Can expire cache.\\n     */\\n    IconImageCache.prototype.canExpireCache = function () {\\n        return this.cacheSize_ > this.maxCacheSize_;\\n    };\\n    /**\\n    * FIXME empty description for jsdoc\\n    */\\n    IconImageCache.prototype.expire = function () {\\n        if (this.canExpireCache()) {\\n            var i = 0;\\n            for (var key in this.cache_) {\\n                var iconImage = this.cache_[key];\\n                if ((i++ & 3) === 0 && !iconImage.hasListener()) {\\n                    delete this.cache_[key];\\n                    --this.cacheSize_;\\n                }\\n            }\\n        }\\n    };\\n    /**\\n    * @param {string} src Src.\\n    * @param {?string} crossOrigin Cross origin.\\n    * @param {import(\\\"../color.js\\\").Color} color Color.\\n    * @return {import(\\\"./IconImage.js\\\").default} Icon image.\\n    */\\n    IconImageCache.prototype.get = function (src, crossOrigin, color) {\\n        var key = getKey(src, crossOrigin, color);\\n        return key in this.cache_ ? this.cache_[key] : null;\\n    };\\n    /**\\n    * @param {string} src Src.\\n    * @param {?string} crossOrigin Cross origin.\\n    * @param {import(\\\"../color.js\\\").Color} color Color.\\n    * @param {import(\\\"./IconImage.js\\\").default} iconImage Icon image.\\n    */\\n    IconImageCache.prototype.set = function (src, crossOrigin, color, iconImage) {\\n        var key = getKey(src, crossOrigin, color);\\n        this.cache_[key] = iconImage;\\n        ++this.cacheSize_;\\n    };\\n    /**\\n    * Set the cache size of the icon cache. Default is `32`. Change this value when\\n    * your map uses more than 32 different icon images and you are not caching icon\\n    * styles on the application level.\\n    * @param {number} maxCacheSize Cache max size.\\n    * @api\\n    */\\n    IconImageCache.prototype.setSize = function (maxCacheSize) {\\n        this.maxCacheSize_ = maxCacheSize;\\n        this.expire();\\n    };\\n    return IconImageCache;\\n}());\\n/**\\n * @param {string} src Src.\\n * @param {?string} crossOrigin Cross origin.\\n * @param {import(\\\"../color.js\\\").Color} color Color.\\n * @return {string} Cache key.\\n */\\nfunction getKey(src, crossOrigin, color) {\\n    var colorString = color ? asString(color) : 'null';\\n    return crossOrigin + ':' + src + ':' + colorString;\\n}\\nexport default IconImageCache;\\n/**\\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\\n * {@link module:ol/style/Icon~Icon} images.\\n * @api\\n */\\nexport var shared = new IconImageCache();\\n//# sourceMappingURL=IconImageCache.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/renderer/Map\\n */\\nimport { abstract, getUid } from '../util.js';\\nimport Disposable from '../Disposable.js';\\nimport { listen, unlistenByKey } from '../events.js';\\nimport EventType from '../events/EventType.js';\\nimport { getWidth } from '../extent.js';\\nimport { TRUE } from '../functions.js';\\nimport { visibleAtResolution } from '../layer/Layer.js';\\nimport { shared as iconImageCache } from '../style/IconImageCache.js';\\nimport { compose as composeTransform, makeInverse } from '../transform.js';\\n/**\\n * @abstract\\n */\\nvar MapRenderer = /** @class */ (function (_super) {\\n    __extends(MapRenderer, _super);\\n    /**\\n     * @param {import(\\\"../PluggableMap.js\\\").default} map Map.\\n     */\\n    function MapRenderer(map) {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * @private\\n         * @type {import(\\\"../PluggableMap.js\\\").default}\\n         */\\n        _this.map_ = map;\\n        /**\\n         * @private\\n         * @type {!Object<string, import(\\\"./Layer.js\\\").default>}\\n         */\\n        _this.layerRenderers_ = {};\\n        /**\\n         * @private\\n         * @type {Object<string, import(\\\"../events.js\\\").EventsKey>}\\n         */\\n        _this.layerRendererListeners_ = {};\\n        return _this;\\n    }\\n    /**\\n     * @abstract\\n     * @param {import(\\\"../render/EventType.js\\\").default} type Event type.\\n     * @param {import(\\\"../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     */\\n    MapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\\n        abstract();\\n    };\\n    /**\\n     * @param {import(\\\"../PluggableMap.js\\\").FrameState} frameState FrameState.\\n     * @protected\\n     */\\n    MapRenderer.prototype.calculateMatrices2D = function (frameState) {\\n        var viewState = frameState.viewState;\\n        var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\\n        var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\\n        composeTransform(coordinateToPixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / viewState.resolution, -1 / viewState.resolution, -viewState.rotation, -viewState.center[0], -viewState.center[1]);\\n        makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\\n    };\\n    /**\\n     * Removes all layer renderers.\\n     */\\n    MapRenderer.prototype.removeLayerRenderers = function () {\\n        for (var key in this.layerRenderers_) {\\n            this.removeLayerRendererByKey_(key).dispose();\\n        }\\n    };\\n    /**\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} coordinate Coordinate.\\n     * @param {import(\\\"../PluggableMap.js\\\").FrameState} frameState FrameState.\\n     * @param {number} hitTolerance Hit tolerance in pixels.\\n     * @param {function(this: S, import(\\\"../Feature.js\\\").FeatureLike,\\n     *     import(\\\"../layer/Layer.js\\\").default): T} callback Feature callback.\\n     * @param {S} thisArg Value to use as `this` when executing `callback`.\\n     * @param {function(this: U, import(\\\"../layer/Layer.js\\\").default): boolean} layerFilter Layer filter\\n     *     function, only layers which are visible and for which this function\\n     *     returns `true` will be tested for features.  By default, all visible\\n     *     layers will be tested.\\n     * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\\n     * @return {T|undefined} Callback result.\\n     * @template S,T,U\\n     */\\n    MapRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\\n        var result;\\n        var viewState = frameState.viewState;\\n        var viewResolution = viewState.resolution;\\n        /**\\n         * @param {boolean} managed Managed layer.\\n         * @param {import(\\\"../Feature.js\\\").FeatureLike} feature Feature.\\n         * @param {import(\\\"../layer/Layer.js\\\").default} layer Layer.\\n         * @return {?} Callback result.\\n         */\\n        function forEachFeatureAtCoordinate(managed, feature, layer) {\\n            if (!(getUid(feature) in frameState.skippedFeatureUids && !managed)) {\\n                return callback.call(thisArg, feature, managed ? layer : null);\\n            }\\n        }\\n        var projection = viewState.projection;\\n        var translatedCoordinate = coordinate;\\n        if (projection.canWrapX()) {\\n            var projectionExtent = projection.getExtent();\\n            var worldWidth = getWidth(projectionExtent);\\n            var x = coordinate[0];\\n            if (x < projectionExtent[0] || x > projectionExtent[2]) {\\n                var worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\\n                translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\\n            }\\n        }\\n        var layerStates = frameState.layerStatesArray;\\n        var numLayers = layerStates.length;\\n        var i;\\n        for (i = numLayers - 1; i >= 0; --i) {\\n            var layerState = layerStates[i];\\n            var layer = /** @type {import(\\\"../layer/Layer.js\\\").default} */ (layerState.layer);\\n            if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\\n                var layerRenderer = this.getLayerRenderer(layer);\\n                var source = layer.getSource();\\n                if (layerRenderer && source) {\\n                    var callback_1 = forEachFeatureAtCoordinate.bind(null, layerState.managed);\\n                    result = layerRenderer.forEachFeatureAtCoordinate(source.getWrapX() ? translatedCoordinate : coordinate, frameState, hitTolerance, callback_1);\\n                }\\n                if (result) {\\n                    return result;\\n                }\\n            }\\n        }\\n        return undefined;\\n    };\\n    /**\\n     * @abstract\\n     * @param {import(\\\"../pixel.js\\\").Pixel} pixel Pixel.\\n     * @param {import(\\\"../PluggableMap.js\\\").FrameState} frameState FrameState.\\n     * @param {number} hitTolerance Hit tolerance in pixels.\\n     * @param {function(this: S, import(\\\"../layer/Layer.js\\\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\\n     *     callback.\\n     * @param {function(this: U, import(\\\"../layer/Layer.js\\\").default): boolean} layerFilter Layer filter\\n     *     function, only layers which are visible and for which this function\\n     *     returns `true` will be tested for features.  By default, all visible\\n     *     layers will be tested.\\n     * @return {T|undefined} Callback result.\\n     * @template S,T,U\\n     */\\n    MapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\\n        return abstract();\\n    };\\n    /**\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} coordinate Coordinate.\\n     * @param {import(\\\"../PluggableMap.js\\\").FrameState} frameState FrameState.\\n     * @param {number} hitTolerance Hit tolerance in pixels.\\n     * @param {function(this: U, import(\\\"../layer/Layer.js\\\").default): boolean} layerFilter Layer filter\\n     *     function, only layers which are visible and for which this function\\n     *     returns `true` will be tested for features.  By default, all visible\\n     *     layers will be tested.\\n     * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\\n     * @return {boolean} Is there a feature at the given coordinate?\\n     * @template U\\n     */\\n    MapRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, layerFilter, thisArg) {\\n        var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\\n        return hasFeature !== undefined;\\n    };\\n    /**\\n     * @param {import(\\\"../layer/Layer.js\\\").default} layer Layer.\\n     * @protected\\n     * @return {import(\\\"./Layer.js\\\").default} Layer renderer. May return null.\\n     */\\n    MapRenderer.prototype.getLayerRenderer = function (layer) {\\n        var layerKey = getUid(layer);\\n        if (layerKey in this.layerRenderers_) {\\n            return this.layerRenderers_[layerKey];\\n        }\\n        var renderer = layer.getRenderer();\\n        if (!renderer) {\\n            return null;\\n        }\\n        this.layerRenderers_[layerKey] = renderer;\\n        this.layerRendererListeners_[layerKey] = listen(renderer, EventType.CHANGE, this.handleLayerRendererChange_, this);\\n        return renderer;\\n    };\\n    /**\\n     * @protected\\n     * @return {Object<string, import(\\\"./Layer.js\\\").default>} Layer renderers.\\n     */\\n    MapRenderer.prototype.getLayerRenderers = function () {\\n        return this.layerRenderers_;\\n    };\\n    /**\\n     * @return {import(\\\"../PluggableMap.js\\\").default} Map.\\n     */\\n    MapRenderer.prototype.getMap = function () {\\n        return this.map_;\\n    };\\n    /**\\n     * Handle changes in a layer renderer.\\n     * @private\\n     */\\n    MapRenderer.prototype.handleLayerRendererChange_ = function () {\\n        this.map_.render();\\n    };\\n    /**\\n     * @param {string} layerKey Layer key.\\n     * @return {import(\\\"./Layer.js\\\").default} Layer renderer.\\n     * @private\\n     */\\n    MapRenderer.prototype.removeLayerRendererByKey_ = function (layerKey) {\\n        var layerRenderer = this.layerRenderers_[layerKey];\\n        delete this.layerRenderers_[layerKey];\\n        unlistenByKey(this.layerRendererListeners_[layerKey]);\\n        delete this.layerRendererListeners_[layerKey];\\n        return layerRenderer;\\n    };\\n    /**\\n     * Render.\\n     * @abstract\\n     * @param {?import(\\\"../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     */\\n    MapRenderer.prototype.renderFrame = function (frameState) {\\n        abstract();\\n    };\\n    /**\\n     * @param {import(\\\"../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     * @protected\\n     */\\n    MapRenderer.prototype.scheduleExpireIconCache = function (frameState) {\\n        if (iconImageCache.canExpireCache()) {\\n            frameState.postRenderFunctions.push(expireIconCache);\\n        }\\n    };\\n    /**\\n     * @param {!import(\\\"../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     * @protected\\n     */\\n    MapRenderer.prototype.scheduleRemoveUnusedLayerRenderers = function (frameState) {\\n        var layerStatesMap = getLayerStatesMap(frameState.layerStatesArray);\\n        var _loop_1 = function (layerKey) {\\n            if (!(layerKey in layerStatesMap)) {\\n                frameState.postRenderFunctions.push(function () {\\n                    this.removeLayerRendererByKey_(layerKey).dispose();\\n                }.bind(this_1));\\n            }\\n        };\\n        var this_1 = this;\\n        for (var layerKey in this.layerRenderers_) {\\n            _loop_1(layerKey);\\n        }\\n    };\\n    return MapRenderer;\\n}(Disposable));\\n/**\\n * @param {import(\\\"../PluggableMap.js\\\").default} map Map.\\n * @param {import(\\\"../PluggableMap.js\\\").FrameState} frameState Frame state.\\n */\\nfunction expireIconCache(map, frameState) {\\n    iconImageCache.expire();\\n}\\n/**\\n * @param {Array<import(\\\"../layer/Layer.js\\\").State>} layerStatesArray Layer states array.\\n * @return {Object<string, import(\\\"../layer/Layer.js\\\").State>} States mapped by layer uid.\\n */\\nfunction getLayerStatesMap(layerStatesArray) {\\n    return layerStatesArray.reduce(function (acc, state) {\\n        acc[getUid(state.layer)] = state;\\n        return acc;\\n    }, {});\\n}\\nexport default MapRenderer;\\n//# sourceMappingURL=Map.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/renderer/Composite\\n */\\nimport { CLASS_UNSELECTABLE } from '../css.js';\\nimport { visibleAtResolution } from '../layer/Layer.js';\\nimport RenderEvent from '../render/Event.js';\\nimport RenderEventType from '../render/EventType.js';\\nimport MapRenderer from './Map.js';\\nimport SourceState from '../source/State.js';\\nimport { replaceChildren } from '../dom.js';\\n/**\\n * @classdesc\\n * Canvas map renderer.\\n * @api\\n */\\nvar CompositeMapRenderer = /** @class */ (function (_super) {\\n    __extends(CompositeMapRenderer, _super);\\n    /**\\n     * @param {import(\\\"../PluggableMap.js\\\").default} map Map.\\n     */\\n    function CompositeMapRenderer(map) {\\n        var _this = _super.call(this, map) || this;\\n        /**\\n         * @private\\n         * @type {HTMLDivElement}\\n         */\\n        _this.element_ = document.createElement('div');\\n        var style = _this.element_.style;\\n        style.position = 'absolute';\\n        style.width = '100%';\\n        style.height = '100%';\\n        style.zIndex = '0';\\n        _this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\\n        var container = map.getViewport();\\n        container.insertBefore(_this.element_, container.firstChild || null);\\n        /**\\n         * @private\\n         * @type {Array<HTMLElement>}\\n         */\\n        _this.children_ = [];\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.renderedVisible_ = true;\\n        return _this;\\n    }\\n    /**\\n     * @param {import(\\\"../render/EventType.js\\\").default} type Event type.\\n     * @param {import(\\\"../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     */\\n    CompositeMapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\\n        var map = this.getMap();\\n        if (map.hasListener(type)) {\\n            var event_1 = new RenderEvent(type, undefined, frameState);\\n            map.dispatchEvent(event_1);\\n        }\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    CompositeMapRenderer.prototype.renderFrame = function (frameState) {\\n        if (!frameState) {\\n            if (this.renderedVisible_) {\\n                this.element_.style.display = 'none';\\n                this.renderedVisible_ = false;\\n            }\\n            return;\\n        }\\n        this.calculateMatrices2D(frameState);\\n        this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\\n        var layerStatesArray = frameState.layerStatesArray;\\n        var viewResolution = frameState.viewState.resolution;\\n        this.children_.length = 0;\\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\\n            var layerState = layerStatesArray[i];\\n            if (!visibleAtResolution(layerState, viewResolution) || layerState.sourceState != SourceState.READY) {\\n                continue;\\n            }\\n            var layer = layerState.layer;\\n            var element = layer.render(frameState);\\n            if (element) {\\n                var zIndex = layerState.zIndex;\\n                if (zIndex !== element.style.zIndex) {\\n                    element.style.zIndex = zIndex;\\n                }\\n                this.children_.push(element);\\n            }\\n        }\\n        replaceChildren(this.element_, this.children_);\\n        this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\\n        if (!this.renderedVisible_) {\\n            this.element_.style.display = '';\\n            this.renderedVisible_ = true;\\n        }\\n        this.scheduleRemoveUnusedLayerRenderers(frameState);\\n        this.scheduleExpireIconCache(frameState);\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    CompositeMapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\\n        var viewState = frameState.viewState;\\n        var viewResolution = viewState.resolution;\\n        var layerStates = frameState.layerStatesArray;\\n        var numLayers = layerStates.length;\\n        for (var i = numLayers - 1; i >= 0; --i) {\\n            var layerState = layerStates[i];\\n            var layer = layerState.layer;\\n            if (visibleAtResolution(layerState, viewResolution) && layerFilter(layer)) {\\n                var layerRenderer = this.getLayerRenderer(layer);\\n                if (!layerRenderer) {\\n                    continue;\\n                }\\n                var data = layerRenderer.getDataAtPixel(pixel, frameState, hitTolerance);\\n                if (data) {\\n                    var result = callback(layer, data);\\n                    if (result) {\\n                        return result;\\n                    }\\n                }\\n            }\\n        }\\n        return undefined;\\n    };\\n    return CompositeMapRenderer;\\n}(MapRenderer));\\nexport default CompositeMapRenderer;\\n//# sourceMappingURL=Composite.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/Map\\n */\\nimport PluggableMap from './PluggableMap.js';\\nimport { defaults as defaultControls } from './control/util.js';\\nimport { defaults as defaultInteractions } from './interaction.js';\\nimport { assign } from './obj.js';\\nimport CompositeMapRenderer from './renderer/Composite.js';\\n/**\\n * @classdesc\\n * The map is the core component of OpenLayers. For a map to render, a view,\\n * one or more layers, and a target container are needed:\\n *\\n *     import Map from 'ol/Map';\\n *     import View from 'ol/View';\\n *     import TileLayer from 'ol/layer/Tile';\\n *     import OSM from 'ol/source/OSM';\\n *\\n *     var map = new Map({\\n *       view: new View({\\n *         center: [0, 0],\\n *         zoom: 1\\n *       }),\\n *       layers: [\\n *         new TileLayer({\\n *           source: new OSM()\\n *         })\\n *       ],\\n *       target: 'map'\\n *     });\\n *\\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\\n * element with the id `map`.\\n *\\n * The constructor places a viewport container (with CSS class name\\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\\n * further elements within the viewport: one with CSS class name\\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\\n * itself is placed in a further element within the viewport.\\n *\\n * Layers are stored as a {@link module:ol/Collection~Collection} in\\n * layerGroups. A top-level group is provided by the library. This is what is\\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\\n * options are added to this group, and `addLayer` and `removeLayer` change the\\n * layer collection in the group. `getLayers` is a convenience function for\\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\\n * options or added with `addLayer` can be groups, which can contain further\\n * groups, and so on.\\n *\\n * @api\\n */\\nvar Map = /** @class */ (function (_super) {\\n    __extends(Map, _super);\\n    /**\\n     * @param {import(\\\"./PluggableMap.js\\\").MapOptions} options Map options.\\n     */\\n    function Map(options) {\\n        var _this = this;\\n        options = assign({}, options);\\n        if (!options.controls) {\\n            options.controls = defaultControls();\\n        }\\n        if (!options.interactions) {\\n            options.interactions = defaultInteractions();\\n        }\\n        _this = _super.call(this, options) || this;\\n        return _this;\\n    }\\n    Map.prototype.createRenderer = function () {\\n        return new CompositeMapRenderer(this);\\n    };\\n    return Map;\\n}(PluggableMap));\\nexport default Map;\\n//# sourceMappingURL=Map.js.map\",\"/**\\n * @module ol/control/util\\n */\\nimport Collection from '../Collection.js';\\nimport Attribution from './Attribution.js';\\nimport Rotate from './Rotate.js';\\nimport Zoom from './Zoom.js';\\n/**\\n * @typedef {Object} DefaultsOptions\\n * @property {boolean} [attribution=true] Include\\n * {@link module:ol/control/Attribution~Attribution}.\\n * @property {import(\\\"./Attribution.js\\\").Options} [attributionOptions]\\n * Options for {@link module:ol/control/Attribution~Attribution}.\\n * @property {boolean} [rotate=true] Include\\n * {@link module:ol/control/Rotate~Rotate}.\\n * @property {import(\\\"./Rotate.js\\\").Options} [rotateOptions] Options\\n * for {@link module:ol/control/Rotate~Rotate}.\\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\\n * @property {import(\\\"./Zoom.js\\\").Options} [zoomOptions] Options for\\n * {@link module:ol/control/Zoom~Zoom}.\\n * @api\\n */\\n/**\\n * Set of controls included in maps by default. Unless configured otherwise,\\n * this returns a collection containing an instance of each of the following\\n * controls:\\n * * {@link module:ol/control/Zoom~Zoom}\\n * * {@link module:ol/control/Rotate~Rotate}\\n * * {@link module:ol/control/Attribution~Attribution}\\n *\\n * @param {DefaultsOptions=} opt_options\\n * Defaults options.\\n * @return {Collection<import(\\\"./Control.js\\\").default>}\\n * Controls.\\n * @function module:ol/control.defaults\\n * @api\\n */\\nexport function defaults(opt_options) {\\n    var options = opt_options ? opt_options : {};\\n    var controls = new Collection();\\n    var zoomControl = options.zoom !== undefined ? options.zoom : true;\\n    if (zoomControl) {\\n        controls.push(new Zoom(options.zoomOptions));\\n    }\\n    var rotateControl = options.rotate !== undefined ? options.rotate : true;\\n    if (rotateControl) {\\n        controls.push(new Rotate(options.rotateOptions));\\n    }\\n    var attributionControl = options.attribution !== undefined ?\\n        options.attribution : true;\\n    if (attributionControl) {\\n        controls.push(new Attribution(options.attributionOptions));\\n    }\\n    return controls;\\n}\\n//# sourceMappingURL=util.js.map\",\"/**\\n * @module ol/interaction\\n */\\nimport Collection from './Collection.js';\\nimport Kinetic from './Kinetic.js';\\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\\nimport DragPan from './interaction/DragPan.js';\\nimport DragRotate from './interaction/DragRotate.js';\\nimport DragZoom from './interaction/DragZoom.js';\\nimport KeyboardPan from './interaction/KeyboardPan.js';\\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\\nimport PinchRotate from './interaction/PinchRotate.js';\\nimport PinchZoom from './interaction/PinchZoom.js';\\nimport { focus } from './events/condition.js';\\nexport { default as DoubleClickZoom } from './interaction/DoubleClickZoom.js';\\nexport { default as DragAndDrop } from './interaction/DragAndDrop.js';\\nexport { default as DragBox } from './interaction/DragBox.js';\\nexport { default as DragPan } from './interaction/DragPan.js';\\nexport { default as DragRotate } from './interaction/DragRotate.js';\\nexport { default as DragRotateAndZoom } from './interaction/DragRotateAndZoom.js';\\nexport { default as DragZoom } from './interaction/DragZoom.js';\\nexport { default as Draw } from './interaction/Draw.js';\\nexport { default as Extent } from './interaction/Extent.js';\\nexport { default as Interaction } from './interaction/Interaction.js';\\nexport { default as KeyboardPan } from './interaction/KeyboardPan.js';\\nexport { default as KeyboardZoom } from './interaction/KeyboardZoom.js';\\nexport { default as Modify } from './interaction/Modify.js';\\nexport { default as MouseWheelZoom } from './interaction/MouseWheelZoom.js';\\nexport { default as PinchRotate } from './interaction/PinchRotate.js';\\nexport { default as PinchZoom } from './interaction/PinchZoom.js';\\nexport { default as Pointer } from './interaction/Pointer.js';\\nexport { default as Select } from './interaction/Select.js';\\nexport { default as Snap } from './interaction/Snap.js';\\nexport { default as Translate } from './interaction/Translate.js';\\n/**\\n * @typedef {Object} DefaultsOptions\\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\\n * desired.\\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\\n * useful when page scroll is desired for maps that do not have the browser's\\n * focus.\\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\\n * desired.\\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\\n * @property {number} [zoomDuration] Duration of the zoom animation in\\n * milliseconds.\\n */\\n/**\\n * Set of interactions included in maps by default. Specific interactions can be\\n * excluded by setting the appropriate option to false in the constructor\\n * options, but the order of the interactions is fixed.  If you want to specify\\n * a different order for interactions, you will need to create your own\\n * {@link module:ol/interaction/Interaction} instances and insert\\n * them into a {@link module:ol/Collection} in the order you want\\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\\n * be of interest if the event propagation needs to be stopped at a point.\\n * The default set of interactions, in sequence, is:\\n * * {@link module:ol/interaction/DragRotate~DragRotate}\\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\\n * * {@link module:ol/interaction/DragPan~DragPan}\\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\\n * * {@link module:ol/interaction/DragZoom~DragZoom}\\n *\\n * @param {DefaultsOptions=} opt_options Defaults options.\\n * @return {import(\\\"./Collection.js\\\").default<import(\\\"./interaction/Interaction.js\\\").default>}\\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\\n * constructor's `interactions` option.\\n * @api\\n */\\nexport function defaults(opt_options) {\\n    var options = opt_options ? opt_options : {};\\n    var interactions = new Collection();\\n    var kinetic = new Kinetic(-0.005, 0.05, 100);\\n    var altShiftDragRotate = options.altShiftDragRotate !== undefined ?\\n        options.altShiftDragRotate : true;\\n    if (altShiftDragRotate) {\\n        interactions.push(new DragRotate());\\n    }\\n    var doubleClickZoom = options.doubleClickZoom !== undefined ?\\n        options.doubleClickZoom : true;\\n    if (doubleClickZoom) {\\n        interactions.push(new DoubleClickZoom({\\n            delta: options.zoomDelta,\\n            duration: options.zoomDuration\\n        }));\\n    }\\n    var dragPan = options.dragPan !== undefined ? options.dragPan : true;\\n    if (dragPan) {\\n        interactions.push(new DragPan({\\n            condition: options.onFocusOnly ? focus : undefined,\\n            kinetic: kinetic\\n        }));\\n    }\\n    var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\\n        true;\\n    if (pinchRotate) {\\n        interactions.push(new PinchRotate());\\n    }\\n    var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\\n    if (pinchZoom) {\\n        interactions.push(new PinchZoom({\\n            duration: options.zoomDuration\\n        }));\\n    }\\n    var keyboard = options.keyboard !== undefined ? options.keyboard : true;\\n    if (keyboard) {\\n        interactions.push(new KeyboardPan());\\n        interactions.push(new KeyboardZoom({\\n            delta: options.zoomDelta,\\n            duration: options.zoomDuration\\n        }));\\n    }\\n    var mouseWheelZoom = options.mouseWheelZoom !== undefined ?\\n        options.mouseWheelZoom : true;\\n    if (mouseWheelZoom) {\\n        interactions.push(new MouseWheelZoom({\\n            condition: options.onFocusOnly ? focus : undefined,\\n            duration: options.zoomDuration\\n        }));\\n    }\\n    var shiftDragZoom = options.shiftDragZoom !== undefined ?\\n        options.shiftDragZoom : true;\\n    if (shiftDragZoom) {\\n        interactions.push(new DragZoom({\\n            duration: options.zoomDuration\\n        }));\\n    }\\n    return interactions;\\n}\\n//# sourceMappingURL=interaction.js.map\",\"/**\\n * @module ol/layer/TileProperty\\n */\\n/**\\n * @enum {string}\\n */\\nexport default {\\n    PRELOAD: 'preload',\\n    USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\\n};\\n//# sourceMappingURL=TileProperty.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/layer/BaseTile\\n */\\nimport Layer from './Layer.js';\\nimport TileProperty from './TileProperty.js';\\nimport { assign } from '../obj.js';\\n/**\\n * @typedef {Object} Options\\n * @property {number} [opacity=1] Opacity (0, 1).\\n * @property {boolean} [visible=true] Visibility.\\n * @property {import(\\\"../extent.js\\\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\\n * rendered outside of this extent.\\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\\n * method was used.\\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\\n * visible.\\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\\n * be visible.\\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\\n * means no preloading.\\n * @property {import(\\\"../source/Tile.js\\\").default} [source] Source for this layer.\\n * @property {import(\\\"../PluggableMap.js\\\").default} [map] Sets the layer as overlay on a map. The map will not manage\\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\\n * use {@link module:ol/Map#addLayer}.\\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\\n */\\n/**\\n * @classdesc\\n * For layer sources that provide pre-rendered, tiled images in grids that are\\n * organized by zoom levels for specific resolutions.\\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\\n * property on the layer object; for example, setting `title: 'My Title'` in the\\n * options means that `title` is observable, and has get/set accessors.\\n *\\n * @extends {Layer<import(\\\"../source/Tile.js\\\").default>}\\n * @api\\n */\\nvar BaseTileLayer = /** @class */ (function (_super) {\\n    __extends(BaseTileLayer, _super);\\n    /**\\n     * @param {Options=} opt_options Tile layer options.\\n     */\\n    function BaseTileLayer(opt_options) {\\n        var _this = this;\\n        var options = opt_options ? opt_options : {};\\n        var baseOptions = assign({}, options);\\n        delete baseOptions.preload;\\n        delete baseOptions.useInterimTilesOnError;\\n        _this = _super.call(this, baseOptions) || this;\\n        _this.setPreload(options.preload !== undefined ? options.preload : 0);\\n        _this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\\n            options.useInterimTilesOnError : true);\\n        return _this;\\n    }\\n    /**\\n    * Return the level as number to which we will preload tiles up to.\\n    * @return {number} The level to preload tiles up to.\\n    * @observable\\n    * @api\\n    */\\n    BaseTileLayer.prototype.getPreload = function () {\\n        return /** @type {number} */ (this.get(TileProperty.PRELOAD));\\n    };\\n    /**\\n    * Set the level as number to which we will preload tiles up to.\\n    * @param {number} preload The level to preload tiles up to.\\n    * @observable\\n    * @api\\n    */\\n    BaseTileLayer.prototype.setPreload = function (preload) {\\n        this.set(TileProperty.PRELOAD, preload);\\n    };\\n    /**\\n    * Whether we use interim tiles on error.\\n    * @return {boolean} Use interim tiles on error.\\n    * @observable\\n    * @api\\n    */\\n    BaseTileLayer.prototype.getUseInterimTilesOnError = function () {\\n        return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\\n    };\\n    /**\\n    * Set whether we use interim tiles on error.\\n    * @param {boolean} useInterimTilesOnError Use interim tiles on error.\\n    * @observable\\n    * @api\\n    */\\n    BaseTileLayer.prototype.setUseInterimTilesOnError = function (useInterimTilesOnError) {\\n        this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\\n    };\\n    return BaseTileLayer;\\n}(Layer));\\nexport default BaseTileLayer;\\n//# sourceMappingURL=BaseTile.js.map\",\"/**\\n * @module ol/TileRange\\n */\\n/**\\n * A representation of a contiguous block of tiles.  A tile range is specified\\n * by its min/max tile coordinates and is inclusive of coordinates.\\n */\\nvar TileRange = /** @class */ (function () {\\n    /**\\n     * @param {number} minX Minimum X.\\n     * @param {number} maxX Maximum X.\\n     * @param {number} minY Minimum Y.\\n     * @param {number} maxY Maximum Y.\\n     */\\n    function TileRange(minX, maxX, minY, maxY) {\\n        /**\\n         * @type {number}\\n         */\\n        this.minX = minX;\\n        /**\\n         * @type {number}\\n         */\\n        this.maxX = maxX;\\n        /**\\n         * @type {number}\\n         */\\n        this.minY = minY;\\n        /**\\n         * @type {number}\\n         */\\n        this.maxY = maxY;\\n    }\\n    /**\\n     * @param {import(\\\"./tilecoord.js\\\").TileCoord} tileCoord Tile coordinate.\\n     * @return {boolean} Contains tile coordinate.\\n     */\\n    TileRange.prototype.contains = function (tileCoord) {\\n        return this.containsXY(tileCoord[1], tileCoord[2]);\\n    };\\n    /**\\n     * @param {TileRange} tileRange Tile range.\\n     * @return {boolean} Contains.\\n     */\\n    TileRange.prototype.containsTileRange = function (tileRange) {\\n        return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\\n            this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\\n    };\\n    /**\\n     * @param {number} x Tile coordinate x.\\n     * @param {number} y Tile coordinate y.\\n     * @return {boolean} Contains coordinate.\\n     */\\n    TileRange.prototype.containsXY = function (x, y) {\\n        return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\\n    };\\n    /**\\n     * @param {TileRange} tileRange Tile range.\\n     * @return {boolean} Equals.\\n     */\\n    TileRange.prototype.equals = function (tileRange) {\\n        return this.minX == tileRange.minX && this.minY == tileRange.minY &&\\n            this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\\n    };\\n    /**\\n     * @param {TileRange} tileRange Tile range.\\n     */\\n    TileRange.prototype.extend = function (tileRange) {\\n        if (tileRange.minX < this.minX) {\\n            this.minX = tileRange.minX;\\n        }\\n        if (tileRange.maxX > this.maxX) {\\n            this.maxX = tileRange.maxX;\\n        }\\n        if (tileRange.minY < this.minY) {\\n            this.minY = tileRange.minY;\\n        }\\n        if (tileRange.maxY > this.maxY) {\\n            this.maxY = tileRange.maxY;\\n        }\\n    };\\n    /**\\n     * @return {number} Height.\\n     */\\n    TileRange.prototype.getHeight = function () {\\n        return this.maxY - this.minY + 1;\\n    };\\n    /**\\n     * @return {import(\\\"./size.js\\\").Size} Size.\\n     */\\n    TileRange.prototype.getSize = function () {\\n        return [this.getWidth(), this.getHeight()];\\n    };\\n    /**\\n     * @return {number} Width.\\n     */\\n    TileRange.prototype.getWidth = function () {\\n        return this.maxX - this.minX + 1;\\n    };\\n    /**\\n     * @param {TileRange} tileRange Tile range.\\n     * @return {boolean} Intersects.\\n     */\\n    TileRange.prototype.intersects = function (tileRange) {\\n        return this.minX <= tileRange.maxX &&\\n            this.maxX >= tileRange.minX &&\\n            this.minY <= tileRange.maxY &&\\n            this.maxY >= tileRange.minY;\\n    };\\n    return TileRange;\\n}());\\n/**\\n * @param {number} minX Minimum X.\\n * @param {number} maxX Maximum X.\\n * @param {number} minY Minimum Y.\\n * @param {number} maxY Maximum Y.\\n * @param {TileRange=} tileRange TileRange.\\n * @return {TileRange} Tile range.\\n */\\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\\n    if (tileRange !== undefined) {\\n        tileRange.minX = minX;\\n        tileRange.maxX = maxX;\\n        tileRange.minY = minY;\\n        tileRange.maxY = maxY;\\n        return tileRange;\\n    }\\n    else {\\n        return new TileRange(minX, maxX, minY, maxY);\\n    }\\n}\\nexport default TileRange;\\n//# sourceMappingURL=TileRange.js.map\",\"/**\\n * @module ol/structs/LRUCache\\n */\\nvar __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\nimport { assert } from '../asserts.js';\\nimport EventTarget from '../events/Target.js';\\nimport EventType from '../events/EventType.js';\\n/**\\n * @typedef {Object} Entry\\n * @property {string} key_\\n * @property {Object} newer\\n * @property {Object} older\\n * @property {*} value_\\n */\\n/**\\n * @classdesc\\n * Implements a Least-Recently-Used cache where the keys do not conflict with\\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\\n * items from the cache is the responsibility of the user.\\n *\\n * @fires import(\\\"../events/Event.js\\\").Event\\n * @template T\\n */\\nvar LRUCache = /** @class */ (function (_super) {\\n    __extends(LRUCache, _super);\\n    /**\\n     * @param {number=} opt_highWaterMark High water mark.\\n     */\\n    function LRUCache(opt_highWaterMark) {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * @type {number}\\n         */\\n        _this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.count_ = 0;\\n        /**\\n         * @private\\n         * @type {!Object<string, Entry>}\\n         */\\n        _this.entries_ = {};\\n        /**\\n         * @private\\n         * @type {?Entry}\\n         */\\n        _this.oldest_ = null;\\n        /**\\n         * @private\\n         * @type {?Entry}\\n         */\\n        _this.newest_ = null;\\n        return _this;\\n    }\\n    /**\\n     * @return {boolean} Can expire cache.\\n     */\\n    LRUCache.prototype.canExpireCache = function () {\\n        return this.getCount() > this.highWaterMark;\\n    };\\n    /**\\n     * FIXME empty description for jsdoc\\n     */\\n    LRUCache.prototype.clear = function () {\\n        this.count_ = 0;\\n        this.entries_ = {};\\n        this.oldest_ = null;\\n        this.newest_ = null;\\n        this.dispatchEvent(EventType.CLEAR);\\n    };\\n    /**\\n     * @param {string} key Key.\\n     * @return {boolean} Contains key.\\n     */\\n    LRUCache.prototype.containsKey = function (key) {\\n        return this.entries_.hasOwnProperty(key);\\n    };\\n    /**\\n     * @param {function(T, string, LRUCache): ?} f The function\\n     *     to call for every entry from the oldest to the newer. This function takes\\n     *     3 arguments (the entry value, the entry key and the LRUCache object).\\n     *     The return value is ignored.\\n     */\\n    LRUCache.prototype.forEach = function (f) {\\n        var entry = this.oldest_;\\n        while (entry) {\\n            f(entry.value_, entry.key_, this);\\n            entry = entry.newer;\\n        }\\n    };\\n    /**\\n     * @param {string} key Key.\\n     * @param {*=} opt_options Options (reserverd for subclasses).\\n     * @return {T} Value.\\n     */\\n    LRUCache.prototype.get = function (key, opt_options) {\\n        var entry = this.entries_[key];\\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\\n        if (entry === this.newest_) {\\n            return entry.value_;\\n        }\\n        else if (entry === this.oldest_) {\\n            this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\\n            this.oldest_.older = null;\\n        }\\n        else {\\n            entry.newer.older = entry.older;\\n            entry.older.newer = entry.newer;\\n        }\\n        entry.newer = null;\\n        entry.older = this.newest_;\\n        this.newest_.newer = entry;\\n        this.newest_ = entry;\\n        return entry.value_;\\n    };\\n    /**\\n     * Remove an entry from the cache.\\n     * @param {string} key The entry key.\\n     * @return {T} The removed entry.\\n     */\\n    LRUCache.prototype.remove = function (key) {\\n        var entry = this.entries_[key];\\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\\n        if (entry === this.newest_) {\\n            this.newest_ = /** @type {Entry} */ (entry.older);\\n            if (this.newest_) {\\n                this.newest_.newer = null;\\n            }\\n        }\\n        else if (entry === this.oldest_) {\\n            this.oldest_ = /** @type {Entry} */ (entry.newer);\\n            if (this.oldest_) {\\n                this.oldest_.older = null;\\n            }\\n        }\\n        else {\\n            entry.newer.older = entry.older;\\n            entry.older.newer = entry.newer;\\n        }\\n        delete this.entries_[key];\\n        --this.count_;\\n        return entry.value_;\\n    };\\n    /**\\n     * @return {number} Count.\\n     */\\n    LRUCache.prototype.getCount = function () {\\n        return this.count_;\\n    };\\n    /**\\n     * @return {Array<string>} Keys.\\n     */\\n    LRUCache.prototype.getKeys = function () {\\n        var keys = new Array(this.count_);\\n        var i = 0;\\n        var entry;\\n        for (entry = this.newest_; entry; entry = entry.older) {\\n            keys[i++] = entry.key_;\\n        }\\n        return keys;\\n    };\\n    /**\\n     * @return {Array<T>} Values.\\n     */\\n    LRUCache.prototype.getValues = function () {\\n        var values = new Array(this.count_);\\n        var i = 0;\\n        var entry;\\n        for (entry = this.newest_; entry; entry = entry.older) {\\n            values[i++] = entry.value_;\\n        }\\n        return values;\\n    };\\n    /**\\n     * @return {T} Last value.\\n     */\\n    LRUCache.prototype.peekLast = function () {\\n        return this.oldest_.value_;\\n    };\\n    /**\\n     * @return {string} Last key.\\n     */\\n    LRUCache.prototype.peekLastKey = function () {\\n        return this.oldest_.key_;\\n    };\\n    /**\\n     * Get the key of the newest item in the cache.  Throws if the cache is empty.\\n     * @return {string} The newest key.\\n     */\\n    LRUCache.prototype.peekFirstKey = function () {\\n        return this.newest_.key_;\\n    };\\n    /**\\n     * @return {T} value Value.\\n     */\\n    LRUCache.prototype.pop = function () {\\n        var entry = this.oldest_;\\n        delete this.entries_[entry.key_];\\n        if (entry.newer) {\\n            entry.newer.older = null;\\n        }\\n        this.oldest_ = /** @type {Entry} */ (entry.newer);\\n        if (!this.oldest_) {\\n            this.newest_ = null;\\n        }\\n        --this.count_;\\n        return entry.value_;\\n    };\\n    /**\\n     * @param {string} key Key.\\n     * @param {T} value Value.\\n     */\\n    LRUCache.prototype.replace = function (key, value) {\\n        this.get(key); // update `newest_`\\n        this.entries_[key].value_ = value;\\n    };\\n    /**\\n     * @param {string} key Key.\\n     * @param {T} value Value.\\n     */\\n    LRUCache.prototype.set = function (key, value) {\\n        assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\\n        var entry = {\\n            key_: key,\\n            newer: null,\\n            older: this.newest_,\\n            value_: value\\n        };\\n        if (!this.newest_) {\\n            this.oldest_ = entry;\\n        }\\n        else {\\n            this.newest_.newer = entry;\\n        }\\n        this.newest_ = entry;\\n        this.entries_[key] = entry;\\n        ++this.count_;\\n    };\\n    /**\\n     * Set a maximum number of entries for the cache.\\n     * @param {number} size Cache size.\\n     * @api\\n     */\\n    LRUCache.prototype.setSize = function (size) {\\n        this.highWaterMark = size;\\n    };\\n    return LRUCache;\\n}(EventTarget));\\nexport default LRUCache;\\n//# sourceMappingURL=LRUCache.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\nimport { getUid } from '../../util.js';\\nimport LRUCache from '../../structs/LRUCache.js';\\n/**\\n * @module ol/render/canvas/LabelCache\\n */\\n/**\\n * @classdesc\\n * Cache of pre-rendered labels.\\n * @fires import(\\\"../events/Event.js\\\").Event\\n */\\nvar LabelCache = /** @class */ (function (_super) {\\n    __extends(LabelCache, _super);\\n    /**\\n     * @inheritDoc\\n     */\\n    function LabelCache(opt_highWaterMark) {\\n        var _this = _super.call(this, opt_highWaterMark) || this;\\n        _this.consumers = {};\\n        return _this;\\n    }\\n    LabelCache.prototype.clear = function () {\\n        _super.prototype.clear.call(this);\\n        this.consumers = {};\\n    };\\n    /**\\n     * @override\\n     * @param {string} key Label key.\\n     * @param {import(\\\"./Executor.js\\\").default} consumer Label consumer.\\n     * @return {HTMLCanvasElement} Label.\\n     */\\n    LabelCache.prototype.get = function (key, consumer) {\\n        var canvas = _super.prototype.get.call(this, key);\\n        var consumerId = getUid(consumer);\\n        if (!(consumerId in this.consumers)) {\\n            this.consumers[consumerId] = {};\\n        }\\n        this.consumers[consumerId][key] = true;\\n        return canvas;\\n    };\\n    LabelCache.prototype.prune = function () {\\n        outer: while (this.canExpireCache()) {\\n            var key = this.peekLastKey();\\n            for (var consumerId in this.consumers) {\\n                if (key in this.consumers[consumerId]) {\\n                    break outer;\\n                }\\n            }\\n            var canvas = this.pop();\\n            canvas.width = canvas.height = 0;\\n            for (var consumerId in this.consumers) {\\n                delete this.consumers[consumerId][key];\\n            }\\n        }\\n    };\\n    /**\\n     * @param {import(\\\"./Executor.js\\\").default} consumer Label consumer.\\n     */\\n    LabelCache.prototype.release = function (consumer) {\\n        delete this.consumers[getUid(consumer)];\\n    };\\n    return LabelCache;\\n}(LRUCache));\\nexport default LabelCache;\\n//# sourceMappingURL=LabelCache.js.map\",\"/**\\n * @module ol/render/canvas\\n */\\nimport { getFontFamilies } from '../css.js';\\nimport { createCanvasContext2D } from '../dom.js';\\nimport { clear } from '../obj.js';\\nimport { create as createTransform } from '../transform.js';\\nimport LabelCache from './canvas/LabelCache.js';\\n/**\\n * @typedef {Object} FillState\\n * @property {import(\\\"../colorlike.js\\\").ColorLike} fillStyle\\n */\\n/**\\n * @typedef {Object} FillStrokeState\\n * @property {import(\\\"../colorlike.js\\\").ColorLike} [currentFillStyle]\\n * @property {import(\\\"../colorlike.js\\\").ColorLike} [currentStrokeStyle]\\n * @property {string} [currentLineCap]\\n * @property {Array<number>} currentLineDash\\n * @property {number} [currentLineDashOffset]\\n * @property {string} [currentLineJoin]\\n * @property {number} [currentLineWidth]\\n * @property {number} [currentMiterLimit]\\n * @property {number} [lastStroke]\\n * @property {import(\\\"../colorlike.js\\\").ColorLike} [fillStyle]\\n * @property {import(\\\"../colorlike.js\\\").ColorLike} [strokeStyle]\\n * @property {string} [lineCap]\\n * @property {Array<number>} lineDash\\n * @property {number} [lineDashOffset]\\n * @property {string} [lineJoin]\\n * @property {number} [lineWidth]\\n * @property {number} [miterLimit]\\n */\\n/**\\n * @typedef {Object} StrokeState\\n * @property {string} lineCap\\n * @property {Array<number>} lineDash\\n * @property {number} lineDashOffset\\n * @property {string} lineJoin\\n * @property {number} lineWidth\\n * @property {number} miterLimit\\n * @property {import(\\\"../colorlike.js\\\").ColorLike} strokeStyle\\n */\\n/**\\n * @typedef {Object} TextState\\n * @property {string} font\\n * @property {string} [textAlign]\\n * @property {string} textBaseline\\n * @property {string} [placement]\\n * @property {number} [maxAngle]\\n * @property {boolean} [overflow]\\n * @property {import(\\\"../style/Fill.js\\\").default} [backgroundFill]\\n * @property {import(\\\"../style/Stroke.js\\\").default} [backgroundStroke]\\n * @property {number} [scale]\\n * @property {Array<number>} [padding]\\n */\\n/**\\n * Container for decluttered replay instructions that need to be rendered or\\n * omitted together, i.e. when styles render both an image and text, or for the\\n * characters that form text along lines. The basic elements of this array are\\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\\n * rendered extent of the group in pixel space. `count` is the number of styles\\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\\n * In addition to these four elements, declutter instruction arrays (i.e. the\\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\\n * @typedef {Array<*>} DeclutterGroup\\n */\\n/**\\n * @const\\n * @type {string}\\n */\\nexport var defaultFont = '10px sans-serif';\\n/**\\n * @const\\n * @type {import(\\\"../colorlike.js\\\").ColorLike}\\n */\\nexport var defaultFillStyle = '#000';\\n/**\\n * @const\\n * @type {string}\\n */\\nexport var defaultLineCap = 'round';\\n/**\\n * @const\\n * @type {Array<number>}\\n */\\nexport var defaultLineDash = [];\\n/**\\n * @const\\n * @type {number}\\n */\\nexport var defaultLineDashOffset = 0;\\n/**\\n * @const\\n * @type {string}\\n */\\nexport var defaultLineJoin = 'round';\\n/**\\n * @const\\n * @type {number}\\n */\\nexport var defaultMiterLimit = 10;\\n/**\\n * @const\\n * @type {import(\\\"../colorlike.js\\\").ColorLike}\\n */\\nexport var defaultStrokeStyle = '#000';\\n/**\\n * @const\\n * @type {string}\\n */\\nexport var defaultTextAlign = 'center';\\n/**\\n * @const\\n * @type {string}\\n */\\nexport var defaultTextBaseline = 'middle';\\n/**\\n * @const\\n * @type {Array<number>}\\n */\\nexport var defaultPadding = [0, 0, 0, 0];\\n/**\\n * @const\\n * @type {number}\\n */\\nexport var defaultLineWidth = 1;\\n/**\\n * The label cache for text rendering. To change the default cache size of 2048\\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\\n * @type {LabelCache}\\n * @api\\n */\\nexport var labelCache = new LabelCache();\\n/**\\n * @type {!Object<string, number>}\\n */\\nexport var checkedFonts = {};\\n/**\\n * @type {CanvasRenderingContext2D}\\n */\\nvar measureContext = null;\\n/**\\n * @type {!Object<string, number>}\\n */\\nexport var textHeights = {};\\n/**\\n * Clears the label cache when a font becomes available.\\n * @param {string} fontSpec CSS font spec.\\n */\\nexport var checkFont = (function () {\\n    var retries = 60;\\n    var checked = checkedFonts;\\n    var size = '32px ';\\n    var referenceFonts = ['monospace', 'serif'];\\n    var len = referenceFonts.length;\\n    var text = 'wmytzilWMYTZIL@#/&?$%10\\\\uF013';\\n    var interval, referenceWidth;\\n    function isAvailable(font) {\\n        var context = getMeasureContext();\\n        // Check weight ranges according to\\n        // https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\\n        for (var weight = 100; weight <= 700; weight += 300) {\\n            var fontWeight = weight + ' ';\\n            var available = true;\\n            for (var i = 0; i < len; ++i) {\\n                var referenceFont = referenceFonts[i];\\n                context.font = fontWeight + size + referenceFont;\\n                referenceWidth = context.measureText(text).width;\\n                if (font != referenceFont) {\\n                    context.font = fontWeight + size + font + ',' + referenceFont;\\n                    var width = context.measureText(text).width;\\n                    // If width and referenceWidth are the same, then the fallback was used\\n                    // instead of the font we wanted, so the font is not available.\\n                    available = available && width != referenceWidth;\\n                }\\n            }\\n            if (available) {\\n                // Consider font available when it is available in one weight range.\\n                //FIXME With this we miss rare corner cases, so we should consider\\n                //FIXME checking availability for each requested weight range.\\n                return true;\\n            }\\n        }\\n        return false;\\n    }\\n    function check() {\\n        var done = true;\\n        for (var font in checked) {\\n            if (checked[font] < retries) {\\n                if (isAvailable(font)) {\\n                    checked[font] = retries;\\n                    clear(textHeights);\\n                    // Make sure that loaded fonts are picked up by Safari\\n                    measureContext = null;\\n                    labelCache.clear();\\n                }\\n                else {\\n                    ++checked[font];\\n                    done = false;\\n                }\\n            }\\n        }\\n        if (done) {\\n            clearInterval(interval);\\n            interval = undefined;\\n        }\\n    }\\n    return function (fontSpec) {\\n        var fontFamilies = getFontFamilies(fontSpec);\\n        if (!fontFamilies) {\\n            return;\\n        }\\n        for (var i = 0, ii = fontFamilies.length; i < ii; ++i) {\\n            var fontFamily = fontFamilies[i];\\n            if (!(fontFamily in checked)) {\\n                checked[fontFamily] = retries;\\n                if (!isAvailable(fontFamily)) {\\n                    checked[fontFamily] = 0;\\n                    if (interval === undefined) {\\n                        interval = setInterval(check, 32);\\n                    }\\n                }\\n            }\\n        }\\n    };\\n})();\\n/**\\n * @return {CanvasRenderingContext2D} Measure context.\\n */\\nfunction getMeasureContext() {\\n    if (!measureContext) {\\n        measureContext = createCanvasContext2D(1, 1);\\n    }\\n    return measureContext;\\n}\\n/**\\n * @param {string} font Font to use for measuring.\\n * @return {import(\\\"../size.js\\\").Size} Measurement.\\n */\\nexport var measureTextHeight = (function () {\\n    var div;\\n    var heights = textHeights;\\n    return function (font) {\\n        var height = heights[font];\\n        if (height == undefined) {\\n            if (!div) {\\n                div = document.createElement('div');\\n                div.innerHTML = 'M';\\n                div.style.margin = div.style.padding = '0 !important';\\n                div.style.position = 'absolute !important';\\n                div.style.left = '-99999px !important';\\n            }\\n            div.style.font = font;\\n            document.body.appendChild(div);\\n            height = heights[font] = div.offsetHeight;\\n            document.body.removeChild(div);\\n        }\\n        return height;\\n    };\\n})();\\n/**\\n * @param {string} font Font.\\n * @param {string} text Text.\\n * @return {number} Width.\\n */\\nexport function measureTextWidth(font, text) {\\n    var measureContext = getMeasureContext();\\n    if (font != measureContext.font) {\\n        measureContext.font = font;\\n    }\\n    return measureContext.measureText(text).width;\\n}\\n/**\\n * Measure text width using a cache.\\n * @param {string} font The font.\\n * @param {string} text The text to measure.\\n * @param {Object<string, number>} cache A lookup of cached widths by text.\\n * @returns {number} The text width.\\n */\\nexport function measureAndCacheTextWidth(font, text, cache) {\\n    if (text in cache) {\\n        return cache[text];\\n    }\\n    var width = cache[text] = measureTextWidth(font, text);\\n    return width;\\n}\\n/**\\n * @param {string} font Font to use for measuring.\\n * @param {Array<string>} lines Lines to measure.\\n * @param {Array<number>} widths Array will be populated with the widths of\\n * each line.\\n * @return {number} Width of the whole text.\\n */\\nexport function measureTextWidths(font, lines, widths) {\\n    var numLines = lines.length;\\n    var width = 0;\\n    for (var i = 0; i < numLines; ++i) {\\n        var currentWidth = measureTextWidth(font, lines[i]);\\n        width = Math.max(width, currentWidth);\\n        widths.push(currentWidth);\\n    }\\n    return width;\\n}\\n/**\\n * @param {CanvasRenderingContext2D} context Context.\\n * @param {number} rotation Rotation.\\n * @param {number} offsetX X offset.\\n * @param {number} offsetY Y offset.\\n */\\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\\n    if (rotation !== 0) {\\n        context.translate(offsetX, offsetY);\\n        context.rotate(rotation);\\n        context.translate(-offsetX, -offsetY);\\n    }\\n}\\nexport var resetTransform = createTransform();\\n/**\\n * @param {CanvasRenderingContext2D} context Context.\\n * @param {import(\\\"../transform.js\\\").Transform|null} transform Transform.\\n * @param {number} opacity Opacity.\\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\\n * @param {number} originX Origin X.\\n * @param {number} originY Origin Y.\\n * @param {number} w Width.\\n * @param {number} h Height.\\n * @param {number} x X.\\n * @param {number} y Y.\\n * @param {number} scale Scale.\\n */\\nexport function drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale) {\\n    var alpha;\\n    if (opacity != 1) {\\n        alpha = context.globalAlpha;\\n        context.globalAlpha = alpha * opacity;\\n    }\\n    if (transform) {\\n        context.setTransform.apply(context, transform);\\n    }\\n    context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\\n    if (alpha) {\\n        context.globalAlpha = alpha;\\n    }\\n    if (transform) {\\n        context.setTransform.apply(context, resetTransform);\\n    }\\n}\\n//# sourceMappingURL=canvas.js.map\",\"/**\\n * @module ol/ImageState\\n */\\n/**\\n * @enum {number}\\n */\\nexport default {\\n    IDLE: 0,\\n    LOADING: 1,\\n    LOADED: 2,\\n    ERROR: 3\\n};\\n//# sourceMappingURL=ImageState.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/renderer/Layer\\n */\\nimport { abstract } from '../util.js';\\nimport ImageState from '../ImageState.js';\\nimport Observable from '../Observable.js';\\nimport { listen } from '../events.js';\\nimport EventType from '../events/EventType.js';\\nimport SourceState from '../source/State.js';\\nvar LayerRenderer = /** @class */ (function (_super) {\\n    __extends(LayerRenderer, _super);\\n    /**\\n     * @param {import(\\\"../layer/Layer.js\\\").default} layer Layer.\\n     */\\n    function LayerRenderer(layer) {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * @private\\n         * @type {import(\\\"../layer/Layer.js\\\").default}\\n         */\\n        _this.layer_ = layer;\\n        return _this;\\n    }\\n    /**\\n     * Determine whether render should be called.\\n     * @abstract\\n     * @param {import(\\\"../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     * @param {import(\\\"../layer/Layer.js\\\").State} layerState Layer state.\\n     * @return {boolean} Layer is ready to be rendered.\\n     */\\n    LayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\\n        return abstract();\\n    };\\n    /**\\n     * Render the layer.\\n     * @abstract\\n     * @param {import(\\\"../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     * @param {import(\\\"../layer/Layer.js\\\").State} layerState Layer state.\\n     * @return {HTMLElement} The rendered element.\\n     */\\n    LayerRenderer.prototype.renderFrame = function (frameState, layerState) {\\n        return abstract();\\n    };\\n    /**\\n     * @param {Object<number, Object<string, import(\\\"../Tile.js\\\").default>>} tiles Lookup of loaded tiles by zoom level.\\n     * @param {number} zoom Zoom level.\\n     * @param {import(\\\"../Tile.js\\\").default} tile Tile.\\n     */\\n    LayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\\n        if (!tiles[zoom]) {\\n            tiles[zoom] = {};\\n        }\\n        tiles[zoom][tile.tileCoord.toString()] = tile;\\n    };\\n    /**\\n     * Create a function that adds loaded tiles to the tile lookup.\\n     * @param {import(\\\"../source/Tile.js\\\").default} source Tile source.\\n     * @param {import(\\\"../proj/Projection.js\\\").default} projection Projection of the tiles.\\n     * @param {Object<number, Object<string, import(\\\"../Tile.js\\\").default>>} tiles Lookup of loaded tiles by zoom level.\\n     * @return {function(number, import(\\\"../TileRange.js\\\").default):boolean} A function that can be\\n     *     called with a zoom level and a tile range to add loaded tiles to the lookup.\\n     * @protected\\n     */\\n    LayerRenderer.prototype.createLoadedTileFinder = function (source, projection, tiles) {\\n        return (\\n        /**\\n         * @param {number} zoom Zoom level.\\n         * @param {import(\\\"../TileRange.js\\\").default} tileRange Tile range.\\n         * @return {boolean} The tile range is fully loaded.\\n         * @this {LayerRenderer}\\n         */\\n        function (zoom, tileRange) {\\n            var callback = this.loadedTileCallback.bind(this, tiles, zoom);\\n            return source.forEachLoadedTile(projection, zoom, tileRange, callback);\\n        }).bind(this);\\n    };\\n    /**\\n     * @abstract\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} coordinate Coordinate.\\n     * @param {import(\\\"../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     * @param {number} hitTolerance Hit tolerance in pixels.\\n     * @param {function(import(\\\"../Feature.js\\\").FeatureLike, import(\\\"../layer/Layer.js\\\").default): T} callback Feature callback.\\n     * @return {T|void} Callback result.\\n     * @template T\\n     */\\n    LayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback) { };\\n    /**\\n     * @abstract\\n     * @param {import(\\\"../pixel.js\\\").Pixel} pixel Pixel.\\n     * @param {import(\\\"../PluggableMap.js\\\").FrameState} frameState FrameState.\\n     * @param {number} hitTolerance Hit tolerance in pixels.\\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\\n     *    location, null will be returned.  If there is data, but pixel values cannot be\\n     *    returned, and empty array will be returned.\\n     */\\n    LayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\\n        return abstract();\\n    };\\n    /**\\n     * @return {import(\\\"../layer/Layer.js\\\").default} Layer.\\n     */\\n    LayerRenderer.prototype.getLayer = function () {\\n        return this.layer_;\\n    };\\n    /**\\n     * Handle changes in image state.\\n     * @param {import(\\\"../events/Event.js\\\").default} event Image change event.\\n     * @private\\n     */\\n    LayerRenderer.prototype.handleImageChange_ = function (event) {\\n        var image = /** @type {import(\\\"../Image.js\\\").default} */ (event.target);\\n        if (image.getState() === ImageState.LOADED) {\\n            this.renderIfReadyAndVisible();\\n        }\\n    };\\n    /**\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} coordinate Coordinate.\\n     * @param {import(\\\"../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     * @return {boolean} Is there a feature at the given coordinate?\\n     */\\n    LayerRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState) {\\n        return false;\\n    };\\n    /**\\n     * Load the image if not already loaded, and register the image change\\n     * listener if needed.\\n     * @param {import(\\\"../ImageBase.js\\\").default} image Image.\\n     * @return {boolean} `true` if the image is already loaded, `false` otherwise.\\n     * @protected\\n     */\\n    LayerRenderer.prototype.loadImage = function (image) {\\n        var imageState = image.getState();\\n        if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\\n            listen(image, EventType.CHANGE, this.handleImageChange_, this);\\n        }\\n        if (imageState == ImageState.IDLE) {\\n            image.load();\\n            imageState = image.getState();\\n        }\\n        return imageState == ImageState.LOADED;\\n    };\\n    /**\\n     * @protected\\n     */\\n    LayerRenderer.prototype.renderIfReadyAndVisible = function () {\\n        var layer = this.getLayer();\\n        if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\\n            layer.changed();\\n        }\\n    };\\n    return LayerRenderer;\\n}(Observable));\\nexport default LayerRenderer;\\n//# sourceMappingURL=Layer.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/renderer/canvas/Layer\\n */\\nimport { getBottomLeft, getBottomRight, getTopLeft, getTopRight } from '../../extent.js';\\nimport { createCanvasContext2D } from '../../dom.js';\\nimport RenderEvent from '../../render/Event.js';\\nimport RenderEventType from '../../render/EventType.js';\\nimport { rotateAtOffset } from '../../render/canvas.js';\\nimport LayerRenderer from '../Layer.js';\\nimport { create as createTransform, apply as applyTransform, compose as composeTransform } from '../../transform.js';\\n/**\\n * @abstract\\n */\\nvar CanvasLayerRenderer = /** @class */ (function (_super) {\\n    __extends(CanvasLayerRenderer, _super);\\n    /**\\n     * @param {import(\\\"../../layer/Layer.js\\\").default} layer Layer.\\n     */\\n    function CanvasLayerRenderer(layer) {\\n        var _this = _super.call(this, layer) || this;\\n        /**\\n         * @protected\\n         * @type {number}\\n         */\\n        _this.renderedResolution;\\n        /**\\n         * A temporary transform.  The values in this transform should only be used in a\\n         * function that sets the values.\\n         * @private\\n         * @type {import(\\\"../../transform.js\\\").Transform}\\n         */\\n        _this.tempTransform_ = createTransform();\\n        /**\\n         * The transform for rendered pixels to viewport CSS pixels.  This transform must\\n         * be set when rendering a frame and may be used by other functions after rendering.\\n         * @private\\n         * @type {import(\\\"../../transform.js\\\").Transform}\\n         */\\n        _this.pixelTransform_ = createTransform();\\n        /**\\n         * The transform for viewport CSS pixels to rendered pixels.  This transform must\\n         * be set when rendering a frame and may be used by other functions after rendering.\\n         * @private\\n         * @type {import(\\\"../../transform.js\\\").Transform}\\n         */\\n        _this.inversePixelTransform_ = createTransform();\\n        /**\\n         * @protected\\n         * @type {CanvasRenderingContext2D}\\n         */\\n        _this.context = createCanvasContext2D();\\n        var canvas = _this.context.canvas;\\n        canvas.style.position = 'absolute';\\n        canvas.style.transformOrigin = 'top left';\\n        canvas.className = _this.getLayer().getClassName();\\n        return _this;\\n    }\\n    /**\\n     * @inheritDoc\\n     */\\n    CanvasLayerRenderer.prototype.disposeInternal = function () {\\n        this.context.canvas.width = this.context.canvas.height = 0;\\n        _super.prototype.disposeInternal.call(this);\\n    };\\n    /**\\n     * @param {CanvasRenderingContext2D} context Context.\\n     * @param {import(\\\"../../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     * @param {import(\\\"../../extent.js\\\").Extent} extent Clip extent.\\n     * @protected\\n     */\\n    CanvasLayerRenderer.prototype.clip = function (context, frameState, extent) {\\n        var pixelRatio = frameState.pixelRatio;\\n        var halfWidth = (frameState.size[0] * pixelRatio) / 2;\\n        var halfHeight = (frameState.size[1] * pixelRatio) / 2;\\n        var rotation = frameState.viewState.rotation;\\n        var topLeft = getTopLeft(extent);\\n        var topRight = getTopRight(extent);\\n        var bottomRight = getBottomRight(extent);\\n        var bottomLeft = getBottomLeft(extent);\\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\\n        context.save();\\n        rotateAtOffset(context, -rotation, halfWidth, halfHeight);\\n        context.beginPath();\\n        context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\\n        context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\\n        context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\\n        context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\\n        context.clip();\\n        rotateAtOffset(context, rotation, halfWidth, halfHeight);\\n    };\\n    /**\\n     * @param {CanvasRenderingContext2D} context Context.\\n     * @param {import(\\\"../../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     * @param {import(\\\"../../extent.js\\\").Extent} extent Clip extent.\\n     * @protected\\n     */\\n    CanvasLayerRenderer.prototype.clipUnrotated = function (context, frameState, extent) {\\n        var topLeft = getTopLeft(extent);\\n        var topRight = getTopRight(extent);\\n        var bottomRight = getBottomRight(extent);\\n        var bottomLeft = getBottomLeft(extent);\\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\\n        var inverted = this.inversePixelTransform_;\\n        applyTransform(inverted, topLeft);\\n        applyTransform(inverted, topRight);\\n        applyTransform(inverted, bottomRight);\\n        applyTransform(inverted, bottomLeft);\\n        context.save();\\n        context.beginPath();\\n        context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\\n        context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\\n        context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\\n        context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\\n        context.clip();\\n    };\\n    /**\\n     * @param {import(\\\"../../render/EventType.js\\\").default} type Event type.\\n     * @param {CanvasRenderingContext2D} context Context.\\n     * @param {import(\\\"../../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     * @private\\n     */\\n    CanvasLayerRenderer.prototype.dispatchRenderEvent_ = function (type, context, frameState) {\\n        var layer = this.getLayer();\\n        if (layer.hasListener(type)) {\\n            var event_1 = new RenderEvent(type, this.inversePixelTransform_, frameState, context, null);\\n            layer.dispatchEvent(event_1);\\n        }\\n    };\\n    /**\\n     * @param {CanvasRenderingContext2D} context Context.\\n     * @param {import(\\\"../../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     * @protected\\n     */\\n    CanvasLayerRenderer.prototype.preRender = function (context, frameState) {\\n        this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\\n    };\\n    /**\\n     * @param {CanvasRenderingContext2D} context Context.\\n     * @param {import(\\\"../../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     * @protected\\n     */\\n    CanvasLayerRenderer.prototype.postRender = function (context, frameState) {\\n        this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\\n    };\\n    /**\\n     * Creates a transform for rendering to an element that will be rotated after rendering.\\n     * @param {import(\\\"../../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     * @param {number} width Width of the rendered element (in pixels).\\n     * @param {number} height Height of the rendered element (in pixels).\\n     * @param {number} offsetX Offset on the x-axis in view coordinates.\\n     * @protected\\n     * @return {!import(\\\"../../transform.js\\\").Transform} Transform.\\n     */\\n    CanvasLayerRenderer.prototype.getRenderTransform = function (frameState, width, height, offsetX) {\\n        var viewState = frameState.viewState;\\n        var pixelRatio = frameState.pixelRatio;\\n        var dx1 = width / 2;\\n        var dy1 = height / 2;\\n        var sx = pixelRatio / viewState.resolution;\\n        var sy = -sx;\\n        var dx2 = -viewState.center[0] + offsetX;\\n        var dy2 = -viewState.center[1];\\n        return composeTransform(this.tempTransform_, dx1, dy1, sx, sy, -viewState.rotation, dx2, dy2);\\n    };\\n    /**\\n     * @param {import(\\\"../../pixel.js\\\").Pixel} pixel Pixel.\\n     * @param {import(\\\"../../PluggableMap.js\\\").FrameState} frameState FrameState.\\n     * @param {number} hitTolerance Hit tolerance in pixels.\\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\\n     *    location, null will be returned.  If there is data, but pixel values cannot be\\n     *    returned, and empty array will be returned.\\n     */\\n    CanvasLayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\\n        var renderPixel = applyTransform(this.inversePixelTransform_, pixel.slice());\\n        var context = this.context;\\n        var data;\\n        try {\\n            data = context.getImageData(Math.round(renderPixel[0]), Math.round(renderPixel[1]), 1, 1).data;\\n        }\\n        catch (err) {\\n            if (err.name === 'SecurityError') {\\n                // tainted canvas, we assume there is data at the given pixel (although there might not be)\\n                return new Uint8Array();\\n            }\\n            return data;\\n        }\\n        if (data[3] === 0) {\\n            return null;\\n        }\\n        return data;\\n    };\\n    return CanvasLayerRenderer;\\n}(LayerRenderer));\\nexport default CanvasLayerRenderer;\\n//# sourceMappingURL=Layer.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/renderer/canvas/TileLayer\\n */\\nimport { getUid } from '../../util.js';\\nimport TileRange from '../../TileRange.js';\\nimport TileState from '../../TileState.js';\\nimport { createEmpty, equals, getIntersection, getTopLeft } from '../../extent.js';\\nimport CanvasLayerRenderer from './Layer.js';\\nimport { apply as applyTransform, compose as composeTransform, makeInverse, toString as transformToString } from '../../transform.js';\\n/**\\n * @classdesc\\n * Canvas renderer for tile layers.\\n * @api\\n */\\nvar CanvasTileLayerRenderer = /** @class */ (function (_super) {\\n    __extends(CanvasTileLayerRenderer, _super);\\n    /**\\n     * @param {import(\\\"../../layer/Tile.js\\\").default|import(\\\"../../layer/VectorTile.js\\\").default} tileLayer Tile layer.\\n     */\\n    function CanvasTileLayerRenderer(tileLayer) {\\n        var _this = _super.call(this, tileLayer) || this;\\n        /**\\n         * Rendered extent has changed since the previous `renderFrame()` call\\n         * @type {boolean}\\n         */\\n        _this.extentChanged = true;\\n        /**\\n         * @private\\n         * @type {import(\\\"../../extent.js\\\").Extent}\\n         */\\n        _this.renderedExtent_ = null;\\n        /**\\n         * @protected\\n         * @type {number}\\n         */\\n        _this.renderedRevision;\\n        /**\\n         * @protected\\n         * @type {!Array<import(\\\"../../Tile.js\\\").default>}\\n         */\\n        _this.renderedTiles = [];\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.newTiles_ = false;\\n        /**\\n         * @protected\\n         * @type {import(\\\"../../extent.js\\\").Extent}\\n         */\\n        _this.tmpExtent = createEmpty();\\n        /**\\n         * @private\\n         * @type {import(\\\"../../TileRange.js\\\").default}\\n         */\\n        _this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\\n        /**\\n         * @protected\\n         * @type {number}\\n         */\\n        _this.zDirection = 0;\\n        return _this;\\n    }\\n    /**\\n     * @protected\\n     * @param {import(\\\"../../Tile.js\\\").default} tile Tile.\\n     * @return {boolean} Tile is drawable.\\n     */\\n    CanvasTileLayerRenderer.prototype.isDrawableTile = function (tile) {\\n        var tileLayer = /** @type {import(\\\"../../layer/Tile.js\\\").default} */ (this.getLayer());\\n        var tileState = tile.getState();\\n        var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\\n        return tileState == TileState.LOADED ||\\n            tileState == TileState.EMPTY ||\\n            tileState == TileState.ERROR && !useInterimTilesOnError;\\n    };\\n    /**\\n     * @param {number} z Tile coordinate z.\\n     * @param {number} x Tile coordinate x.\\n     * @param {number} y Tile coordinate y.\\n     * @param {import(\\\"../../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     * @return {!import(\\\"../../Tile.js\\\").default} Tile.\\n     */\\n    CanvasTileLayerRenderer.prototype.getTile = function (z, x, y, frameState) {\\n        var pixelRatio = frameState.pixelRatio;\\n        var projection = frameState.viewState.projection;\\n        var tileLayer = /** @type {import(\\\"../../layer/Tile.js\\\").default} */ (this.getLayer());\\n        var tileSource = tileLayer.getSource();\\n        var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\\n        if (tile.getState() == TileState.ERROR) {\\n            if (!tileLayer.getUseInterimTilesOnError()) {\\n                // When useInterimTilesOnError is false, we consider the error tile as loaded.\\n                tile.setState(TileState.LOADED);\\n            }\\n            else if (tileLayer.getPreload() > 0) {\\n                // Preloaded tiles for lower resolutions might have finished loading.\\n                this.newTiles_ = true;\\n            }\\n        }\\n        if (!this.isDrawableTile(tile)) {\\n            tile = tile.getInterimTile();\\n        }\\n        return tile;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    CanvasTileLayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\\n        if (this.isDrawableTile(tile)) {\\n            return _super.prototype.loadedTileCallback.call(this, tiles, zoom, tile);\\n        }\\n        return false;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    CanvasTileLayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\\n        return true;\\n    };\\n    /**\\n     * TODO: File a TypeScript issue about inheritDoc not being followed\\n     * all the way.  Without this explicit return type, the VectorTileLayer\\n     * renderFrame function does not pass.\\n     *\\n     * @inheritDoc\\n     * @returns {HTMLElement} The rendered element.\\n     */\\n    CanvasTileLayerRenderer.prototype.renderFrame = function (frameState, layerState) {\\n        var context = this.context;\\n        var viewState = frameState.viewState;\\n        var projection = viewState.projection;\\n        var viewResolution = viewState.resolution;\\n        var viewCenter = viewState.center;\\n        var rotation = viewState.rotation;\\n        var pixelRatio = frameState.pixelRatio;\\n        var tileLayer = /** @type {import(\\\"../../layer/Tile.js\\\").default} */ (this.getLayer());\\n        var tileSource = tileLayer.getSource();\\n        var sourceRevision = tileSource.getRevision();\\n        var tileGrid = tileSource.getTileGridForProjection(projection);\\n        var zDirection = tileSource.zDirection === undefined ? this.zDirection : tileSource.zDirection;\\n        var z = tileGrid.getZForResolution(viewResolution, zDirection);\\n        var tileResolution = tileGrid.getResolution(z);\\n        var extent = frameState.extent;\\n        if (layerState.extent) {\\n            extent = getIntersection(extent, layerState.extent);\\n        }\\n        var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\\n        // desired dimensions of the canvas in pixels\\n        var width = Math.round(frameState.size[0] * tilePixelRatio);\\n        var height = Math.round(frameState.size[1] * tilePixelRatio);\\n        if (rotation) {\\n            var size = Math.round(Math.sqrt(width * width + height * height));\\n            width = height = size;\\n        }\\n        var dx = tileResolution * width / 2 / tilePixelRatio;\\n        var dy = tileResolution * height / 2 / tilePixelRatio;\\n        var canvasExtent = [\\n            viewCenter[0] - dx,\\n            viewCenter[1] - dy,\\n            viewCenter[0] + dx,\\n            viewCenter[1] + dy\\n        ];\\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\\n        /**\\n         * @type {Object<number, Object<string, import(\\\"../../Tile.js\\\").default>>}\\n         */\\n        var tilesToDrawByZ = {};\\n        tilesToDrawByZ[z] = {};\\n        var findLoadedTiles = this.createLoadedTileFinder(tileSource, projection, tilesToDrawByZ);\\n        var tmpExtent = this.tmpExtent;\\n        var tmpTileRange = this.tmpTileRange_;\\n        this.newTiles_ = false;\\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\\n                var tile = this.getTile(z, x, y, frameState);\\n                if (this.isDrawableTile(tile)) {\\n                    var uid = getUid(this);\\n                    if (tile.getState() == TileState.LOADED) {\\n                        tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\\n                        var inTransition = tile.inTransition(uid);\\n                        if (!this.newTiles_ && (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\\n                            this.newTiles_ = true;\\n                        }\\n                    }\\n                    if (tile.getAlpha(uid, frameState.time) === 1) {\\n                        // don't look for alt tiles if alpha is 1\\n                        continue;\\n                    }\\n                }\\n                var childTileRange = tileGrid.getTileCoordChildTileRange(tile.tileCoord, tmpTileRange, tmpExtent);\\n                var covered = false;\\n                if (childTileRange) {\\n                    covered = findLoadedTiles(z + 1, childTileRange);\\n                }\\n                if (!covered) {\\n                    tileGrid.forEachTileCoordParentTileRange(tile.tileCoord, findLoadedTiles, tmpTileRange, tmpExtent);\\n                }\\n            }\\n        }\\n        var canvas = context.canvas;\\n        var canvasScale = tileResolution / viewResolution;\\n        // set forward and inverse pixel transforms\\n        composeTransform(this.pixelTransform_, frameState.size[0] / 2, frameState.size[1] / 2, 1 / tilePixelRatio, 1 / tilePixelRatio, rotation, -width / 2, -height / 2);\\n        makeInverse(this.inversePixelTransform_, this.pixelTransform_);\\n        // set scale transform for calculating tile positions on the canvas\\n        composeTransform(this.tempTransform_, width / 2, height / 2, canvasScale, canvasScale, 0, -width / 2, -height / 2);\\n        if (canvas.width != width || canvas.height != height) {\\n            canvas.width = width;\\n            canvas.height = height;\\n        }\\n        else {\\n            context.clearRect(0, 0, width, height);\\n        }\\n        if (layerState.extent) {\\n            this.clipUnrotated(context, frameState, layerState.extent);\\n        }\\n        this.preRender(context, frameState);\\n        this.renderedTiles.length = 0;\\n        /** @type {Array<number>} */\\n        var zs = Object.keys(tilesToDrawByZ).map(Number);\\n        zs.sort(function (a, b) {\\n            if (a === z) {\\n                return 1;\\n            }\\n            else if (b === z) {\\n                return -1;\\n            }\\n            else {\\n                return a > b ? 1 : a < b ? -1 : 0;\\n            }\\n        });\\n        for (var i = 0, ii = zs.length; i < ii; ++i) {\\n            var currentZ = zs[i];\\n            var currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\\n            var currentResolution = tileGrid.getResolution(currentZ);\\n            var currentScale = currentResolution / tileResolution;\\n            var dx_1 = currentTilePixelSize[0] * currentScale * canvasScale;\\n            var dy_1 = currentTilePixelSize[1] * currentScale * canvasScale;\\n            var originTileCoord = tileGrid.getTileCoordForCoordAndZ(getTopLeft(canvasExtent), currentZ);\\n            var originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\\n            var origin_1 = applyTransform(this.tempTransform_, [\\n                tilePixelRatio * (originTileExtent[0] - canvasExtent[0]) / tileResolution,\\n                tilePixelRatio * (canvasExtent[3] - originTileExtent[3]) / tileResolution\\n            ]);\\n            var tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\\n            var tilesToDraw = tilesToDrawByZ[currentZ];\\n            for (var tileCoordKey in tilesToDraw) {\\n                var tile = tilesToDraw[tileCoordKey];\\n                var tileCoord = tile.tileCoord;\\n                // Calculate integer positions and sizes so that tiles align\\n                var floatX = (origin_1[0] - (originTileCoord[1] - tileCoord[1]) * dx_1);\\n                var nextX = Math.round(floatX + dx_1);\\n                var floatY = (origin_1[1] - (originTileCoord[2] - tileCoord[2]) * dy_1);\\n                var nextY = Math.round(floatY + dy_1);\\n                var x = Math.round(floatX);\\n                var y = Math.round(floatY);\\n                var w = nextX - x;\\n                var h = nextY - y;\\n                this.drawTileImage(tile, frameState, x, y, w, h, tileGutter, z === currentZ);\\n                this.renderedTiles.push(tile);\\n                this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\\n            }\\n        }\\n        this.renderedRevision = sourceRevision;\\n        this.renderedResolution = tileResolution;\\n        this.extentChanged = !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\\n        this.renderedExtent_ = canvasExtent;\\n        this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio, projection, extent, z, tileLayer.getPreload());\\n        this.updateCacheSize_(frameState, tileSource);\\n        this.scheduleExpireCache(frameState, tileSource);\\n        this.postRender(context, frameState);\\n        if (layerState.extent) {\\n            context.restore();\\n        }\\n        var opacity = layerState.opacity;\\n        if (opacity !== parseFloat(canvas.style.opacity)) {\\n            canvas.style.opacity = opacity;\\n        }\\n        var canvasTransform = transformToString(this.pixelTransform_);\\n        if (canvasTransform !== canvas.style.transform) {\\n            canvas.style.transform = canvasTransform;\\n        }\\n        return canvas;\\n    };\\n    /**\\n     * @param {import(\\\"../../Tile.js\\\").default} tile Tile.\\n     * @param {import(\\\"../../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     * @param {number} x Left of the tile.\\n     * @param {number} y Top of the tile.\\n     * @param {number} w Width of the tile.\\n     * @param {number} h Height of the tile.\\n     * @param {number} gutter Tile gutter.\\n     * @param {boolean} transition Apply an alpha transition.\\n     */\\n    CanvasTileLayerRenderer.prototype.drawTileImage = function (tile, frameState, x, y, w, h, gutter, transition) {\\n        var image = this.getTileImage(tile);\\n        if (!image) {\\n            return;\\n        }\\n        var uid = getUid(this);\\n        var alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\\n        var tileLayer = /** @type {import(\\\"../../layer/Tile.js\\\").default} */ (this.getLayer());\\n        var tileSource = tileLayer.getSource();\\n        if (alpha === 1 && !tileSource.getOpaque(frameState.viewState.projection)) {\\n            this.context.clearRect(x, y, w, h);\\n        }\\n        var alphaChanged = alpha !== this.context.globalAlpha;\\n        if (alphaChanged) {\\n            this.context.save();\\n            this.context.globalAlpha = alpha;\\n        }\\n        this.context.drawImage(image, gutter, gutter, image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\\n        if (alphaChanged) {\\n            this.context.restore();\\n        }\\n        if (alpha !== 1) {\\n            frameState.animate = true;\\n        }\\n        else if (transition) {\\n            tile.endTransition(uid);\\n        }\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    CanvasTileLayerRenderer.prototype.getImage = function () {\\n        var context = this.context;\\n        return context ? context.canvas : null;\\n    };\\n    /**\\n     * Get the image from a tile.\\n     * @param {import(\\\"../../Tile.js\\\").default} tile Tile.\\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\\n     * @protected\\n     */\\n    CanvasTileLayerRenderer.prototype.getTileImage = function (tile) {\\n        return /** @type {import(\\\"../../ImageTile.js\\\").default} */ (tile).getImage();\\n    };\\n    /**\\n     * @param {import(\\\"../../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     * @param {import(\\\"../../source/Tile.js\\\").default} tileSource Tile source.\\n     * @protected\\n     */\\n    CanvasTileLayerRenderer.prototype.scheduleExpireCache = function (frameState, tileSource) {\\n        if (tileSource.canExpireCache()) {\\n            /**\\n             * @param {import(\\\"../../source/Tile.js\\\").default} tileSource Tile source.\\n             * @param {import(\\\"../../PluggableMap.js\\\").default} map Map.\\n             * @param {import(\\\"../../PluggableMap.js\\\").FrameState} frameState Frame state.\\n             */\\n            var postRenderFunction = function (tileSource, map, frameState) {\\n                var tileSourceKey = getUid(tileSource);\\n                if (tileSourceKey in frameState.usedTiles) {\\n                    tileSource.expireCache(frameState.viewState.projection, frameState.usedTiles[tileSourceKey]);\\n                }\\n            }.bind(null, tileSource);\\n            frameState.postRenderFunctions.push(\\n            /** @type {import(\\\"../../PluggableMap.js\\\").PostRenderFunction} */ (postRenderFunction));\\n        }\\n    };\\n    /**\\n     * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\\n     * @param {import(\\\"../../source/Tile.js\\\").default} tileSource Tile source.\\n     * @param {import('../../Tile.js').default} tile Tile.\\n     * @protected\\n     */\\n    CanvasTileLayerRenderer.prototype.updateUsedTiles = function (usedTiles, tileSource, tile) {\\n        // FIXME should we use tilesToDrawByZ instead?\\n        var tileSourceKey = getUid(tileSource);\\n        if (!(tileSourceKey in usedTiles)) {\\n            usedTiles[tileSourceKey] = {};\\n        }\\n        usedTiles[tileSourceKey][tile.getKey()] = true;\\n    };\\n    /**\\n     * Check if the cache is big enough, and increase its size if necessary.\\n     * @param {import(\\\"../../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     * @param {import(\\\"../../source/Tile.js\\\").default} tileSource Tile source.\\n     * @private\\n     */\\n    CanvasTileLayerRenderer.prototype.updateCacheSize_ = function (frameState, tileSource) {\\n        var tileSourceKey = getUid(tileSource);\\n        var size = 0;\\n        if (tileSourceKey in frameState.usedTiles) {\\n            size += Object.keys(frameState.usedTiles[tileSourceKey]).length;\\n        }\\n        if (tileSourceKey in frameState.wantedTiles) {\\n            size += Object.keys(frameState.wantedTiles[tileSourceKey]).length;\\n        }\\n        var tileCache = tileSource.tileCache;\\n        if (tileCache.highWaterMark < size) {\\n            tileCache.highWaterMark = size;\\n        }\\n    };\\n    /**\\n     * Manage tile pyramid.\\n     * This function performs a number of functions related to the tiles at the\\n     * current zoom and lower zoom levels:\\n     * - registers idle tiles in frameState.wantedTiles so that they are not\\n     *   discarded by the tile queue\\n     * - enqueues missing tiles\\n     * @param {import(\\\"../../PluggableMap.js\\\").FrameState} frameState Frame state.\\n     * @param {import(\\\"../../source/Tile.js\\\").default} tileSource Tile source.\\n     * @param {import(\\\"../../tilegrid/TileGrid.js\\\").default} tileGrid Tile grid.\\n     * @param {number} pixelRatio Pixel ratio.\\n     * @param {import(\\\"../../proj/Projection.js\\\").default} projection Projection.\\n     * @param {import(\\\"../../extent.js\\\").Extent} extent Extent.\\n     * @param {number} currentZ Current Z.\\n     * @param {number} preload Load low resolution tiles up to 'preload' levels.\\n     * @param {function(import(\\\"../../Tile.js\\\").default)=} opt_tileCallback Tile callback.\\n     * @protected\\n     */\\n    CanvasTileLayerRenderer.prototype.manageTilePyramid = function (frameState, tileSource, tileGrid, pixelRatio, projection, extent, currentZ, preload, opt_tileCallback) {\\n        var tileSourceKey = getUid(tileSource);\\n        if (!(tileSourceKey in frameState.wantedTiles)) {\\n            frameState.wantedTiles[tileSourceKey] = {};\\n        }\\n        var wantedTiles = frameState.wantedTiles[tileSourceKey];\\n        var tileQueue = frameState.tileQueue;\\n        var minZoom = tileGrid.getMinZoom();\\n        var tile, tileRange, tileResolution, x, y, z;\\n        for (z = minZoom; z <= currentZ; ++z) {\\n            tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\\n            tileResolution = tileGrid.getResolution(z);\\n            for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\\n                for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\\n                    if (currentZ - z <= preload) {\\n                        tile = tileSource.getTile(z, x, y, pixelRatio, projection);\\n                        if (tile.getState() == TileState.IDLE) {\\n                            wantedTiles[tile.getKey()] = true;\\n                            if (!tileQueue.isKeyQueued(tile.getKey())) {\\n                                tileQueue.enqueue([tile, tileSourceKey,\\n                                    tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\\n                            }\\n                        }\\n                        if (opt_tileCallback !== undefined) {\\n                            opt_tileCallback(tile);\\n                        }\\n                    }\\n                    else {\\n                        tileSource.useTile(z, x, y, projection);\\n                    }\\n                }\\n            }\\n        }\\n    };\\n    return CanvasTileLayerRenderer;\\n}(CanvasLayerRenderer));\\n/**\\n * @function\\n * @return {import(\\\"../../layer/Tile.js\\\").default|import(\\\"../../layer/VectorTile.js\\\").default}\\n */\\nCanvasTileLayerRenderer.prototype.getLayer;\\nexport default CanvasTileLayerRenderer;\\n//# sourceMappingURL=TileLayer.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/layer/Tile\\n */\\nimport BaseTileLayer from './BaseTile.js';\\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\\n/**\\n * @typedef {import(\\\"./BaseTile.js\\\").Options} Options\\n */\\n/**\\n * @classdesc\\n * For layer sources that provide pre-rendered, tiled images in grids that are\\n * organized by zoom levels for specific resolutions.\\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\\n * property on the layer object; for example, setting `title: 'My Title'` in the\\n * options means that `title` is observable, and has get/set accessors.\\n *\\n * @api\\n */\\nvar TileLayer = /** @class */ (function (_super) {\\n    __extends(TileLayer, _super);\\n    /**\\n     * @param {Options=} opt_options Tile layer options.\\n     */\\n    function TileLayer(opt_options) {\\n        return _super.call(this, opt_options) || this;\\n    }\\n    /**\\n     * Create a renderer for this layer.\\n     * @return {import(\\\"../renderer/Layer.js\\\").default} A layer renderer.\\n     * @protected\\n     */\\n    TileLayer.prototype.createRenderer = function () {\\n        return new CanvasTileLayerRenderer(this);\\n    };\\n    return TileLayer;\\n}(BaseTileLayer));\\nexport default TileLayer;\\n//# sourceMappingURL=Tile.js.map\",\"/**\\n * @module ol/colorlike\\n */\\nimport { toString } from './color.js';\\n/**\\n * A type accepted by CanvasRenderingContext2D.fillStyle\\n * or CanvasRenderingContext2D.strokeStyle.\\n * Represents a color, pattern, or gradient. The origin for patterns and\\n * gradients as fill style is an increment of 512 css pixels from map coordinate\\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\\n * must be a factor of two (2, 4, 8, ..., 512).\\n *\\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\\n * @api\\n */\\n/**\\n * @param {import(\\\"./color.js\\\").Color|ColorLike} color Color.\\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\\n * @api\\n */\\nexport function asColorLike(color) {\\n    if (Array.isArray(color)) {\\n        return toString(color);\\n    }\\n    else {\\n        return color;\\n    }\\n}\\n//# sourceMappingURL=colorlike.js.map\",\"/**\\n * @module ol/style/Image\\n */\\nimport { abstract } from '../util.js';\\n/**\\n * @typedef {Object} Options\\n * @property {number} opacity\\n * @property {boolean} rotateWithView\\n * @property {number} rotation\\n * @property {number} scale\\n */\\n/**\\n * @classdesc\\n * A base class used for creating subclasses and not instantiated in\\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\\n * {@link module:ol/style/RegularShape~RegularShape}.\\n * @abstract\\n * @api\\n */\\nvar ImageStyle = /** @class */ (function () {\\n    /**\\n     * @param {Options} options Options.\\n     */\\n    function ImageStyle(options) {\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        this.opacity_ = options.opacity;\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        this.rotateWithView_ = options.rotateWithView;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        this.rotation_ = options.rotation;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        this.scale_ = options.scale;\\n    }\\n    /**\\n     * Clones the style.\\n     * @return {ImageStyle} The cloned style.\\n     * @api\\n     */\\n    ImageStyle.prototype.clone = function () {\\n        return new ImageStyle({\\n            opacity: this.getOpacity(),\\n            scale: this.getScale(),\\n            rotation: this.getRotation(),\\n            rotateWithView: this.getRotateWithView()\\n        });\\n    };\\n    /**\\n     * Get the symbolizer opacity.\\n     * @return {number} Opacity.\\n     * @api\\n     */\\n    ImageStyle.prototype.getOpacity = function () {\\n        return this.opacity_;\\n    };\\n    /**\\n     * Determine whether the symbolizer rotates with the map.\\n     * @return {boolean} Rotate with map.\\n     * @api\\n     */\\n    ImageStyle.prototype.getRotateWithView = function () {\\n        return this.rotateWithView_;\\n    };\\n    /**\\n     * Get the symoblizer rotation.\\n     * @return {number} Rotation.\\n     * @api\\n     */\\n    ImageStyle.prototype.getRotation = function () {\\n        return this.rotation_;\\n    };\\n    /**\\n     * Get the symbolizer scale.\\n     * @return {number} Scale.\\n     * @api\\n     */\\n    ImageStyle.prototype.getScale = function () {\\n        return this.scale_;\\n    };\\n    /**\\n     * Get the anchor point in pixels. The anchor determines the center point for the\\n     * symbolizer.\\n     * @abstract\\n     * @return {Array<number>} Anchor.\\n     */\\n    ImageStyle.prototype.getAnchor = function () {\\n        return abstract();\\n    };\\n    /**\\n     * Get the image element for the symbolizer.\\n     * @abstract\\n     * @param {number} pixelRatio Pixel ratio.\\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\\n     */\\n    ImageStyle.prototype.getImage = function (pixelRatio) {\\n        return abstract();\\n    };\\n    /**\\n     * @abstract\\n     * @param {number} pixelRatio Pixel ratio.\\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\\n     */\\n    ImageStyle.prototype.getHitDetectionImage = function (pixelRatio) {\\n        return abstract();\\n    };\\n    /**\\n     * @abstract\\n     * @return {import(\\\"../ImageState.js\\\").default} Image state.\\n     */\\n    ImageStyle.prototype.getImageState = function () {\\n        return abstract();\\n    };\\n    /**\\n     * @abstract\\n     * @return {import(\\\"../size.js\\\").Size} Image size.\\n     */\\n    ImageStyle.prototype.getImageSize = function () {\\n        return abstract();\\n    };\\n    /**\\n     * @abstract\\n     * @return {import(\\\"../size.js\\\").Size} Size of the hit-detection image.\\n     */\\n    ImageStyle.prototype.getHitDetectionImageSize = function () {\\n        return abstract();\\n    };\\n    /**\\n     * Get the origin of the symbolizer.\\n     * @abstract\\n     * @return {Array<number>} Origin.\\n     */\\n    ImageStyle.prototype.getOrigin = function () {\\n        return abstract();\\n    };\\n    /**\\n     * Get the size of the symbolizer (in pixels).\\n     * @abstract\\n     * @return {import(\\\"../size.js\\\").Size} Size.\\n     */\\n    ImageStyle.prototype.getSize = function () {\\n        return abstract();\\n    };\\n    /**\\n     * Set the opacity.\\n     *\\n     * @param {number} opacity Opacity.\\n     * @api\\n     */\\n    ImageStyle.prototype.setOpacity = function (opacity) {\\n        this.opacity_ = opacity;\\n    };\\n    /**\\n     * Set whether to rotate the style with the view.\\n     *\\n     * @param {boolean} rotateWithView Rotate with map.\\n     * @api\\n     */\\n    ImageStyle.prototype.setRotateWithView = function (rotateWithView) {\\n        this.rotateWithView_ = rotateWithView;\\n    };\\n    /**\\n     * Set the rotation.\\n     *\\n     * @param {number} rotation Rotation.\\n     * @api\\n     */\\n    ImageStyle.prototype.setRotation = function (rotation) {\\n        this.rotation_ = rotation;\\n    };\\n    /**\\n     * Set the scale.\\n     *\\n     * @param {number} scale Scale.\\n     * @api\\n     */\\n    ImageStyle.prototype.setScale = function (scale) {\\n        this.scale_ = scale;\\n    };\\n    /**\\n     * @abstract\\n     * @param {function(this: T, import(\\\"../events/Event.js\\\").default): void} listener Listener function.\\n     * @param {T} thisArg Value to use as `this` when executing `listener`.\\n     * @return {import(\\\"../events.js\\\").EventsKey|undefined} Listener key.\\n     * @template T\\n     */\\n    ImageStyle.prototype.listenImageChange = function (listener, thisArg) {\\n        return abstract();\\n    };\\n    /**\\n     * Load not yet loaded URI.\\n     * @abstract\\n     */\\n    ImageStyle.prototype.load = function () {\\n        abstract();\\n    };\\n    /**\\n     * @abstract\\n     * @param {function(this: T, import(\\\"../events/Event.js\\\").default): void} listener Listener function.\\n     * @param {T} thisArg Value to use as `this` when executing `listener`.\\n     * @template T\\n     */\\n    ImageStyle.prototype.unlistenImageChange = function (listener, thisArg) {\\n        abstract();\\n    };\\n    return ImageStyle;\\n}());\\nexport default ImageStyle;\\n//# sourceMappingURL=Image.js.map\",\"/**\\n * @module ol/style/RegularShape\\n */\\nvar __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\nimport { asColorLike } from '../colorlike.js';\\nimport { createCanvasContext2D } from '../dom.js';\\nimport ImageState from '../ImageState.js';\\nimport { defaultStrokeStyle, defaultFillStyle, defaultLineCap, defaultLineWidth, defaultLineJoin, defaultMiterLimit } from '../render/canvas.js';\\nimport ImageStyle from './Image.js';\\n/**\\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\\n * @typedef {Object} Options\\n * @property {import(\\\"./Fill.js\\\").default} [fill] Fill style.\\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\\n * is the number of sides.\\n * @property {number} [radius] Radius of a regular polygon.\\n * @property {number} [radius1] Outer radius of a star.\\n * @property {number} [radius2] Inner radius of a star.\\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\\n * @property {import(\\\"./Stroke.js\\\").default} [stroke] Stroke style.\\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\\n */\\n/**\\n * @typedef {Object} RenderOptions\\n * @property {import(\\\"../colorlike.js\\\").ColorLike} [strokeStyle]\\n * @property {number} strokeWidth\\n * @property {number} size\\n * @property {string} lineCap\\n * @property {Array<number>} lineDash\\n * @property {number} lineDashOffset\\n * @property {string} lineJoin\\n * @property {number} miterLimit\\n */\\n/**\\n * @classdesc\\n * Set regular shape style for vector features. The resulting shape will be\\n * a regular polygon when `radius` is provided, or a star when `radius1` and\\n * `radius2` are provided.\\n * @api\\n */\\nvar RegularShape = /** @class */ (function (_super) {\\n    __extends(RegularShape, _super);\\n    /**\\n     * @param {Options} options Options.\\n     */\\n    function RegularShape(options) {\\n        var _this = this;\\n        /**\\n         * @type {boolean}\\n         */\\n        var rotateWithView = options.rotateWithView !== undefined ?\\n            options.rotateWithView : false;\\n        _this = _super.call(this, {\\n            opacity: 1,\\n            rotateWithView: rotateWithView,\\n            rotation: options.rotation !== undefined ? options.rotation : 0,\\n            scale: 1\\n        }) || this;\\n        /**\\n         * @private\\n         * @type {HTMLCanvasElement}\\n         */\\n        _this.canvas_ = null;\\n        /**\\n         * @private\\n         * @type {HTMLCanvasElement}\\n         */\\n        _this.hitDetectionCanvas_ = null;\\n        /**\\n         * @private\\n         * @type {import(\\\"./Fill.js\\\").default}\\n         */\\n        _this.fill_ = options.fill !== undefined ? options.fill : null;\\n        /**\\n         * @private\\n         * @type {Array<number>}\\n         */\\n        _this.origin_ = [0, 0];\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.points_ = options.points;\\n        /**\\n         * @protected\\n         * @type {number}\\n         */\\n        _this.radius_ = /** @type {number} */ (options.radius !== undefined ?\\n            options.radius : options.radius1);\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        _this.radius2_ = options.radius2;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.angle_ = options.angle !== undefined ? options.angle : 0;\\n        /**\\n         * @private\\n         * @type {import(\\\"./Stroke.js\\\").default}\\n         */\\n        _this.stroke_ = options.stroke !== undefined ? options.stroke : null;\\n        /**\\n         * @private\\n         * @type {Array<number>}\\n         */\\n        _this.anchor_ = null;\\n        /**\\n         * @private\\n         * @type {import(\\\"../size.js\\\").Size}\\n         */\\n        _this.size_ = null;\\n        /**\\n         * @private\\n         * @type {import(\\\"../size.js\\\").Size}\\n         */\\n        _this.imageSize_ = null;\\n        /**\\n         * @private\\n         * @type {import(\\\"../size.js\\\").Size}\\n         */\\n        _this.hitDetectionImageSize_ = null;\\n        _this.render_();\\n        return _this;\\n    }\\n    /**\\n     * Clones the style.\\n     * @return {RegularShape} The cloned style.\\n     * @api\\n     */\\n    RegularShape.prototype.clone = function () {\\n        var style = new RegularShape({\\n            fill: this.getFill() ? this.getFill().clone() : undefined,\\n            points: this.getPoints(),\\n            radius: this.getRadius(),\\n            radius2: this.getRadius2(),\\n            angle: this.getAngle(),\\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\\n            rotation: this.getRotation(),\\n            rotateWithView: this.getRotateWithView()\\n        });\\n        style.setOpacity(this.getOpacity());\\n        style.setScale(this.getScale());\\n        return style;\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    RegularShape.prototype.getAnchor = function () {\\n        return this.anchor_;\\n    };\\n    /**\\n     * Get the angle used in generating the shape.\\n     * @return {number} Shape's rotation in radians.\\n     * @api\\n     */\\n    RegularShape.prototype.getAngle = function () {\\n        return this.angle_;\\n    };\\n    /**\\n     * Get the fill style for the shape.\\n     * @return {import(\\\"./Fill.js\\\").default} Fill style.\\n     * @api\\n     */\\n    RegularShape.prototype.getFill = function () {\\n        return this.fill_;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    RegularShape.prototype.getHitDetectionImage = function (pixelRatio) {\\n        return this.hitDetectionCanvas_;\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    RegularShape.prototype.getImage = function (pixelRatio) {\\n        return this.canvas_;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    RegularShape.prototype.getImageSize = function () {\\n        return this.imageSize_;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    RegularShape.prototype.getHitDetectionImageSize = function () {\\n        return this.hitDetectionImageSize_;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    RegularShape.prototype.getImageState = function () {\\n        return ImageState.LOADED;\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    RegularShape.prototype.getOrigin = function () {\\n        return this.origin_;\\n    };\\n    /**\\n     * Get the number of points for generating the shape.\\n     * @return {number} Number of points for stars and regular polygons.\\n     * @api\\n     */\\n    RegularShape.prototype.getPoints = function () {\\n        return this.points_;\\n    };\\n    /**\\n     * Get the (primary) radius for the shape.\\n     * @return {number} Radius.\\n     * @api\\n     */\\n    RegularShape.prototype.getRadius = function () {\\n        return this.radius_;\\n    };\\n    /**\\n     * Get the secondary radius for the shape.\\n     * @return {number|undefined} Radius2.\\n     * @api\\n     */\\n    RegularShape.prototype.getRadius2 = function () {\\n        return this.radius2_;\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    RegularShape.prototype.getSize = function () {\\n        return this.size_;\\n    };\\n    /**\\n     * Get the stroke style for the shape.\\n     * @return {import(\\\"./Stroke.js\\\").default} Stroke style.\\n     * @api\\n     */\\n    RegularShape.prototype.getStroke = function () {\\n        return this.stroke_;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    RegularShape.prototype.listenImageChange = function (listener, thisArg) {\\n        return undefined;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    RegularShape.prototype.load = function () { };\\n    /**\\n     * @inheritDoc\\n     */\\n    RegularShape.prototype.unlistenImageChange = function (listener, thisArg) { };\\n    /**\\n     * @protected\\n     */\\n    RegularShape.prototype.render_ = function () {\\n        var lineCap = '';\\n        var lineJoin = '';\\n        var miterLimit = 0;\\n        var lineDash = null;\\n        var lineDashOffset = 0;\\n        var strokeStyle;\\n        var strokeWidth = 0;\\n        if (this.stroke_) {\\n            strokeStyle = this.stroke_.getColor();\\n            if (strokeStyle === null) {\\n                strokeStyle = defaultStrokeStyle;\\n            }\\n            strokeStyle = asColorLike(strokeStyle);\\n            strokeWidth = this.stroke_.getWidth();\\n            if (strokeWidth === undefined) {\\n                strokeWidth = defaultLineWidth;\\n            }\\n            lineDash = this.stroke_.getLineDash();\\n            lineDashOffset = this.stroke_.getLineDashOffset();\\n            lineJoin = this.stroke_.getLineJoin();\\n            if (lineJoin === undefined) {\\n                lineJoin = defaultLineJoin;\\n            }\\n            lineCap = this.stroke_.getLineCap();\\n            if (lineCap === undefined) {\\n                lineCap = defaultLineCap;\\n            }\\n            miterLimit = this.stroke_.getMiterLimit();\\n            if (miterLimit === undefined) {\\n                miterLimit = defaultMiterLimit;\\n            }\\n        }\\n        var size = 2 * (this.radius_ + strokeWidth) + 1;\\n        /** @type {RenderOptions} */\\n        var renderOptions = {\\n            strokeStyle: strokeStyle,\\n            strokeWidth: strokeWidth,\\n            size: size,\\n            lineCap: lineCap,\\n            lineDash: lineDash,\\n            lineDashOffset: lineDashOffset,\\n            lineJoin: lineJoin,\\n            miterLimit: miterLimit\\n        };\\n        var context = createCanvasContext2D(size, size);\\n        this.canvas_ = context.canvas;\\n        // canvas.width and height are rounded to the closest integer\\n        size = this.canvas_.width;\\n        var imageSize = size;\\n        this.draw_(renderOptions, context, 0, 0);\\n        this.createHitDetectionCanvas_(renderOptions);\\n        this.anchor_ = [size / 2, size / 2];\\n        this.size_ = [size, size];\\n        this.imageSize_ = [imageSize, imageSize];\\n    };\\n    /**\\n     * @private\\n     * @param {RenderOptions} renderOptions Render options.\\n     * @param {CanvasRenderingContext2D} context The rendering context.\\n     * @param {number} x The origin for the symbol (x).\\n     * @param {number} y The origin for the symbol (y).\\n     */\\n    RegularShape.prototype.draw_ = function (renderOptions, context, x, y) {\\n        var i, angle0, radiusC;\\n        // reset transform\\n        context.setTransform(1, 0, 0, 1, 0, 0);\\n        // then move to (x, y)\\n        context.translate(x, y);\\n        context.beginPath();\\n        var points = this.points_;\\n        if (points === Infinity) {\\n            context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\\n        }\\n        else {\\n            var radius2 = (this.radius2_ !== undefined) ? this.radius2_\\n                : this.radius_;\\n            if (radius2 !== this.radius_) {\\n                points = 2 * points;\\n            }\\n            for (i = 0; i <= points; i++) {\\n                angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\\n                radiusC = i % 2 === 0 ? this.radius_ : radius2;\\n                context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\\n            }\\n        }\\n        if (this.fill_) {\\n            var color = this.fill_.getColor();\\n            if (color === null) {\\n                color = defaultFillStyle;\\n            }\\n            context.fillStyle = asColorLike(color);\\n            context.fill();\\n        }\\n        if (this.stroke_) {\\n            context.strokeStyle = renderOptions.strokeStyle;\\n            context.lineWidth = renderOptions.strokeWidth;\\n            if (context.setLineDash && renderOptions.lineDash) {\\n                context.setLineDash(renderOptions.lineDash);\\n                context.lineDashOffset = renderOptions.lineDashOffset;\\n            }\\n            context.lineCap = /** @type {CanvasLineCap} */ (renderOptions.lineCap);\\n            context.lineJoin = /** @type {CanvasLineJoin} */ (renderOptions.lineJoin);\\n            context.miterLimit = renderOptions.miterLimit;\\n            context.stroke();\\n        }\\n        context.closePath();\\n    };\\n    /**\\n     * @private\\n     * @param {RenderOptions} renderOptions Render options.\\n     */\\n    RegularShape.prototype.createHitDetectionCanvas_ = function (renderOptions) {\\n        this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\\n        if (this.fill_) {\\n            this.hitDetectionCanvas_ = this.canvas_;\\n            return;\\n        }\\n        // if no fill style is set, create an extra hit-detection image with a\\n        // default fill style\\n        var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\\n        this.hitDetectionCanvas_ = context.canvas;\\n        this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\\n    };\\n    /**\\n     * @private\\n     * @param {RenderOptions} renderOptions Render options.\\n     * @param {CanvasRenderingContext2D} context The context.\\n     * @param {number} x The origin for the symbol (x).\\n     * @param {number} y The origin for the symbol (y).\\n     */\\n    RegularShape.prototype.drawHitDetectionCanvas_ = function (renderOptions, context, x, y) {\\n        // reset transform\\n        context.setTransform(1, 0, 0, 1, 0, 0);\\n        // then move to (x, y)\\n        context.translate(x, y);\\n        context.beginPath();\\n        var points = this.points_;\\n        if (points === Infinity) {\\n            context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\\n        }\\n        else {\\n            var radius2 = (this.radius2_ !== undefined) ? this.radius2_\\n                : this.radius_;\\n            if (radius2 !== this.radius_) {\\n                points = 2 * points;\\n            }\\n            var i = void 0, radiusC = void 0, angle0 = void 0;\\n            for (i = 0; i <= points; i++) {\\n                angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\\n                radiusC = i % 2 === 0 ? this.radius_ : radius2;\\n                context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\\n            }\\n        }\\n        context.fillStyle = defaultFillStyle;\\n        context.fill();\\n        if (this.stroke_) {\\n            context.strokeStyle = renderOptions.strokeStyle;\\n            context.lineWidth = renderOptions.strokeWidth;\\n            if (renderOptions.lineDash) {\\n                context.setLineDash(renderOptions.lineDash);\\n                context.lineDashOffset = renderOptions.lineDashOffset;\\n            }\\n            context.stroke();\\n        }\\n        context.closePath();\\n    };\\n    return RegularShape;\\n}(ImageStyle));\\nexport default RegularShape;\\n//# sourceMappingURL=RegularShape.js.map\",\"/**\\n * @module ol/style/Circle\\n */\\nvar __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\nimport RegularShape from './RegularShape.js';\\n/**\\n * @typedef {Object} Options\\n * @property {import(\\\"./Fill.js\\\").default} [fill] Fill style.\\n * @property {number} radius Circle radius.\\n * @property {import(\\\"./Stroke.js\\\").default} [stroke] Stroke style.\\n */\\n/**\\n * @classdesc\\n * Set circle style for vector features.\\n * @api\\n */\\nvar CircleStyle = /** @class */ (function (_super) {\\n    __extends(CircleStyle, _super);\\n    /**\\n     * @param {Options=} opt_options Options.\\n     */\\n    function CircleStyle(opt_options) {\\n        var _this = this;\\n        var options = opt_options || /** @type {Options} */ ({});\\n        _this = _super.call(this, {\\n            points: Infinity,\\n            fill: options.fill,\\n            radius: options.radius,\\n            stroke: options.stroke\\n        }) || this;\\n        return _this;\\n    }\\n    /**\\n    * Clones the style.\\n    * @return {CircleStyle} The cloned style.\\n    * @override\\n    * @api\\n    */\\n    CircleStyle.prototype.clone = function () {\\n        var style = new CircleStyle({\\n            fill: this.getFill() ? this.getFill().clone() : undefined,\\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\\n            radius: this.getRadius()\\n        });\\n        style.setOpacity(this.getOpacity());\\n        style.setScale(this.getScale());\\n        return style;\\n    };\\n    /**\\n    * Set the circle radius.\\n    *\\n    * @param {number} radius Circle radius.\\n    * @api\\n    */\\n    CircleStyle.prototype.setRadius = function (radius) {\\n        this.radius_ = radius;\\n    };\\n    return CircleStyle;\\n}(RegularShape));\\nexport default CircleStyle;\\n//# sourceMappingURL=Circle.js.map\",\"/**\\n * @module ol/style/Fill\\n */\\n/**\\n * @typedef {Object} Options\\n * @property {import(\\\"../color.js\\\").Color|import(\\\"../colorlike.js\\\").ColorLike} [color=null] A color, gradient or pattern.\\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\\n * Default null; if null, the Canvas/renderer default black will be used.\\n */\\n/**\\n * @classdesc\\n * Set fill style for vector features.\\n * @api\\n */\\nvar Fill = /** @class */ (function () {\\n    /**\\n     * @param {Options=} opt_options Options.\\n     */\\n    function Fill(opt_options) {\\n        var options = opt_options || {};\\n        /**\\n         * @private\\n         * @type {import(\\\"../color.js\\\").Color|import(\\\"../colorlike.js\\\").ColorLike}\\n         */\\n        this.color_ = options.color !== undefined ? options.color : null;\\n    }\\n    /**\\n     * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\\n     * @return {Fill} The cloned style.\\n     * @api\\n     */\\n    Fill.prototype.clone = function () {\\n        var color = this.getColor();\\n        return new Fill({\\n            color: Array.isArray(color) ? color.slice() : color || undefined\\n        });\\n    };\\n    /**\\n     * Get the fill color.\\n     * @return {import(\\\"../color.js\\\").Color|import(\\\"../colorlike.js\\\").ColorLike} Color.\\n     * @api\\n     */\\n    Fill.prototype.getColor = function () {\\n        return this.color_;\\n    };\\n    /**\\n     * Set the color.\\n     *\\n     * @param {import(\\\"../color.js\\\").Color|import(\\\"../colorlike.js\\\").ColorLike} color Color.\\n     * @api\\n     */\\n    Fill.prototype.setColor = function (color) {\\n        this.color_ = color;\\n    };\\n    return Fill;\\n}());\\nexport default Fill;\\n//# sourceMappingURL=Fill.js.map\",\"/**\\n * @module ol/style/Stroke\\n */\\n/**\\n * @typedef {Object} Options\\n * @property {import(\\\"../color.js\\\").Color|import(\\\"../colorlike.js\\\").ColorLike} [color] A color, gradient or pattern.\\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\\n * Default null; if null, the Canvas/renderer default black will be used.\\n * @property {string} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\\n * @property {string} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `undefined` (no dash).\\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\\n * @property {number} [lineDashOffset=0] Line dash offset.\\n * @property {number} [miterLimit=10] Miter limit.\\n * @property {number} [width] Width.\\n */\\n/**\\n * @classdesc\\n * Set stroke style for vector features.\\n * Note that the defaults given are the Canvas defaults, which will be used if\\n * option is not defined. The `get` functions return whatever was entered in\\n * the options; they will not return the default.\\n * @api\\n */\\nvar Stroke = /** @class */ (function () {\\n    /**\\n     * @param {Options=} opt_options Options.\\n     */\\n    function Stroke(opt_options) {\\n        var options = opt_options || {};\\n        /**\\n         * @private\\n         * @type {import(\\\"../color.js\\\").Color|import(\\\"../colorlike.js\\\").ColorLike}\\n         */\\n        this.color_ = options.color !== undefined ? options.color : null;\\n        /**\\n         * @private\\n         * @type {string|undefined}\\n         */\\n        this.lineCap_ = options.lineCap;\\n        /**\\n         * @private\\n         * @type {Array<number>}\\n         */\\n        this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        this.lineDashOffset_ = options.lineDashOffset;\\n        /**\\n         * @private\\n         * @type {string|undefined}\\n         */\\n        this.lineJoin_ = options.lineJoin;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        this.miterLimit_ = options.miterLimit;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        this.width_ = options.width;\\n    }\\n    /**\\n     * Clones the style.\\n     * @return {Stroke} The cloned style.\\n     * @api\\n     */\\n    Stroke.prototype.clone = function () {\\n        var color = this.getColor();\\n        return new Stroke({\\n            color: Array.isArray(color) ? color.slice() : color || undefined,\\n            lineCap: this.getLineCap(),\\n            lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\\n            lineDashOffset: this.getLineDashOffset(),\\n            lineJoin: this.getLineJoin(),\\n            miterLimit: this.getMiterLimit(),\\n            width: this.getWidth()\\n        });\\n    };\\n    /**\\n     * Get the stroke color.\\n     * @return {import(\\\"../color.js\\\").Color|import(\\\"../colorlike.js\\\").ColorLike} Color.\\n     * @api\\n     */\\n    Stroke.prototype.getColor = function () {\\n        return this.color_;\\n    };\\n    /**\\n     * Get the line cap type for the stroke.\\n     * @return {string|undefined} Line cap.\\n     * @api\\n     */\\n    Stroke.prototype.getLineCap = function () {\\n        return this.lineCap_;\\n    };\\n    /**\\n     * Get the line dash style for the stroke.\\n     * @return {Array<number>} Line dash.\\n     * @api\\n     */\\n    Stroke.prototype.getLineDash = function () {\\n        return this.lineDash_;\\n    };\\n    /**\\n     * Get the line dash offset for the stroke.\\n     * @return {number|undefined} Line dash offset.\\n     * @api\\n     */\\n    Stroke.prototype.getLineDashOffset = function () {\\n        return this.lineDashOffset_;\\n    };\\n    /**\\n     * Get the line join type for the stroke.\\n     * @return {string|undefined} Line join.\\n     * @api\\n     */\\n    Stroke.prototype.getLineJoin = function () {\\n        return this.lineJoin_;\\n    };\\n    /**\\n     * Get the miter limit for the stroke.\\n     * @return {number|undefined} Miter limit.\\n     * @api\\n     */\\n    Stroke.prototype.getMiterLimit = function () {\\n        return this.miterLimit_;\\n    };\\n    /**\\n     * Get the stroke width.\\n     * @return {number|undefined} Width.\\n     * @api\\n     */\\n    Stroke.prototype.getWidth = function () {\\n        return this.width_;\\n    };\\n    /**\\n     * Set the color.\\n     *\\n     * @param {import(\\\"../color.js\\\").Color|import(\\\"../colorlike.js\\\").ColorLike} color Color.\\n     * @api\\n     */\\n    Stroke.prototype.setColor = function (color) {\\n        this.color_ = color;\\n    };\\n    /**\\n     * Set the line cap.\\n     *\\n     * @param {string|undefined} lineCap Line cap.\\n     * @api\\n     */\\n    Stroke.prototype.setLineCap = function (lineCap) {\\n        this.lineCap_ = lineCap;\\n    };\\n    /**\\n     * Set the line dash.\\n     *\\n     * Please note that Internet Explorer 10 and lower [do not support][mdn] the\\n     * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\\n     * property will have no visual effect in these browsers.\\n     *\\n     * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\\n     *\\n     * @param {Array<number>} lineDash Line dash.\\n     * @api\\n     */\\n    Stroke.prototype.setLineDash = function (lineDash) {\\n        this.lineDash_ = lineDash;\\n    };\\n    /**\\n     * Set the line dash offset.\\n     *\\n     * @param {number|undefined} lineDashOffset Line dash offset.\\n     * @api\\n     */\\n    Stroke.prototype.setLineDashOffset = function (lineDashOffset) {\\n        this.lineDashOffset_ = lineDashOffset;\\n    };\\n    /**\\n     * Set the line join.\\n     *\\n     * @param {string|undefined} lineJoin Line join.\\n     * @api\\n     */\\n    Stroke.prototype.setLineJoin = function (lineJoin) {\\n        this.lineJoin_ = lineJoin;\\n    };\\n    /**\\n     * Set the miter limit.\\n     *\\n     * @param {number|undefined} miterLimit Miter limit.\\n     * @api\\n     */\\n    Stroke.prototype.setMiterLimit = function (miterLimit) {\\n        this.miterLimit_ = miterLimit;\\n    };\\n    /**\\n     * Set the width.\\n     *\\n     * @param {number|undefined} width Width.\\n     * @api\\n     */\\n    Stroke.prototype.setWidth = function (width) {\\n        this.width_ = width;\\n    };\\n    return Stroke;\\n}());\\nexport default Stroke;\\n//# sourceMappingURL=Stroke.js.map\",\"/**\\n * @module ol/style/Style\\n */\\n/**\\n * Feature styles.\\n *\\n * If no style is defined, the following default style is used:\\n * ```js\\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\\n *\\n *  var fill = new Fill({\\n *    color: 'rgba(255,255,255,0.4)'\\n *  });\\n *  var stroke = new Stroke({\\n *    color: '#3399CC',\\n *    width: 1.25\\n *  });\\n *  var styles = [\\n *    new Style({\\n *      image: new Circle({\\n *        fill: fill,\\n *        stroke: stroke,\\n *        radius: 5\\n *      }),\\n *      fill: fill,\\n *      stroke: stroke\\n *    })\\n *  ];\\n * ```\\n *\\n * A separate editing style has the following defaults:\\n * ```js\\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\\n *  import GeometryType from 'ol/geom/GeometryType';\\n *\\n *  var white = [255, 255, 255, 1];\\n *  var blue = [0, 153, 255, 1];\\n *  var width = 3;\\n *  styles[GeometryType.POLYGON] = [\\n *    new Style({\\n *      fill: new Fill({\\n *        color: [255, 255, 255, 0.5]\\n *      })\\n *    })\\n *  ];\\n *  styles[GeometryType.MULTI_POLYGON] =\\n *      styles[GeometryType.POLYGON];\\n *  styles[GeometryType.LINE_STRING] = [\\n *    new Style({\\n *      stroke: new Stroke({\\n *        color: white,\\n *        width: width + 2\\n *      })\\n *    }),\\n *    new Style({\\n *      stroke: new Stroke({\\n *        color: blue,\\n *        width: width\\n *      })\\n *    })\\n *  ];\\n *  styles[GeometryType.MULTI_LINE_STRING] =\\n *      styles[GeometryType.LINE_STRING];\\n *  styles[GeometryType.POINT] = [\\n *    new Style({\\n *      image: new Circle({\\n *        radius: width * 2,\\n *        fill: new Fill({\\n *          color: blue\\n *        }),\\n *        stroke: new Stroke({\\n *          color: white,\\n *          width: width / 2\\n *        })\\n *      }),\\n *      zIndex: Infinity\\n *    })\\n *  ];\\n *  styles[GeometryType.MULTI_POINT] =\\n *      styles[GeometryType.POINT];\\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\\n *      styles[GeometryType.POLYGON].concat(\\n *          styles[GeometryType.LINE_STRING],\\n *          styles[GeometryType.POINT]\\n *      );\\n * ```\\n */\\nimport { assert } from '../asserts.js';\\nimport GeometryType from '../geom/GeometryType.js';\\nimport CircleStyle from './Circle.js';\\nimport Fill from './Fill.js';\\nimport Stroke from './Stroke.js';\\n/**\\n * A function that takes an {@link module:ol/Feature} and a `{number}`\\n * representing the view's resolution. The function should return a\\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\\n * vector layer can be styled.\\n *\\n * @typedef {function(import(\\\"../Feature.js\\\").FeatureLike, number):(Style|Array<Style>)} StyleFunction\\n */\\n/**\\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\\n */\\n/**\\n * A function that takes an {@link module:ol/Feature} as argument and returns an\\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\\n *\\n * @typedef {function(import(\\\"../Feature.js\\\").FeatureLike):\\n *     (import(\\\"../geom/Geometry.js\\\").default|import(\\\"../render/Feature.js\\\").default|undefined)} GeometryFunction\\n */\\n/**\\n * Custom renderer function. Takes two arguments:\\n *\\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\\n * 2. The {@link module:ol/render~State} of the layer renderer.\\n *\\n * @typedef {function((import(\\\"../coordinate.js\\\").Coordinate|Array<import(\\\"../coordinate.js\\\").Coordinate>|Array<Array<import(\\\"../coordinate.js\\\").Coordinate>>),import(\\\"../render.js\\\").State): void}\\n * RenderFunction\\n */\\n/**\\n * @typedef {Object} Options\\n * @property {string|import(\\\"../geom/Geometry.js\\\").default|GeometryFunction} [geometry] Feature property or geometry\\n * or function returning a geometry to render for this style.\\n * @property {import(\\\"./Fill.js\\\").default} [fill] Fill style.\\n * @property {import(\\\"./Image.js\\\").default} [image] Image style.\\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\\n * ignored, and the provided function will be called with each render frame for each geometry.\\n * @property {import(\\\"./Stroke.js\\\").default} [stroke] Stroke style.\\n * @property {import(\\\"./Text.js\\\").default} [text] Text style.\\n * @property {number} [zIndex] Z index.\\n */\\n/**\\n * @classdesc\\n * Container for vector feature rendering styles. Any changes made to the style\\n * or its children through `set*()` methods will not take effect until the\\n * feature or layer that uses the style is re-rendered.\\n * @api\\n */\\nvar Style = /** @class */ (function () {\\n    /**\\n     * @param {Options=} opt_options Style options.\\n     */\\n    function Style(opt_options) {\\n        var options = opt_options || {};\\n        /**\\n         * @private\\n         * @type {string|import(\\\"../geom/Geometry.js\\\").default|GeometryFunction}\\n         */\\n        this.geometry_ = null;\\n        /**\\n         * @private\\n         * @type {!GeometryFunction}\\n         */\\n        this.geometryFunction_ = defaultGeometryFunction;\\n        if (options.geometry !== undefined) {\\n            this.setGeometry(options.geometry);\\n        }\\n        /**\\n         * @private\\n         * @type {import(\\\"./Fill.js\\\").default}\\n         */\\n        this.fill_ = options.fill !== undefined ? options.fill : null;\\n        /**\\n           * @private\\n           * @type {import(\\\"./Image.js\\\").default}\\n           */\\n        this.image_ = options.image !== undefined ? options.image : null;\\n        /**\\n         * @private\\n         * @type {RenderFunction|null}\\n         */\\n        this.renderer_ = options.renderer !== undefined ? options.renderer : null;\\n        /**\\n         * @private\\n         * @type {import(\\\"./Stroke.js\\\").default}\\n         */\\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\\n        /**\\n         * @private\\n         * @type {import(\\\"./Text.js\\\").default}\\n         */\\n        this.text_ = options.text !== undefined ? options.text : null;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        this.zIndex_ = options.zIndex;\\n    }\\n    /**\\n     * Clones the style.\\n     * @return {Style} The cloned style.\\n     * @api\\n     */\\n    Style.prototype.clone = function () {\\n        var geometry = this.getGeometry();\\n        if (geometry && typeof geometry === 'object') {\\n            geometry = /** @type {import(\\\"../geom/Geometry.js\\\").default} */ (geometry).clone();\\n        }\\n        return new Style({\\n            geometry: geometry,\\n            fill: this.getFill() ? this.getFill().clone() : undefined,\\n            image: this.getImage() ? this.getImage().clone() : undefined,\\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\\n            text: this.getText() ? this.getText().clone() : undefined,\\n            zIndex: this.getZIndex()\\n        });\\n    };\\n    /**\\n     * Get the custom renderer function that was configured with\\n     * {@link #setRenderer} or the `renderer` constructor option.\\n     * @return {RenderFunction|null} Custom renderer function.\\n     * @api\\n     */\\n    Style.prototype.getRenderer = function () {\\n        return this.renderer_;\\n    };\\n    /**\\n     * Sets a custom renderer function for this style. When set, `fill`, `stroke`\\n     * and `image` options of the style will be ignored.\\n     * @param {RenderFunction|null} renderer Custom renderer function.\\n     * @api\\n     */\\n    Style.prototype.setRenderer = function (renderer) {\\n        this.renderer_ = renderer;\\n    };\\n    /**\\n     * Get the geometry to be rendered.\\n     * @return {string|import(\\\"../geom/Geometry.js\\\").default|GeometryFunction}\\n     * Feature property or geometry or function that returns the geometry that will\\n     * be rendered with this style.\\n     * @api\\n     */\\n    Style.prototype.getGeometry = function () {\\n        return this.geometry_;\\n    };\\n    /**\\n     * Get the function used to generate a geometry for rendering.\\n     * @return {!GeometryFunction} Function that is called with a feature\\n     * and returns the geometry to render instead of the feature's geometry.\\n     * @api\\n     */\\n    Style.prototype.getGeometryFunction = function () {\\n        return this.geometryFunction_;\\n    };\\n    /**\\n     * Get the fill style.\\n     * @return {import(\\\"./Fill.js\\\").default} Fill style.\\n     * @api\\n     */\\n    Style.prototype.getFill = function () {\\n        return this.fill_;\\n    };\\n    /**\\n     * Set the fill style.\\n     * @param {import(\\\"./Fill.js\\\").default} fill Fill style.\\n     * @api\\n     */\\n    Style.prototype.setFill = function (fill) {\\n        this.fill_ = fill;\\n    };\\n    /**\\n     * Get the image style.\\n     * @return {import(\\\"./Image.js\\\").default} Image style.\\n     * @api\\n     */\\n    Style.prototype.getImage = function () {\\n        return this.image_;\\n    };\\n    /**\\n     * Set the image style.\\n     * @param {import(\\\"./Image.js\\\").default} image Image style.\\n     * @api\\n     */\\n    Style.prototype.setImage = function (image) {\\n        this.image_ = image;\\n    };\\n    /**\\n     * Get the stroke style.\\n     * @return {import(\\\"./Stroke.js\\\").default} Stroke style.\\n     * @api\\n     */\\n    Style.prototype.getStroke = function () {\\n        return this.stroke_;\\n    };\\n    /**\\n     * Set the stroke style.\\n     * @param {import(\\\"./Stroke.js\\\").default} stroke Stroke style.\\n     * @api\\n     */\\n    Style.prototype.setStroke = function (stroke) {\\n        this.stroke_ = stroke;\\n    };\\n    /**\\n     * Get the text style.\\n     * @return {import(\\\"./Text.js\\\").default} Text style.\\n     * @api\\n     */\\n    Style.prototype.getText = function () {\\n        return this.text_;\\n    };\\n    /**\\n     * Set the text style.\\n     * @param {import(\\\"./Text.js\\\").default} text Text style.\\n     * @api\\n     */\\n    Style.prototype.setText = function (text) {\\n        this.text_ = text;\\n    };\\n    /**\\n     * Get the z-index for the style.\\n     * @return {number|undefined} ZIndex.\\n     * @api\\n     */\\n    Style.prototype.getZIndex = function () {\\n        return this.zIndex_;\\n    };\\n    /**\\n     * Set a geometry that is rendered instead of the feature's geometry.\\n     *\\n     * @param {string|import(\\\"../geom/Geometry.js\\\").default|GeometryFunction} geometry\\n     *     Feature property or geometry or function returning a geometry to render\\n     *     for this style.\\n     * @api\\n     */\\n    Style.prototype.setGeometry = function (geometry) {\\n        if (typeof geometry === 'function') {\\n            this.geometryFunction_ = geometry;\\n        }\\n        else if (typeof geometry === 'string') {\\n            this.geometryFunction_ = function (feature) {\\n                return (\\n                /** @type {import(\\\"../geom/Geometry.js\\\").default} */ (feature.get(geometry)));\\n            };\\n        }\\n        else if (!geometry) {\\n            this.geometryFunction_ = defaultGeometryFunction;\\n        }\\n        else if (geometry !== undefined) {\\n            this.geometryFunction_ = function () {\\n                return (\\n                /** @type {import(\\\"../geom/Geometry.js\\\").default} */ (geometry));\\n            };\\n        }\\n        this.geometry_ = geometry;\\n    };\\n    /**\\n     * Set the z-index.\\n     *\\n     * @param {number|undefined} zIndex ZIndex.\\n     * @api\\n     */\\n    Style.prototype.setZIndex = function (zIndex) {\\n        this.zIndex_ = zIndex;\\n    };\\n    return Style;\\n}());\\n/**\\n * Convert the provided object into a style function.  Functions passed through\\n * unchanged.  Arrays of Style or single style objects wrapped in a\\n * new style function.\\n * @param {StyleFunction|Array<Style>|Style} obj\\n *     A style function, a single style, or an array of styles.\\n * @return {StyleFunction} A style function.\\n */\\nexport function toFunction(obj) {\\n    var styleFunction;\\n    if (typeof obj === 'function') {\\n        styleFunction = obj;\\n    }\\n    else {\\n        /**\\n         * @type {Array<Style>}\\n         */\\n        var styles_1;\\n        if (Array.isArray(obj)) {\\n            styles_1 = obj;\\n        }\\n        else {\\n            assert(typeof /** @type {?} */ (obj).getZIndex === 'function', 41); // Expected an `Style` or an array of `Style`\\n            var style = /** @type {Style} */ (obj);\\n            styles_1 = [style];\\n        }\\n        styleFunction = function () {\\n            return styles_1;\\n        };\\n    }\\n    return styleFunction;\\n}\\n/**\\n * @type {Array<Style>}\\n */\\nvar defaultStyles = null;\\n/**\\n * @param {import(\\\"../Feature.js\\\").FeatureLike} feature Feature.\\n * @param {number} resolution Resolution.\\n * @return {Array<Style>} Style.\\n */\\nexport function createDefaultStyle(feature, resolution) {\\n    // We don't use an immediately-invoked function\\n    // and a closure so we don't get an error at script evaluation time in\\n    // browsers that do not support Canvas. (import(\\\"./Circle.js\\\").CircleStyle does\\n    // canvas.getContext('2d') at construction time, which will cause an.error\\n    // in such browsers.)\\n    if (!defaultStyles) {\\n        var fill = new Fill({\\n            color: 'rgba(255,255,255,0.4)'\\n        });\\n        var stroke = new Stroke({\\n            color: '#3399CC',\\n            width: 1.25\\n        });\\n        defaultStyles = [\\n            new Style({\\n                image: new CircleStyle({\\n                    fill: fill,\\n                    stroke: stroke,\\n                    radius: 5\\n                }),\\n                fill: fill,\\n                stroke: stroke\\n            })\\n        ];\\n    }\\n    return defaultStyles;\\n}\\n/**\\n * Default styles for editing features.\\n * @return {Object<import(\\\"../geom/GeometryType.js\\\").default, Array<Style>>} Styles\\n */\\nexport function createEditingStyle() {\\n    /** @type {Object<import(\\\"../geom/GeometryType.js\\\").default, Array<Style>>} */\\n    var styles = {};\\n    var white = [255, 255, 255, 1];\\n    var blue = [0, 153, 255, 1];\\n    var width = 3;\\n    styles[GeometryType.POLYGON] = [\\n        new Style({\\n            fill: new Fill({\\n                color: [255, 255, 255, 0.5]\\n            })\\n        })\\n    ];\\n    styles[GeometryType.MULTI_POLYGON] =\\n        styles[GeometryType.POLYGON];\\n    styles[GeometryType.LINE_STRING] = [\\n        new Style({\\n            stroke: new Stroke({\\n                color: white,\\n                width: width + 2\\n            })\\n        }),\\n        new Style({\\n            stroke: new Stroke({\\n                color: blue,\\n                width: width\\n            })\\n        })\\n    ];\\n    styles[GeometryType.MULTI_LINE_STRING] =\\n        styles[GeometryType.LINE_STRING];\\n    styles[GeometryType.CIRCLE] =\\n        styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING]);\\n    styles[GeometryType.POINT] = [\\n        new Style({\\n            image: new CircleStyle({\\n                radius: width * 2,\\n                fill: new Fill({\\n                    color: blue\\n                }),\\n                stroke: new Stroke({\\n                    color: white,\\n                    width: width / 2\\n                })\\n            }),\\n            zIndex: Infinity\\n        })\\n    ];\\n    styles[GeometryType.MULTI_POINT] =\\n        styles[GeometryType.POINT];\\n    styles[GeometryType.GEOMETRY_COLLECTION] =\\n        styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\\n    return styles;\\n}\\n/**\\n * Function that is called with a feature and returns its default geometry.\\n * @param {import(\\\"../Feature.js\\\").FeatureLike} feature Feature to get the geometry for.\\n * @return {import(\\\"../geom/Geometry.js\\\").default|import(\\\"../render/Feature.js\\\").default|undefined} Geometry to render.\\n */\\nfunction defaultGeometryFunction(feature) {\\n    return feature.getGeometry();\\n}\\nexport default Style;\\n//# sourceMappingURL=Style.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/layer/BaseVector\\n */\\nimport Layer from './Layer.js';\\nimport { assign } from '../obj.js';\\nimport { createDefaultStyle, toFunction as toStyleFunction } from '../style/Style.js';\\n/**\\n * @typedef {Object} Options\\n * @property {number} [opacity=1] Opacity (0, 1).\\n * @property {boolean} [visible=true] Visibility.\\n * @property {import(\\\"../extent.js\\\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\\n * rendered outside of this extent.\\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\\n * method was used.\\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\\n * visible.\\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\\n * be visible.\\n * @property {import(\\\"../render.js\\\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\\n * features before rendering. By default features are drawn in the order that they are created. Use\\n * `null` to avoid the sort, but get an undefined draw order.\\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\\n * renderer when getting features from the vector source for the rendering or hit-detection.\\n * Recommended value: the size of the largest symbol, line width or label.\\n * @property {import(\\\"../source/Vector.js\\\").default} [source] Source.\\n * @property {import(\\\"../PluggableMap.js\\\").default} [map] Sets the layer as overlay on a map. The map will not manage\\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\\n * use {@link module:ol/Map#addLayer}.\\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\\n * means higher priority.\\n * @property {import(\\\"../style/Style.js\\\").StyleLike} [style] Layer style. See\\n * {@link module:ol/style} for default style which will be used if this is not defined.\\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\\n * be recreated during animations. This means that no vectors will be shown clipped, but the\\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\\n * batches will be recreated when no animation is active.\\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\\n * be recreated during interactions. See also `updateWhileAnimating`.\\n */\\n/**\\n * @enum {string}\\n * @private\\n */\\nvar Property = {\\n    RENDER_ORDER: 'renderOrder'\\n};\\n/**\\n * @classdesc\\n * Vector data that is rendered client-side.\\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\\n * property on the layer object; for example, setting `title: 'My Title'` in the\\n * options means that `title` is observable, and has get/set accessors.\\n *\\n * @template {import(\\\"../source/Vector.js\\\").default|import(\\\"../source/VectorTile.js\\\").default} VectorSourceType\\n * @extends {Layer<VectorSourceType>}\\n * @api\\n */\\nvar BaseVectorLayer = /** @class */ (function (_super) {\\n    __extends(BaseVectorLayer, _super);\\n    /**\\n     * @param {Options=} opt_options Options.\\n     */\\n    function BaseVectorLayer(opt_options) {\\n        var _this = this;\\n        var options = opt_options ?\\n            opt_options : /** @type {Options} */ ({});\\n        var baseOptions = assign({}, options);\\n        delete baseOptions.style;\\n        delete baseOptions.renderBuffer;\\n        delete baseOptions.updateWhileAnimating;\\n        delete baseOptions.updateWhileInteracting;\\n        _this = _super.call(this, baseOptions) || this;\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.declutter_ = options.declutter !== undefined ? options.declutter : false;\\n        /**\\n         * @type {number}\\n         * @private\\n         */\\n        _this.renderBuffer_ = options.renderBuffer !== undefined ?\\n            options.renderBuffer : 100;\\n        /**\\n         * User provided style.\\n         * @type {import(\\\"../style/Style.js\\\").StyleLike}\\n         * @private\\n         */\\n        _this.style_ = null;\\n        /**\\n         * Style function for use within the library.\\n         * @type {import(\\\"../style/Style.js\\\").StyleFunction|undefined}\\n         * @private\\n         */\\n        _this.styleFunction_ = undefined;\\n        _this.setStyle(options.style);\\n        /**\\n         * @type {boolean}\\n         * @private\\n         */\\n        _this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\\n            options.updateWhileAnimating : false;\\n        /**\\n         * @type {boolean}\\n         * @private\\n         */\\n        _this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\\n            options.updateWhileInteracting : false;\\n        return _this;\\n    }\\n    /**\\n     * @return {boolean} Declutter.\\n     */\\n    BaseVectorLayer.prototype.getDeclutter = function () {\\n        return this.declutter_;\\n    };\\n    /**\\n     * @return {number|undefined} Render buffer.\\n     */\\n    BaseVectorLayer.prototype.getRenderBuffer = function () {\\n        return this.renderBuffer_;\\n    };\\n    /**\\n     * @return {function(import(\\\"../Feature.js\\\").default, import(\\\"../Feature.js\\\").default): number|null|undefined} Render\\n     *     order.\\n     */\\n    BaseVectorLayer.prototype.getRenderOrder = function () {\\n        return (\\n        /** @type {import(\\\"../render.js\\\").OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER)));\\n    };\\n    /**\\n     * Get the style for features.  This returns whatever was passed to the `style`\\n     * option at construction or to the `setStyle` method.\\n     * @return {import(\\\"../style/Style.js\\\").StyleLike}\\n     *     Layer style.\\n     * @api\\n     */\\n    BaseVectorLayer.prototype.getStyle = function () {\\n        return this.style_;\\n    };\\n    /**\\n     * Get the style function.\\n     * @return {import(\\\"../style/Style.js\\\").StyleFunction|undefined} Layer style function.\\n     * @api\\n     */\\n    BaseVectorLayer.prototype.getStyleFunction = function () {\\n        return this.styleFunction_;\\n    };\\n    /**\\n     * @return {boolean} Whether the rendered layer should be updated while\\n     *     animating.\\n     */\\n    BaseVectorLayer.prototype.getUpdateWhileAnimating = function () {\\n        return this.updateWhileAnimating_;\\n    };\\n    /**\\n     * @return {boolean} Whether the rendered layer should be updated while\\n     *     interacting.\\n     */\\n    BaseVectorLayer.prototype.getUpdateWhileInteracting = function () {\\n        return this.updateWhileInteracting_;\\n    };\\n    /**\\n     * @param {import(\\\"../render.js\\\").OrderFunction|null|undefined} renderOrder\\n     *     Render order.\\n     */\\n    BaseVectorLayer.prototype.setRenderOrder = function (renderOrder) {\\n        this.set(Property.RENDER_ORDER, renderOrder);\\n    };\\n    /**\\n     * Set the style for features.  This can be a single style object, an array\\n     * of styles, or a function that takes a feature and resolution and returns\\n     * an array of styles. If it is `undefined` the default style is used. If\\n     * it is `null` the layer has no style (a `null` style), so only features\\n     * that have their own styles will be rendered in the layer. See\\n     * {@link module:ol/style} for information on the default style.\\n     * @param {import(\\\"../style/Style.js\\\").default|Array<import(\\\"../style/Style.js\\\").default>|import(\\\"../style/Style.js\\\").StyleFunction|null|undefined} style Layer style.\\n     * @api\\n     */\\n    BaseVectorLayer.prototype.setStyle = function (style) {\\n        this.style_ = style !== undefined ? style : createDefaultStyle;\\n        this.styleFunction_ = style === null ?\\n            undefined : toStyleFunction(this.style_);\\n        this.changed();\\n    };\\n    return BaseVectorLayer;\\n}(Layer));\\nexport default BaseVectorLayer;\\n//# sourceMappingURL=BaseVector.js.map\",\"/**\\n * @module ol/render/VectorContext\\n */\\n/**\\n * @classdesc\\n * Context for drawing geometries.  A vector context is available on render\\n * events and does not need to be constructed directly.\\n * @api\\n */\\nvar VectorContext = /** @class */ (function () {\\n    function VectorContext() {\\n    }\\n    /**\\n     * Render a geometry with a custom renderer.\\n     *\\n     * @param {import(\\\"../geom/SimpleGeometry.js\\\").default} geometry Geometry.\\n     * @param {import(\\\"../Feature.js\\\").FeatureLike} feature Feature.\\n     * @param {Function} renderer Renderer.\\n     */\\n    VectorContext.prototype.drawCustom = function (geometry, feature, renderer) { };\\n    /**\\n     * Render a geometry.\\n     *\\n     * @param {import(\\\"../geom/Geometry.js\\\").default} geometry The geometry to render.\\n     */\\n    VectorContext.prototype.drawGeometry = function (geometry) { };\\n    /**\\n     * Set the rendering style.\\n     *\\n     * @param {import(\\\"../style/Style.js\\\").default} style The rendering style.\\n     */\\n    VectorContext.prototype.setStyle = function (style) { };\\n    /**\\n     * @param {import(\\\"../geom/Circle.js\\\").default} circleGeometry Circle geometry.\\n     * @param {import(\\\"../Feature.js\\\").default} feature Feature.\\n     */\\n    VectorContext.prototype.drawCircle = function (circleGeometry, feature) { };\\n    /**\\n     * @param {import(\\\"../Feature.js\\\").default} feature Feature.\\n     * @param {import(\\\"../style/Style.js\\\").default} style Style.\\n     */\\n    VectorContext.prototype.drawFeature = function (feature, style) { };\\n    /**\\n     * @param {import(\\\"../geom/GeometryCollection.js\\\").default} geometryCollectionGeometry Geometry collection.\\n     * @param {import(\\\"../Feature.js\\\").default} feature Feature.\\n     */\\n    VectorContext.prototype.drawGeometryCollection = function (geometryCollectionGeometry, feature) { };\\n    /**\\n     * @param {import(\\\"../geom/LineString.js\\\").default|import(\\\"./Feature.js\\\").default} lineStringGeometry Line string geometry.\\n     * @param {import(\\\"../Feature.js\\\").FeatureLike} feature Feature.\\n     */\\n    VectorContext.prototype.drawLineString = function (lineStringGeometry, feature) { };\\n    /**\\n     * @param {import(\\\"../geom/MultiLineString.js\\\").default|import(\\\"./Feature.js\\\").default} multiLineStringGeometry MultiLineString geometry.\\n     * @param {import(\\\"../Feature.js\\\").FeatureLike} feature Feature.\\n     */\\n    VectorContext.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) { };\\n    /**\\n     * @param {import(\\\"../geom/MultiPoint.js\\\").default|import(\\\"./Feature.js\\\").default} multiPointGeometry MultiPoint geometry.\\n     * @param {import(\\\"../Feature.js\\\").FeatureLike} feature Feature.\\n     */\\n    VectorContext.prototype.drawMultiPoint = function (multiPointGeometry, feature) { };\\n    /**\\n     * @param {import(\\\"../geom/MultiPolygon.js\\\").default} multiPolygonGeometry MultiPolygon geometry.\\n     * @param {import(\\\"../Feature.js\\\").FeatureLike} feature Feature.\\n     */\\n    VectorContext.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) { };\\n    /**\\n     * @param {import(\\\"../geom/Point.js\\\").default|import(\\\"./Feature.js\\\").default} pointGeometry Point geometry.\\n     * @param {import(\\\"../Feature.js\\\").FeatureLike} feature Feature.\\n     */\\n    VectorContext.prototype.drawPoint = function (pointGeometry, feature) { };\\n    /**\\n     * @param {import(\\\"../geom/Polygon.js\\\").default|import(\\\"./Feature.js\\\").default} polygonGeometry Polygon geometry.\\n     * @param {import(\\\"../Feature.js\\\").FeatureLike} feature Feature.\\n     */\\n    VectorContext.prototype.drawPolygon = function (polygonGeometry, feature) { };\\n    /**\\n     * @param {import(\\\"../geom/Geometry.js\\\").default|import(\\\"./Feature.js\\\").default} geometry Geometry.\\n     * @param {import(\\\"../Feature.js\\\").FeatureLike} feature Feature.\\n     */\\n    VectorContext.prototype.drawText = function (geometry, feature) { };\\n    /**\\n     * @param {import(\\\"../style/Fill.js\\\").default} fillStyle Fill style.\\n     * @param {import(\\\"../style/Stroke.js\\\").default} strokeStyle Stroke style.\\n     */\\n    VectorContext.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) { };\\n    /**\\n     * @param {import(\\\"../style/Image.js\\\").default} imageStyle Image style.\\n     * @param {import(\\\"./canvas.js\\\").DeclutterGroup=} opt_declutterGroup Declutter.\\n     */\\n    VectorContext.prototype.setImageStyle = function (imageStyle, opt_declutterGroup) { };\\n    /**\\n     * @param {import(\\\"../style/Text.js\\\").default} textStyle Text style.\\n     * @param {import(\\\"./canvas.js\\\").DeclutterGroup=} opt_declutterGroup Declutter.\\n     */\\n    VectorContext.prototype.setTextStyle = function (textStyle, opt_declutterGroup) { };\\n    return VectorContext;\\n}());\\nexport default VectorContext;\\n//# sourceMappingURL=VectorContext.js.map\",\"/**\\n * @module ol/render/canvas/Instruction\\n */\\n/**\\n * @enum {number}\\n */\\nvar Instruction = {\\n    BEGIN_GEOMETRY: 0,\\n    BEGIN_PATH: 1,\\n    CIRCLE: 2,\\n    CLOSE_PATH: 3,\\n    CUSTOM: 4,\\n    DRAW_CHARS: 5,\\n    DRAW_IMAGE: 6,\\n    END_GEOMETRY: 7,\\n    FILL: 8,\\n    MOVE_TO_LINE_TO: 9,\\n    SET_FILL_STYLE: 10,\\n    SET_STROKE_STYLE: 11,\\n    STROKE: 12\\n};\\n/**\\n * @type {Array<Instruction>}\\n */\\nexport var fillInstruction = [Instruction.FILL];\\n/**\\n * @type {Array<Instruction>}\\n */\\nexport var strokeInstruction = [Instruction.STROKE];\\n/**\\n * @type {Array<Instruction>}\\n */\\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\\n/**\\n * @type {Array<Instruction>}\\n */\\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\\nexport default Instruction;\\n//# sourceMappingURL=Instruction.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/render/canvas/Builder\\n */\\nimport { equals, reverseSubArray } from '../../array.js';\\nimport { asColorLike } from '../../colorlike.js';\\nimport { buffer, clone, coordinateRelationship } from '../../extent.js';\\nimport Relationship from '../../extent/Relationship.js';\\nimport GeometryType from '../../geom/GeometryType.js';\\nimport { inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray } from '../../geom/flat/inflate.js';\\nimport VectorContext from '../VectorContext.js';\\nimport { defaultFillStyle, defaultStrokeStyle, defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset, defaultLineDash, defaultLineCap } from '../canvas.js';\\nimport CanvasInstruction from './Instruction.js';\\n/**\\n * @typedef {Object} SerializableInstructions\\n * @property {Array<*>} instructions The rendering instructions.\\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\\n * @property {Array<number>} coordinates The array of all coordinates.\\n * @property {!Object<string, import(\\\"../canvas.js\\\").TextState>} [textStates] The text states (decluttering).\\n * @property {!Object<string, import(\\\"../canvas.js\\\").FillState>} [fillStates] The fill states (decluttering).\\n * @property {!Object<string, import(\\\"../canvas.js\\\").StrokeState>} [strokeStates] The stroke states (decluttering).\\n */\\nvar CanvasBuilder = /** @class */ (function (_super) {\\n    __extends(CanvasBuilder, _super);\\n    /**\\n     * @param {number} tolerance Tolerance.\\n     * @param {import(\\\"../../extent.js\\\").Extent} maxExtent Maximum extent.\\n     * @param {number} resolution Resolution.\\n     * @param {number} pixelRatio Pixel ratio.\\n     */\\n    function CanvasBuilder(tolerance, maxExtent, resolution, pixelRatio) {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * @protected\\n         * @type {number}\\n         */\\n        _this.tolerance = tolerance;\\n        /**\\n         * @protected\\n         * @const\\n         * @type {import(\\\"../../extent.js\\\").Extent}\\n         */\\n        _this.maxExtent = maxExtent;\\n        /**\\n         * @protected\\n         * @type {number}\\n         */\\n        _this.pixelRatio = pixelRatio;\\n        /**\\n         * @protected\\n         * @type {number}\\n         */\\n        _this.maxLineWidth = 0;\\n        /**\\n         * @protected\\n         * @const\\n         * @type {number}\\n         */\\n        _this.resolution = resolution;\\n        /**\\n         * @private\\n         * @type {Array<*>}\\n         */\\n        _this.beginGeometryInstruction1_ = null;\\n        /**\\n         * @private\\n         * @type {Array<*>}\\n         */\\n        _this.beginGeometryInstruction2_ = null;\\n        /**\\n         * @private\\n         * @type {import(\\\"../../extent.js\\\").Extent}\\n         */\\n        _this.bufferedMaxExtent_ = null;\\n        /**\\n         * @protected\\n         * @type {Array<*>}\\n         */\\n        _this.instructions = [];\\n        /**\\n         * @protected\\n         * @type {Array<number>}\\n         */\\n        _this.coordinates = [];\\n        /**\\n         * @private\\n         * @type {import(\\\"../../coordinate.js\\\").Coordinate}\\n         */\\n        _this.tmpCoordinate_ = [];\\n        /**\\n         * @protected\\n         * @type {Array<*>}\\n         */\\n        _this.hitDetectionInstructions = [];\\n        /**\\n         * @protected\\n         * @type {import(\\\"../canvas.js\\\").FillStrokeState}\\n         */\\n        _this.state = /** @type {import(\\\"../canvas.js\\\").FillStrokeState} */ ({});\\n        return _this;\\n    }\\n    /**\\n     * @protected\\n     * @param {Array<number>} dashArray Dash array.\\n     * @return {Array<number>} Dash array with pixel ratio applied\\n     */\\n    CanvasBuilder.prototype.applyPixelRatio = function (dashArray) {\\n        var pixelRatio = this.pixelRatio;\\n        return pixelRatio == 1 ? dashArray : dashArray.map(function (dash) {\\n            return dash * pixelRatio;\\n        });\\n    };\\n    /**\\n     * @param {Array<number>} flatCoordinates Flat coordinates.\\n     * @param {number} offset Offset.\\n     * @param {number} end End.\\n     * @param {number} stride Stride.\\n     * @param {boolean} closed Last input coordinate equals first.\\n     * @param {boolean} skipFirst Skip first coordinate.\\n     * @protected\\n     * @return {number} My end.\\n     */\\n    CanvasBuilder.prototype.appendFlatCoordinates = function (flatCoordinates, offset, end, stride, closed, skipFirst) {\\n        var myEnd = this.coordinates.length;\\n        var extent = this.getBufferedMaxExtent();\\n        if (skipFirst) {\\n            offset += stride;\\n        }\\n        var lastXCoord = flatCoordinates[offset];\\n        var lastYCoord = flatCoordinates[offset + 1];\\n        var nextCoord = this.tmpCoordinate_;\\n        var skipped = true;\\n        var i, lastRel, nextRel;\\n        for (i = offset + stride; i < end; i += stride) {\\n            nextCoord[0] = flatCoordinates[i];\\n            nextCoord[1] = flatCoordinates[i + 1];\\n            nextRel = coordinateRelationship(extent, nextCoord);\\n            if (nextRel !== lastRel) {\\n                if (skipped) {\\n                    this.coordinates[myEnd++] = lastXCoord;\\n                    this.coordinates[myEnd++] = lastYCoord;\\n                }\\n                this.coordinates[myEnd++] = nextCoord[0];\\n                this.coordinates[myEnd++] = nextCoord[1];\\n                skipped = false;\\n            }\\n            else if (nextRel === Relationship.INTERSECTING) {\\n                this.coordinates[myEnd++] = nextCoord[0];\\n                this.coordinates[myEnd++] = nextCoord[1];\\n                skipped = false;\\n            }\\n            else {\\n                skipped = true;\\n            }\\n            lastXCoord = nextCoord[0];\\n            lastYCoord = nextCoord[1];\\n            lastRel = nextRel;\\n        }\\n        // Last coordinate equals first or only one point to append:\\n        if ((closed && skipped) || i === offset + stride) {\\n            this.coordinates[myEnd++] = lastXCoord;\\n            this.coordinates[myEnd++] = lastYCoord;\\n        }\\n        return myEnd;\\n    };\\n    /**\\n     * @param {Array<number>} flatCoordinates Flat coordinates.\\n     * @param {number} offset Offset.\\n     * @param {Array<number>} ends Ends.\\n     * @param {number} stride Stride.\\n     * @param {Array<number>} builderEnds Builder ends.\\n     * @return {number} Offset.\\n     */\\n    CanvasBuilder.prototype.drawCustomCoordinates_ = function (flatCoordinates, offset, ends, stride, builderEnds) {\\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\\n            var end = ends[i];\\n            var builderEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\\n            builderEnds.push(builderEnd);\\n            offset = end;\\n        }\\n        return offset;\\n    };\\n    /**\\n     * @inheritDoc.\\n     */\\n    CanvasBuilder.prototype.drawCustom = function (geometry, feature, renderer) {\\n        this.beginGeometry(feature);\\n        var type = geometry.getType();\\n        var stride = geometry.getStride();\\n        var builderBegin = this.coordinates.length;\\n        var flatCoordinates, builderEnd, builderEnds, builderEndss;\\n        var offset;\\n        if (type == GeometryType.MULTI_POLYGON) {\\n            geometry = /** @type {import(\\\"../../geom/MultiPolygon.js\\\").default} */ (geometry);\\n            flatCoordinates = geometry.getOrientedFlatCoordinates();\\n            builderEndss = [];\\n            var endss = geometry.getEndss();\\n            offset = 0;\\n            for (var i = 0, ii = endss.length; i < ii; ++i) {\\n                var myEnds = [];\\n                offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\\n                builderEndss.push(myEnds);\\n            }\\n            this.instructions.push([CanvasInstruction.CUSTOM,\\n                builderBegin, builderEndss, geometry, renderer, inflateMultiCoordinatesArray]);\\n        }\\n        else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\\n            builderEnds = [];\\n            flatCoordinates = (type == GeometryType.POLYGON) ?\\n                /** @type {import(\\\"../../geom/Polygon.js\\\").default} */ (geometry).getOrientedFlatCoordinates() :\\n                geometry.getFlatCoordinates();\\n            offset = this.drawCustomCoordinates_(flatCoordinates, 0, \\n            /** @type {import(\\\"../../geom/Polygon.js\\\").default|import(\\\"../../geom/MultiLineString.js\\\").default} */ (geometry).getEnds(), stride, builderEnds);\\n            this.instructions.push([CanvasInstruction.CUSTOM,\\n                builderBegin, builderEnds, geometry, renderer, inflateCoordinatesArray]);\\n        }\\n        else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\\n            flatCoordinates = geometry.getFlatCoordinates();\\n            builderEnd = this.appendFlatCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\\n            this.instructions.push([CanvasInstruction.CUSTOM,\\n                builderBegin, builderEnd, geometry, renderer, inflateCoordinates]);\\n        }\\n        else if (type == GeometryType.POINT) {\\n            flatCoordinates = geometry.getFlatCoordinates();\\n            this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\\n            builderEnd = this.coordinates.length;\\n            this.instructions.push([CanvasInstruction.CUSTOM,\\n                builderBegin, builderEnd, geometry, renderer]);\\n        }\\n        this.endGeometry(feature);\\n    };\\n    /**\\n     * @protected\\n     * @param {import(\\\"../../Feature.js\\\").FeatureLike} feature Feature.\\n     */\\n    CanvasBuilder.prototype.beginGeometry = function (feature) {\\n        this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\\n        this.instructions.push(this.beginGeometryInstruction1_);\\n        this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\\n        this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\\n    };\\n    /**\\n     * @return {SerializableInstructions} the serializable instructions.\\n     */\\n    CanvasBuilder.prototype.finish = function () {\\n        return {\\n            instructions: this.instructions,\\n            hitDetectionInstructions: this.hitDetectionInstructions,\\n            coordinates: this.coordinates\\n        };\\n    };\\n    /**\\n     * Reverse the hit detection instructions.\\n     */\\n    CanvasBuilder.prototype.reverseHitDetectionInstructions = function () {\\n        var hitDetectionInstructions = this.hitDetectionInstructions;\\n        // step 1 - reverse array\\n        hitDetectionInstructions.reverse();\\n        // step 2 - reverse instructions within geometry blocks\\n        var i;\\n        var n = hitDetectionInstructions.length;\\n        var instruction;\\n        var type;\\n        var begin = -1;\\n        for (i = 0; i < n; ++i) {\\n            instruction = hitDetectionInstructions[i];\\n            type = /** @type {CanvasInstruction} */ (instruction[0]);\\n            if (type == CanvasInstruction.END_GEOMETRY) {\\n                begin = i;\\n            }\\n            else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\\n                instruction[2] = i;\\n                reverseSubArray(this.hitDetectionInstructions, begin, i);\\n                begin = -1;\\n            }\\n        }\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    CanvasBuilder.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\\n        var state = this.state;\\n        if (fillStyle) {\\n            var fillStyleColor = fillStyle.getColor();\\n            state.fillStyle = asColorLike(fillStyleColor ?\\n                fillStyleColor : defaultFillStyle);\\n        }\\n        else {\\n            state.fillStyle = undefined;\\n        }\\n        if (strokeStyle) {\\n            var strokeStyleColor = strokeStyle.getColor();\\n            state.strokeStyle = asColorLike(strokeStyleColor ?\\n                strokeStyleColor : defaultStrokeStyle);\\n            var strokeStyleLineCap = strokeStyle.getLineCap();\\n            state.lineCap = strokeStyleLineCap !== undefined ?\\n                strokeStyleLineCap : defaultLineCap;\\n            var strokeStyleLineDash = strokeStyle.getLineDash();\\n            state.lineDash = strokeStyleLineDash ?\\n                strokeStyleLineDash.slice() : defaultLineDash;\\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\\n            state.lineDashOffset = strokeStyleLineDashOffset ?\\n                strokeStyleLineDashOffset : defaultLineDashOffset;\\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\\n            state.lineJoin = strokeStyleLineJoin !== undefined ?\\n                strokeStyleLineJoin : defaultLineJoin;\\n            var strokeStyleWidth = strokeStyle.getWidth();\\n            state.lineWidth = strokeStyleWidth !== undefined ?\\n                strokeStyleWidth : defaultLineWidth;\\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\\n            state.miterLimit = strokeStyleMiterLimit !== undefined ?\\n                strokeStyleMiterLimit : defaultMiterLimit;\\n            if (state.lineWidth > this.maxLineWidth) {\\n                this.maxLineWidth = state.lineWidth;\\n                // invalidate the buffered max extent cache\\n                this.bufferedMaxExtent_ = null;\\n            }\\n        }\\n        else {\\n            state.strokeStyle = undefined;\\n            state.lineCap = undefined;\\n            state.lineDash = null;\\n            state.lineDashOffset = undefined;\\n            state.lineJoin = undefined;\\n            state.lineWidth = undefined;\\n            state.miterLimit = undefined;\\n        }\\n    };\\n    /**\\n     * @param {import(\\\"../canvas.js\\\").FillStrokeState} state State.\\n     * @return {Array<*>} Fill instruction.\\n     */\\n    CanvasBuilder.prototype.createFill = function (state) {\\n        var fillStyle = state.fillStyle;\\n        /** @type {Array<*>} */\\n        var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\\n        if (typeof fillStyle !== 'string') {\\n            // Fill is a pattern or gradient - align it!\\n            fillInstruction.push(true);\\n        }\\n        return fillInstruction;\\n    };\\n    /**\\n     * @param {import(\\\"../canvas.js\\\").FillStrokeState} state State.\\n     */\\n    CanvasBuilder.prototype.applyStroke = function (state) {\\n        this.instructions.push(this.createStroke(state));\\n    };\\n    /**\\n     * @param {import(\\\"../canvas.js\\\").FillStrokeState} state State.\\n     * @return {Array<*>} Stroke instruction.\\n     */\\n    CanvasBuilder.prototype.createStroke = function (state) {\\n        return [\\n            CanvasInstruction.SET_STROKE_STYLE,\\n            state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\\n            state.lineJoin, state.miterLimit,\\n            this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\\n        ];\\n    };\\n    /**\\n     * @param {import(\\\"../canvas.js\\\").FillStrokeState} state State.\\n     * @param {function(this:CanvasBuilder, import(\\\"../canvas.js\\\").FillStrokeState):Array<*>} createFill Create fill.\\n     */\\n    CanvasBuilder.prototype.updateFillStyle = function (state, createFill) {\\n        var fillStyle = state.fillStyle;\\n        if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\\n            if (fillStyle !== undefined) {\\n                this.instructions.push(createFill.call(this, state));\\n            }\\n            state.currentFillStyle = fillStyle;\\n        }\\n    };\\n    /**\\n     * @param {import(\\\"../canvas.js\\\").FillStrokeState} state State.\\n     * @param {function(this:CanvasBuilder, import(\\\"../canvas.js\\\").FillStrokeState): void} applyStroke Apply stroke.\\n     */\\n    CanvasBuilder.prototype.updateStrokeStyle = function (state, applyStroke) {\\n        var strokeStyle = state.strokeStyle;\\n        var lineCap = state.lineCap;\\n        var lineDash = state.lineDash;\\n        var lineDashOffset = state.lineDashOffset;\\n        var lineJoin = state.lineJoin;\\n        var lineWidth = state.lineWidth;\\n        var miterLimit = state.miterLimit;\\n        if (state.currentStrokeStyle != strokeStyle ||\\n            state.currentLineCap != lineCap ||\\n            (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\\n            state.currentLineDashOffset != lineDashOffset ||\\n            state.currentLineJoin != lineJoin ||\\n            state.currentLineWidth != lineWidth ||\\n            state.currentMiterLimit != miterLimit) {\\n            if (strokeStyle !== undefined) {\\n                applyStroke.call(this, state);\\n            }\\n            state.currentStrokeStyle = strokeStyle;\\n            state.currentLineCap = lineCap;\\n            state.currentLineDash = lineDash;\\n            state.currentLineDashOffset = lineDashOffset;\\n            state.currentLineJoin = lineJoin;\\n            state.currentLineWidth = lineWidth;\\n            state.currentMiterLimit = miterLimit;\\n        }\\n    };\\n    /**\\n     * @param {import(\\\"../../Feature.js\\\").FeatureLike} feature Feature.\\n     */\\n    CanvasBuilder.prototype.endGeometry = function (feature) {\\n        this.beginGeometryInstruction1_[2] = this.instructions.length;\\n        this.beginGeometryInstruction1_ = null;\\n        this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\\n        this.beginGeometryInstruction2_ = null;\\n        var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\\n        this.instructions.push(endGeometryInstruction);\\n        this.hitDetectionInstructions.push(endGeometryInstruction);\\n    };\\n    /**\\n     * Get the buffered rendering extent.  Rendering will be clipped to the extent\\n     * provided to the constructor.  To account for symbolizers that may intersect\\n     * this extent, we calculate a buffered extent (e.g. based on stroke width).\\n     * @return {import(\\\"../../extent.js\\\").Extent} The buffered rendering extent.\\n     * @protected\\n     */\\n    CanvasBuilder.prototype.getBufferedMaxExtent = function () {\\n        if (!this.bufferedMaxExtent_) {\\n            this.bufferedMaxExtent_ = clone(this.maxExtent);\\n            if (this.maxLineWidth > 0) {\\n                var width = this.resolution * (this.maxLineWidth + 1) / 2;\\n                buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\\n            }\\n        }\\n        return this.bufferedMaxExtent_;\\n    };\\n    return CanvasBuilder;\\n}(VectorContext));\\nexport default CanvasBuilder;\\n//# sourceMappingURL=Builder.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/render/canvas/ImageBuilder\\n */\\nimport CanvasInstruction from './Instruction.js';\\nimport CanvasBuilder from './Builder.js';\\nvar CanvasImageBuilder = /** @class */ (function (_super) {\\n    __extends(CanvasImageBuilder, _super);\\n    /**\\n     * @param {number} tolerance Tolerance.\\n     * @param {import(\\\"../../extent.js\\\").Extent} maxExtent Maximum extent.\\n     * @param {number} resolution Resolution.\\n     * @param {number} pixelRatio Pixel ratio.\\n     */\\n    function CanvasImageBuilder(tolerance, maxExtent, resolution, pixelRatio) {\\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\\n        /**\\n         * @private\\n         * @type {import(\\\"../canvas.js\\\").DeclutterGroup}\\n         */\\n        _this.declutterGroup_ = null;\\n        /**\\n         * @private\\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\\n         */\\n        _this.hitDetectionImage_ = null;\\n        /**\\n         * @private\\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\\n         */\\n        _this.image_ = null;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        _this.anchorX_ = undefined;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        _this.anchorY_ = undefined;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        _this.height_ = undefined;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        _this.opacity_ = undefined;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        _this.originX_ = undefined;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        _this.originY_ = undefined;\\n        /**\\n         * @private\\n         * @type {boolean|undefined}\\n         */\\n        _this.rotateWithView_ = undefined;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        _this.rotation_ = undefined;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        _this.scale_ = undefined;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        _this.width_ = undefined;\\n        return _this;\\n    }\\n    /**\\n     * @param {Array<number>} flatCoordinates Flat coordinates.\\n     * @param {number} offset Offset.\\n     * @param {number} end End.\\n     * @param {number} stride Stride.\\n     * @private\\n     * @return {number} My end.\\n     */\\n    CanvasImageBuilder.prototype.drawCoordinates_ = function (flatCoordinates, offset, end, stride) {\\n        return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    CanvasImageBuilder.prototype.drawPoint = function (pointGeometry, feature) {\\n        if (!this.image_) {\\n            return;\\n        }\\n        this.beginGeometry(feature);\\n        var flatCoordinates = pointGeometry.getFlatCoordinates();\\n        var stride = pointGeometry.getStride();\\n        var myBegin = this.coordinates.length;\\n        var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\\n        this.instructions.push([\\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\\n            this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\\n            this.scale_ * this.pixelRatio, this.width_\\n        ]);\\n        this.hitDetectionInstructions.push([\\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\\n            this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\\n            this.scale_, this.width_\\n        ]);\\n        this.endGeometry(feature);\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    CanvasImageBuilder.prototype.drawMultiPoint = function (multiPointGeometry, feature) {\\n        if (!this.image_) {\\n            return;\\n        }\\n        this.beginGeometry(feature);\\n        var flatCoordinates = multiPointGeometry.getFlatCoordinates();\\n        var stride = multiPointGeometry.getStride();\\n        var myBegin = this.coordinates.length;\\n        var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\\n        this.instructions.push([\\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\\n            this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\\n            this.scale_ * this.pixelRatio, this.width_\\n        ]);\\n        this.hitDetectionInstructions.push([\\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\\n            this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\\n            this.scale_, this.width_\\n        ]);\\n        this.endGeometry(feature);\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    CanvasImageBuilder.prototype.finish = function () {\\n        this.reverseHitDetectionInstructions();\\n        // FIXME this doesn't really protect us against further calls to draw*Geometry\\n        this.anchorX_ = undefined;\\n        this.anchorY_ = undefined;\\n        this.hitDetectionImage_ = null;\\n        this.image_ = null;\\n        this.height_ = undefined;\\n        this.scale_ = undefined;\\n        this.opacity_ = undefined;\\n        this.originX_ = undefined;\\n        this.originY_ = undefined;\\n        this.rotateWithView_ = undefined;\\n        this.rotation_ = undefined;\\n        this.width_ = undefined;\\n        return _super.prototype.finish.call(this);\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    CanvasImageBuilder.prototype.setImageStyle = function (imageStyle, declutterGroup) {\\n        var anchor = imageStyle.getAnchor();\\n        var size = imageStyle.getSize();\\n        var hitDetectionImage = imageStyle.getHitDetectionImage(1);\\n        var image = imageStyle.getImage(1);\\n        var origin = imageStyle.getOrigin();\\n        this.anchorX_ = anchor[0];\\n        this.anchorY_ = anchor[1];\\n        this.declutterGroup_ = /** @type {import(\\\"../canvas.js\\\").DeclutterGroup} */ (declutterGroup);\\n        this.hitDetectionImage_ = hitDetectionImage;\\n        this.image_ = image;\\n        this.height_ = size[1];\\n        this.opacity_ = imageStyle.getOpacity();\\n        this.originX_ = origin[0];\\n        this.originY_ = origin[1];\\n        this.rotateWithView_ = imageStyle.getRotateWithView();\\n        this.rotation_ = imageStyle.getRotation();\\n        this.scale_ = imageStyle.getScale();\\n        this.width_ = size[0];\\n    };\\n    return CanvasImageBuilder;\\n}(CanvasBuilder));\\nexport default CanvasImageBuilder;\\n//# sourceMappingURL=ImageBuilder.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/render/canvas/LineStringBuilder\\n */\\nimport CanvasInstruction, { strokeInstruction, beginPathInstruction } from './Instruction.js';\\nimport CanvasBuilder from './Builder.js';\\nvar CanvasLineStringBuilder = /** @class */ (function (_super) {\\n    __extends(CanvasLineStringBuilder, _super);\\n    /**\\n     * @param {number} tolerance Tolerance.\\n     * @param {import(\\\"../../extent.js\\\").Extent} maxExtent Maximum extent.\\n     * @param {number} resolution Resolution.\\n     * @param {number} pixelRatio Pixel ratio.\\n     */\\n    function CanvasLineStringBuilder(tolerance, maxExtent, resolution, pixelRatio) {\\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\\n    }\\n    /**\\n     * @param {Array<number>} flatCoordinates Flat coordinates.\\n     * @param {number} offset Offset.\\n     * @param {number} end End.\\n     * @param {number} stride Stride.\\n     * @private\\n     * @return {number} end.\\n     */\\n    CanvasLineStringBuilder.prototype.drawFlatCoordinates_ = function (flatCoordinates, offset, end, stride) {\\n        var myBegin = this.coordinates.length;\\n        var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\\n        var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\\n        this.instructions.push(moveToLineToInstruction);\\n        this.hitDetectionInstructions.push(moveToLineToInstruction);\\n        return end;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    CanvasLineStringBuilder.prototype.drawLineString = function (lineStringGeometry, feature) {\\n        var state = this.state;\\n        var strokeStyle = state.strokeStyle;\\n        var lineWidth = state.lineWidth;\\n        if (strokeStyle === undefined || lineWidth === undefined) {\\n            return;\\n        }\\n        this.updateStrokeStyle(state, this.applyStroke);\\n        this.beginGeometry(feature);\\n        this.hitDetectionInstructions.push([\\n            CanvasInstruction.SET_STROKE_STYLE,\\n            state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\\n            state.miterLimit, state.lineDash, state.lineDashOffset\\n        ], beginPathInstruction);\\n        var flatCoordinates = lineStringGeometry.getFlatCoordinates();\\n        var stride = lineStringGeometry.getStride();\\n        this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\\n        this.hitDetectionInstructions.push(strokeInstruction);\\n        this.endGeometry(feature);\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    CanvasLineStringBuilder.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) {\\n        var state = this.state;\\n        var strokeStyle = state.strokeStyle;\\n        var lineWidth = state.lineWidth;\\n        if (strokeStyle === undefined || lineWidth === undefined) {\\n            return;\\n        }\\n        this.updateStrokeStyle(state, this.applyStroke);\\n        this.beginGeometry(feature);\\n        this.hitDetectionInstructions.push([\\n            CanvasInstruction.SET_STROKE_STYLE,\\n            state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\\n            state.miterLimit, state.lineDash, state.lineDashOffset\\n        ], beginPathInstruction);\\n        var ends = multiLineStringGeometry.getEnds();\\n        var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\\n        var stride = multiLineStringGeometry.getStride();\\n        var offset = 0;\\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\\n            offset = this.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\\n        }\\n        this.hitDetectionInstructions.push(strokeInstruction);\\n        this.endGeometry(feature);\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    CanvasLineStringBuilder.prototype.finish = function () {\\n        var state = this.state;\\n        if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\\n            this.instructions.push(strokeInstruction);\\n        }\\n        this.reverseHitDetectionInstructions();\\n        this.state = null;\\n        return _super.prototype.finish.call(this);\\n    };\\n    /**\\n     * @inheritDoc.\\n     */\\n    CanvasLineStringBuilder.prototype.applyStroke = function (state) {\\n        if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\\n            this.instructions.push(strokeInstruction);\\n            state.lastStroke = this.coordinates.length;\\n        }\\n        state.lastStroke = 0;\\n        _super.prototype.applyStroke.call(this, state);\\n        this.instructions.push(beginPathInstruction);\\n    };\\n    return CanvasLineStringBuilder;\\n}(CanvasBuilder));\\nexport default CanvasLineStringBuilder;\\n//# sourceMappingURL=LineStringBuilder.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/render/canvas/PolygonBuilder\\n */\\nimport { snap } from '../../geom/flat/simplify.js';\\nimport { defaultFillStyle } from '../canvas.js';\\nimport CanvasInstruction, { fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction } from './Instruction.js';\\nimport CanvasBuilder from './Builder.js';\\nvar CanvasPolygonBuilder = /** @class */ (function (_super) {\\n    __extends(CanvasPolygonBuilder, _super);\\n    /**\\n     * @param {number} tolerance Tolerance.\\n     * @param {import(\\\"../../extent.js\\\").Extent} maxExtent Maximum extent.\\n     * @param {number} resolution Resolution.\\n     * @param {number} pixelRatio Pixel ratio.\\n     */\\n    function CanvasPolygonBuilder(tolerance, maxExtent, resolution, pixelRatio) {\\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\\n    }\\n    /**\\n     * @param {Array<number>} flatCoordinates Flat coordinates.\\n     * @param {number} offset Offset.\\n     * @param {Array<number>} ends Ends.\\n     * @param {number} stride Stride.\\n     * @private\\n     * @return {number} End.\\n     */\\n    CanvasPolygonBuilder.prototype.drawFlatCoordinatess_ = function (flatCoordinates, offset, ends, stride) {\\n        var state = this.state;\\n        var fill = state.fillStyle !== undefined;\\n        var stroke = state.strokeStyle != undefined;\\n        var numEnds = ends.length;\\n        this.instructions.push(beginPathInstruction);\\n        this.hitDetectionInstructions.push(beginPathInstruction);\\n        for (var i = 0; i < numEnds; ++i) {\\n            var end = ends[i];\\n            var myBegin = this.coordinates.length;\\n            var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\\n            var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\\n            this.instructions.push(moveToLineToInstruction);\\n            this.hitDetectionInstructions.push(moveToLineToInstruction);\\n            if (stroke) {\\n                // Performance optimization: only call closePath() when we have a stroke.\\n                // Otherwise the ring is closed already (see appendFlatCoordinates above).\\n                this.instructions.push(closePathInstruction);\\n                this.hitDetectionInstructions.push(closePathInstruction);\\n            }\\n            offset = end;\\n        }\\n        if (fill) {\\n            this.instructions.push(fillInstruction);\\n            this.hitDetectionInstructions.push(fillInstruction);\\n        }\\n        if (stroke) {\\n            this.instructions.push(strokeInstruction);\\n            this.hitDetectionInstructions.push(strokeInstruction);\\n        }\\n        return offset;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    CanvasPolygonBuilder.prototype.drawCircle = function (circleGeometry, feature) {\\n        var state = this.state;\\n        var fillStyle = state.fillStyle;\\n        var strokeStyle = state.strokeStyle;\\n        if (fillStyle === undefined && strokeStyle === undefined) {\\n            return;\\n        }\\n        this.setFillStrokeStyles_();\\n        this.beginGeometry(feature);\\n        if (state.fillStyle !== undefined) {\\n            this.hitDetectionInstructions.push([\\n                CanvasInstruction.SET_FILL_STYLE,\\n                defaultFillStyle\\n            ]);\\n        }\\n        if (state.strokeStyle !== undefined) {\\n            this.hitDetectionInstructions.push([\\n                CanvasInstruction.SET_STROKE_STYLE,\\n                state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\\n                state.miterLimit, state.lineDash, state.lineDashOffset\\n            ]);\\n        }\\n        var flatCoordinates = circleGeometry.getFlatCoordinates();\\n        var stride = circleGeometry.getStride();\\n        var myBegin = this.coordinates.length;\\n        this.appendFlatCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\\n        var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\\n        this.instructions.push(beginPathInstruction, circleInstruction);\\n        this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\\n        this.hitDetectionInstructions.push(fillInstruction);\\n        if (state.fillStyle !== undefined) {\\n            this.instructions.push(fillInstruction);\\n        }\\n        if (state.strokeStyle !== undefined) {\\n            this.instructions.push(strokeInstruction);\\n            this.hitDetectionInstructions.push(strokeInstruction);\\n        }\\n        this.endGeometry(feature);\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    CanvasPolygonBuilder.prototype.drawPolygon = function (polygonGeometry, feature) {\\n        var state = this.state;\\n        var fillStyle = state.fillStyle;\\n        var strokeStyle = state.strokeStyle;\\n        if (fillStyle === undefined && strokeStyle === undefined) {\\n            return;\\n        }\\n        this.setFillStrokeStyles_();\\n        this.beginGeometry(feature);\\n        if (state.fillStyle !== undefined) {\\n            this.hitDetectionInstructions.push([\\n                CanvasInstruction.SET_FILL_STYLE,\\n                defaultFillStyle\\n            ]);\\n        }\\n        if (state.strokeStyle !== undefined) {\\n            this.hitDetectionInstructions.push([\\n                CanvasInstruction.SET_STROKE_STYLE,\\n                state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\\n                state.miterLimit, state.lineDash, state.lineDashOffset\\n            ]);\\n        }\\n        var ends = polygonGeometry.getEnds();\\n        var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\\n        var stride = polygonGeometry.getStride();\\n        this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\\n        this.endGeometry(feature);\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    CanvasPolygonBuilder.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) {\\n        var state = this.state;\\n        var fillStyle = state.fillStyle;\\n        var strokeStyle = state.strokeStyle;\\n        if (fillStyle === undefined && strokeStyle === undefined) {\\n            return;\\n        }\\n        this.setFillStrokeStyles_();\\n        this.beginGeometry(feature);\\n        if (state.fillStyle !== undefined) {\\n            this.hitDetectionInstructions.push([\\n                CanvasInstruction.SET_FILL_STYLE,\\n                defaultFillStyle\\n            ]);\\n        }\\n        if (state.strokeStyle !== undefined) {\\n            this.hitDetectionInstructions.push([\\n                CanvasInstruction.SET_STROKE_STYLE,\\n                state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\\n                state.miterLimit, state.lineDash, state.lineDashOffset\\n            ]);\\n        }\\n        var endss = multiPolygonGeometry.getEndss();\\n        var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\\n        var stride = multiPolygonGeometry.getStride();\\n        var offset = 0;\\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\\n            offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\\n        }\\n        this.endGeometry(feature);\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    CanvasPolygonBuilder.prototype.finish = function () {\\n        this.reverseHitDetectionInstructions();\\n        this.state = null;\\n        // We want to preserve topology when drawing polygons.  Polygons are\\n        // simplified using quantization and point elimination. However, we might\\n        // have received a mix of quantized and non-quantized geometries, so ensure\\n        // that all are quantized by quantizing all coordinates in the batch.\\n        var tolerance = this.tolerance;\\n        if (tolerance !== 0) {\\n            var coordinates = this.coordinates;\\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\\n                coordinates[i] = snap(coordinates[i], tolerance);\\n            }\\n        }\\n        return _super.prototype.finish.call(this);\\n    };\\n    /**\\n     * @private\\n     */\\n    CanvasPolygonBuilder.prototype.setFillStrokeStyles_ = function () {\\n        var state = this.state;\\n        var fillStyle = state.fillStyle;\\n        if (fillStyle !== undefined) {\\n            this.updateFillStyle(state, this.createFill);\\n        }\\n        if (state.strokeStyle !== undefined) {\\n            this.updateStrokeStyle(state, this.applyStroke);\\n        }\\n    };\\n    return CanvasPolygonBuilder;\\n}(CanvasBuilder));\\nexport default CanvasPolygonBuilder;\\n//# sourceMappingURL=PolygonBuilder.js.map\",\"/**\\n * @module ol/geom/flat/straightchunk\\n */\\n/**\\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @return {Array<number>} Start and end of the first suitable chunk of the\\n * given `flatCoordinates`.\\n */\\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\\n    var chunkStart = offset;\\n    var chunkEnd = offset;\\n    var chunkM = 0;\\n    var m = 0;\\n    var start = offset;\\n    var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\\n    for (i = offset; i < end; i += stride) {\\n        var x2 = flatCoordinates[i];\\n        var y2 = flatCoordinates[i + 1];\\n        if (x1 !== undefined) {\\n            x23 = x2 - x1;\\n            y23 = y2 - y1;\\n            m23 = Math.sqrt(x23 * x23 + y23 * y23);\\n            if (x12 !== undefined) {\\n                m += m12;\\n                acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\\n                if (acos > maxAngle) {\\n                    if (m > chunkM) {\\n                        chunkM = m;\\n                        chunkStart = start;\\n                        chunkEnd = i;\\n                    }\\n                    m = 0;\\n                    start = i - stride;\\n                }\\n            }\\n            m12 = m23;\\n            x12 = x23;\\n            y12 = y23;\\n        }\\n        x1 = x2;\\n        y1 = y2;\\n    }\\n    m += m23;\\n    return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\\n}\\n//# sourceMappingURL=straightchunk.js.map\",\"/**\\n * @module ol/style/TextPlacement\\n */\\n/**\\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\\n * @enum {string}\\n */\\nexport default {\\n    POINT: 'point',\\n    LINE: 'line'\\n};\\n//# sourceMappingURL=TextPlacement.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/render/canvas/TextBuilder\\n */\\nimport { getUid } from '../../util.js';\\nimport { asColorLike } from '../../colorlike.js';\\nimport { intersects } from '../../extent.js';\\nimport { matchingChunk } from '../../geom/flat/straightchunk.js';\\nimport GeometryType from '../../geom/GeometryType.js';\\nimport { labelCache, defaultTextAlign, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, checkFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline } from '../canvas.js';\\nimport CanvasInstruction from './Instruction.js';\\nimport CanvasBuilder from './Builder.js';\\nimport TextPlacement from '../../style/TextPlacement.js';\\n/**\\n * @const\\n * @enum {number}\\n */\\nexport var TEXT_ALIGN = {};\\nTEXT_ALIGN['left'] = 0;\\nTEXT_ALIGN['end'] = 0;\\nTEXT_ALIGN['center'] = 0.5;\\nTEXT_ALIGN['right'] = 1;\\nTEXT_ALIGN['start'] = 1;\\nTEXT_ALIGN['top'] = 0;\\nTEXT_ALIGN['middle'] = 0.5;\\nTEXT_ALIGN['hanging'] = 0.2;\\nTEXT_ALIGN['alphabetic'] = 0.8;\\nTEXT_ALIGN['ideographic'] = 0.8;\\nTEXT_ALIGN['bottom'] = 1;\\nvar CanvasTextBuilder = /** @class */ (function (_super) {\\n    __extends(CanvasTextBuilder, _super);\\n    /**\\n     * @param {number} tolerance Tolerance.\\n     * @param {import(\\\"../../extent.js\\\").Extent} maxExtent Maximum extent.\\n     * @param {number} resolution Resolution.\\n     * @param {number} pixelRatio Pixel ratio.\\n     */\\n    function CanvasTextBuilder(tolerance, maxExtent, resolution, pixelRatio) {\\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\\n        /**\\n         * @private\\n         * @type {import(\\\"../canvas.js\\\").DeclutterGroup}\\n         */\\n        _this.declutterGroup_;\\n        /**\\n         * @private\\n         * @type {Array<HTMLCanvasElement>}\\n         */\\n        _this.labels_ = null;\\n        /**\\n         * @private\\n         * @type {string}\\n         */\\n        _this.text_ = '';\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.textOffsetX_ = 0;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.textOffsetY_ = 0;\\n        /**\\n         * @private\\n         * @type {boolean|undefined}\\n         */\\n        _this.textRotateWithView_ = undefined;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.textRotation_ = 0;\\n        /**\\n         * @private\\n         * @type {?import(\\\"../canvas.js\\\").FillState}\\n         */\\n        _this.textFillState_ = null;\\n        /**\\n         * @type {!Object<string, import(\\\"../canvas.js\\\").FillState>}\\n         */\\n        _this.fillStates = {};\\n        /**\\n         * @private\\n         * @type {?import(\\\"../canvas.js\\\").StrokeState}\\n         */\\n        _this.textStrokeState_ = null;\\n        /**\\n         * @type {!Object<string, import(\\\"../canvas.js\\\").StrokeState>}\\n         */\\n        _this.strokeStates = {};\\n        /**\\n         * @private\\n         * @type {import(\\\"../canvas.js\\\").TextState}\\n         */\\n        _this.textState_ = /** @type {import(\\\"../canvas.js\\\").TextState} */ ({});\\n        /**\\n         * @type {!Object<string, import(\\\"../canvas.js\\\").TextState>}\\n         */\\n        _this.textStates = {};\\n        /**\\n         * @private\\n         * @type {string}\\n         */\\n        _this.textKey_ = '';\\n        /**\\n         * @private\\n         * @type {string}\\n         */\\n        _this.fillKey_ = '';\\n        /**\\n         * @private\\n         * @type {string}\\n         */\\n        _this.strokeKey_ = '';\\n        labelCache.prune();\\n        return _this;\\n    }\\n    /**\\n     * @inheritDoc\\n     */\\n    CanvasTextBuilder.prototype.finish = function () {\\n        var instructions = _super.prototype.finish.call(this);\\n        instructions.textStates = this.textStates;\\n        instructions.fillStates = this.fillStates;\\n        instructions.strokeStates = this.strokeStates;\\n        return instructions;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    CanvasTextBuilder.prototype.drawText = function (geometry, feature) {\\n        var fillState = this.textFillState_;\\n        var strokeState = this.textStrokeState_;\\n        var textState = this.textState_;\\n        if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\\n            return;\\n        }\\n        var begin = this.coordinates.length;\\n        var geometryType = geometry.getType();\\n        var flatCoordinates = null;\\n        var end = 2;\\n        var stride = 2;\\n        var i, ii;\\n        if (textState.placement === TextPlacement.LINE) {\\n            if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\\n                return;\\n            }\\n            var ends = void 0;\\n            flatCoordinates = geometry.getFlatCoordinates();\\n            stride = geometry.getStride();\\n            if (geometryType == GeometryType.LINE_STRING) {\\n                ends = [flatCoordinates.length];\\n            }\\n            else if (geometryType == GeometryType.MULTI_LINE_STRING) {\\n                ends = geometry.getEnds();\\n            }\\n            else if (geometryType == GeometryType.POLYGON) {\\n                ends = geometry.getEnds().slice(0, 1);\\n            }\\n            else if (geometryType == GeometryType.MULTI_POLYGON) {\\n                var endss = geometry.getEndss();\\n                ends = [];\\n                for (i = 0, ii = endss.length; i < ii; ++i) {\\n                    ends.push(endss[i][0]);\\n                }\\n            }\\n            this.beginGeometry(feature);\\n            var textAlign = textState.textAlign;\\n            var flatOffset = 0;\\n            var flatEnd = void 0;\\n            for (var o = 0, oo = ends.length; o < oo; ++o) {\\n                if (textAlign == undefined) {\\n                    var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\\n                    flatOffset = range[0];\\n                    flatEnd = range[1];\\n                }\\n                else {\\n                    flatEnd = ends[o];\\n                }\\n                for (i = flatOffset; i < flatEnd; i += stride) {\\n                    this.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\\n                }\\n                end = this.coordinates.length;\\n                flatOffset = ends[o];\\n                this.drawChars_(begin, end, this.declutterGroup_);\\n                begin = end;\\n            }\\n            this.endGeometry(feature);\\n        }\\n        else {\\n            var geometryWidths = null;\\n            if (!textState.overflow) {\\n                geometryWidths = [];\\n            }\\n            switch (geometryType) {\\n                case GeometryType.POINT:\\n                case GeometryType.MULTI_POINT:\\n                    flatCoordinates = geometry.getFlatCoordinates();\\n                    end = flatCoordinates.length;\\n                    break;\\n                case GeometryType.LINE_STRING:\\n                    flatCoordinates = /** @type {import(\\\"../../geom/LineString.js\\\").default} */ (geometry).getFlatMidpoint();\\n                    break;\\n                case GeometryType.CIRCLE:\\n                    flatCoordinates = /** @type {import(\\\"../../geom/Circle.js\\\").default} */ (geometry).getCenter();\\n                    break;\\n                case GeometryType.MULTI_LINE_STRING:\\n                    flatCoordinates = /** @type {import(\\\"../../geom/MultiLineString.js\\\").default} */ (geometry).getFlatMidpoints();\\n                    end = flatCoordinates.length;\\n                    break;\\n                case GeometryType.POLYGON:\\n                    flatCoordinates = /** @type {import(\\\"../../geom/Polygon.js\\\").default} */ (geometry).getFlatInteriorPoint();\\n                    if (!textState.overflow) {\\n                        geometryWidths.push(flatCoordinates[2] / this.resolution);\\n                    }\\n                    stride = 3;\\n                    break;\\n                case GeometryType.MULTI_POLYGON:\\n                    var interiorPoints = /** @type {import(\\\"../../geom/MultiPolygon.js\\\").default} */ (geometry).getFlatInteriorPoints();\\n                    flatCoordinates = [];\\n                    for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\\n                        if (!textState.overflow) {\\n                            geometryWidths.push(interiorPoints[i + 2] / this.resolution);\\n                        }\\n                        flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\\n                    }\\n                    end = flatCoordinates.length;\\n                    if (end == 0) {\\n                        return;\\n                    }\\n                    break;\\n                default:\\n            }\\n            end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\\n            this.saveTextStates_();\\n            if (textState.backgroundFill || textState.backgroundStroke) {\\n                this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\\n                if (textState.backgroundFill) {\\n                    this.updateFillStyle(this.state, this.createFill);\\n                    this.hitDetectionInstructions.push(this.createFill(this.state));\\n                }\\n                if (textState.backgroundStroke) {\\n                    this.updateStrokeStyle(this.state, this.applyStroke);\\n                    this.hitDetectionInstructions.push(this.createStroke(this.state));\\n                }\\n            }\\n            this.beginGeometry(feature);\\n            // The image is unknown at this stage so we pass null; it will be computed at render time.\\n            // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\\n            // render time.\\n            var pixelRatio_1 = this.pixelRatio;\\n            this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\\n                null, NaN, NaN, this.declutterGroup_, NaN, 1, 0, 0,\\n                this.textRotateWithView_, this.textRotation_, 1, NaN,\\n                textState.padding == defaultPadding ?\\n                    defaultPadding : textState.padding.map(function (p) {\\n                    return p * pixelRatio_1;\\n                }),\\n                !!textState.backgroundFill, !!textState.backgroundStroke,\\n                this.text_, this.textKey_, this.strokeKey_, this.fillKey_,\\n                this.textOffsetX_, this.textOffsetY_, geometryWidths\\n            ]);\\n            this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\\n                null, NaN, NaN, this.declutterGroup_, NaN, 1, 0, 0,\\n                this.textRotateWithView_, this.textRotation_, 1 / this.pixelRatio, NaN,\\n                textState.padding,\\n                !!textState.backgroundFill, !!textState.backgroundStroke,\\n                this.text_, this.textKey_, this.strokeKey_, this.fillKey_,\\n                this.textOffsetX_, this.textOffsetY_, geometryWidths\\n            ]);\\n            this.endGeometry(feature);\\n        }\\n    };\\n    /**\\n     * @private\\n     */\\n    CanvasTextBuilder.prototype.saveTextStates_ = function () {\\n        var strokeState = this.textStrokeState_;\\n        var textState = this.textState_;\\n        var fillState = this.textFillState_;\\n        var strokeKey = this.strokeKey_;\\n        if (strokeState) {\\n            if (!(strokeKey in this.strokeStates)) {\\n                this.strokeStates[strokeKey] = {\\n                    strokeStyle: strokeState.strokeStyle,\\n                    lineCap: strokeState.lineCap,\\n                    lineDashOffset: strokeState.lineDashOffset,\\n                    lineWidth: strokeState.lineWidth,\\n                    lineJoin: strokeState.lineJoin,\\n                    miterLimit: strokeState.miterLimit,\\n                    lineDash: strokeState.lineDash\\n                };\\n            }\\n        }\\n        var textKey = this.textKey_;\\n        if (!(textKey in this.textStates)) {\\n            this.textStates[textKey] = {\\n                font: textState.font,\\n                textAlign: textState.textAlign || defaultTextAlign,\\n                textBaseline: textState.textBaseline || defaultTextBaseline,\\n                scale: textState.scale\\n            };\\n        }\\n        var fillKey = this.fillKey_;\\n        if (fillState) {\\n            if (!(fillKey in this.fillStates)) {\\n                this.fillStates[fillKey] = {\\n                    fillStyle: fillState.fillStyle\\n                };\\n            }\\n        }\\n    };\\n    /**\\n     * @private\\n     * @param {number} begin Begin.\\n     * @param {number} end End.\\n     * @param {import(\\\"../canvas.js\\\").DeclutterGroup} declutterGroup Declutter group.\\n     */\\n    CanvasTextBuilder.prototype.drawChars_ = function (begin, end, declutterGroup) {\\n        var strokeState = this.textStrokeState_;\\n        var textState = this.textState_;\\n        var strokeKey = this.strokeKey_;\\n        var textKey = this.textKey_;\\n        var fillKey = this.fillKey_;\\n        this.saveTextStates_();\\n        var pixelRatio = this.pixelRatio;\\n        var baseline = TEXT_ALIGN[textState.textBaseline];\\n        var offsetY = this.textOffsetY_ * pixelRatio;\\n        var text = this.text_;\\n        var textScale = textState.scale;\\n        var strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\\n        this.instructions.push([CanvasInstruction.DRAW_CHARS,\\n            begin, end, baseline, declutterGroup,\\n            textState.overflow, fillKey, textState.maxAngle,\\n            pixelRatio,\\n            offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\\n        ]);\\n        this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,\\n            begin, end, baseline, declutterGroup,\\n            textState.overflow, fillKey, textState.maxAngle,\\n            1,\\n            offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\\n        ]);\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    CanvasTextBuilder.prototype.setTextStyle = function (textStyle, declutterGroup) {\\n        var textState, fillState, strokeState;\\n        if (!textStyle) {\\n            this.text_ = '';\\n        }\\n        else {\\n            this.declutterGroup_ = /** @type {import(\\\"../canvas.js\\\").DeclutterGroup} */ (declutterGroup);\\n            var textFillStyle = textStyle.getFill();\\n            if (!textFillStyle) {\\n                fillState = this.textFillState_ = null;\\n            }\\n            else {\\n                fillState = this.textFillState_;\\n                if (!fillState) {\\n                    fillState = this.textFillState_ = /** @type {import(\\\"../canvas.js\\\").FillState} */ ({});\\n                }\\n                fillState.fillStyle = asColorLike(textFillStyle.getColor() || defaultFillStyle);\\n            }\\n            var textStrokeStyle = textStyle.getStroke();\\n            if (!textStrokeStyle) {\\n                strokeState = this.textStrokeState_ = null;\\n            }\\n            else {\\n                strokeState = this.textStrokeState_;\\n                if (!strokeState) {\\n                    strokeState = this.textStrokeState_ = /** @type {import(\\\"../canvas.js\\\").StrokeState} */ ({});\\n                }\\n                var lineDash = textStrokeStyle.getLineDash();\\n                var lineDashOffset = textStrokeStyle.getLineDashOffset();\\n                var lineWidth = textStrokeStyle.getWidth();\\n                var miterLimit = textStrokeStyle.getMiterLimit();\\n                strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\\n                strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\\n                strokeState.lineDashOffset =\\n                    lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\\n                strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\\n                strokeState.lineWidth =\\n                    lineWidth === undefined ? defaultLineWidth : lineWidth;\\n                strokeState.miterLimit =\\n                    miterLimit === undefined ? defaultMiterLimit : miterLimit;\\n                strokeState.strokeStyle = asColorLike(textStrokeStyle.getColor() || defaultStrokeStyle);\\n            }\\n            textState = this.textState_;\\n            var font = textStyle.getFont() || defaultFont;\\n            checkFont(font);\\n            var textScale = textStyle.getScale();\\n            textState.overflow = textStyle.getOverflow();\\n            textState.font = font;\\n            textState.maxAngle = textStyle.getMaxAngle();\\n            textState.placement = textStyle.getPlacement();\\n            textState.textAlign = textStyle.getTextAlign();\\n            textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\\n            textState.backgroundFill = textStyle.getBackgroundFill();\\n            textState.backgroundStroke = textStyle.getBackgroundStroke();\\n            textState.padding = textStyle.getPadding() || defaultPadding;\\n            textState.scale = textScale === undefined ? 1 : textScale;\\n            var textOffsetX = textStyle.getOffsetX();\\n            var textOffsetY = textStyle.getOffsetY();\\n            var textRotateWithView = textStyle.getRotateWithView();\\n            var textRotation = textStyle.getRotation();\\n            this.text_ = textStyle.getText() || '';\\n            this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\\n            this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\\n            this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\\n            this.textRotation_ = textRotation === undefined ? 0 : textRotation;\\n            this.strokeKey_ = strokeState ?\\n                (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) +\\n                    strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\\n                    strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\\n                '';\\n            this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?');\\n            this.fillKey_ = fillState ?\\n                (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + getUid(fillState.fillStyle))) :\\n                '';\\n        }\\n    };\\n    return CanvasTextBuilder;\\n}(CanvasBuilder));\\nexport default CanvasTextBuilder;\\n//# sourceMappingURL=TextBuilder.js.map\",\"/**\\n * @module ol/render/canvas/BuilderGroup\\n */\\nimport { createEmpty } from '../../extent.js';\\nimport Builder from './Builder.js';\\nimport ImageBuilder from './ImageBuilder.js';\\nimport LineStringBuilder from './LineStringBuilder.js';\\nimport PolygonBuilder from './PolygonBuilder.js';\\nimport TextBuilder from './TextBuilder.js';\\n/**\\n * @type {Object<import(\\\"./BuilderType\\\").default, typeof Builder>}\\n */\\nvar BATCH_CONSTRUCTORS = {\\n    'Circle': PolygonBuilder,\\n    'Default': Builder,\\n    'Image': ImageBuilder,\\n    'LineString': LineStringBuilder,\\n    'Polygon': PolygonBuilder,\\n    'Text': TextBuilder\\n};\\nvar BuilderGroup = /** @class */ (function () {\\n    /**\\n     * @param {number} tolerance Tolerance.\\n     * @param {import(\\\"../../extent.js\\\").Extent} maxExtent Max extent.\\n     * @param {number} resolution Resolution.\\n     * @param {number} pixelRatio Pixel ratio.\\n     * @param {boolean} declutter Decluttering enabled.\\n     */\\n    function BuilderGroup(tolerance, maxExtent, resolution, pixelRatio, declutter) {\\n        /**\\n         * @type {boolean}\\n         * @private\\n         */\\n        this.declutter_ = declutter;\\n        /**\\n         * @type {import(\\\"../canvas.js\\\").DeclutterGroup}\\n         * @private\\n         */\\n        this.declutterGroup_ = null;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        this.tolerance_ = tolerance;\\n        /**\\n         * @private\\n         * @type {import(\\\"../../extent.js\\\").Extent}\\n         */\\n        this.maxExtent_ = maxExtent;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        this.pixelRatio_ = pixelRatio;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        this.resolution_ = resolution;\\n        /**\\n         * @private\\n         * @type {!Object<string, !Object<import(\\\"./BuilderType\\\").default, Builder>>}\\n         */\\n        this.buildersByZIndex_ = {};\\n    }\\n    /**\\n     * @param {boolean} group Group with previous builder.\\n     * @return {Array<*>} The resulting instruction group.\\n     */\\n    BuilderGroup.prototype.addDeclutter = function (group) {\\n        var declutter = null;\\n        if (this.declutter_) {\\n            if (group) {\\n                declutter = this.declutterGroup_;\\n                /** @type {number} */ (declutter[4])++;\\n            }\\n            else {\\n                declutter = this.declutterGroup_ = createEmpty();\\n                declutter.push(1);\\n            }\\n        }\\n        return declutter;\\n    };\\n    /**\\n     * @return {!Object<string, !Object<import(\\\"./BuilderType\\\").default, import(\\\"./Builder.js\\\").SerializableInstructions>>} The serializable instructions\\n     */\\n    BuilderGroup.prototype.finish = function () {\\n        var builderInstructions = {};\\n        for (var zKey in this.buildersByZIndex_) {\\n            builderInstructions[zKey] = builderInstructions[zKey] || {};\\n            var builders = this.buildersByZIndex_[zKey];\\n            for (var builderKey in builders) {\\n                var builderInstruction = builders[builderKey].finish();\\n                builderInstructions[zKey][builderKey] = builderInstruction;\\n            }\\n        }\\n        return builderInstructions;\\n    };\\n    /**\\n     * @param {number|undefined} zIndex Z index.\\n     * @param {import(\\\"./BuilderType.js\\\").default} builderType Replay type.\\n     * @return {import(\\\"../VectorContext.js\\\").default} Replay.\\n     */\\n    BuilderGroup.prototype.getBuilder = function (zIndex, builderType) {\\n        var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\\n        var replays = this.buildersByZIndex_[zIndexKey];\\n        if (replays === undefined) {\\n            replays = {};\\n            this.buildersByZIndex_[zIndexKey] = replays;\\n        }\\n        var replay = replays[builderType];\\n        if (replay === undefined) {\\n            var Constructor = BATCH_CONSTRUCTORS[builderType];\\n            replay = new Constructor(this.tolerance_, this.maxExtent_, this.resolution_, this.pixelRatio_);\\n            replays[builderType] = replay;\\n        }\\n        return replay;\\n    };\\n    return BuilderGroup;\\n}());\\nexport default BuilderGroup;\\n//# sourceMappingURL=BuilderGroup.js.map\",\"/**\\n * @module ol/render/canvas/BuilderType\\n */\\n/**\\n * @enum {string}\\n */\\nexport default {\\n    CIRCLE: 'Circle',\\n    DEFAULT: 'Default',\\n    IMAGE: 'Image',\\n    LINE_STRING: 'LineString',\\n    POLYGON: 'Polygon',\\n    TEXT: 'Text'\\n};\\n//# sourceMappingURL=BuilderType.js.map\",\"/**\\n * @module ol/geom/flat/length\\n */\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @return {number} Length.\\n */\\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\\n    var x1 = flatCoordinates[offset];\\n    var y1 = flatCoordinates[offset + 1];\\n    var length = 0;\\n    for (var i = offset + stride; i < end; i += stride) {\\n        var x2 = flatCoordinates[i];\\n        var y2 = flatCoordinates[i + 1];\\n        length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\\n        x1 = x2;\\n        y1 = y2;\\n    }\\n    return length;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @return {number} Perimeter.\\n */\\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\\n    var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\\n    var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\\n    var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\\n    perimeter += Math.sqrt(dx * dx + dy * dy);\\n    return perimeter;\\n}\\n//# sourceMappingURL=length.js.map\",\"/**\\n * @module ol/geom/flat/textpath\\n */\\nimport { lerp } from '../../math.js';\\n/**\\n * @param {Array<number>} flatCoordinates Path to put text on.\\n * @param {number} offset Start offset of the `flatCoordinates`.\\n * @param {number} end End offset of the `flatCoordinates`.\\n * @param {number} stride Stride.\\n * @param {string} text Text to place on the path.\\n * @param {number} startM m along the path where the text starts.\\n * @param {number} maxAngle Max angle between adjacent chars in radians.\\n * @param {number} scale The product of the text scale and the device pixel ratio.\\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\\n * @param {string} font The font.\\n * @param {Object<string, number>} cache A cache of measured widths.\\n * @return {Array<Array<*>>} The result array of null if `maxAngle` was\\n * exceeded. Entries of the array are x, y, anchorX, angle, chunk.\\n */\\nexport function drawTextOnPath(flatCoordinates, offset, end, stride, text, startM, maxAngle, scale, measureAndCacheTextWidth, font, cache) {\\n    var result = [];\\n    // Keep text upright\\n    var reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\\n    var numChars = text.length;\\n    var x1 = flatCoordinates[offset];\\n    var y1 = flatCoordinates[offset + 1];\\n    offset += stride;\\n    var x2 = flatCoordinates[offset];\\n    var y2 = flatCoordinates[offset + 1];\\n    var segmentM = 0;\\n    var segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\\n    var chunk = '';\\n    var chunkLength = 0;\\n    var data, index, previousAngle;\\n    for (var i = 0; i < numChars; ++i) {\\n        index = reverse ? numChars - i - 1 : i;\\n        var char = text.charAt(index);\\n        chunk = reverse ? char + chunk : chunk + char;\\n        var charLength = scale * measureAndCacheTextWidth(font, chunk, cache) - chunkLength;\\n        chunkLength += charLength;\\n        var charM = startM + charLength / 2;\\n        while (offset < end - stride && segmentM + segmentLength < charM) {\\n            x1 = x2;\\n            y1 = y2;\\n            offset += stride;\\n            x2 = flatCoordinates[offset];\\n            y2 = flatCoordinates[offset + 1];\\n            segmentM += segmentLength;\\n            segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\\n        }\\n        var segmentPos = charM - segmentM;\\n        var angle = Math.atan2(y2 - y1, x2 - x1);\\n        if (reverse) {\\n            angle += angle > 0 ? -Math.PI : Math.PI;\\n        }\\n        if (previousAngle !== undefined) {\\n            var delta = angle - previousAngle;\\n            delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\\n            if (Math.abs(delta) > maxAngle) {\\n                return null;\\n            }\\n        }\\n        var interpolate = segmentPos / segmentLength;\\n        var x = lerp(x1, x2, interpolate);\\n        var y = lerp(y1, y2, interpolate);\\n        if (previousAngle == angle) {\\n            if (reverse) {\\n                data[0] = x;\\n                data[1] = y;\\n                data[2] = charLength / 2;\\n            }\\n            data[4] = chunk;\\n        }\\n        else {\\n            chunk = char;\\n            chunkLength = charLength;\\n            data = [x, y, charLength / 2, angle, chunk];\\n            if (reverse) {\\n                result.unshift(data);\\n            }\\n            else {\\n                result.push(data);\\n            }\\n            previousAngle = angle;\\n        }\\n        startM += charLength;\\n    }\\n    return result;\\n}\\n//# sourceMappingURL=textpath.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/render/canvas/Executor\\n */\\nimport { getUid } from '../../util.js';\\nimport { equals } from '../../array.js';\\nimport { createEmpty, createOrUpdate, createOrUpdateEmpty, extend, intersects } from '../../extent.js';\\nimport { lineStringLength } from '../../geom/flat/length.js';\\nimport { drawTextOnPath } from '../../geom/flat/textpath.js';\\nimport { transform2D } from '../../geom/flat/transform.js';\\nimport { isEmpty } from '../../obj.js';\\nimport { drawImage, defaultPadding, defaultTextBaseline } from '../canvas.js';\\nimport CanvasInstruction from './Instruction.js';\\nimport { TEXT_ALIGN } from './TextBuilder.js';\\nimport { create as createTransform, compose as composeTransform, apply as applyTransform, setFromArray as transformSetFromArray } from '../../transform.js';\\nimport { createCanvasContext2D } from '../../dom.js';\\nimport { labelCache, defaultTextAlign, measureTextHeight, measureAndCacheTextWidth, measureTextWidths } from '../canvas.js';\\nimport Disposable from '../../Disposable.js';\\n/**\\n * @typedef {Object} SerializableInstructions\\n * @property {Array<*>} instructions The rendering instructions.\\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\\n * @property {Array<number>} coordinates The array of all coordinates.\\n * @property {!Object<string, import(\\\"../canvas.js\\\").TextState>} textStates The text states (decluttering).\\n * @property {!Object<string, import(\\\"../canvas.js\\\").FillState>} fillStates The fill states (decluttering).\\n * @property {!Object<string, import(\\\"../canvas.js\\\").StrokeState>} strokeStates The stroke states (decluttering).\\n */\\n/**\\n * @type {import(\\\"../../extent.js\\\").Extent}\\n */\\nvar tmpExtent = createEmpty();\\n/**\\n * @type {!import(\\\"../../transform.js\\\").Transform}\\n */\\nvar tmpTransform = createTransform();\\n/** @type {import(\\\"../../coordinate.js\\\").Coordinate} */\\nvar p1 = [];\\n/** @type {import(\\\"../../coordinate.js\\\").Coordinate} */\\nvar p2 = [];\\n/** @type {import(\\\"../../coordinate.js\\\").Coordinate} */\\nvar p3 = [];\\n/** @type {import(\\\"../../coordinate.js\\\").Coordinate} */\\nvar p4 = [];\\nvar Executor = /** @class */ (function (_super) {\\n    __extends(Executor, _super);\\n    /**\\n     * @param {number} resolution Resolution.\\n     * @param {number} pixelRatio Pixel ratio.\\n     * @param {boolean} overlaps The replay can have overlapping geometries.\\n     * @param {?} declutterTree Declutter tree.\\n     * @param {SerializableInstructions} instructions The serializable instructions\\n     */\\n    function Executor(resolution, pixelRatio, overlaps, declutterTree, instructions) {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * @type {?}\\n         */\\n        _this.declutterTree = declutterTree;\\n        /**\\n         * @protected\\n         * @type {boolean}\\n         */\\n        _this.overlaps = overlaps;\\n        /**\\n         * @protected\\n         * @type {number}\\n         */\\n        _this.pixelRatio = pixelRatio;\\n        /**\\n         * @protected\\n         * @const\\n         * @type {number}\\n         */\\n        _this.resolution = resolution;\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.alignFill_;\\n        /**\\n         * @protected\\n         * @type {Array<*>}\\n         */\\n        _this.instructions = instructions.instructions;\\n        /**\\n         * @protected\\n         * @type {Array<number>}\\n         */\\n        _this.coordinates = instructions.coordinates;\\n        /**\\n         * @private\\n         * @type {!Object<number,import(\\\"../../coordinate.js\\\").Coordinate|Array<import(\\\"../../coordinate.js\\\").Coordinate>|Array<Array<import(\\\"../../coordinate.js\\\").Coordinate>>>}\\n         */\\n        _this.coordinateCache_ = {};\\n        /**\\n         * @private\\n         * @type {!import(\\\"../../transform.js\\\").Transform}\\n         */\\n        _this.renderedTransform_ = createTransform();\\n        /**\\n         * @protected\\n         * @type {Array<*>}\\n         */\\n        _this.hitDetectionInstructions = instructions.hitDetectionInstructions;\\n        /**\\n         * @private\\n         * @type {Array<number>}\\n         */\\n        _this.pixelCoordinates_ = null;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.viewRotation_ = 0;\\n        /**\\n         * @type {!Object<string, import(\\\"../canvas.js\\\").FillState>}\\n         */\\n        _this.fillStates = instructions.fillStates || {};\\n        /**\\n         * @type {!Object<string, import(\\\"../canvas.js\\\").StrokeState>}\\n         */\\n        _this.strokeStates = instructions.strokeStates || {};\\n        /**\\n         * @type {!Object<string, import(\\\"../canvas.js\\\").TextState>}\\n         */\\n        _this.textStates = instructions.textStates || {};\\n        /**\\n         * @private\\n         * @type {Object<string, Object<string, number>>}\\n         */\\n        _this.widths_ = {};\\n        return _this;\\n    }\\n    /**\\n     * @inheritDoc\\n     */\\n    Executor.prototype.disposeInternal = function () {\\n        labelCache.release(this);\\n        _super.prototype.disposeInternal.call(this);\\n    };\\n    /**\\n     * @param {string} text Text.\\n     * @param {string} textKey Text style key.\\n     * @param {string} fillKey Fill style key.\\n     * @param {string} strokeKey Stroke style key.\\n     * @return {HTMLCanvasElement} Image.\\n     */\\n    Executor.prototype.getTextImage = function (text, textKey, fillKey, strokeKey) {\\n        var label;\\n        var key = strokeKey + textKey + text + fillKey + this.pixelRatio;\\n        if (!labelCache.containsKey(key)) {\\n            var strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\\n            var fillState = fillKey ? this.fillStates[fillKey] : null;\\n            var textState = this.textStates[textKey];\\n            var pixelRatio = this.pixelRatio;\\n            var scale = textState.scale * pixelRatio;\\n            var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\\n            var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\\n            var lines = text.split('\\\\n');\\n            var numLines = lines.length;\\n            var widths = [];\\n            var width = measureTextWidths(textState.font, lines, widths);\\n            var lineHeight = measureTextHeight(textState.font);\\n            var height = lineHeight * numLines;\\n            var renderWidth = (width + strokeWidth);\\n            var context = createCanvasContext2D(Math.ceil(renderWidth * scale), Math.ceil((height + strokeWidth) * scale));\\n            label = context.canvas;\\n            labelCache.set(key, label);\\n            if (scale != 1) {\\n                context.scale(scale, scale);\\n            }\\n            context.font = textState.font;\\n            if (strokeKey) {\\n                context.strokeStyle = strokeState.strokeStyle;\\n                context.lineWidth = strokeWidth;\\n                context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\\n                context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\\n                context.miterLimit = strokeState.miterLimit;\\n                if (context.setLineDash && strokeState.lineDash.length) {\\n                    context.setLineDash(strokeState.lineDash);\\n                    context.lineDashOffset = strokeState.lineDashOffset;\\n                }\\n            }\\n            if (fillKey) {\\n                context.fillStyle = fillState.fillStyle;\\n            }\\n            context.textBaseline = 'middle';\\n            context.textAlign = 'center';\\n            var leftRight = (0.5 - align);\\n            var x = align * label.width / scale + leftRight * strokeWidth;\\n            var i = void 0;\\n            if (strokeKey) {\\n                for (i = 0; i < numLines; ++i) {\\n                    context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\\n                }\\n            }\\n            if (fillKey) {\\n                for (i = 0; i < numLines; ++i) {\\n                    context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\\n                }\\n            }\\n        }\\n        return labelCache.get(key, this);\\n    };\\n    /**\\n     * @param {CanvasRenderingContext2D} context Context.\\n     * @param {import(\\\"../../coordinate.js\\\").Coordinate} p1 1st point of the background box.\\n     * @param {import(\\\"../../coordinate.js\\\").Coordinate} p2 2nd point of the background box.\\n     * @param {import(\\\"../../coordinate.js\\\").Coordinate} p3 3rd point of the background box.\\n     * @param {import(\\\"../../coordinate.js\\\").Coordinate} p4 4th point of the background box.\\n     * @param {Array<*>} fillInstruction Fill instruction.\\n     * @param {Array<*>} strokeInstruction Stroke instruction.\\n     */\\n    Executor.prototype.replayTextBackground_ = function (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\\n        context.beginPath();\\n        context.moveTo.apply(context, p1);\\n        context.lineTo.apply(context, p2);\\n        context.lineTo.apply(context, p3);\\n        context.lineTo.apply(context, p4);\\n        context.lineTo.apply(context, p1);\\n        if (fillInstruction) {\\n            this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\\n            this.fill_(context);\\n        }\\n        if (strokeInstruction) {\\n            this.setStrokeStyle_(context, /** @type {Array<*>} */ (strokeInstruction));\\n            context.stroke();\\n        }\\n    };\\n    /**\\n     * @param {CanvasRenderingContext2D} context Context.\\n     * @param {number} x X.\\n     * @param {number} y Y.\\n     * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\\n     * @param {number} anchorX Anchor X.\\n     * @param {number} anchorY Anchor Y.\\n     * @param {import(\\\"../canvas.js\\\").DeclutterGroup} declutterGroup Declutter group.\\n     * @param {number} height Height.\\n     * @param {number} opacity Opacity.\\n     * @param {number} originX Origin X.\\n     * @param {number} originY Origin Y.\\n     * @param {number} rotation Rotation.\\n     * @param {number} scale Scale.\\n     * @param {boolean} snapToPixel Snap to pixel.\\n     * @param {number} width Width.\\n     * @param {Array<number>} padding Padding.\\n     * @param {Array<*>} fillInstruction Fill instruction.\\n     * @param {Array<*>} strokeInstruction Stroke instruction.\\n     */\\n    Executor.prototype.replayImage_ = function (context, x, y, image, anchorX, anchorY, declutterGroup, height, opacity, originX, originY, rotation, scale, snapToPixel, width, padding, fillInstruction, strokeInstruction) {\\n        var fillStroke = fillInstruction || strokeInstruction;\\n        anchorX *= scale;\\n        anchorY *= scale;\\n        x -= anchorX;\\n        y -= anchorY;\\n        var w = (width + originX > image.width) ? image.width - originX : width;\\n        var h = (height + originY > image.height) ? image.height - originY : height;\\n        var boxW = padding[3] + w * scale + padding[1];\\n        var boxH = padding[0] + h * scale + padding[2];\\n        var boxX = x - padding[3];\\n        var boxY = y - padding[0];\\n        if (fillStroke || rotation !== 0) {\\n            p1[0] = p4[0] = boxX;\\n            p1[1] = p2[1] = boxY;\\n            p2[0] = p3[0] = boxX + boxW;\\n            p3[1] = p4[1] = boxY + boxH;\\n        }\\n        var transform = null;\\n        if (rotation !== 0) {\\n            var centerX = x + anchorX;\\n            var centerY = y + anchorY;\\n            transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\\n            applyTransform(tmpTransform, p1);\\n            applyTransform(tmpTransform, p2);\\n            applyTransform(tmpTransform, p3);\\n            applyTransform(tmpTransform, p4);\\n            createOrUpdate(Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1]), tmpExtent);\\n        }\\n        else {\\n            createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\\n        }\\n        var canvas = context.canvas;\\n        var strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\\n        var intersects = tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\\n            tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\\n        if (snapToPixel) {\\n            x = Math.round(x);\\n            y = Math.round(y);\\n        }\\n        if (declutterGroup) {\\n            if (!intersects && declutterGroup[4] == 1) {\\n                return;\\n            }\\n            extend(declutterGroup, tmpExtent);\\n            var declutterArgs = intersects ?\\n                [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] :\\n                null;\\n            if (declutterArgs && fillStroke) {\\n                declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\\n            }\\n            declutterGroup.push(declutterArgs);\\n        }\\n        else if (intersects) {\\n            if (fillStroke) {\\n                this.replayTextBackground_(context, p1, p2, p3, p4, \\n                /** @type {Array<*>} */ (fillInstruction), \\n                /** @type {Array<*>} */ (strokeInstruction));\\n            }\\n            drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\\n        }\\n    };\\n    /**\\n     * @private\\n     * @param {CanvasRenderingContext2D} context Context.\\n     */\\n    Executor.prototype.fill_ = function (context) {\\n        if (this.alignFill_) {\\n            var origin_1 = applyTransform(this.renderedTransform_, [0, 0]);\\n            var repeatSize = 512 * this.pixelRatio;\\n            context.save();\\n            context.translate(origin_1[0] % repeatSize, origin_1[1] % repeatSize);\\n            context.rotate(this.viewRotation_);\\n        }\\n        context.fill();\\n        if (this.alignFill_) {\\n            context.restore();\\n        }\\n    };\\n    /**\\n     * @private\\n     * @param {CanvasRenderingContext2D} context Context.\\n     * @param {Array<*>} instruction Instruction.\\n     */\\n    Executor.prototype.setStrokeStyle_ = function (context, instruction) {\\n        context.strokeStyle = /** @type {import(\\\"../../colorlike.js\\\").ColorLike} */ (instruction[1]);\\n        context.lineWidth = /** @type {number} */ (instruction[2]);\\n        context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\\n        context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\\n        context.miterLimit = /** @type {number} */ (instruction[5]);\\n        if (context.setLineDash) {\\n            context.lineDashOffset = /** @type {number} */ (instruction[7]);\\n            context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\\n        }\\n    };\\n    /**\\n     * @param {import(\\\"../canvas.js\\\").DeclutterGroup} declutterGroup Declutter group.\\n     * @param {import(\\\"../../Feature.js\\\").FeatureLike} feature Feature.\\n     */\\n    Executor.prototype.renderDeclutter_ = function (declutterGroup, feature) {\\n        if (declutterGroup && declutterGroup.length > 5) {\\n            var groupCount = declutterGroup[4];\\n            if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\\n                /** @type {import(\\\"../../structs/RBush.js\\\").Entry} */\\n                var box = {\\n                    minX: /** @type {number} */ (declutterGroup[0]),\\n                    minY: /** @type {number} */ (declutterGroup[1]),\\n                    maxX: /** @type {number} */ (declutterGroup[2]),\\n                    maxY: /** @type {number} */ (declutterGroup[3]),\\n                    value: feature\\n                };\\n                if (!this.declutterTree.collides(box)) {\\n                    this.declutterTree.insert(box);\\n                    for (var j = 5, jj = declutterGroup.length; j < jj; ++j) {\\n                        var declutterData = /** @type {Array} */ (declutterGroup[j]);\\n                        if (declutterData) {\\n                            if (declutterData.length > 11) {\\n                                this.replayTextBackground_(declutterData[0], declutterData[13], declutterData[14], declutterData[15], declutterData[16], declutterData[11], declutterData[12]);\\n                            }\\n                            drawImage.apply(undefined, declutterData);\\n                        }\\n                    }\\n                }\\n                declutterGroup.length = 5;\\n                createOrUpdateEmpty(declutterGroup);\\n            }\\n        }\\n    };\\n    /**\\n     * @private\\n     * @param {string} text The text to draw.\\n     * @param {string} textKey The key of the text state.\\n     * @param {string} strokeKey The key for the stroke state.\\n     * @param {string} fillKey The key for the fill state.\\n     * @return {{label: HTMLCanvasElement, anchorX: number, anchorY: number}} The text image and its anchor.\\n     */\\n    Executor.prototype.drawTextImageWithPointPlacement_ = function (text, textKey, strokeKey, fillKey) {\\n        var textState = this.textStates[textKey];\\n        var label = this.getTextImage(text, textKey, fillKey, strokeKey);\\n        var strokeState = this.strokeStates[strokeKey];\\n        var pixelRatio = this.pixelRatio;\\n        var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\\n        var baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\\n        var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\\n        var anchorX = align * label.width / pixelRatio + 2 * (0.5 - align) * strokeWidth;\\n        var anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\\n        return {\\n            label: label,\\n            anchorX: anchorX,\\n            anchorY: anchorY\\n        };\\n    };\\n    /**\\n     * @private\\n     * @param {CanvasRenderingContext2D} context Context.\\n     * @param {import(\\\"../../transform.js\\\").Transform} transform Transform.\\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\\n     *     to skip.\\n     * @param {Array<*>} instructions Instructions array.\\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\\n     * @param {function(import(\\\"../../Feature.js\\\").FeatureLike): T|undefined} featureCallback Feature callback.\\n     * @param {import(\\\"../../extent.js\\\").Extent=} opt_hitExtent Only check features that intersect this\\n     *     extent.\\n     * @return {T|undefined} Callback result.\\n     * @template T\\n     */\\n    Executor.prototype.execute_ = function (context, transform, skippedFeaturesHash, instructions, snapToPixel, featureCallback, opt_hitExtent) {\\n        /** @type {Array<number>} */\\n        var pixelCoordinates;\\n        if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\\n            pixelCoordinates = this.pixelCoordinates_;\\n        }\\n        else {\\n            if (!this.pixelCoordinates_) {\\n                this.pixelCoordinates_ = [];\\n            }\\n            pixelCoordinates = transform2D(this.coordinates, 0, this.coordinates.length, 2, transform, this.pixelCoordinates_);\\n            transformSetFromArray(this.renderedTransform_, transform);\\n        }\\n        var skipFeatures = !isEmpty(skippedFeaturesHash);\\n        var i = 0; // instruction index\\n        var ii = instructions.length; // end of instructions\\n        var d = 0; // data index\\n        var dd; // end of per-instruction data\\n        var anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, image, text, textKey;\\n        var strokeKey, fillKey;\\n        var pendingFill = 0;\\n        var pendingStroke = 0;\\n        var lastFillInstruction = null;\\n        var lastStrokeInstruction = null;\\n        var coordinateCache = this.coordinateCache_;\\n        var viewRotation = this.viewRotation_;\\n        var state = /** @type {import(\\\"../../render.js\\\").State} */ ({\\n            context: context,\\n            pixelRatio: this.pixelRatio,\\n            resolution: this.resolution,\\n            rotation: viewRotation\\n        });\\n        // When the batch size gets too big, performance decreases. 200 is a good\\n        // balance between batch size and number of fill/stroke instructions.\\n        var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\\n        var /** @type {import(\\\"../../Feature.js\\\").FeatureLike} */ feature;\\n        var x, y;\\n        while (i < ii) {\\n            var instruction = instructions[i];\\n            var type = /** @type {CanvasInstruction} */ (instruction[0]);\\n            switch (type) {\\n                case CanvasInstruction.BEGIN_GEOMETRY:\\n                    feature = /** @type {import(\\\"../../Feature.js\\\").FeatureLike} */ (instruction[1]);\\n                    if ((skipFeatures && skippedFeaturesHash[getUid(feature)]) || !feature.getGeometry()) {\\n                        i = /** @type {number} */ (instruction[2]);\\n                    }\\n                    else if (opt_hitExtent !== undefined && !intersects(opt_hitExtent, feature.getGeometry().getExtent())) {\\n                        i = /** @type {number} */ (instruction[2]) + 1;\\n                    }\\n                    else {\\n                        ++i;\\n                    }\\n                    break;\\n                case CanvasInstruction.BEGIN_PATH:\\n                    if (pendingFill > batchSize) {\\n                        this.fill_(context);\\n                        pendingFill = 0;\\n                    }\\n                    if (pendingStroke > batchSize) {\\n                        context.stroke();\\n                        pendingStroke = 0;\\n                    }\\n                    if (!pendingFill && !pendingStroke) {\\n                        context.beginPath();\\n                        prevX = prevY = NaN;\\n                    }\\n                    ++i;\\n                    break;\\n                case CanvasInstruction.CIRCLE:\\n                    d = /** @type {number} */ (instruction[1]);\\n                    var x1 = pixelCoordinates[d];\\n                    var y1 = pixelCoordinates[d + 1];\\n                    var x2 = pixelCoordinates[d + 2];\\n                    var y2 = pixelCoordinates[d + 3];\\n                    var dx = x2 - x1;\\n                    var dy = y2 - y1;\\n                    var r = Math.sqrt(dx * dx + dy * dy);\\n                    context.moveTo(x1 + r, y1);\\n                    context.arc(x1, y1, r, 0, 2 * Math.PI, true);\\n                    ++i;\\n                    break;\\n                case CanvasInstruction.CLOSE_PATH:\\n                    context.closePath();\\n                    ++i;\\n                    break;\\n                case CanvasInstruction.CUSTOM:\\n                    d = /** @type {number} */ (instruction[1]);\\n                    dd = instruction[2];\\n                    var geometry = /** @type {import(\\\"../../geom/SimpleGeometry.js\\\").default} */ (instruction[3]);\\n                    var renderer = instruction[4];\\n                    var fn = instruction.length == 6 ? instruction[5] : undefined;\\n                    state.geometry = geometry;\\n                    state.feature = feature;\\n                    if (!(i in coordinateCache)) {\\n                        coordinateCache[i] = [];\\n                    }\\n                    var coords = coordinateCache[i];\\n                    if (fn) {\\n                        fn(pixelCoordinates, d, dd, 2, coords);\\n                    }\\n                    else {\\n                        coords[0] = pixelCoordinates[d];\\n                        coords[1] = pixelCoordinates[d + 1];\\n                        coords.length = 2;\\n                    }\\n                    renderer(coords, state);\\n                    ++i;\\n                    break;\\n                case CanvasInstruction.DRAW_IMAGE:\\n                    d = /** @type {number} */ (instruction[1]);\\n                    dd = /** @type {number} */ (instruction[2]);\\n                    image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (instruction[3]);\\n                    // Remaining arguments in DRAW_IMAGE are in alphabetical order\\n                    anchorX = /** @type {number} */ (instruction[4]);\\n                    anchorY = /** @type {number} */ (instruction[5]);\\n                    declutterGroup = featureCallback ? null : /** @type {import(\\\"../canvas.js\\\").DeclutterGroup} */ (instruction[6]);\\n                    var height = /** @type {number} */ (instruction[7]);\\n                    var opacity = /** @type {number} */ (instruction[8]);\\n                    var originX = /** @type {number} */ (instruction[9]);\\n                    var originY = /** @type {number} */ (instruction[10]);\\n                    var rotateWithView = /** @type {boolean} */ (instruction[11]);\\n                    var rotation = /** @type {number} */ (instruction[12]);\\n                    var scale = /** @type {number} */ (instruction[13]);\\n                    var width = /** @type {number} */ (instruction[14]);\\n                    if (!image && instruction.length >= 19) {\\n                        // create label images\\n                        text = /** @type {string} */ (instruction[18]);\\n                        textKey = /** @type {string} */ (instruction[19]);\\n                        strokeKey = /** @type {string} */ (instruction[20]);\\n                        fillKey = /** @type {string} */ (instruction[21]);\\n                        var labelWithAnchor = this.drawTextImageWithPointPlacement_(text, textKey, strokeKey, fillKey);\\n                        image = instruction[3] = labelWithAnchor.label;\\n                        var textOffsetX = /** @type {number} */ (instruction[22]);\\n                        anchorX = instruction[4] = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\\n                        var textOffsetY = /** @type {number} */ (instruction[23]);\\n                        anchorY = instruction[5] = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\\n                        height = instruction[7] = image.height;\\n                        width = instruction[14] = image.width;\\n                    }\\n                    var geometryWidths = void 0;\\n                    if (instruction.length > 24) {\\n                        geometryWidths = /** @type {number} */ (instruction[24]);\\n                    }\\n                    var padding = void 0, backgroundFill = void 0, backgroundStroke = void 0;\\n                    if (instruction.length > 16) {\\n                        padding = /** @type {Array<number>} */ (instruction[15]);\\n                        backgroundFill = /** @type {boolean} */ (instruction[16]);\\n                        backgroundStroke = /** @type {boolean} */ (instruction[17]);\\n                    }\\n                    else {\\n                        padding = defaultPadding;\\n                        backgroundFill = backgroundStroke = false;\\n                    }\\n                    if (rotateWithView) {\\n                        rotation += viewRotation;\\n                    }\\n                    var widthIndex = 0;\\n                    for (; d < dd; d += 2) {\\n                        if (geometryWidths && geometryWidths[widthIndex++] < width / this.pixelRatio) {\\n                            continue;\\n                        }\\n                        this.replayImage_(context, pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY, declutterGroup, height, opacity, originX, originY, rotation, scale, snapToPixel, width, padding, backgroundFill ? /** @type {Array<*>} */ (lastFillInstruction) : null, backgroundStroke ? /** @type {Array<*>} */ (lastStrokeInstruction) : null);\\n                    }\\n                    this.renderDeclutter_(declutterGroup, feature);\\n                    ++i;\\n                    break;\\n                case CanvasInstruction.DRAW_CHARS:\\n                    var begin = /** @type {number} */ (instruction[1]);\\n                    var end = /** @type {number} */ (instruction[2]);\\n                    var baseline = /** @type {number} */ (instruction[3]);\\n                    declutterGroup = featureCallback ? null : /** @type {import(\\\"../canvas.js\\\").DeclutterGroup} */ (instruction[4]);\\n                    var overflow = /** @type {number} */ (instruction[5]);\\n                    fillKey = /** @type {string} */ (instruction[6]);\\n                    var maxAngle = /** @type {number} */ (instruction[7]);\\n                    var measurePixelRatio = /** @type {number} */ (instruction[8]);\\n                    var offsetY = /** @type {number} */ (instruction[9]);\\n                    strokeKey = /** @type {string} */ (instruction[10]);\\n                    var strokeWidth = /** @type {number} */ (instruction[11]);\\n                    text = /** @type {string} */ (instruction[12]);\\n                    textKey = /** @type {string} */ (instruction[13]);\\n                    var pixelRatioScale = /** @type {number} */ (instruction[14]);\\n                    var textState = this.textStates[textKey];\\n                    var font = textState.font;\\n                    var textScale = textState.scale * measurePixelRatio;\\n                    var cachedWidths = void 0;\\n                    if (font in this.widths_) {\\n                        cachedWidths = this.widths_[font];\\n                    }\\n                    else {\\n                        cachedWidths = this.widths_[font] = {};\\n                    }\\n                    var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\\n                    var textLength = textScale * measureAndCacheTextWidth(font, text, cachedWidths);\\n                    if (overflow || textLength <= pathLength) {\\n                        var textAlign = this.textStates[textKey].textAlign;\\n                        var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\\n                        var parts = drawTextOnPath(pixelCoordinates, begin, end, 2, text, startM, maxAngle, textScale, measureAndCacheTextWidth, font, cachedWidths);\\n                        if (parts) {\\n                            var c = void 0, cc = void 0, chars = void 0, label = void 0, part = void 0;\\n                            if (strokeKey) {\\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\\n                                    chars = /** @type {string} */ (part[4]);\\n                                    label = this.getTextImage(chars, textKey, '', strokeKey);\\n                                    anchorX = /** @type {number} */ (part[2]) + strokeWidth;\\n                                    anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\\n                                    this.replayImage_(context, \\n                                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label, anchorX, anchorY, declutterGroup, label.height, 1, 0, 0, \\n                                    /** @type {number} */ (part[3]), pixelRatioScale, false, label.width, defaultPadding, null, null);\\n                                }\\n                            }\\n                            if (fillKey) {\\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\\n                                    chars = /** @type {string} */ (part[4]);\\n                                    label = this.getTextImage(chars, textKey, fillKey, '');\\n                                    anchorX = /** @type {number} */ (part[2]);\\n                                    anchorY = baseline * label.height - offsetY;\\n                                    this.replayImage_(context, \\n                                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label, anchorX, anchorY, declutterGroup, label.height, 1, 0, 0, \\n                                    /** @type {number} */ (part[3]), pixelRatioScale, false, label.width, defaultPadding, null, null);\\n                                }\\n                            }\\n                        }\\n                    }\\n                    this.renderDeclutter_(declutterGroup, feature);\\n                    ++i;\\n                    break;\\n                case CanvasInstruction.END_GEOMETRY:\\n                    if (featureCallback !== undefined) {\\n                        feature = /** @type {import(\\\"../../Feature.js\\\").FeatureLike} */ (instruction[1]);\\n                        var result = featureCallback(feature);\\n                        if (result) {\\n                            return result;\\n                        }\\n                    }\\n                    ++i;\\n                    break;\\n                case CanvasInstruction.FILL:\\n                    if (batchSize) {\\n                        pendingFill++;\\n                    }\\n                    else {\\n                        this.fill_(context);\\n                    }\\n                    ++i;\\n                    break;\\n                case CanvasInstruction.MOVE_TO_LINE_TO:\\n                    d = /** @type {number} */ (instruction[1]);\\n                    dd = /** @type {number} */ (instruction[2]);\\n                    x = pixelCoordinates[d];\\n                    y = pixelCoordinates[d + 1];\\n                    roundX = (x + 0.5) | 0;\\n                    roundY = (y + 0.5) | 0;\\n                    if (roundX !== prevX || roundY !== prevY) {\\n                        context.moveTo(x, y);\\n                        prevX = roundX;\\n                        prevY = roundY;\\n                    }\\n                    for (d += 2; d < dd; d += 2) {\\n                        x = pixelCoordinates[d];\\n                        y = pixelCoordinates[d + 1];\\n                        roundX = (x + 0.5) | 0;\\n                        roundY = (y + 0.5) | 0;\\n                        if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\\n                            context.lineTo(x, y);\\n                            prevX = roundX;\\n                            prevY = roundY;\\n                        }\\n                    }\\n                    ++i;\\n                    break;\\n                case CanvasInstruction.SET_FILL_STYLE:\\n                    lastFillInstruction = instruction;\\n                    this.alignFill_ = instruction[2];\\n                    if (pendingFill) {\\n                        this.fill_(context);\\n                        pendingFill = 0;\\n                        if (pendingStroke) {\\n                            context.stroke();\\n                            pendingStroke = 0;\\n                        }\\n                    }\\n                    context.fillStyle = /** @type {import(\\\"../../colorlike.js\\\").ColorLike} */ (instruction[1]);\\n                    ++i;\\n                    break;\\n                case CanvasInstruction.SET_STROKE_STYLE:\\n                    lastStrokeInstruction = instruction;\\n                    if (pendingStroke) {\\n                        context.stroke();\\n                        pendingStroke = 0;\\n                    }\\n                    this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\\n                    ++i;\\n                    break;\\n                case CanvasInstruction.STROKE:\\n                    if (batchSize) {\\n                        pendingStroke++;\\n                    }\\n                    else {\\n                        context.stroke();\\n                    }\\n                    ++i;\\n                    break;\\n                default:\\n                    ++i; // consume the instruction anyway, to avoid an infinite loop\\n                    break;\\n            }\\n        }\\n        if (pendingFill) {\\n            this.fill_(context);\\n        }\\n        if (pendingStroke) {\\n            context.stroke();\\n        }\\n        return undefined;\\n    };\\n    /**\\n     * @param {CanvasRenderingContext2D} context Context.\\n     * @param {import(\\\"../../transform.js\\\").Transform} transform Transform.\\n     * @param {number} viewRotation View rotation.\\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\\n     *     to skip.\\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\\n     */\\n    Executor.prototype.execute = function (context, transform, viewRotation, skippedFeaturesHash, snapToPixel) {\\n        this.viewRotation_ = viewRotation;\\n        this.execute_(context, transform, skippedFeaturesHash, this.instructions, snapToPixel, undefined, undefined);\\n    };\\n    /**\\n     * @param {CanvasRenderingContext2D} context Context.\\n     * @param {import(\\\"../../transform.js\\\").Transform} transform Transform.\\n     * @param {number} viewRotation View rotation.\\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\\n     *     to skip.\\n     * @param {function(import(\\\"../../Feature.js\\\").FeatureLike): T=} opt_featureCallback\\n     *     Feature callback.\\n     * @param {import(\\\"../../extent.js\\\").Extent=} opt_hitExtent Only check features that intersect this\\n     *     extent.\\n     * @return {T|undefined} Callback result.\\n     * @template T\\n     */\\n    Executor.prototype.executeHitDetection = function (context, transform, viewRotation, skippedFeaturesHash, opt_featureCallback, opt_hitExtent) {\\n        this.viewRotation_ = viewRotation;\\n        return this.execute_(context, transform, skippedFeaturesHash, this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\\n    };\\n    return Executor;\\n}(Disposable));\\nexport default Executor;\\n//# sourceMappingURL=Executor.js.map\",\"/**\\n * @module ol/render/canvas/ExecutorGroup\\n */\\nvar __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\nimport { numberSafeCompareFunction } from '../../array.js';\\nimport { createCanvasContext2D } from '../../dom.js';\\nimport { buffer, createEmpty, extendCoordinate } from '../../extent.js';\\nimport { transform2D } from '../../geom/flat/transform.js';\\nimport { isEmpty } from '../../obj.js';\\nimport BuilderType from './BuilderType.js';\\nimport { create as createTransform, compose as composeTransform } from '../../transform.js';\\nimport Executor from './Executor.js';\\nimport Disposable from '../../Disposable.js';\\n/**\\n * @const\\n * @type {Array<BuilderType>}\\n */\\nvar ORDER = [\\n    BuilderType.POLYGON,\\n    BuilderType.CIRCLE,\\n    BuilderType.LINE_STRING,\\n    BuilderType.IMAGE,\\n    BuilderType.TEXT,\\n    BuilderType.DEFAULT\\n];\\nvar ExecutorGroup = /** @class */ (function (_super) {\\n    __extends(ExecutorGroup, _super);\\n    /**\\n     * @param {import(\\\"../../extent.js\\\").Extent} maxExtent Max extent for clipping. When a\\n     * `maxExtent` was set on the Buillder for this executor group, the same `maxExtent`\\n     * should be set here, unless the target context does not exceet that extent (which\\n     * can be the case when rendering to tiles).\\n     * @param {number} resolution Resolution.\\n     * @param {number} pixelRatio Pixel ratio.\\n     * @param {boolean} overlaps The executor group can have overlapping geometries.\\n     * @param {?} declutterTree Declutter tree for declutter processing in postrender.\\n     * @param {!Object<string, !Object<BuilderType, import(\\\"./Builder.js\\\").SerializableInstructions>>} allInstructions\\n     * The serializable instructions.\\n     * @param {number=} opt_renderBuffer Optional rendering buffer.\\n     */\\n    function ExecutorGroup(maxExtent, resolution, pixelRatio, overlaps, declutterTree, allInstructions, opt_renderBuffer) {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * Declutter tree.\\n         * @private\\n         */\\n        _this.declutterTree_ = declutterTree;\\n        /**\\n         * @private\\n         * @type {import(\\\"../../extent.js\\\").Extent}\\n         */\\n        _this.maxExtent_ = maxExtent;\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.overlaps_ = overlaps;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.pixelRatio_ = pixelRatio;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.resolution_ = resolution;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        _this.renderBuffer_ = opt_renderBuffer;\\n        /**\\n         * @private\\n         * @type {!Object<string, !Object<BuilderType, import(\\\"./Executor\\\").default>>}\\n         */\\n        _this.executorsByZIndex_ = {};\\n        /**\\n         * @private\\n         * @type {CanvasRenderingContext2D}\\n         */\\n        _this.hitDetectionContext_ = createCanvasContext2D(1, 1);\\n        /**\\n         * @private\\n         * @type {import(\\\"../../transform.js\\\").Transform}\\n         */\\n        _this.hitDetectionTransform_ = createTransform();\\n        _this.createExecutors_(allInstructions);\\n        return _this;\\n    }\\n    /**\\n     * @param {CanvasRenderingContext2D} context Context.\\n     * @param {import(\\\"../../transform.js\\\").Transform} transform Transform.\\n     */\\n    ExecutorGroup.prototype.clip = function (context, transform) {\\n        var flatClipCoords = this.getClipCoords(transform);\\n        context.beginPath();\\n        context.moveTo(flatClipCoords[0], flatClipCoords[1]);\\n        context.lineTo(flatClipCoords[2], flatClipCoords[3]);\\n        context.lineTo(flatClipCoords[4], flatClipCoords[5]);\\n        context.lineTo(flatClipCoords[6], flatClipCoords[7]);\\n        context.clip();\\n    };\\n    /**\\n     * Create executors and populate them using the provided instructions.\\n     * @private\\n     * @param {!Object<string, !Object<BuilderType, import(\\\"./Builder.js\\\").SerializableInstructions>>} allInstructions The serializable instructions\\n     */\\n    ExecutorGroup.prototype.createExecutors_ = function (allInstructions) {\\n        for (var zIndex in allInstructions) {\\n            var executors = this.executorsByZIndex_[zIndex];\\n            if (executors === undefined) {\\n                this.executorsByZIndex_[zIndex] = executors = {};\\n            }\\n            var instructionByZindex = allInstructions[zIndex];\\n            for (var builderType in instructionByZindex) {\\n                var instructions = instructionByZindex[builderType];\\n                executors[builderType] = new Executor(this.resolution_, this.pixelRatio_, this.overlaps_, this.declutterTree_, instructions);\\n            }\\n        }\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    ExecutorGroup.prototype.disposeInternal = function () {\\n        for (var z in this.executorsByZIndex_) {\\n            var executors = this.executorsByZIndex_[z];\\n            for (var key in executors) {\\n                executors[key].disposeInternal();\\n            }\\n        }\\n        var canvas = this.hitDetectionContext_.canvas;\\n        canvas.width = canvas.height = 0;\\n        _super.prototype.disposeInternal.call(this);\\n    };\\n    /**\\n     * @param {Array<BuilderType>} executors Executors.\\n     * @return {boolean} Has executors of the provided types.\\n     */\\n    ExecutorGroup.prototype.hasExecutors = function (executors) {\\n        for (var zIndex in this.executorsByZIndex_) {\\n            var candidates = this.executorsByZIndex_[zIndex];\\n            for (var i = 0, ii = executors.length; i < ii; ++i) {\\n                if (executors[i] in candidates) {\\n                    return true;\\n                }\\n            }\\n        }\\n        return false;\\n    };\\n    /**\\n     * @param {import(\\\"../../coordinate.js\\\").Coordinate} coordinate Coordinate.\\n     * @param {number} resolution Resolution.\\n     * @param {number} rotation Rotation.\\n     * @param {number} hitTolerance Hit tolerance in pixels.\\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\\n     * @param {function(import(\\\"../../Feature.js\\\").FeatureLike): T} callback Feature callback.\\n     * @param {Object<string, import(\\\"../canvas.js\\\").DeclutterGroup>} declutterReplays Declutter replays.\\n     * @return {T|undefined} Callback result.\\n     * @template T\\n     */\\n    ExecutorGroup.prototype.forEachFeatureAtCoordinate = function (coordinate, resolution, rotation, hitTolerance, skippedFeaturesHash, callback, declutterReplays) {\\n        hitTolerance = Math.round(hitTolerance);\\n        var contextSize = hitTolerance * 2 + 1;\\n        var transform = composeTransform(this.hitDetectionTransform_, hitTolerance + 0.5, hitTolerance + 0.5, 1 / resolution, -1 / resolution, -rotation, -coordinate[0], -coordinate[1]);\\n        var context = this.hitDetectionContext_;\\n        if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\\n            context.canvas.width = contextSize;\\n            context.canvas.height = contextSize;\\n        }\\n        else {\\n            context.clearRect(0, 0, contextSize, contextSize);\\n        }\\n        /**\\n         * @type {import(\\\"../../extent.js\\\").Extent}\\n         */\\n        var hitExtent;\\n        if (this.renderBuffer_ !== undefined) {\\n            hitExtent = createEmpty();\\n            extendCoordinate(hitExtent, coordinate);\\n            buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\\n        }\\n        var mask = getCircleArray(hitTolerance);\\n        var declutteredFeatures;\\n        if (this.declutterTree_) {\\n            declutteredFeatures = this.declutterTree_.all().map(function (entry) {\\n                return entry.value;\\n            });\\n        }\\n        var builderType;\\n        /**\\n         * @param {import(\\\"../../Feature.js\\\").FeatureLike} feature Feature.\\n         * @return {?} Callback result.\\n         */\\n        function featureCallback(feature) {\\n            var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\\n            for (var i_1 = 0; i_1 < contextSize; i_1++) {\\n                for (var j_1 = 0; j_1 < contextSize; j_1++) {\\n                    if (mask[i_1][j_1]) {\\n                        if (imageData[(j_1 * contextSize + i_1) * 4 + 3] > 0) {\\n                            var result_1 = void 0;\\n                            if (!(declutteredFeatures && (builderType == BuilderType.IMAGE || builderType == BuilderType.TEXT)) ||\\n                                declutteredFeatures.indexOf(feature) !== -1) {\\n                                result_1 = callback(feature);\\n                            }\\n                            if (result_1) {\\n                                return result_1;\\n                            }\\n                            else {\\n                                context.clearRect(0, 0, contextSize, contextSize);\\n                                return undefined;\\n                            }\\n                        }\\n                    }\\n                }\\n            }\\n        }\\n        /** @type {Array<number>} */\\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\\n        zs.sort(numberSafeCompareFunction);\\n        var i, j, executors, executor, result;\\n        for (i = zs.length - 1; i >= 0; --i) {\\n            var zIndexKey = zs[i].toString();\\n            executors = this.executorsByZIndex_[zIndexKey];\\n            for (j = ORDER.length - 1; j >= 0; --j) {\\n                builderType = ORDER[j];\\n                executor = executors[builderType];\\n                if (executor !== undefined) {\\n                    if (declutterReplays &&\\n                        (builderType == BuilderType.IMAGE || builderType == BuilderType.TEXT)) {\\n                        var declutter = declutterReplays[zIndexKey];\\n                        if (!declutter) {\\n                            declutterReplays[zIndexKey] = [executor, transform.slice(0)];\\n                        }\\n                        else {\\n                            declutter.push(executor, transform.slice(0));\\n                        }\\n                    }\\n                    else {\\n                        result = executor.executeHitDetection(context, transform, rotation, skippedFeaturesHash, featureCallback, hitExtent);\\n                        if (result) {\\n                            return result;\\n                        }\\n                    }\\n                }\\n            }\\n        }\\n        return undefined;\\n    };\\n    /**\\n     * @param {import(\\\"../../transform.js\\\").Transform} transform Transform.\\n     * @return {Array<number>} Clip coordinates.\\n     */\\n    ExecutorGroup.prototype.getClipCoords = function (transform) {\\n        var maxExtent = this.maxExtent_;\\n        if (!maxExtent) {\\n            return null;\\n        }\\n        var minX = maxExtent[0];\\n        var minY = maxExtent[1];\\n        var maxX = maxExtent[2];\\n        var maxY = maxExtent[3];\\n        var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\\n        transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\\n        return flatClipCoords;\\n    };\\n    /**\\n     * @return {boolean} Is empty.\\n     */\\n    ExecutorGroup.prototype.isEmpty = function () {\\n        return isEmpty(this.executorsByZIndex_);\\n    };\\n    /**\\n     * @param {CanvasRenderingContext2D} context Context.\\n     * @param {import(\\\"../../transform.js\\\").Transform} transform Transform.\\n     * @param {number} viewRotation View rotation.\\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\\n     * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\\n     * @param {Array<BuilderType>=} opt_builderTypes Ordered replay types to replay.\\n     *     Default is {@link module:ol/render/replay~ORDER}\\n     * @param {Object<string, import(\\\"../canvas.js\\\").DeclutterGroup>=} opt_declutterReplays Declutter replays.\\n     */\\n    ExecutorGroup.prototype.execute = function (context, transform, viewRotation, skippedFeaturesHash, snapToPixel, opt_builderTypes, opt_declutterReplays) {\\n        /** @type {Array<number>} */\\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\\n        zs.sort(numberSafeCompareFunction);\\n        // setup clipping so that the parts of over-simplified geometries are not\\n        // visible outside the current extent when panning\\n        if (this.maxExtent_) {\\n            context.save();\\n            this.clip(context, transform);\\n        }\\n        var builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\\n        var i, ii, j, jj, replays, replay;\\n        for (i = 0, ii = zs.length; i < ii; ++i) {\\n            var zIndexKey = zs[i].toString();\\n            replays = this.executorsByZIndex_[zIndexKey];\\n            for (j = 0, jj = builderTypes.length; j < jj; ++j) {\\n                var builderType = builderTypes[j];\\n                replay = replays[builderType];\\n                if (replay !== undefined) {\\n                    if (opt_declutterReplays &&\\n                        (builderType == BuilderType.IMAGE || builderType == BuilderType.TEXT)) {\\n                        var declutter = opt_declutterReplays[zIndexKey];\\n                        if (!declutter) {\\n                            opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\\n                        }\\n                        else {\\n                            declutter.push(replay, transform.slice(0));\\n                        }\\n                    }\\n                    else {\\n                        replay.execute(context, transform, viewRotation, skippedFeaturesHash, snapToPixel);\\n                    }\\n                }\\n            }\\n        }\\n        if (this.maxExtent_) {\\n            context.restore();\\n        }\\n    };\\n    return ExecutorGroup;\\n}(Disposable));\\n/**\\n * This cache is used for storing calculated pixel circles for increasing performance.\\n * It is a static property to allow each Replaygroup to access it.\\n * @type {Object<number, Array<Array<(boolean|undefined)>>>}\\n */\\nvar circleArrayCache = {\\n    0: [[true]]\\n};\\n/**\\n * This method fills a row in the array from the given coordinate to the\\n * middle with `true`.\\n * @param {Array<Array<(boolean|undefined)>>} array The array that will be altered.\\n * @param {number} x X coordinate.\\n * @param {number} y Y coordinate.\\n */\\nfunction fillCircleArrayRowToMiddle(array, x, y) {\\n    var i;\\n    var radius = Math.floor(array.length / 2);\\n    if (x >= radius) {\\n        for (i = radius; i < x; i++) {\\n            array[i][y] = true;\\n        }\\n    }\\n    else if (x < radius) {\\n        for (i = x + 1; i < radius; i++) {\\n            array[i][y] = true;\\n        }\\n    }\\n}\\n/**\\n * This methods creates a circle inside a fitting array. Points inside the\\n * circle are marked by true, points on the outside are undefined.\\n * It uses the midpoint circle algorithm.\\n * A cache is used to increase performance.\\n * @param {number} radius Radius.\\n * @returns {Array<Array<(boolean|undefined)>>} An array with marked circle points.\\n */\\nexport function getCircleArray(radius) {\\n    if (circleArrayCache[radius] !== undefined) {\\n        return circleArrayCache[radius];\\n    }\\n    var arraySize = radius * 2 + 1;\\n    var arr = new Array(arraySize);\\n    for (var i = 0; i < arraySize; i++) {\\n        arr[i] = new Array(arraySize);\\n    }\\n    var x = radius;\\n    var y = 0;\\n    var error = 0;\\n    while (x >= y) {\\n        fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\\n        fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\\n        fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\\n        fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\\n        fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\\n        fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\\n        fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\\n        fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\\n        y++;\\n        error += 1 + 2 * y;\\n        if (2 * (error - x) + 1 > 0) {\\n            x -= 1;\\n            error += 1 - 2 * x;\\n        }\\n    }\\n    circleArrayCache[radius] = arr;\\n    return arr;\\n}\\n/**\\n * @param {!Object<string, Array<*>>} declutterReplays Declutter replays.\\n * @param {CanvasRenderingContext2D} context Context.\\n * @param {number} rotation Rotation.\\n * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\\n */\\nexport function replayDeclutter(declutterReplays, context, rotation, snapToPixel) {\\n    var zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\\n    var skippedFeatureUids = {};\\n    for (var z = 0, zz = zs.length; z < zz; ++z) {\\n        var executorData = declutterReplays[zs[z].toString()];\\n        for (var i = 0, ii = executorData.length; i < ii;) {\\n            var executor = executorData[i++];\\n            var transform = executorData[i++];\\n            executor.execute(context, transform, rotation, skippedFeatureUids, snapToPixel);\\n        }\\n    }\\n}\\nexport default ExecutorGroup;\\n//# sourceMappingURL=ExecutorGroup.js.map\",\"/**\\n * @module ol/renderer/vector\\n */\\nimport { getUid } from '../util.js';\\nimport ImageState from '../ImageState.js';\\nimport GeometryType from '../geom/GeometryType.js';\\nimport BuilderType from '../render/canvas/BuilderType.js';\\n/**\\n * Tolerance for geometry simplification in device pixels.\\n * @type {number}\\n */\\nvar SIMPLIFY_TOLERANCE = 0.5;\\n/**\\n * @const\\n * @type {Object<import(\\\"../geom/GeometryType.js\\\").default,\\n *                function(import(\\\"../render/canvas/BuilderGroup.js\\\").default, import(\\\"../geom/Geometry.js\\\").default,\\n *                         import(\\\"../style/Style.js\\\").default, Object): void>}\\n */\\nvar GEOMETRY_RENDERERS = {\\n    'Point': renderPointGeometry,\\n    'LineString': renderLineStringGeometry,\\n    'Polygon': renderPolygonGeometry,\\n    'MultiPoint': renderMultiPointGeometry,\\n    'MultiLineString': renderMultiLineStringGeometry,\\n    'MultiPolygon': renderMultiPolygonGeometry,\\n    'GeometryCollection': renderGeometryCollectionGeometry,\\n    'Circle': renderCircleGeometry\\n};\\n/**\\n * @param {import(\\\"../Feature.js\\\").FeatureLike} feature1 Feature 1.\\n * @param {import(\\\"../Feature.js\\\").FeatureLike} feature2 Feature 2.\\n * @return {number} Order.\\n */\\nexport function defaultOrder(feature1, feature2) {\\n    return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\\n}\\n/**\\n * @param {number} resolution Resolution.\\n * @param {number} pixelRatio Pixel ratio.\\n * @return {number} Squared pixel tolerance.\\n */\\nexport function getSquaredTolerance(resolution, pixelRatio) {\\n    var tolerance = getTolerance(resolution, pixelRatio);\\n    return tolerance * tolerance;\\n}\\n/**\\n * @param {number} resolution Resolution.\\n * @param {number} pixelRatio Pixel ratio.\\n * @return {number} Pixel tolerance.\\n */\\nexport function getTolerance(resolution, pixelRatio) {\\n    return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\\n}\\n/**\\n * @param {import(\\\"../render/canvas/BuilderGroup.js\\\").default} builderGroup Builder group.\\n * @param {import(\\\"../geom/Circle.js\\\").default} geometry Geometry.\\n * @param {import(\\\"../style/Style.js\\\").default} style Style.\\n * @param {import(\\\"../Feature.js\\\").default} feature Feature.\\n */\\nfunction renderCircleGeometry(builderGroup, geometry, style, feature) {\\n    var fillStyle = style.getFill();\\n    var strokeStyle = style.getStroke();\\n    if (fillStyle || strokeStyle) {\\n        var circleReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.CIRCLE);\\n        circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\\n        circleReplay.drawCircle(geometry, feature);\\n    }\\n    var textStyle = style.getText();\\n    if (textStyle) {\\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\\n        textReplay.drawText(geometry, feature);\\n    }\\n}\\n/**\\n * @param {import(\\\"../render/canvas/BuilderGroup.js\\\").default} replayGroup Replay group.\\n * @param {import(\\\"../Feature.js\\\").FeatureLike} feature Feature.\\n * @param {import(\\\"../style/Style.js\\\").default} style Style.\\n * @param {number} squaredTolerance Squared tolerance.\\n * @param {function(this: T, import(\\\"../events/Event.js\\\").default): void} listener Listener function.\\n * @param {T} thisArg Value to use as `this` when executing `listener`.\\n * @return {boolean} `true` if style is loading.\\n * @template T\\n */\\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, thisArg) {\\n    var loading = false;\\n    var imageStyle = style.getImage();\\n    if (imageStyle) {\\n        var imageState = imageStyle.getImageState();\\n        if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\\n            imageStyle.unlistenImageChange(listener, thisArg);\\n        }\\n        else {\\n            if (imageState == ImageState.IDLE) {\\n                imageStyle.load();\\n            }\\n            imageState = imageStyle.getImageState();\\n            imageStyle.listenImageChange(listener, thisArg);\\n            loading = true;\\n        }\\n    }\\n    renderFeatureInternal(replayGroup, feature, style, squaredTolerance);\\n    return loading;\\n}\\n/**\\n * @param {import(\\\"../render/canvas/BuilderGroup.js\\\").default} replayGroup Replay group.\\n * @param {import(\\\"../Feature.js\\\").FeatureLike} feature Feature.\\n * @param {import(\\\"../style/Style.js\\\").default} style Style.\\n * @param {number} squaredTolerance Squared tolerance.\\n */\\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance) {\\n    var geometry = style.getGeometryFunction()(feature);\\n    if (!geometry) {\\n        return;\\n    }\\n    var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\\n    var renderer = style.getRenderer();\\n    if (renderer) {\\n        renderGeometry(replayGroup, simplifiedGeometry, style, feature);\\n    }\\n    else {\\n        var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\\n        geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\\n    }\\n}\\n/**\\n * @param {import(\\\"../render/canvas/BuilderGroup.js\\\").default} replayGroup Replay group.\\n * @param {import(\\\"../geom/Geometry.js\\\").default|import(\\\"../render/Feature.js\\\").default} geometry Geometry.\\n * @param {import(\\\"../style/Style.js\\\").default} style Style.\\n * @param {import(\\\"../Feature.js\\\").FeatureLike} feature Feature.\\n */\\nfunction renderGeometry(replayGroup, geometry, style, feature) {\\n    if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\\n        var geometries = /** @type {import(\\\"../geom/GeometryCollection.js\\\").default} */ (geometry).getGeometries();\\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\\n            renderGeometry(replayGroup, geometries[i], style, feature);\\n        }\\n        return;\\n    }\\n    var replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\\n    replay.drawCustom(/** @type {import(\\\"../geom/SimpleGeometry.js\\\").default} */ (geometry), feature, style.getRenderer());\\n}\\n/**\\n * @param {import(\\\"../render/canvas/BuilderGroup.js\\\").default} replayGroup Replay group.\\n * @param {import(\\\"../geom/GeometryCollection.js\\\").default} geometry Geometry.\\n * @param {import(\\\"../style/Style.js\\\").default} style Style.\\n * @param {import(\\\"../Feature.js\\\").default} feature Feature.\\n */\\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\\n    var geometries = geometry.getGeometriesArray();\\n    var i, ii;\\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\\n        var geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\\n        geometryRenderer(replayGroup, geometries[i], style, feature);\\n    }\\n}\\n/**\\n * @param {import(\\\"../render/canvas/BuilderGroup.js\\\").default} builderGroup Replay group.\\n * @param {import(\\\"../geom/LineString.js\\\").default|import(\\\"../render/Feature.js\\\").default} geometry Geometry.\\n * @param {import(\\\"../style/Style.js\\\").default} style Style.\\n * @param {import(\\\"../Feature.js\\\").FeatureLike} feature Feature.\\n */\\nfunction renderLineStringGeometry(builderGroup, geometry, style, feature) {\\n    var strokeStyle = style.getStroke();\\n    if (strokeStyle) {\\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\\n        lineStringReplay.drawLineString(geometry, feature);\\n    }\\n    var textStyle = style.getText();\\n    if (textStyle) {\\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\\n        textReplay.drawText(geometry, feature);\\n    }\\n}\\n/**\\n * @param {import(\\\"../render/canvas/BuilderGroup.js\\\").default} builderGroup Replay group.\\n * @param {import(\\\"../geom/MultiLineString.js\\\").default|import(\\\"../render/Feature.js\\\").default} geometry Geometry.\\n * @param {import(\\\"../style/Style.js\\\").default} style Style.\\n * @param {import(\\\"../Feature.js\\\").FeatureLike} feature Feature.\\n */\\nfunction renderMultiLineStringGeometry(builderGroup, geometry, style, feature) {\\n    var strokeStyle = style.getStroke();\\n    if (strokeStyle) {\\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\\n        lineStringReplay.drawMultiLineString(geometry, feature);\\n    }\\n    var textStyle = style.getText();\\n    if (textStyle) {\\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\\n        textReplay.drawText(geometry, feature);\\n    }\\n}\\n/**\\n * @param {import(\\\"../render/canvas/BuilderGroup.js\\\").default} builderGroup Replay group.\\n * @param {import(\\\"../geom/MultiPolygon.js\\\").default} geometry Geometry.\\n * @param {import(\\\"../style/Style.js\\\").default} style Style.\\n * @param {import(\\\"../Feature.js\\\").default} feature Feature.\\n */\\nfunction renderMultiPolygonGeometry(builderGroup, geometry, style, feature) {\\n    var fillStyle = style.getFill();\\n    var strokeStyle = style.getStroke();\\n    if (strokeStyle || fillStyle) {\\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\\n        polygonReplay.drawMultiPolygon(geometry, feature);\\n    }\\n    var textStyle = style.getText();\\n    if (textStyle) {\\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\\n        textReplay.drawText(geometry, feature);\\n    }\\n}\\n/**\\n * @param {import(\\\"../render/canvas/BuilderGroup.js\\\").default} builderGroup Replay group.\\n * @param {import(\\\"../geom/Point.js\\\").default|import(\\\"../render/Feature.js\\\").default} geometry Geometry.\\n * @param {import(\\\"../style/Style.js\\\").default} style Style.\\n * @param {import(\\\"../Feature.js\\\").FeatureLike} feature Feature.\\n */\\nfunction renderPointGeometry(builderGroup, geometry, style, feature) {\\n    var imageStyle = style.getImage();\\n    if (imageStyle) {\\n        if (imageStyle.getImageState() != ImageState.LOADED) {\\n            return;\\n        }\\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\\n        imageReplay.setImageStyle(imageStyle, builderGroup.addDeclutter(false));\\n        imageReplay.drawPoint(geometry, feature);\\n    }\\n    var textStyle = style.getText();\\n    if (textStyle) {\\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(!!imageStyle));\\n        textReplay.drawText(geometry, feature);\\n    }\\n}\\n/**\\n * @param {import(\\\"../render/canvas/BuilderGroup.js\\\").default} builderGroup Replay group.\\n * @param {import(\\\"../geom/MultiPoint.js\\\").default|import(\\\"../render/Feature.js\\\").default} geometry Geometry.\\n * @param {import(\\\"../style/Style.js\\\").default} style Style.\\n * @param {import(\\\"../Feature.js\\\").FeatureLike} feature Feature.\\n */\\nfunction renderMultiPointGeometry(builderGroup, geometry, style, feature) {\\n    var imageStyle = style.getImage();\\n    if (imageStyle) {\\n        if (imageStyle.getImageState() != ImageState.LOADED) {\\n            return;\\n        }\\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\\n        imageReplay.setImageStyle(imageStyle, builderGroup.addDeclutter(false));\\n        imageReplay.drawMultiPoint(geometry, feature);\\n    }\\n    var textStyle = style.getText();\\n    if (textStyle) {\\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(!!imageStyle));\\n        textReplay.drawText(geometry, feature);\\n    }\\n}\\n/**\\n * @param {import(\\\"../render/canvas/BuilderGroup.js\\\").default} builderGroup Replay group.\\n * @param {import(\\\"../geom/Polygon.js\\\").default|import(\\\"../render/Feature.js\\\").default} geometry Geometry.\\n * @param {import(\\\"../style/Style.js\\\").default} style Style.\\n * @param {import(\\\"../Feature.js\\\").FeatureLike} feature Feature.\\n */\\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature) {\\n    var fillStyle = style.getFill();\\n    var strokeStyle = style.getStroke();\\n    if (fillStyle || strokeStyle) {\\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\\n        polygonReplay.drawPolygon(geometry, feature);\\n    }\\n    var textStyle = style.getText();\\n    if (textStyle) {\\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\\n        textReplay.drawText(geometry, feature);\\n    }\\n}\\n//# sourceMappingURL=vector.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/renderer/canvas/VectorLayer\\n */\\nimport { getUid } from '../../util.js';\\nimport ViewHint from '../../ViewHint.js';\\nimport { listen, unlisten } from '../../events.js';\\nimport EventType from '../../events/EventType.js';\\nimport rbush from 'rbush';\\nimport { buffer, createEmpty, containsExtent, getWidth } from '../../extent.js';\\nimport { labelCache } from '../../render/canvas.js';\\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\\nimport CanvasLayerRenderer from './Layer.js';\\nimport { defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature } from '../vector.js';\\nimport { toString as transformToString, makeScale, makeInverse } from '../../transform.js';\\n/**\\n * @classdesc\\n * Canvas renderer for vector layers.\\n * @api\\n */\\nvar CanvasVectorLayerRenderer = /** @class */ (function (_super) {\\n    __extends(CanvasVectorLayerRenderer, _super);\\n    /**\\n     * @param {import(\\\"../../layer/Vector.js\\\").default} vectorLayer Vector layer.\\n     */\\n    function CanvasVectorLayerRenderer(vectorLayer) {\\n        var _this = _super.call(this, vectorLayer) || this;\\n        /**\\n         * Declutter tree.\\n         * @private\\n         */\\n        _this.declutterTree_ = vectorLayer.getDeclutter() ? rbush(9, undefined) : null;\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.dirty_ = false;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.renderedRevision_ = -1;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.renderedResolution_ = NaN;\\n        /**\\n         * @private\\n         * @type {import(\\\"../../extent.js\\\").Extent}\\n         */\\n        _this.renderedExtent_ = createEmpty();\\n        /**\\n         * @private\\n         * @type {function(import(\\\"../../Feature.js\\\").default, import(\\\"../../Feature.js\\\").default): number|null}\\n         */\\n        _this.renderedRenderOrder_ = null;\\n        /**\\n         * @private\\n         * @type {import(\\\"../../render/canvas/ExecutorGroup\\\").default}\\n         */\\n        _this.replayGroup_ = null;\\n        /**\\n         * A new replay group had to be created by `prepareFrame()`\\n         * @type {boolean}\\n         */\\n        _this.replayGroupChanged = true;\\n        listen(labelCache, EventType.CLEAR, _this.handleFontsChanged_, _this);\\n        return _this;\\n    }\\n    /**\\n     * @inheritDoc\\n     */\\n    CanvasVectorLayerRenderer.prototype.disposeInternal = function () {\\n        unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\\n        _super.prototype.disposeInternal.call(this);\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    CanvasVectorLayerRenderer.prototype.renderFrame = function (frameState, layerState) {\\n        var context = this.context;\\n        var canvas = context.canvas;\\n        var replayGroup = this.replayGroup_;\\n        if (!replayGroup || replayGroup.isEmpty()) {\\n            if (canvas.width > 0) {\\n                canvas.width = 0;\\n            }\\n            return canvas;\\n        }\\n        var pixelRatio = frameState.pixelRatio;\\n        // set forward and inverse pixel transforms\\n        makeScale(this.pixelTransform_, 1 / pixelRatio, 1 / pixelRatio);\\n        makeInverse(this.inversePixelTransform_, this.pixelTransform_);\\n        // resize and clear\\n        var width = Math.round(frameState.size[0] * pixelRatio);\\n        var height = Math.round(frameState.size[1] * pixelRatio);\\n        if (canvas.width != width || canvas.height != height) {\\n            canvas.width = width;\\n            canvas.height = height;\\n            var canvasTransform = transformToString(this.pixelTransform_);\\n            if (canvas.style.transform !== canvasTransform) {\\n                canvas.style.transform = canvasTransform;\\n            }\\n        }\\n        else {\\n            context.clearRect(0, 0, width, height);\\n        }\\n        this.preRender(context, frameState);\\n        var extent = frameState.extent;\\n        var viewState = frameState.viewState;\\n        var projection = viewState.projection;\\n        var rotation = viewState.rotation;\\n        var projectionExtent = projection.getExtent();\\n        var vectorSource = this.getLayer().getSource();\\n        // clipped rendering if layer extent is set\\n        var clipExtent = layerState.extent;\\n        var clipped = clipExtent !== undefined;\\n        if (clipped) {\\n            this.clip(context, frameState, clipExtent);\\n        }\\n        if (this.declutterTree_) {\\n            this.declutterTree_.clear();\\n        }\\n        var viewHints = frameState.viewHints;\\n        var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\\n        var transform = this.getRenderTransform(frameState, width, height, 0);\\n        var skippedFeatureUids = layerState.managed ? frameState.skippedFeatureUids : {};\\n        replayGroup.execute(context, transform, rotation, skippedFeatureUids, snapToPixel);\\n        if (vectorSource.getWrapX() && projection.canWrapX() && !containsExtent(projectionExtent, extent)) {\\n            var startX = extent[0];\\n            var worldWidth = getWidth(projectionExtent);\\n            var world = 0;\\n            var offsetX = void 0;\\n            while (startX < projectionExtent[0]) {\\n                --world;\\n                offsetX = worldWidth * world;\\n                var transform_1 = this.getRenderTransform(frameState, width, height, offsetX);\\n                replayGroup.execute(context, transform_1, rotation, skippedFeatureUids, snapToPixel);\\n                startX += worldWidth;\\n            }\\n            world = 0;\\n            startX = extent[2];\\n            while (startX > projectionExtent[2]) {\\n                ++world;\\n                offsetX = worldWidth * world;\\n                var transform_2 = this.getRenderTransform(frameState, width, height, offsetX);\\n                replayGroup.execute(context, transform_2, rotation, skippedFeatureUids, snapToPixel);\\n                startX -= worldWidth;\\n            }\\n        }\\n        if (clipped) {\\n            context.restore();\\n        }\\n        this.postRender(context, frameState);\\n        var opacity = layerState.opacity;\\n        if (opacity !== parseFloat(canvas.style.opacity)) {\\n            canvas.style.opacity = opacity;\\n        }\\n        return canvas;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, thisArg) {\\n        if (!this.replayGroup_) {\\n            return undefined;\\n        }\\n        else {\\n            var resolution = frameState.viewState.resolution;\\n            var rotation = frameState.viewState.rotation;\\n            var layer_1 = this.getLayer();\\n            /** @type {!Object<string, boolean>} */\\n            var features_1 = {};\\n            var result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {}, \\n            /**\\n             * @param {import(\\\"../../Feature.js\\\").FeatureLike} feature Feature.\\n             * @return {?} Callback result.\\n             */\\n            function (feature) {\\n                var key = getUid(feature);\\n                if (!(key in features_1)) {\\n                    features_1[key] = true;\\n                    return callback.call(thisArg, feature, layer_1);\\n                }\\n            }, null);\\n            return result;\\n        }\\n    };\\n    /**\\n     * @param {import(\\\"../../events/Event.js\\\").default} event Event.\\n     */\\n    CanvasVectorLayerRenderer.prototype.handleFontsChanged_ = function (event) {\\n        var layer = this.getLayer();\\n        if (layer.getVisible() && this.replayGroup_) {\\n            layer.changed();\\n        }\\n    };\\n    /**\\n     * Handle changes in image style state.\\n     * @param {import(\\\"../../events/Event.js\\\").default} event Image style change event.\\n     * @private\\n     */\\n    CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function (event) {\\n        this.renderIfReadyAndVisible();\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    CanvasVectorLayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\\n        var vectorLayer = /** @type {import(\\\"../../layer/Vector.js\\\").default} */ (this.getLayer());\\n        var vectorSource = vectorLayer.getSource();\\n        var animating = frameState.viewHints[ViewHint.ANIMATING];\\n        var interacting = frameState.viewHints[ViewHint.INTERACTING];\\n        var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\\n        var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\\n        if (!this.dirty_ && (!updateWhileAnimating && animating) ||\\n            (!updateWhileInteracting && interacting)) {\\n            return true;\\n        }\\n        var frameStateExtent = frameState.extent;\\n        var viewState = frameState.viewState;\\n        var projection = viewState.projection;\\n        var resolution = viewState.resolution;\\n        var pixelRatio = frameState.pixelRatio;\\n        var vectorLayerRevision = vectorLayer.getRevision();\\n        var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\\n        var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\\n        if (vectorLayerRenderOrder === undefined) {\\n            vectorLayerRenderOrder = defaultRenderOrder;\\n        }\\n        var extent = buffer(frameStateExtent, vectorLayerRenderBuffer * resolution);\\n        var projectionExtent = viewState.projection.getExtent();\\n        if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\\n            !containsExtent(projectionExtent, frameState.extent)) {\\n            // For the replay group, we need an extent that intersects the real world\\n            // (-180° to +180°). To support geometries in a coordinate range from -540°\\n            // to +540°, we add at least 1 world width on each side of the projection\\n            // extent. If the viewport is wider than the world, we need to add half of\\n            // the viewport width to make sure we cover the whole viewport.\\n            var worldWidth = getWidth(projectionExtent);\\n            var gutter = Math.max(getWidth(extent) / 2, worldWidth);\\n            extent[0] = projectionExtent[0] - gutter;\\n            extent[2] = projectionExtent[2] + gutter;\\n        }\\n        if (!this.dirty_ &&\\n            this.renderedResolution_ == resolution &&\\n            this.renderedRevision_ == vectorLayerRevision &&\\n            this.renderedRenderOrder_ == vectorLayerRenderOrder &&\\n            containsExtent(this.renderedExtent_, extent)) {\\n            this.replayGroupChanged = false;\\n            return true;\\n        }\\n        if (this.replayGroup_) {\\n            this.replayGroup_.dispose();\\n        }\\n        this.replayGroup_ = null;\\n        this.dirty_ = false;\\n        var replayGroup = new CanvasBuilderGroup(getRenderTolerance(resolution, pixelRatio), extent, resolution, pixelRatio, !!this.declutterTree_);\\n        vectorSource.loadFeatures(extent, resolution, projection);\\n        /**\\n         * @param {import(\\\"../../Feature.js\\\").default} feature Feature.\\n         * @this {CanvasVectorLayerRenderer}\\n         */\\n        var render = function (feature) {\\n            var styles;\\n            var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\\n            if (styleFunction) {\\n                styles = styleFunction(feature, resolution);\\n            }\\n            if (styles) {\\n                var dirty = this.renderFeature(feature, resolution, pixelRatio, styles, replayGroup);\\n                this.dirty_ = this.dirty_ || dirty;\\n            }\\n        }.bind(this);\\n        if (vectorLayerRenderOrder) {\\n            /** @type {Array<import(\\\"../../Feature.js\\\").default>} */\\n            var features_2 = [];\\n            vectorSource.forEachFeatureInExtent(extent, \\n            /**\\n             * @param {import(\\\"../../Feature.js\\\").default} feature Feature.\\n             */\\n            function (feature) {\\n                features_2.push(feature);\\n            });\\n            features_2.sort(vectorLayerRenderOrder);\\n            for (var i = 0, ii = features_2.length; i < ii; ++i) {\\n                render(features_2[i]);\\n            }\\n        }\\n        else {\\n            vectorSource.forEachFeatureInExtent(extent, render);\\n        }\\n        var replayGroupInstructions = replayGroup.finish();\\n        var executorGroup = new ExecutorGroup(extent, resolution, pixelRatio, vectorSource.getOverlaps(), this.declutterTree_, replayGroupInstructions, vectorLayer.getRenderBuffer());\\n        this.renderedResolution_ = resolution;\\n        this.renderedRevision_ = vectorLayerRevision;\\n        this.renderedRenderOrder_ = vectorLayerRenderOrder;\\n        this.renderedExtent_ = extent;\\n        this.replayGroup_ = executorGroup;\\n        this.replayGroupChanged = true;\\n        return true;\\n    };\\n    /**\\n     * @param {import(\\\"../../Feature.js\\\").default} feature Feature.\\n     * @param {number} resolution Resolution.\\n     * @param {number} pixelRatio Pixel ratio.\\n     * @param {import(\\\"../../style/Style.js\\\").default|Array<import(\\\"../../style/Style.js\\\").default>} styles The style or array of styles.\\n     * @param {import(\\\"../../render/canvas/BuilderGroup.js\\\").default} builderGroup Builder group.\\n     * @return {boolean} `true` if an image is loading.\\n     */\\n    CanvasVectorLayerRenderer.prototype.renderFeature = function (feature, resolution, pixelRatio, styles, builderGroup) {\\n        if (!styles) {\\n            return false;\\n        }\\n        var loading = false;\\n        if (Array.isArray(styles)) {\\n            for (var i = 0, ii = styles.length; i < ii; ++i) {\\n                loading = renderFeature(builderGroup, feature, styles[i], getSquaredRenderTolerance(resolution, pixelRatio), this.handleStyleImageChange_, this) || loading;\\n            }\\n        }\\n        else {\\n            loading = renderFeature(builderGroup, feature, styles, getSquaredRenderTolerance(resolution, pixelRatio), this.handleStyleImageChange_, this);\\n        }\\n        return loading;\\n    };\\n    return CanvasVectorLayerRenderer;\\n}(CanvasLayerRenderer));\\nexport default CanvasVectorLayerRenderer;\\n//# sourceMappingURL=VectorLayer.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/layer/Vector\\n */\\nimport BaseVectorLayer from './BaseVector.js';\\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\\n/**\\n * @typedef {import(\\\"./BaseVector.js\\\").Options} Options\\n */\\n/**\\n * @classdesc\\n * Vector data that is rendered client-side.\\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\\n * property on the layer object; for example, setting `title: 'My Title'` in the\\n * options means that `title` is observable, and has get/set accessors.\\n *\\n * @extends {BaseVectorLayer<import(\\\"../source/Vector.js\\\").default>}\\n * @api\\n */\\nvar VectorLayer = /** @class */ (function (_super) {\\n    __extends(VectorLayer, _super);\\n    /**\\n     * @param {Options=} opt_options Options.\\n     */\\n    function VectorLayer(opt_options) {\\n        return _super.call(this, opt_options) || this;\\n    }\\n    /**\\n     * Create a renderer for this layer.\\n     * @return {import(\\\"../renderer/Layer.js\\\").default} A layer renderer.\\n     * @protected\\n     */\\n    VectorLayer.prototype.createRenderer = function () {\\n        return new CanvasVectorLayerRenderer(this);\\n    };\\n    return VectorLayer;\\n}(BaseVectorLayer));\\nexport default VectorLayer;\\n//# sourceMappingURL=Vector.js.map\",\"/**\\n * @module ol/reproj/common\\n */\\n/**\\n * Default maximum allowed threshold  (in pixels) for reprojection\\n * triangulation.\\n * @type {number}\\n */\\nexport var ERROR_THRESHOLD = 0.5;\\n/**\\n * Enable automatic reprojection of raster sources. Default is `true`.\\n * TODO: decide if we want to expose this as a build flag or remove it\\n * @type {boolean}\\n */\\nexport var ENABLE_RASTER_REPROJECTION = true;\\n//# sourceMappingURL=common.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/Tile\\n */\\nimport TileState from './TileState.js';\\nimport { easeIn } from './easing.js';\\nimport EventTarget from './events/Target.js';\\nimport EventType from './events/EventType.js';\\nimport { abstract } from './util.js';\\n/**\\n * A function that takes an {@link module:ol/Tile} for the tile and a\\n * `{string}` for the url as arguments. The default is\\n * ```js\\n * source.setTileLoadFunction(function(tile, src) {\\n *   tile.getImage().src = src;\\n * });\\n * ```\\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\\n * error handling:\\n *\\n * ```js\\n * import TileState from 'ol/TileState';\\n *\\n * source.setTileLoadFunction(function(tile, src) {\\n *   var xhr = new XMLHttpRequest();\\n *   xhr.responseType = 'blob';\\n *   xhr.addEventListener('loadend', function (evt) {\\n *     var data = this.response;\\n *     if (data !== undefined) {\\n *       tile.getImage().src = URL.createObjectURL(data);\\n *     } else {\\n *       tile.setState(TileState.ERROR);\\n *     }\\n *   });\\n *   xhr.addEventListener('error', function () {\\n *     tile.setState(TileState.ERROR);\\n *   });\\n *   xhr.open('GET', src);\\n *   xhr.send();\\n * });\\n * ```\\n *\\n * @typedef {function(Tile, string): void} LoadFunction\\n * @api\\n */\\n/**\\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\\n * the url that provides a tile for a given tile coordinate.\\n *\\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\\n * coordinate, a `{number}` representing the pixel ratio and a\\n * {@link module:ol/proj/Projection} for the projection  as arguments\\n * and returns a `{string}` representing the tile URL, or undefined if no tile\\n * should be requested for the passed tile coordinate.\\n *\\n * @typedef {function(import(\\\"./tilecoord.js\\\").TileCoord, number,\\n *           import(\\\"./proj/Projection.js\\\").default): (string|undefined)} UrlFunction\\n * @api\\n */\\n/**\\n * @typedef {Object} Options\\n * @property {number} [transition=250] A duration for tile opacity\\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\\n * @api\\n */\\n/**\\n * @classdesc\\n * Base class for tiles.\\n *\\n * @abstract\\n */\\nvar Tile = /** @class */ (function (_super) {\\n    __extends(Tile, _super);\\n    /**\\n     * @param {import(\\\"./tilecoord.js\\\").TileCoord} tileCoord Tile coordinate.\\n     * @param {TileState} state State.\\n     * @param {Options=} opt_options Tile options.\\n     */\\n    function Tile(tileCoord, state, opt_options) {\\n        var _this = _super.call(this) || this;\\n        var options = opt_options ? opt_options : {};\\n        /**\\n         * @type {import(\\\"./tilecoord.js\\\").TileCoord}\\n         */\\n        _this.tileCoord = tileCoord;\\n        /**\\n         * @protected\\n         * @type {TileState}\\n         */\\n        _this.state = state;\\n        /**\\n         * An \\\"interim\\\" tile for this tile. The interim tile may be used while this\\n         * one is loading, for \\\"smooth\\\" transitions when changing params/dimensions\\n         * on the source.\\n         * @type {Tile}\\n         */\\n        _this.interimTile = null;\\n        /**\\n         * The tile is available at the highest possible resolution. Subclasses can\\n         * set this to `false` initially. Tile load listeners will not be\\n         * unregistered before this is set to `true` and a `#changed()` is called.\\n         * @type {boolean}\\n         */\\n        _this.hifi = true;\\n        /**\\n         * A key assigned to the tile. This is used by the tile source to determine\\n         * if this tile can effectively be used, or if a new tile should be created\\n         * and this one be used as an interim tile for this new tile.\\n         * @type {string}\\n         */\\n        _this.key = '';\\n        /**\\n         * The duration for the opacity transition.\\n         * @type {number}\\n         */\\n        _this.transition_ = options.transition === undefined ? 250 : options.transition;\\n        /**\\n         * Lookup of start times for rendering transitions.  If the start time is\\n         * equal to -1, the transition is complete.\\n         * @type {Object<string, number>}\\n         */\\n        _this.transitionStarts_ = {};\\n        return _this;\\n    }\\n    /**\\n     * @protected\\n     */\\n    Tile.prototype.changed = function () {\\n        this.dispatchEvent(EventType.CHANGE);\\n    };\\n    /**\\n     * @return {string} Key.\\n     */\\n    Tile.prototype.getKey = function () {\\n        return this.key + '/' + this.tileCoord;\\n    };\\n    /**\\n     * Get the interim tile most suitable for rendering using the chain of interim\\n     * tiles. This corresponds to the  most recent tile that has been loaded, if no\\n     * such tile exists, the original tile is returned.\\n     * @return {!Tile} Best tile for rendering.\\n     */\\n    Tile.prototype.getInterimTile = function () {\\n        if (!this.interimTile) {\\n            //empty chain\\n            return this;\\n        }\\n        var tile = this.interimTile;\\n        // find the first loaded tile and return it. Since the chain is sorted in\\n        // decreasing order of creation time, there is no need to search the remainder\\n        // of the list (all those tiles correspond to older requests and will be\\n        // cleaned up by refreshInterimChain)\\n        do {\\n            if (tile.getState() == TileState.LOADED) {\\n                // Show tile immediately instead of fading it in after loading, because\\n                // the interim tile is in place already\\n                this.transition_ = 0;\\n                return tile;\\n            }\\n            tile = tile.interimTile;\\n        } while (tile);\\n        // we can not find a better tile\\n        return this;\\n    };\\n    /**\\n     * Goes through the chain of interim tiles and discards sections of the chain\\n     * that are no longer relevant.\\n     */\\n    Tile.prototype.refreshInterimChain = function () {\\n        if (!this.interimTile) {\\n            return;\\n        }\\n        var tile = this.interimTile;\\n        var prev = /** @type {Tile} */ (this);\\n        do {\\n            if (tile.getState() == TileState.LOADED) {\\n                //we have a loaded tile, we can discard the rest of the list\\n                //we would could abort any LOADING tile request\\n                //older than this tile (i.e. any LOADING tile following this entry in the chain)\\n                tile.interimTile = null;\\n                break;\\n            }\\n            else if (tile.getState() == TileState.LOADING) {\\n                //keep this LOADING tile any loaded tiles later in the chain are\\n                //older than this tile, so we're still interested in the request\\n                prev = tile;\\n            }\\n            else if (tile.getState() == TileState.IDLE) {\\n                //the head of the list is the most current tile, we don't need\\n                //to start any other requests for this chain\\n                prev.interimTile = tile.interimTile;\\n            }\\n            else {\\n                prev = tile;\\n            }\\n            tile = prev.interimTile;\\n        } while (tile);\\n    };\\n    /**\\n     * Get the tile coordinate for this tile.\\n     * @return {import(\\\"./tilecoord.js\\\").TileCoord} The tile coordinate.\\n     * @api\\n     */\\n    Tile.prototype.getTileCoord = function () {\\n        return this.tileCoord;\\n    };\\n    /**\\n     * @return {TileState} State.\\n     */\\n    Tile.prototype.getState = function () {\\n        return this.state;\\n    };\\n    /**\\n     * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\\n     * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\\n     * when the tile cannot be loaded. Otherwise the tile cannot be removed from\\n     * the tile queue and will block other requests.\\n     * @param {TileState} state State.\\n     * @api\\n     */\\n    Tile.prototype.setState = function (state) {\\n        this.state = state;\\n        this.changed();\\n    };\\n    /**\\n     * Load the image or retry if loading previously failed.\\n     * Loading is taken care of by the tile queue, and calling this method is\\n     * only needed for preloading or for reloading in case of an error.\\n     * @abstract\\n     * @api\\n     */\\n    Tile.prototype.load = function () {\\n        abstract();\\n    };\\n    /**\\n     * Get the alpha value for rendering.\\n     * @param {string} id An id for the renderer.\\n     * @param {number} time The render frame time.\\n     * @return {number} A number between 0 and 1.\\n     */\\n    Tile.prototype.getAlpha = function (id, time) {\\n        if (!this.transition_) {\\n            return 1;\\n        }\\n        var start = this.transitionStarts_[id];\\n        if (!start) {\\n            start = time;\\n            this.transitionStarts_[id] = start;\\n        }\\n        else if (start === -1) {\\n            return 1;\\n        }\\n        var delta = time - start + (1000 / 60); // avoid rendering at 0\\n        if (delta >= this.transition_) {\\n            return 1;\\n        }\\n        return easeIn(delta / this.transition_);\\n    };\\n    /**\\n     * Determine if a tile is in an alpha transition.  A tile is considered in\\n     * transition if tile.getAlpha() has not yet been called or has been called\\n     * and returned 1.\\n     * @param {string} id An id for the renderer.\\n     * @return {boolean} The tile is in transition.\\n     */\\n    Tile.prototype.inTransition = function (id) {\\n        if (!this.transition_) {\\n            return false;\\n        }\\n        return this.transitionStarts_[id] !== -1;\\n    };\\n    /**\\n     * Mark a transition as complete.\\n     * @param {string} id An id for the renderer.\\n     */\\n    Tile.prototype.endTransition = function (id) {\\n        if (this.transition_) {\\n            this.transitionStarts_[id] = -1;\\n        }\\n    };\\n    return Tile;\\n}(EventTarget));\\nexport default Tile;\\n//# sourceMappingURL=Tile.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/ImageTile\\n */\\nimport Tile from './Tile.js';\\nimport TileState from './TileState.js';\\nimport { createCanvasContext2D } from './dom.js';\\nimport { listenOnce, unlistenByKey } from './events.js';\\nimport EventType from './events/EventType.js';\\nvar ImageTile = /** @class */ (function (_super) {\\n    __extends(ImageTile, _super);\\n    /**\\n     * @param {import(\\\"./tilecoord.js\\\").TileCoord} tileCoord Tile coordinate.\\n     * @param {TileState} state State.\\n     * @param {string} src Image source URI.\\n     * @param {?string} crossOrigin Cross origin.\\n     * @param {import(\\\"./Tile.js\\\").LoadFunction} tileLoadFunction Tile load function.\\n     * @param {import(\\\"./Tile.js\\\").Options=} opt_options Tile options.\\n     */\\n    function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\\n        var _this = _super.call(this, tileCoord, state, opt_options) || this;\\n        /**\\n         * @private\\n         * @type {?string}\\n         */\\n        _this.crossOrigin_ = crossOrigin;\\n        /**\\n         * Image URI\\n         *\\n         * @private\\n         * @type {string}\\n         */\\n        _this.src_ = src;\\n        /**\\n         * @private\\n         * @type {HTMLImageElement|HTMLCanvasElement}\\n         */\\n        _this.image_ = new Image();\\n        if (crossOrigin !== null) {\\n            _this.image_.crossOrigin = crossOrigin;\\n        }\\n        /**\\n         * @private\\n         * @type {Array<import(\\\"./events.js\\\").EventsKey>}\\n         */\\n        _this.imageListenerKeys_ = null;\\n        /**\\n         * @private\\n         * @type {import(\\\"./Tile.js\\\").LoadFunction}\\n         */\\n        _this.tileLoadFunction_ = tileLoadFunction;\\n        return _this;\\n    }\\n    /**\\n     * @inheritDoc\\n     */\\n    ImageTile.prototype.disposeInternal = function () {\\n        if (this.state == TileState.LOADING) {\\n            this.unlistenImage_();\\n            this.image_ = getBlankImage();\\n        }\\n        if (this.interimTile) {\\n            this.interimTile.dispose();\\n        }\\n        this.state = TileState.ABORT;\\n        this.changed();\\n        _super.prototype.disposeInternal.call(this);\\n    };\\n    /**\\n     * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\\n     * @api\\n     */\\n    ImageTile.prototype.getImage = function () {\\n        return this.image_;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    ImageTile.prototype.getKey = function () {\\n        return this.src_;\\n    };\\n    /**\\n     * Tracks loading or read errors.\\n     *\\n     * @private\\n     */\\n    ImageTile.prototype.handleImageError_ = function () {\\n        this.state = TileState.ERROR;\\n        this.unlistenImage_();\\n        this.image_ = getBlankImage();\\n        this.changed();\\n    };\\n    /**\\n     * Tracks successful image load.\\n     *\\n     * @private\\n     */\\n    ImageTile.prototype.handleImageLoad_ = function () {\\n        var image = /** @type {HTMLImageElement} */ (this.image_);\\n        if (image.naturalWidth && image.naturalHeight) {\\n            this.state = TileState.LOADED;\\n        }\\n        else {\\n            this.state = TileState.EMPTY;\\n        }\\n        this.unlistenImage_();\\n        this.changed();\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    ImageTile.prototype.load = function () {\\n        if (this.state == TileState.ERROR) {\\n            this.state = TileState.IDLE;\\n            this.image_ = new Image();\\n            if (this.crossOrigin_ !== null) {\\n                this.image_.crossOrigin = this.crossOrigin_;\\n            }\\n        }\\n        if (this.state == TileState.IDLE) {\\n            this.state = TileState.LOADING;\\n            this.changed();\\n            this.imageListenerKeys_ = [\\n                listenOnce(this.image_, EventType.ERROR, this.handleImageError_, this),\\n                listenOnce(this.image_, EventType.LOAD, this.handleImageLoad_, this)\\n            ];\\n            this.tileLoadFunction_(this, this.src_);\\n        }\\n    };\\n    /**\\n     * Discards event handlers which listen for load completion or errors.\\n     *\\n     * @private\\n     */\\n    ImageTile.prototype.unlistenImage_ = function () {\\n        this.imageListenerKeys_.forEach(unlistenByKey);\\n        this.imageListenerKeys_ = null;\\n    };\\n    return ImageTile;\\n}(Tile));\\n/**\\n * Get a 1-pixel blank image.\\n * @return {HTMLCanvasElement} Blank image.\\n */\\nfunction getBlankImage() {\\n    var ctx = createCanvasContext2D(1, 1);\\n    ctx.fillStyle = 'rgba(0,0,0,0)';\\n    ctx.fillRect(0, 0, 1, 1);\\n    return ctx.canvas;\\n}\\nexport default ImageTile;\\n//# sourceMappingURL=ImageTile.js.map\",\"/**\\n * @module ol/tilecoord\\n */\\n/**\\n * An array of three numbers representing the location of a tile in a tile\\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\\n * @typedef {Array<number>} TileCoord\\n * @api\\n */\\n/**\\n * @param {number} z Z.\\n * @param {number} x X.\\n * @param {number} y Y.\\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\\n * @return {TileCoord} Tile coordinate.\\n */\\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\\n    if (opt_tileCoord !== undefined) {\\n        opt_tileCoord[0] = z;\\n        opt_tileCoord[1] = x;\\n        opt_tileCoord[2] = y;\\n        return opt_tileCoord;\\n    }\\n    else {\\n        return [z, x, y];\\n    }\\n}\\n/**\\n * @param {number} z Z.\\n * @param {number} x X.\\n * @param {number} y Y.\\n * @return {string} Key.\\n */\\nexport function getKeyZXY(z, x, y) {\\n    return z + '/' + x + '/' + y;\\n}\\n/**\\n * Get the key for a tile coord.\\n * @param {TileCoord} tileCoord The tile coord.\\n * @return {string} Key.\\n */\\nexport function getKey(tileCoord) {\\n    return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\\n}\\n/**\\n * Get a tile coord given a key.\\n * @param {string} key The tile coord key.\\n * @return {TileCoord} The tile coord.\\n */\\nexport function fromKey(key) {\\n    return key.split('/').map(Number);\\n}\\n/**\\n * @param {TileCoord} tileCoord Tile coord.\\n * @return {number} Hash.\\n */\\nexport function hash(tileCoord) {\\n    return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\\n}\\n/**\\n * @param {TileCoord} tileCoord Tile coordinate.\\n * @param {!import(\\\"./tilegrid/TileGrid.js\\\").default} tileGrid Tile grid.\\n * @return {boolean} Tile coordinate is within extent and zoom level range.\\n */\\nexport function withinExtentAndZ(tileCoord, tileGrid) {\\n    var z = tileCoord[0];\\n    var x = tileCoord[1];\\n    var y = tileCoord[2];\\n    if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\\n        return false;\\n    }\\n    var extent = tileGrid.getExtent();\\n    var tileRange;\\n    if (!extent) {\\n        tileRange = tileGrid.getFullTileRange(z);\\n    }\\n    else {\\n        tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\\n    }\\n    if (!tileRange) {\\n        return true;\\n    }\\n    else {\\n        return tileRange.containsXY(x, y);\\n    }\\n}\\n//# sourceMappingURL=tilecoord.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/TileCache\\n */\\nimport LRUCache from './structs/LRUCache.js';\\nimport { fromKey, getKey } from './tilecoord.js';\\nvar TileCache = /** @class */ (function (_super) {\\n    __extends(TileCache, _super);\\n    /**\\n     * @param {number=} opt_highWaterMark High water mark.\\n     */\\n    function TileCache(opt_highWaterMark) {\\n        return _super.call(this, opt_highWaterMark) || this;\\n    }\\n    /**\\n     * @param {!Object<string, import(\\\"./TileRange.js\\\").default>} usedTiles Used tiles.\\n     */\\n    TileCache.prototype.expireCache = function (usedTiles) {\\n        while (this.canExpireCache()) {\\n            var tile = this.peekLast();\\n            if (tile.getKey() in usedTiles) {\\n                break;\\n            }\\n            else {\\n                this.pop().dispose();\\n            }\\n        }\\n    };\\n    /**\\n     * Prune all tiles from the cache that don't have the same z as the newest tile.\\n     */\\n    TileCache.prototype.pruneExceptNewestZ = function () {\\n        if (this.getCount() === 0) {\\n            return;\\n        }\\n        var key = this.peekFirstKey();\\n        var tileCoord = fromKey(key);\\n        var z = tileCoord[0];\\n        this.forEach(function (tile) {\\n            if (tile.tileCoord[0] !== z) {\\n                this.remove(getKey(tile.tileCoord));\\n                tile.dispose();\\n            }\\n        }.bind(this));\\n    };\\n    return TileCache;\\n}(LRUCache));\\nexport default TileCache;\\n//# sourceMappingURL=TileCache.js.map\",\"/**\\n * @module ol/reproj\\n */\\nimport { createCanvasContext2D } from './dom.js';\\nimport { containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth } from './extent.js';\\nimport { solveLinearSystem } from './math.js';\\nimport { getPointResolution, transform } from './proj.js';\\n/**\\n * Calculates ideal resolution to use from the source in order to achieve\\n * pixel mapping as close as possible to 1:1 during reprojection.\\n * The resolution is calculated regardless of what resolutions\\n * are actually available in the dataset (TileGrid, Image, ...).\\n *\\n * @param {import(\\\"./proj/Projection.js\\\").default} sourceProj Source projection.\\n * @param {import(\\\"./proj/Projection.js\\\").default} targetProj Target projection.\\n * @param {import(\\\"./coordinate.js\\\").Coordinate} targetCenter Target center.\\n * @param {number} targetResolution Target resolution.\\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\\n */\\nexport function calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution) {\\n    var sourceCenter = transform(targetCenter, targetProj, sourceProj);\\n    // calculate the ideal resolution of the source data\\n    var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\\n    var targetMetersPerUnit = targetProj.getMetersPerUnit();\\n    if (targetMetersPerUnit !== undefined) {\\n        sourceResolution *= targetMetersPerUnit;\\n    }\\n    var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\\n    if (sourceMetersPerUnit !== undefined) {\\n        sourceResolution /= sourceMetersPerUnit;\\n    }\\n    // Based on the projection properties, the point resolution at the specified\\n    // coordinates may be slightly different. We need to reverse-compensate this\\n    // in order to achieve optimal results.\\n    var sourceExtent = sourceProj.getExtent();\\n    if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\\n        var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\\n            sourceResolution;\\n        if (isFinite(compensationFactor) && compensationFactor > 0) {\\n            sourceResolution /= compensationFactor;\\n        }\\n    }\\n    return sourceResolution;\\n}\\n/**\\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\\n * in order to mask gaps caused by antialiasing.\\n *\\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\\n * @param {number} x X coordinate of the point (in pixels).\\n * @param {number} y Y coordinate of the point (in pixels).\\n * @return {import(\\\"./coordinate.js\\\").Coordinate} New point 1 px farther from the centroid.\\n */\\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\\n    var dX = x - centroidX;\\n    var dY = y - centroidY;\\n    var distance = Math.sqrt(dX * dX + dY * dY);\\n    return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\\n}\\n/**\\n * Renders the source data into new canvas based on the triangulation.\\n *\\n * @param {number} width Width of the canvas.\\n * @param {number} height Height of the canvas.\\n * @param {number} pixelRatio Pixel ratio.\\n * @param {number} sourceResolution Source resolution.\\n * @param {import(\\\"./extent.js\\\").Extent} sourceExtent Extent of the data source.\\n * @param {number} targetResolution Target resolution.\\n * @param {import(\\\"./extent.js\\\").Extent} targetExtent Target extent.\\n * @param {import(\\\"./reproj/Triangulation.js\\\").default} triangulation\\n * Calculated triangulation.\\n * @param {Array<{extent: import(\\\"./extent.js\\\").Extent,\\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\\n * Array of sources.\\n * @param {number} gutter Gutter of the sources.\\n * @param {boolean=} opt_renderEdges Render reprojection edges.\\n * @return {HTMLCanvasElement} Canvas with reprojected data.\\n */\\nexport function render(width, height, pixelRatio, sourceResolution, sourceExtent, targetResolution, targetExtent, triangulation, sources, gutter, opt_renderEdges) {\\n    var context = createCanvasContext2D(Math.round(pixelRatio * width), Math.round(pixelRatio * height));\\n    if (sources.length === 0) {\\n        return context.canvas;\\n    }\\n    context.scale(pixelRatio, pixelRatio);\\n    var sourceDataExtent = createEmpty();\\n    sources.forEach(function (src, i, arr) {\\n        extend(sourceDataExtent, src.extent);\\n    });\\n    var canvasWidthInUnits = getWidth(sourceDataExtent);\\n    var canvasHeightInUnits = getHeight(sourceDataExtent);\\n    var stitchContext = createCanvasContext2D(Math.round(pixelRatio * canvasWidthInUnits / sourceResolution), Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\\n    var stitchScale = pixelRatio / sourceResolution;\\n    sources.forEach(function (src, i, arr) {\\n        var xPos = src.extent[0] - sourceDataExtent[0];\\n        var yPos = -(src.extent[3] - sourceDataExtent[3]);\\n        var srcWidth = getWidth(src.extent);\\n        var srcHeight = getHeight(src.extent);\\n        stitchContext.drawImage(src.image, gutter, gutter, src.image.width - 2 * gutter, src.image.height - 2 * gutter, xPos * stitchScale, yPos * stitchScale, srcWidth * stitchScale, srcHeight * stitchScale);\\n    });\\n    var targetTopLeft = getTopLeft(targetExtent);\\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\\n        /* Calculate affine transform (src -> dst)\\n         * Resulting matrix can be used to transform coordinate\\n         * from `sourceProjection` to destination pixels.\\n         *\\n         * To optimize number of context calls and increase numerical stability,\\n         * we also do the following operations:\\n         * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\\n         * here before solving the linear system so [ui, vi] are pixel coordinates.\\n         *\\n         * Src points: xi, yi\\n         * Dst points: ui, vi\\n         * Affine coefficients: aij\\n         *\\n         * | x0 y0 1  0  0 0 |   |a00|   |u0|\\n         * | x1 y1 1  0  0 0 |   |a01|   |u1|\\n         * | x2 y2 1  0  0 0 | x |a02| = |u2|\\n         * |  0  0 0 x0 y0 1 |   |a10|   |v0|\\n         * |  0  0 0 x1 y1 1 |   |a11|   |v1|\\n         * |  0  0 0 x2 y2 1 |   |a12|   |v2|\\n         */\\n        var source = triangle.source;\\n        var target = triangle.target;\\n        var x0 = source[0][0], y0 = source[0][1];\\n        var x1 = source[1][0], y1 = source[1][1];\\n        var x2 = source[2][0], y2 = source[2][1];\\n        var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\\n        var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\\n        var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\\n        var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\\n        var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\\n        var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\\n        // Shift all the source points to improve numerical stability\\n        // of all the subsequent calculations. The [x0, y0] is used here.\\n        // This is also used to simplify the linear system.\\n        var sourceNumericalShiftX = x0;\\n        var sourceNumericalShiftY = y0;\\n        x0 = 0;\\n        y0 = 0;\\n        x1 -= sourceNumericalShiftX;\\n        y1 -= sourceNumericalShiftY;\\n        x2 -= sourceNumericalShiftX;\\n        y2 -= sourceNumericalShiftY;\\n        var augmentedMatrix = [\\n            [x1, y1, 0, 0, u1 - u0],\\n            [x2, y2, 0, 0, u2 - u0],\\n            [0, 0, x1, y1, v1 - v0],\\n            [0, 0, x2, y2, v2 - v0]\\n        ];\\n        var affineCoefs = solveLinearSystem(augmentedMatrix);\\n        if (!affineCoefs) {\\n            return;\\n        }\\n        context.save();\\n        context.beginPath();\\n        var centroidX = (u0 + u1 + u2) / 3;\\n        var centroidY = (v0 + v1 + v2) / 3;\\n        var p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\\n        var p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\\n        var p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\\n        context.moveTo(p1[0], p1[1]);\\n        context.lineTo(p0[0], p0[1]);\\n        context.lineTo(p2[0], p2[1]);\\n        context.clip();\\n        context.transform(affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\\n        context.translate(sourceDataExtent[0] - sourceNumericalShiftX, sourceDataExtent[3] - sourceNumericalShiftY);\\n        context.scale(sourceResolution / pixelRatio, -sourceResolution / pixelRatio);\\n        context.drawImage(stitchContext.canvas, 0, 0);\\n        context.restore();\\n    });\\n    if (opt_renderEdges) {\\n        context.save();\\n        context.strokeStyle = 'black';\\n        context.lineWidth = 1;\\n        triangulation.getTriangles().forEach(function (triangle, i, arr) {\\n            var target = triangle.target;\\n            var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\\n            var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\\n            var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\\n            var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\\n            var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\\n            var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\\n            context.beginPath();\\n            context.moveTo(u1, v1);\\n            context.lineTo(u0, v0);\\n            context.lineTo(u2, v2);\\n            context.closePath();\\n            context.stroke();\\n        });\\n        context.restore();\\n    }\\n    return context.canvas;\\n}\\n//# sourceMappingURL=reproj.js.map\",\"/**\\n * @module ol/reproj/Triangulation\\n */\\nimport { boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight, getTopLeft, getTopRight, getWidth, intersects } from '../extent.js';\\nimport { modulo } from '../math.js';\\nimport { getTransform } from '../proj.js';\\n/**\\n * Single triangle; consists of 3 source points and 3 target points.\\n * @typedef {Object} Triangle\\n * @property {Array<import(\\\"../coordinate.js\\\").Coordinate>} source\\n * @property {Array<import(\\\"../coordinate.js\\\").Coordinate>} target\\n */\\n/**\\n * Maximum number of subdivision steps during raster reprojection triangulation.\\n * Prevents high memory usage and large number of proj4 calls (for certain\\n * transformations and areas). At most `2*(2^this)` triangles are created for\\n * each triangulated extent (tile/image).\\n * @type {number}\\n */\\nvar MAX_SUBDIVISION = 10;\\n/**\\n * Maximum allowed size of triangle relative to world width. When transforming\\n * corners of world extent between certain projections, the resulting\\n * triangulation seems to have zero error and no subdivision is performed. If\\n * the triangle width is more than this (relative to world width; 0-1),\\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\\n * @type {number}\\n */\\nvar MAX_TRIANGLE_WIDTH = 0.25;\\n/**\\n * @classdesc\\n * Class containing triangulation of the given target extent.\\n * Used for determining source data and the reprojection itself.\\n */\\nvar Triangulation = /** @class */ (function () {\\n    /**\\n     * @param {import(\\\"../proj/Projection.js\\\").default} sourceProj Source projection.\\n     * @param {import(\\\"../proj/Projection.js\\\").default} targetProj Target projection.\\n     * @param {import(\\\"../extent.js\\\").Extent} targetExtent Target extent to triangulate.\\n     * @param {import(\\\"../extent.js\\\").Extent} maxSourceExtent Maximal source extent that can be used.\\n     * @param {number} errorThreshold Acceptable error (in source units).\\n     */\\n    function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold) {\\n        /**\\n         * @type {import(\\\"../proj/Projection.js\\\").default}\\n         * @private\\n         */\\n        this.sourceProj_ = sourceProj;\\n        /**\\n         * @type {import(\\\"../proj/Projection.js\\\").default}\\n         * @private\\n         */\\n        this.targetProj_ = targetProj;\\n        /** @type {!Object<string, import(\\\"../coordinate.js\\\").Coordinate>} */\\n        var transformInvCache = {};\\n        var transformInv = getTransform(this.targetProj_, this.sourceProj_);\\n        /**\\n         * @param {import(\\\"../coordinate.js\\\").Coordinate} c A coordinate.\\n         * @return {import(\\\"../coordinate.js\\\").Coordinate} Transformed coordinate.\\n         * @private\\n         */\\n        this.transformInv_ = function (c) {\\n            var key = c[0] + '/' + c[1];\\n            if (!transformInvCache[key]) {\\n                transformInvCache[key] = transformInv(c);\\n            }\\n            return transformInvCache[key];\\n        };\\n        /**\\n         * @type {import(\\\"../extent.js\\\").Extent}\\n         * @private\\n         */\\n        this.maxSourceExtent_ = maxSourceExtent;\\n        /**\\n         * @type {number}\\n         * @private\\n         */\\n        this.errorThresholdSquared_ = errorThreshold * errorThreshold;\\n        /**\\n         * @type {Array<Triangle>}\\n         * @private\\n         */\\n        this.triangles_ = [];\\n        /**\\n         * Indicates that the triangulation crosses edge of the source projection.\\n         * @type {boolean}\\n         * @private\\n         */\\n        this.wrapsXInSource_ = false;\\n        /**\\n         * @type {boolean}\\n         * @private\\n         */\\n        this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\\n            !!maxSourceExtent &&\\n            !!this.sourceProj_.getExtent() &&\\n            (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\\n        /**\\n         * @type {?number}\\n         * @private\\n         */\\n        this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\\n            getWidth(this.sourceProj_.getExtent()) : null;\\n        /**\\n         * @type {?number}\\n         * @private\\n         */\\n        this.targetWorldWidth_ = this.targetProj_.getExtent() ?\\n            getWidth(this.targetProj_.getExtent()) : null;\\n        var destinationTopLeft = getTopLeft(targetExtent);\\n        var destinationTopRight = getTopRight(targetExtent);\\n        var destinationBottomRight = getBottomRight(targetExtent);\\n        var destinationBottomLeft = getBottomLeft(targetExtent);\\n        var sourceTopLeft = this.transformInv_(destinationTopLeft);\\n        var sourceTopRight = this.transformInv_(destinationTopRight);\\n        var sourceBottomRight = this.transformInv_(destinationBottomRight);\\n        var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\\n        this.addQuad_(destinationTopLeft, destinationTopRight, destinationBottomRight, destinationBottomLeft, sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft, MAX_SUBDIVISION);\\n        if (this.wrapsXInSource_) {\\n            var leftBound_1 = Infinity;\\n            this.triangles_.forEach(function (triangle, i, arr) {\\n                leftBound_1 = Math.min(leftBound_1, triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\\n            });\\n            // Shift triangles to be as close to `leftBound` as possible\\n            // (if the distance is more than `worldWidth / 2` it can be closer.\\n            this.triangles_.forEach(function (triangle) {\\n                if (Math.max(triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]) - leftBound_1 > this.sourceWorldWidth_ / 2) {\\n                    var newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\\n                        [triangle.source[1][0], triangle.source[1][1]],\\n                        [triangle.source[2][0], triangle.source[2][1]]];\\n                    if ((newTriangle[0][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\\n                        newTriangle[0][0] -= this.sourceWorldWidth_;\\n                    }\\n                    if ((newTriangle[1][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\\n                        newTriangle[1][0] -= this.sourceWorldWidth_;\\n                    }\\n                    if ((newTriangle[2][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\\n                        newTriangle[2][0] -= this.sourceWorldWidth_;\\n                    }\\n                    // Rarely (if the extent contains both the dateline and prime meridian)\\n                    // the shift can in turn break some triangles.\\n                    // Detect this here and don't shift in such cases.\\n                    var minX = Math.min(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\\n                    var maxX = Math.max(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\\n                    if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\\n                        triangle.source = newTriangle;\\n                    }\\n                }\\n            }.bind(this));\\n        }\\n        transformInvCache = {};\\n    }\\n    /**\\n     * Adds triangle to the triangulation.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} a The target a coordinate.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} b The target b coordinate.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} c The target c coordinate.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} aSrc The source a coordinate.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} bSrc The source b coordinate.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} cSrc The source c coordinate.\\n     * @private\\n     */\\n    Triangulation.prototype.addTriangle_ = function (a, b, c, aSrc, bSrc, cSrc) {\\n        this.triangles_.push({\\n            source: [aSrc, bSrc, cSrc],\\n            target: [a, b, c]\\n        });\\n    };\\n    /**\\n     * Adds quad (points in clock-wise order) to the triangulation\\n     * (and reprojects the vertices) if valid.\\n     * Performs quad subdivision if needed to increase precision.\\n     *\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} a The target a coordinate.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} b The target b coordinate.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} c The target c coordinate.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} d The target d coordinate.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} aSrc The source a coordinate.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} bSrc The source b coordinate.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} cSrc The source c coordinate.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} dSrc The source d coordinate.\\n     * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\\n     * @private\\n     */\\n    Triangulation.prototype.addQuad_ = function (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\\n        var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\\n        var sourceCoverageX = this.sourceWorldWidth_ ?\\n            getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\\n        var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\\n        // when the quad is wrapped in the source projection\\n        // it covers most of the projection extent, but not fully\\n        var wrapsX = this.sourceProj_.canWrapX() &&\\n            sourceCoverageX > 0.5 && sourceCoverageX < 1;\\n        var needsSubdivision = false;\\n        if (maxSubdivision > 0) {\\n            if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\\n                var targetQuadExtent = boundingExtent([a, b, c, d]);\\n                var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\\n                needsSubdivision = targetCoverageX > MAX_TRIANGLE_WIDTH ||\\n                    needsSubdivision;\\n            }\\n            if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\\n                needsSubdivision = sourceCoverageX > MAX_TRIANGLE_WIDTH ||\\n                    needsSubdivision;\\n            }\\n        }\\n        if (!needsSubdivision && this.maxSourceExtent_) {\\n            if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\\n                // whole quad outside source projection extent -> ignore\\n                return;\\n            }\\n        }\\n        if (!needsSubdivision) {\\n            if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\\n                !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\\n                !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\\n                !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\\n                if (maxSubdivision > 0) {\\n                    needsSubdivision = true;\\n                }\\n                else {\\n                    return;\\n                }\\n            }\\n        }\\n        if (maxSubdivision > 0) {\\n            if (!needsSubdivision) {\\n                var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\\n                var centerSrc = this.transformInv_(center);\\n                var dx = void 0;\\n                if (wrapsX) {\\n                    var centerSrcEstimX = (modulo(aSrc[0], sourceWorldWidth) +\\n                        modulo(cSrc[0], sourceWorldWidth)) / 2;\\n                    dx = centerSrcEstimX -\\n                        modulo(centerSrc[0], sourceWorldWidth);\\n                }\\n                else {\\n                    dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\\n                }\\n                var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\\n                var centerSrcErrorSquared = dx * dx + dy * dy;\\n                needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\\n            }\\n            if (needsSubdivision) {\\n                if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\\n                    // split horizontally (top & bottom)\\n                    var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\\n                    var bcSrc = this.transformInv_(bc);\\n                    var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\\n                    var daSrc = this.transformInv_(da);\\n                    this.addQuad_(a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\\n                    this.addQuad_(da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\\n                }\\n                else {\\n                    // split vertically (left & right)\\n                    var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\\n                    var abSrc = this.transformInv_(ab);\\n                    var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\\n                    var cdSrc = this.transformInv_(cd);\\n                    this.addQuad_(a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\\n                    this.addQuad_(ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\\n                }\\n                return;\\n            }\\n        }\\n        if (wrapsX) {\\n            if (!this.canWrapXInSource_) {\\n                return;\\n            }\\n            this.wrapsXInSource_ = true;\\n        }\\n        this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\\n        this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\\n    };\\n    /**\\n     * Calculates extent of the 'source' coordinates from all the triangles.\\n     *\\n     * @return {import(\\\"../extent.js\\\").Extent} Calculated extent.\\n     */\\n    Triangulation.prototype.calculateSourceExtent = function () {\\n        var extent = createEmpty();\\n        this.triangles_.forEach(function (triangle, i, arr) {\\n            var src = triangle.source;\\n            extendCoordinate(extent, src[0]);\\n            extendCoordinate(extent, src[1]);\\n            extendCoordinate(extent, src[2]);\\n        });\\n        return extent;\\n    };\\n    /**\\n     * @return {Array<Triangle>} Array of the calculated triangles.\\n     */\\n    Triangulation.prototype.getTriangles = function () {\\n        return this.triangles_;\\n    };\\n    return Triangulation;\\n}());\\nexport default Triangulation;\\n//# sourceMappingURL=Triangulation.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/reproj/Tile\\n */\\nimport { ERROR_THRESHOLD } from './common.js';\\nimport Tile from '../Tile.js';\\nimport TileState from '../TileState.js';\\nimport { listen, unlistenByKey } from '../events.js';\\nimport EventType from '../events/EventType.js';\\nimport { getArea, getCenter, getIntersection } from '../extent.js';\\nimport { clamp } from '../math.js';\\nimport { calculateSourceResolution, render as renderReprojected } from '../reproj.js';\\nimport Triangulation from './Triangulation.js';\\n/**\\n * @typedef {function(number, number, number, number) : import(\\\"../Tile.js\\\").default} FunctionType\\n */\\n/**\\n * @classdesc\\n * Class encapsulating single reprojected tile.\\n * See {@link module:ol/source/TileImage~TileImage}.\\n *\\n */\\nvar ReprojTile = /** @class */ (function (_super) {\\n    __extends(ReprojTile, _super);\\n    /**\\n     * @param {import(\\\"../proj/Projection.js\\\").default} sourceProj Source projection.\\n     * @param {import(\\\"../tilegrid/TileGrid.js\\\").default} sourceTileGrid Source tile grid.\\n     * @param {import(\\\"../proj/Projection.js\\\").default} targetProj Target projection.\\n     * @param {import(\\\"../tilegrid/TileGrid.js\\\").default} targetTileGrid Target tile grid.\\n     * @param {import(\\\"../tilecoord.js\\\").TileCoord} tileCoord Coordinate of the tile.\\n     * @param {import(\\\"../tilecoord.js\\\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\\n     * @param {number} pixelRatio Pixel ratio.\\n     * @param {number} gutter Gutter of the source tiles.\\n     * @param {FunctionType} getTileFunction\\n     *     Function returning source tiles (z, x, y, pixelRatio).\\n     * @param {number=} opt_errorThreshold Acceptable reprojection error (in px).\\n     * @param {boolean=} opt_renderEdges Render reprojection edges.\\n     */\\n    function ReprojTile(sourceProj, sourceTileGrid, targetProj, targetTileGrid, tileCoord, wrappedTileCoord, pixelRatio, gutter, getTileFunction, opt_errorThreshold, opt_renderEdges) {\\n        var _this = _super.call(this, tileCoord, TileState.IDLE) || this;\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.pixelRatio_ = pixelRatio;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.gutter_ = gutter;\\n        /**\\n         * @private\\n         * @type {HTMLCanvasElement}\\n         */\\n        _this.canvas_ = null;\\n        /**\\n         * @private\\n         * @type {import(\\\"../tilegrid/TileGrid.js\\\").default}\\n         */\\n        _this.sourceTileGrid_ = sourceTileGrid;\\n        /**\\n         * @private\\n         * @type {import(\\\"../tilegrid/TileGrid.js\\\").default}\\n         */\\n        _this.targetTileGrid_ = targetTileGrid;\\n        /**\\n         * @private\\n         * @type {import(\\\"../tilecoord.js\\\").TileCoord}\\n         */\\n        _this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\\n        /**\\n         * @private\\n         * @type {!Array<import(\\\"../Tile.js\\\").default>}\\n         */\\n        _this.sourceTiles_ = [];\\n        /**\\n         * @private\\n         * @type {Array<import(\\\"../events.js\\\").EventsKey>}\\n         */\\n        _this.sourcesListenerKeys_ = null;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.sourceZ_ = 0;\\n        var targetExtent = targetTileGrid.getTileCoordExtent(_this.wrappedTileCoord_);\\n        var maxTargetExtent = _this.targetTileGrid_.getExtent();\\n        var maxSourceExtent = _this.sourceTileGrid_.getExtent();\\n        var limitedTargetExtent = maxTargetExtent ?\\n            getIntersection(targetExtent, maxTargetExtent) : targetExtent;\\n        if (getArea(limitedTargetExtent) === 0) {\\n            // Tile is completely outside range -> EMPTY\\n            // TODO: is it actually correct that the source even creates the tile ?\\n            _this.state = TileState.EMPTY;\\n            return _this;\\n        }\\n        var sourceProjExtent = sourceProj.getExtent();\\n        if (sourceProjExtent) {\\n            if (!maxSourceExtent) {\\n                maxSourceExtent = sourceProjExtent;\\n            }\\n            else {\\n                maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\\n            }\\n        }\\n        var targetResolution = targetTileGrid.getResolution(_this.wrappedTileCoord_[0]);\\n        var targetCenter = getCenter(limitedTargetExtent);\\n        var sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);\\n        if (!isFinite(sourceResolution) || sourceResolution <= 0) {\\n            // invalid sourceResolution -> EMPTY\\n            // probably edges of the projections when no extent is defined\\n            _this.state = TileState.EMPTY;\\n            return _this;\\n        }\\n        var errorThresholdInPixels = opt_errorThreshold !== undefined ?\\n            opt_errorThreshold : ERROR_THRESHOLD;\\n        /**\\n         * @private\\n         * @type {!import(\\\"./Triangulation.js\\\").default}\\n         */\\n        _this.triangulation_ = new Triangulation(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels);\\n        if (_this.triangulation_.getTriangles().length === 0) {\\n            // no valid triangles -> EMPTY\\n            _this.state = TileState.EMPTY;\\n            return _this;\\n        }\\n        _this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\\n        var sourceExtent = _this.triangulation_.calculateSourceExtent();\\n        if (maxSourceExtent) {\\n            if (sourceProj.canWrapX()) {\\n                sourceExtent[1] = clamp(sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\\n                sourceExtent[3] = clamp(sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\\n            }\\n            else {\\n                sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\\n            }\\n        }\\n        if (!getArea(sourceExtent)) {\\n            _this.state = TileState.EMPTY;\\n        }\\n        else {\\n            var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(sourceExtent, _this.sourceZ_);\\n            for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\\n                for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\\n                    var tile = getTileFunction(_this.sourceZ_, srcX, srcY, pixelRatio);\\n                    if (tile) {\\n                        _this.sourceTiles_.push(tile);\\n                    }\\n                }\\n            }\\n            if (_this.sourceTiles_.length === 0) {\\n                _this.state = TileState.EMPTY;\\n            }\\n        }\\n        return _this;\\n    }\\n    /**\\n     * @inheritDoc\\n     */\\n    ReprojTile.prototype.disposeInternal = function () {\\n        if (this.state == TileState.LOADING) {\\n            this.unlistenSources_();\\n        }\\n        _super.prototype.disposeInternal.call(this);\\n    };\\n    /**\\n     * Get the HTML Canvas element for this tile.\\n     * @return {HTMLCanvasElement} Canvas.\\n     */\\n    ReprojTile.prototype.getImage = function () {\\n        return this.canvas_;\\n    };\\n    /**\\n     * @private\\n     */\\n    ReprojTile.prototype.reproject_ = function () {\\n        var sources = [];\\n        this.sourceTiles_.forEach(function (tile, i, arr) {\\n            if (tile && tile.getState() == TileState.LOADED) {\\n                sources.push({\\n                    extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\\n                    image: tile.getImage()\\n                });\\n            }\\n        }.bind(this));\\n        this.sourceTiles_.length = 0;\\n        if (sources.length === 0) {\\n            this.state = TileState.ERROR;\\n        }\\n        else {\\n            var z = this.wrappedTileCoord_[0];\\n            var size = this.targetTileGrid_.getTileSize(z);\\n            var width = typeof size === 'number' ? size : size[0];\\n            var height = typeof size === 'number' ? size : size[1];\\n            var targetResolution = this.targetTileGrid_.getResolution(z);\\n            var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\\n            var targetExtent = this.targetTileGrid_.getTileCoordExtent(this.wrappedTileCoord_);\\n            this.canvas_ = renderReprojected(width, height, this.pixelRatio_, sourceResolution, this.sourceTileGrid_.getExtent(), targetResolution, targetExtent, this.triangulation_, sources, this.gutter_, this.renderEdges_);\\n            this.state = TileState.LOADED;\\n        }\\n        this.changed();\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    ReprojTile.prototype.load = function () {\\n        if (this.state == TileState.IDLE) {\\n            this.state = TileState.LOADING;\\n            this.changed();\\n            var leftToLoad_1 = 0;\\n            this.sourcesListenerKeys_ = [];\\n            this.sourceTiles_.forEach(function (tile, i, arr) {\\n                var state = tile.getState();\\n                if (state == TileState.IDLE || state == TileState.LOADING) {\\n                    leftToLoad_1++;\\n                    var sourceListenKey_1 = listen(tile, EventType.CHANGE, function (e) {\\n                        var state = tile.getState();\\n                        if (state == TileState.LOADED ||\\n                            state == TileState.ERROR ||\\n                            state == TileState.EMPTY) {\\n                            unlistenByKey(sourceListenKey_1);\\n                            leftToLoad_1--;\\n                            if (leftToLoad_1 === 0) {\\n                                this.unlistenSources_();\\n                                this.reproject_();\\n                            }\\n                        }\\n                    }, this);\\n                    this.sourcesListenerKeys_.push(sourceListenKey_1);\\n                }\\n            }.bind(this));\\n            this.sourceTiles_.forEach(function (tile, i, arr) {\\n                var state = tile.getState();\\n                if (state == TileState.IDLE) {\\n                    tile.load();\\n                }\\n            });\\n            if (leftToLoad_1 === 0) {\\n                setTimeout(this.reproject_.bind(this), 0);\\n            }\\n        }\\n    };\\n    /**\\n     * @private\\n     */\\n    ReprojTile.prototype.unlistenSources_ = function () {\\n        this.sourcesListenerKeys_.forEach(unlistenByKey);\\n        this.sourcesListenerKeys_ = null;\\n    };\\n    return ReprojTile;\\n}(Tile));\\nexport default ReprojTile;\\n//# sourceMappingURL=Tile.js.map\",\"/**\\n * @module ol/tileurlfunction\\n */\\nimport { assert } from './asserts.js';\\nimport { modulo } from './math.js';\\nimport { hash as tileCoordHash } from './tilecoord.js';\\n/**\\n * @param {string} template Template.\\n * @param {import(\\\"./tilegrid/TileGrid.js\\\").default} tileGrid Tile grid.\\n * @return {import(\\\"./Tile.js\\\").UrlFunction} Tile URL function.\\n */\\nexport function createFromTemplate(template, tileGrid) {\\n    var zRegEx = /\\\\{z\\\\}/g;\\n    var xRegEx = /\\\\{x\\\\}/g;\\n    var yRegEx = /\\\\{y\\\\}/g;\\n    var dashYRegEx = /\\\\{-y\\\\}/g;\\n    return (\\n    /**\\n     * @param {import(\\\"./tilecoord.js\\\").TileCoord} tileCoord Tile Coordinate.\\n     * @param {number} pixelRatio Pixel ratio.\\n     * @param {import(\\\"./proj/Projection.js\\\").default} projection Projection.\\n     * @return {string|undefined} Tile URL.\\n     */\\n    function (tileCoord, pixelRatio, projection) {\\n        if (!tileCoord) {\\n            return undefined;\\n        }\\n        else {\\n            return template.replace(zRegEx, tileCoord[0].toString())\\n                .replace(xRegEx, tileCoord[1].toString())\\n                .replace(yRegEx, tileCoord[2].toString())\\n                .replace(dashYRegEx, function () {\\n                var z = tileCoord[0];\\n                var range = tileGrid.getFullTileRange(z);\\n                assert(range, 55); // The {-y} placeholder requires a tile grid with extent\\n                var y = range.getHeight() - tileCoord[2] - 1;\\n                return y.toString();\\n            });\\n        }\\n    });\\n}\\n/**\\n * @param {Array<string>} templates Templates.\\n * @param {import(\\\"./tilegrid/TileGrid.js\\\").default} tileGrid Tile grid.\\n * @return {import(\\\"./Tile.js\\\").UrlFunction} Tile URL function.\\n */\\nexport function createFromTemplates(templates, tileGrid) {\\n    var len = templates.length;\\n    var tileUrlFunctions = new Array(len);\\n    for (var i = 0; i < len; ++i) {\\n        tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\\n    }\\n    return createFromTileUrlFunctions(tileUrlFunctions);\\n}\\n/**\\n * @param {Array<import(\\\"./Tile.js\\\").UrlFunction>} tileUrlFunctions Tile URL Functions.\\n * @return {import(\\\"./Tile.js\\\").UrlFunction} Tile URL function.\\n */\\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\\n    if (tileUrlFunctions.length === 1) {\\n        return tileUrlFunctions[0];\\n    }\\n    return (\\n    /**\\n     * @param {import(\\\"./tilecoord.js\\\").TileCoord} tileCoord Tile Coordinate.\\n     * @param {number} pixelRatio Pixel ratio.\\n     * @param {import(\\\"./proj/Projection.js\\\").default} projection Projection.\\n     * @return {string|undefined} Tile URL.\\n     */\\n    function (tileCoord, pixelRatio, projection) {\\n        if (!tileCoord) {\\n            return undefined;\\n        }\\n        else {\\n            var h = tileCoordHash(tileCoord);\\n            var index = modulo(h, tileUrlFunctions.length);\\n            return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\\n        }\\n    });\\n}\\n/**\\n * @param {import(\\\"./tilecoord.js\\\").TileCoord} tileCoord Tile coordinate.\\n * @param {number} pixelRatio Pixel ratio.\\n * @param {import(\\\"./proj/Projection.js\\\").default} projection Projection.\\n * @return {string|undefined} Tile URL.\\n */\\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\\n    return undefined;\\n}\\n/**\\n * @param {string} url URL.\\n * @return {Array<string>} Array of urls.\\n */\\nexport function expandUrl(url) {\\n    var urls = [];\\n    var match = /\\\\{([a-z])-([a-z])\\\\}/.exec(url);\\n    if (match) {\\n        // char range\\n        var startCharCode = match[1].charCodeAt(0);\\n        var stopCharCode = match[2].charCodeAt(0);\\n        var charCode = void 0;\\n        for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\\n            urls.push(url.replace(match[0], String.fromCharCode(charCode)));\\n        }\\n        return urls;\\n    }\\n    match = match = /\\\\{(\\\\d+)-(\\\\d+)\\\\}/.exec(url);\\n    if (match) {\\n        // number range\\n        var stop_1 = parseInt(match[2], 10);\\n        for (var i = parseInt(match[1], 10); i <= stop_1; i++) {\\n            urls.push(url.replace(match[0], i.toString()));\\n        }\\n        return urls;\\n    }\\n    urls.push(url);\\n    return urls;\\n}\\n//# sourceMappingURL=tileurlfunction.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/source/Source\\n */\\nimport { abstract } from '../util.js';\\nimport BaseObject from '../Object.js';\\nimport { get as getProjection } from '../proj.js';\\nimport SourceState from './State.js';\\n/**\\n * A function that returns a string or an array of strings representing source\\n * attributions.\\n *\\n * @typedef {function(import(\\\"../PluggableMap.js\\\").FrameState): (string|Array<string>)} Attribution\\n */\\n/**\\n * A type that can be used to provide attribution information for data sources.\\n *\\n * It represents either\\n * * a simple string (e.g. `'© Acme Inc.'`)\\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\\n *\\n * @typedef {string|Array<string>|Attribution} AttributionLike\\n */\\n/**\\n * @typedef {Object} Options\\n * @property {AttributionLike} [attributions]\\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\\n * @property {import(\\\"../proj.js\\\").ProjectionLike} [projection] Projection. Default is the view projection.\\n * @property {SourceState} [state='ready']\\n * @property {boolean} [wrapX=false]\\n */\\n/**\\n * @classdesc\\n * Abstract base class; normally only used for creating subclasses and not\\n * instantiated in apps.\\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\\n *\\n * A generic `change` event is triggered when the state of the source changes.\\n * @abstract\\n * @api\\n */\\nvar Source = /** @class */ (function (_super) {\\n    __extends(Source, _super);\\n    /**\\n     * @param {Options} options Source options.\\n     */\\n    function Source(options) {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * @private\\n         * @type {import(\\\"../proj/Projection.js\\\").default}\\n         */\\n        _this.projection_ = getProjection(options.projection);\\n        /**\\n         * @private\\n         * @type {?Attribution}\\n         */\\n        _this.attributions_ = adaptAttributions(options.attributions);\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.attributionsCollapsible_ = options.attributionsCollapsible !== undefined ?\\n            options.attributionsCollapsible : true;\\n        /**\\n         * This source is currently loading data. Sources that defer loading to the\\n         * map's tile queue never set this to `true`.\\n         * @type {boolean}\\n         */\\n        _this.loading = false;\\n        /**\\n         * @private\\n         * @type {SourceState}\\n         */\\n        _this.state_ = options.state !== undefined ?\\n            options.state : SourceState.READY;\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\\n        return _this;\\n    }\\n    /**\\n     * Get the attribution function for the source.\\n     * @return {?Attribution} Attribution function.\\n     */\\n    Source.prototype.getAttributions = function () {\\n        return this.attributions_;\\n    };\\n    /**\\n     * @return {boolean} Attributions are collapsible.\\n     */\\n    Source.prototype.getAttributionsCollapsible = function () {\\n        return this.attributionsCollapsible_;\\n    };\\n    /**\\n     * Get the projection of the source.\\n     * @return {import(\\\"../proj/Projection.js\\\").default} Projection.\\n     * @api\\n     */\\n    Source.prototype.getProjection = function () {\\n        return this.projection_;\\n    };\\n    /**\\n     * @abstract\\n     * @return {Array<number>|undefined} Resolutions.\\n     */\\n    Source.prototype.getResolutions = function () {\\n        return abstract();\\n    };\\n    /**\\n     * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\\n     * @return {SourceState} State.\\n     * @api\\n     */\\n    Source.prototype.getState = function () {\\n        return this.state_;\\n    };\\n    /**\\n     * @return {boolean|undefined} Wrap X.\\n     */\\n    Source.prototype.getWrapX = function () {\\n        return this.wrapX_;\\n    };\\n    /**\\n     * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\\n     * @api\\n     */\\n    Source.prototype.refresh = function () {\\n        this.changed();\\n    };\\n    /**\\n     * Set the attributions of the source.\\n     * @param {AttributionLike|undefined} attributions Attributions.\\n     *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\\n     *     or `undefined`.\\n     * @api\\n     */\\n    Source.prototype.setAttributions = function (attributions) {\\n        this.attributions_ = adaptAttributions(attributions);\\n        this.changed();\\n    };\\n    /**\\n     * Set the state of the source.\\n     * @param {SourceState} state State.\\n     * @protected\\n     */\\n    Source.prototype.setState = function (state) {\\n        this.state_ = state;\\n        this.changed();\\n    };\\n    return Source;\\n}(BaseObject));\\n/**\\n * Turns the attributions option into an attributions function.\\n * @param {AttributionLike|undefined} attributionLike The attribution option.\\n * @return {?Attribution} An attribution function (or null).\\n */\\nfunction adaptAttributions(attributionLike) {\\n    if (!attributionLike) {\\n        return null;\\n    }\\n    if (Array.isArray(attributionLike)) {\\n        return function (frameState) {\\n            return attributionLike;\\n        };\\n    }\\n    if (typeof attributionLike === 'function') {\\n        return attributionLike;\\n    }\\n    return function (frameState) {\\n        return [attributionLike];\\n    };\\n}\\nexport default Source;\\n//# sourceMappingURL=Source.js.map\",\"/**\\n * @module ol/tilegrid/TileGrid\\n */\\nimport { DEFAULT_TILE_SIZE } from './common.js';\\nimport { assert } from '../asserts.js';\\nimport TileRange, { createOrUpdate as createOrUpdateTileRange } from '../TileRange.js';\\nimport { isSorted, linearFindNearest } from '../array.js';\\nimport { createOrUpdate, getTopLeft } from '../extent.js';\\nimport { clamp } from '../math.js';\\nimport { toSize } from '../size.js';\\nimport { createOrUpdate as createOrUpdateTileCoord } from '../tilecoord.js';\\n/**\\n * @private\\n * @type {import(\\\"../tilecoord.js\\\").TileCoord}\\n */\\nvar tmpTileCoord = [0, 0, 0];\\n/**\\n * @typedef {Object} Options\\n * @property {import(\\\"../extent.js\\\").Extent} [extent] Extent for the tile grid. No tiles outside this\\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\\n * @property {number} [minZoom=0] Minimum zoom.\\n * @property {import(\\\"../coordinate.js\\\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and upwards. If not\\n * specified, `extent` or `origins` must be provided.\\n * @property {Array<import(\\\"../coordinate.js\\\").Coordinate>} [origins] Tile grid origins, i.e. where\\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\\n * origin. Tile coordinates increase left to right and upwards. If not specified, `extent` or\\n * `origin` must be provided.\\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\\n * array will have a length of `maxZoom + 1`.\\n * @property {Array<import(\\\"../size.js\\\").Size>} [sizes] Sizes.\\n * @property {number|import(\\\"../size.js\\\").Size} [tileSize] Tile size.\\n * Default is `[256, 256]`.\\n * @property {Array<import(\\\"../size.js\\\").Size>} [tileSizes] Tile sizes. If given, the array length\\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\\n * tile size.\\n */\\n/**\\n * @classdesc\\n * Base class for setting the grid pattern for sources accessing tiled-image\\n * servers.\\n * @api\\n */\\nvar TileGrid = /** @class */ (function () {\\n    /**\\n     * @param {Options} options Tile grid options.\\n     */\\n    function TileGrid(options) {\\n        /**\\n         * @protected\\n         * @type {number}\\n         */\\n        this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\\n        /**\\n         * @private\\n         * @type {!Array<number>}\\n         */\\n        this.resolutions_ = options.resolutions;\\n        assert(isSorted(this.resolutions_, function (a, b) {\\n            return b - a;\\n        }, true), 17); // `resolutions` must be sorted in descending order\\n        // check if we've got a consistent zoom factor and origin\\n        var zoomFactor;\\n        if (!options.origins) {\\n            for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\\n                if (!zoomFactor) {\\n                    zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\\n                }\\n                else {\\n                    if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\\n                        zoomFactor = undefined;\\n                        break;\\n                    }\\n                }\\n            }\\n        }\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        this.zoomFactor_ = zoomFactor;\\n        /**\\n         * @protected\\n         * @type {number}\\n         */\\n        this.maxZoom = this.resolutions_.length - 1;\\n        /**\\n         * @private\\n         * @type {import(\\\"../coordinate.js\\\").Coordinate}\\n         */\\n        this.origin_ = options.origin !== undefined ? options.origin : null;\\n        /**\\n         * @private\\n         * @type {Array<import(\\\"../coordinate.js\\\").Coordinate>}\\n         */\\n        this.origins_ = null;\\n        if (options.origins !== undefined) {\\n            this.origins_ = options.origins;\\n            assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\\n        }\\n        var extent = options.extent;\\n        if (extent !== undefined &&\\n            !this.origin_ && !this.origins_) {\\n            this.origin_ = getTopLeft(extent);\\n        }\\n        assert((!this.origin_ && this.origins_) || (this.origin_ && !this.origins_), 18); // Either `origin` or `origins` must be configured, never both\\n        /**\\n         * @private\\n         * @type {Array<number|import(\\\"../size.js\\\").Size>}\\n         */\\n        this.tileSizes_ = null;\\n        if (options.tileSizes !== undefined) {\\n            this.tileSizes_ = options.tileSizes;\\n            assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\\n        }\\n        /**\\n         * @private\\n         * @type {number|import(\\\"../size.js\\\").Size}\\n         */\\n        this.tileSize_ = options.tileSize !== undefined ?\\n            options.tileSize :\\n            !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\\n        assert((!this.tileSize_ && this.tileSizes_) ||\\n            (this.tileSize_ && !this.tileSizes_), 22); // Either `tileSize` or `tileSizes` must be configured, never both\\n        /**\\n         * @private\\n         * @type {import(\\\"../extent.js\\\").Extent}\\n         */\\n        this.extent_ = extent !== undefined ? extent : null;\\n        /**\\n         * @private\\n         * @type {Array<import(\\\"../TileRange.js\\\").default>}\\n         */\\n        this.fullTileRanges_ = null;\\n        /**\\n         * @private\\n         * @type {import(\\\"../size.js\\\").Size}\\n         */\\n        this.tmpSize_ = [0, 0];\\n        if (options.sizes !== undefined) {\\n            this.fullTileRanges_ = options.sizes.map(function (size, z) {\\n                var tileRange = new TileRange(Math.min(0, size[0]), Math.max(size[0] - 1, -1), Math.min(0, size[1]), Math.max(size[1] - 1, -1));\\n                return tileRange;\\n            }, this);\\n        }\\n        else if (extent) {\\n            this.calculateTileRanges_(extent);\\n        }\\n    }\\n    /**\\n     * Call a function with each tile coordinate for a given extent and zoom level.\\n     *\\n     * @param {import(\\\"../extent.js\\\").Extent} extent Extent.\\n     * @param {number} zoom Integer zoom level.\\n     * @param {function(import(\\\"../tilecoord.js\\\").TileCoord): void} callback Function called with each tile coordinate.\\n     * @api\\n     */\\n    TileGrid.prototype.forEachTileCoord = function (extent, zoom, callback) {\\n        var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\\n        for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\\n            for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\\n                callback([zoom, i, j]);\\n            }\\n        }\\n    };\\n    /**\\n     * @param {import(\\\"../tilecoord.js\\\").TileCoord} tileCoord Tile coordinate.\\n     * @param {function(number, import(\\\"../TileRange.js\\\").default): boolean} callback Callback.\\n     * @param {import(\\\"../TileRange.js\\\").default=} opt_tileRange Temporary import(\\\"../TileRange.js\\\").default object.\\n     * @param {import(\\\"../extent.js\\\").Extent=} opt_extent Temporary import(\\\"../extent.js\\\").Extent object.\\n     * @return {boolean} Callback succeeded.\\n     */\\n    TileGrid.prototype.forEachTileCoordParentTileRange = function (tileCoord, callback, opt_tileRange, opt_extent) {\\n        var tileRange, x, y;\\n        var tileCoordExtent = null;\\n        var z = tileCoord[0] - 1;\\n        if (this.zoomFactor_ === 2) {\\n            x = tileCoord[1];\\n            y = tileCoord[2];\\n        }\\n        else {\\n            tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\\n        }\\n        while (z >= this.minZoom) {\\n            if (this.zoomFactor_ === 2) {\\n                x = Math.floor(x / 2);\\n                y = Math.floor(y / 2);\\n                tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\\n            }\\n            else {\\n                tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\\n            }\\n            if (callback(z, tileRange)) {\\n                return true;\\n            }\\n            --z;\\n        }\\n        return false;\\n    };\\n    /**\\n     * Get the extent for this tile grid, if it was configured.\\n     * @return {import(\\\"../extent.js\\\").Extent} Extent.\\n     */\\n    TileGrid.prototype.getExtent = function () {\\n        return this.extent_;\\n    };\\n    /**\\n     * Get the maximum zoom level for the grid.\\n     * @return {number} Max zoom.\\n     * @api\\n     */\\n    TileGrid.prototype.getMaxZoom = function () {\\n        return this.maxZoom;\\n    };\\n    /**\\n     * Get the minimum zoom level for the grid.\\n     * @return {number} Min zoom.\\n     * @api\\n     */\\n    TileGrid.prototype.getMinZoom = function () {\\n        return this.minZoom;\\n    };\\n    /**\\n     * Get the origin for the grid at the given zoom level.\\n     * @param {number} z Integer zoom level.\\n     * @return {import(\\\"../coordinate.js\\\").Coordinate} Origin.\\n     * @api\\n     */\\n    TileGrid.prototype.getOrigin = function (z) {\\n        if (this.origin_) {\\n            return this.origin_;\\n        }\\n        else {\\n            return this.origins_[z];\\n        }\\n    };\\n    /**\\n     * Get the resolution for the given zoom level.\\n     * @param {number} z Integer zoom level.\\n     * @return {number} Resolution.\\n     * @api\\n     */\\n    TileGrid.prototype.getResolution = function (z) {\\n        return this.resolutions_[z];\\n    };\\n    /**\\n     * Get the list of resolutions for the tile grid.\\n     * @return {Array<number>} Resolutions.\\n     * @api\\n     */\\n    TileGrid.prototype.getResolutions = function () {\\n        return this.resolutions_;\\n    };\\n    /**\\n     * @param {import(\\\"../tilecoord.js\\\").TileCoord} tileCoord Tile coordinate.\\n     * @param {import(\\\"../TileRange.js\\\").default=} opt_tileRange Temporary import(\\\"../TileRange.js\\\").default object.\\n     * @param {import(\\\"../extent.js\\\").Extent=} opt_extent Temporary import(\\\"../extent.js\\\").Extent object.\\n     * @return {import(\\\"../TileRange.js\\\").default} Tile range.\\n     */\\n    TileGrid.prototype.getTileCoordChildTileRange = function (tileCoord, opt_tileRange, opt_extent) {\\n        if (tileCoord[0] < this.maxZoom) {\\n            if (this.zoomFactor_ === 2) {\\n                var minX = tileCoord[1] * 2;\\n                var minY = tileCoord[2] * 2;\\n                return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\\n            }\\n            var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\\n            return this.getTileRangeForExtentAndZ(tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\\n        }\\n        return null;\\n    };\\n    /**\\n     * Get the extent for a tile range.\\n     * @param {number} z Integer zoom level.\\n     * @param {import(\\\"../TileRange.js\\\").default} tileRange Tile range.\\n     * @param {import(\\\"../extent.js\\\").Extent=} opt_extent Temporary import(\\\"../extent.js\\\").Extent object.\\n     * @return {import(\\\"../extent.js\\\").Extent} Extent.\\n     */\\n    TileGrid.prototype.getTileRangeExtent = function (z, tileRange, opt_extent) {\\n        var origin = this.getOrigin(z);\\n        var resolution = this.getResolution(z);\\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\\n        var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\\n        var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\\n        var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\\n        var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\\n    };\\n    /**\\n     * Get a tile range for the given extent and integer zoom level.\\n     * @param {import(\\\"../extent.js\\\").Extent} extent Extent.\\n     * @param {number} z Integer zoom level.\\n     * @param {import(\\\"../TileRange.js\\\").default=} opt_tileRange Temporary tile range object.\\n     * @return {import(\\\"../TileRange.js\\\").default} Tile range.\\n     */\\n    TileGrid.prototype.getTileRangeForExtentAndZ = function (extent, z, opt_tileRange) {\\n        var tileCoord = tmpTileCoord;\\n        this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\\n        var minX = tileCoord[1];\\n        var minY = tileCoord[2];\\n        this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\\n        return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\\n    };\\n    /**\\n     * @param {import(\\\"../tilecoord.js\\\").TileCoord} tileCoord Tile coordinate.\\n     * @return {import(\\\"../coordinate.js\\\").Coordinate} Tile center.\\n     */\\n    TileGrid.prototype.getTileCoordCenter = function (tileCoord) {\\n        var origin = this.getOrigin(tileCoord[0]);\\n        var resolution = this.getResolution(tileCoord[0]);\\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\\n        return [\\n            origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\\n            origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution\\n        ];\\n    };\\n    /**\\n     * Get the extent of a tile coordinate.\\n     *\\n     * @param {import(\\\"../tilecoord.js\\\").TileCoord} tileCoord Tile coordinate.\\n     * @param {import(\\\"../extent.js\\\").Extent=} opt_extent Temporary extent object.\\n     * @return {import(\\\"../extent.js\\\").Extent} Extent.\\n     * @api\\n     */\\n    TileGrid.prototype.getTileCoordExtent = function (tileCoord, opt_extent) {\\n        var origin = this.getOrigin(tileCoord[0]);\\n        var resolution = this.getResolution(tileCoord[0]);\\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\\n        var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\\n        var minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\\n        var maxX = minX + tileSize[0] * resolution;\\n        var maxY = minY + tileSize[1] * resolution;\\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\\n    };\\n    /**\\n     * Get the tile coordinate for the given map coordinate and resolution.  This\\n     * method considers that coordinates that intersect tile boundaries should be\\n     * assigned the higher tile coordinate.\\n     *\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} coordinate Coordinate.\\n     * @param {number} resolution Resolution.\\n     * @param {import(\\\"../tilecoord.js\\\").TileCoord=} opt_tileCoord Destination import(\\\"../tilecoord.js\\\").TileCoord object.\\n     * @return {import(\\\"../tilecoord.js\\\").TileCoord} Tile coordinate.\\n     * @api\\n     */\\n    TileGrid.prototype.getTileCoordForCoordAndResolution = function (coordinate, resolution, opt_tileCoord) {\\n        return this.getTileCoordForXYAndResolution_(coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\\n    };\\n    /**\\n     * Note that this method should not be called for resolutions that correspond\\n     * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\\n     * @param {number} x X.\\n     * @param {number} y Y.\\n     * @param {number} resolution Resolution (for a non-integer zoom level).\\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\\n     *     intersections go to the higher tile coordinate, let edge intersections\\n     *     go to the lower tile coordinate.\\n     * @param {import(\\\"../tilecoord.js\\\").TileCoord=} opt_tileCoord Temporary import(\\\"../tilecoord.js\\\").TileCoord object.\\n     * @return {import(\\\"../tilecoord.js\\\").TileCoord} Tile coordinate.\\n     * @private\\n     */\\n    TileGrid.prototype.getTileCoordForXYAndResolution_ = function (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\\n        var z = this.getZForResolution(resolution);\\n        var scale = resolution / this.getResolution(z);\\n        var origin = this.getOrigin(z);\\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\\n        var tileCoordX = scale * xFromOrigin / tileSize[0];\\n        var tileCoordY = scale * yFromOrigin / tileSize[1];\\n        if (reverseIntersectionPolicy) {\\n            tileCoordX = Math.ceil(tileCoordX) - 1;\\n            tileCoordY = Math.ceil(tileCoordY) - 1;\\n        }\\n        else {\\n            tileCoordX = Math.floor(tileCoordX);\\n            tileCoordY = Math.floor(tileCoordY);\\n        }\\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\\n    };\\n    /**\\n     * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\\n     * they should have separate implementations.  This method is for integer zoom\\n     * levels.  The other method should only be called for resolutions corresponding\\n     * to non-integer zoom levels.\\n     * @param {number} x Map x coordinate.\\n     * @param {number} y Map y coordinate.\\n     * @param {number} z Integer zoom level.\\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\\n     *     intersections go to the higher tile coordinate, let edge intersections\\n     *     go to the lower tile coordinate.\\n     * @param {import(\\\"../tilecoord.js\\\").TileCoord=} opt_tileCoord Temporary import(\\\"../tilecoord.js\\\").TileCoord object.\\n     * @return {import(\\\"../tilecoord.js\\\").TileCoord} Tile coordinate.\\n     * @private\\n     */\\n    TileGrid.prototype.getTileCoordForXYAndZ_ = function (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\\n        var origin = this.getOrigin(z);\\n        var resolution = this.getResolution(z);\\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\\n        var tileCoordX = xFromOrigin / tileSize[0];\\n        var tileCoordY = yFromOrigin / tileSize[1];\\n        if (reverseIntersectionPolicy) {\\n            tileCoordX = Math.ceil(tileCoordX) - 1;\\n            tileCoordY = Math.ceil(tileCoordY) - 1;\\n        }\\n        else {\\n            tileCoordX = Math.floor(tileCoordX);\\n            tileCoordY = Math.floor(tileCoordY);\\n        }\\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\\n    };\\n    /**\\n     * Get a tile coordinate given a map coordinate and zoom level.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} coordinate Coordinate.\\n     * @param {number} z Zoom level.\\n     * @param {import(\\\"../tilecoord.js\\\").TileCoord=} opt_tileCoord Destination import(\\\"../tilecoord.js\\\").TileCoord object.\\n     * @return {import(\\\"../tilecoord.js\\\").TileCoord} Tile coordinate.\\n     * @api\\n     */\\n    TileGrid.prototype.getTileCoordForCoordAndZ = function (coordinate, z, opt_tileCoord) {\\n        return this.getTileCoordForXYAndZ_(coordinate[0], coordinate[1], z, false, opt_tileCoord);\\n    };\\n    /**\\n     * @param {import(\\\"../tilecoord.js\\\").TileCoord} tileCoord Tile coordinate.\\n     * @return {number} Tile resolution.\\n     */\\n    TileGrid.prototype.getTileCoordResolution = function (tileCoord) {\\n        return this.resolutions_[tileCoord[0]];\\n    };\\n    /**\\n     * Get the tile size for a zoom level. The type of the return value matches the\\n     * `tileSize` or `tileSizes` that the tile grid was configured with. To always\\n     * get an `import(\\\"../size.js\\\").Size`, run the result through `import(\\\"../size.js\\\").Size.toSize()`.\\n     * @param {number} z Z.\\n     * @return {number|import(\\\"../size.js\\\").Size} Tile size.\\n     * @api\\n     */\\n    TileGrid.prototype.getTileSize = function (z) {\\n        if (this.tileSize_) {\\n            return this.tileSize_;\\n        }\\n        else {\\n            return this.tileSizes_[z];\\n        }\\n    };\\n    /**\\n     * @param {number} z Zoom level.\\n     * @return {import(\\\"../TileRange.js\\\").default} Extent tile range for the specified zoom level.\\n     */\\n    TileGrid.prototype.getFullTileRange = function (z) {\\n        if (!this.fullTileRanges_) {\\n            return null;\\n        }\\n        else {\\n            return this.fullTileRanges_[z];\\n        }\\n    };\\n    /**\\n     * @param {number} resolution Resolution.\\n     * @param {number=} opt_direction If 0, the nearest resolution will be used.\\n     *     If 1, the nearest lower resolution will be used. If -1, the nearest\\n     *     higher resolution will be used. Default is 0.\\n     * @return {number} Z.\\n     * @api\\n     */\\n    TileGrid.prototype.getZForResolution = function (resolution, opt_direction) {\\n        var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\\n        return clamp(z, this.minZoom, this.maxZoom);\\n    };\\n    /**\\n     * @param {!import(\\\"../extent.js\\\").Extent} extent Extent for this tile grid.\\n     * @private\\n     */\\n    TileGrid.prototype.calculateTileRanges_ = function (extent) {\\n        var length = this.resolutions_.length;\\n        var fullTileRanges = new Array(length);\\n        for (var z = this.minZoom; z < length; ++z) {\\n            fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\\n        }\\n        this.fullTileRanges_ = fullTileRanges;\\n    };\\n    return TileGrid;\\n}());\\nexport default TileGrid;\\n//# sourceMappingURL=TileGrid.js.map\",\"/**\\n * @module ol/tilegrid\\n */\\nimport { DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE } from './tilegrid/common.js';\\nimport { toSize } from './size.js';\\nimport { containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth } from './extent.js';\\nimport Corner from './extent/Corner.js';\\nimport { get as getProjection, METERS_PER_UNIT } from './proj.js';\\nimport Units from './proj/Units.js';\\nimport TileGrid from './tilegrid/TileGrid.js';\\n/**\\n * @param {import(\\\"./proj/Projection.js\\\").default} projection Projection.\\n * @return {!TileGrid} Default tile grid for the\\n * passed projection.\\n */\\nexport function getForProjection(projection) {\\n    var tileGrid = projection.getDefaultTileGrid();\\n    if (!tileGrid) {\\n        tileGrid = createForProjection(projection);\\n        projection.setDefaultTileGrid(tileGrid);\\n    }\\n    return tileGrid;\\n}\\n/**\\n * @param {TileGrid} tileGrid Tile grid.\\n * @param {import(\\\"./tilecoord.js\\\").TileCoord} tileCoord Tile coordinate.\\n * @param {import(\\\"./proj/Projection.js\\\").default} projection Projection.\\n * @return {import(\\\"./tilecoord.js\\\").TileCoord} Tile coordinate.\\n */\\nexport function wrapX(tileGrid, tileCoord, projection) {\\n    var z = tileCoord[0];\\n    var center = tileGrid.getTileCoordCenter(tileCoord);\\n    var projectionExtent = extentFromProjection(projection);\\n    if (!containsCoordinate(projectionExtent, center)) {\\n        var worldWidth = getWidth(projectionExtent);\\n        var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\\n        center[0] += worldWidth * worldsAway;\\n        return tileGrid.getTileCoordForCoordAndZ(center, z);\\n    }\\n    else {\\n        return tileCoord;\\n    }\\n}\\n/**\\n * @param {import(\\\"./extent.js\\\").Extent} extent Extent.\\n * @param {number=} opt_maxZoom Maximum zoom level (default is\\n *     DEFAULT_MAX_ZOOM).\\n * @param {number|import(\\\"./size.js\\\").Size=} opt_tileSize Tile size (default uses\\n *     DEFAULT_TILE_SIZE).\\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\\n * @return {!TileGrid} TileGrid instance.\\n */\\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\\n    var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\\n    var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\\n    return new TileGrid({\\n        extent: extent,\\n        origin: getCorner(extent, corner),\\n        resolutions: resolutions,\\n        tileSize: opt_tileSize\\n    });\\n}\\n/**\\n * @typedef {Object} XYZOptions\\n * @property {import(\\\"./extent.js\\\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\\n * @property {number} [minZoom=0] Minimum zoom.\\n * @property {number|import(\\\"./size.js\\\").Size} [tileSize=[256, 256]] Tile size in pixels.\\n */\\n/**\\n * Creates a tile grid with a standard XYZ tiling scheme.\\n * @param {XYZOptions=} opt_options Tile grid options.\\n * @return {!TileGrid} Tile grid instance.\\n * @api\\n */\\nexport function createXYZ(opt_options) {\\n    /** @type {XYZOptions} */\\n    var xyzOptions = opt_options || {};\\n    var extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\\n    /** @type {import(\\\"./tilegrid/TileGrid.js\\\").Options} */\\n    var gridOptions = {\\n        extent: extent,\\n        minZoom: xyzOptions.minZoom,\\n        tileSize: xyzOptions.tileSize,\\n        resolutions: resolutionsFromExtent(extent, xyzOptions.maxZoom, xyzOptions.tileSize)\\n    };\\n    return new TileGrid(gridOptions);\\n}\\n/**\\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\\n * @param {import(\\\"./extent.js\\\").Extent} extent Extent.\\n * @param {number=} opt_maxZoom Maximum zoom level (default is\\n *     DEFAULT_MAX_ZOOM).\\n * @param {number|import(\\\"./size.js\\\").Size=} opt_tileSize Tile size (default uses\\n *     DEFAULT_TILE_SIZE).\\n * @return {!Array<number>} Resolutions array.\\n */\\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\\n    var maxZoom = opt_maxZoom !== undefined ?\\n        opt_maxZoom : DEFAULT_MAX_ZOOM;\\n    var height = getHeight(extent);\\n    var width = getWidth(extent);\\n    var tileSize = toSize(opt_tileSize !== undefined ?\\n        opt_tileSize : DEFAULT_TILE_SIZE);\\n    var maxResolution = Math.max(width / tileSize[0], height / tileSize[1]);\\n    var length = maxZoom + 1;\\n    var resolutions = new Array(length);\\n    for (var z = 0; z < length; ++z) {\\n        resolutions[z] = maxResolution / Math.pow(2, z);\\n    }\\n    return resolutions;\\n}\\n/**\\n * @param {import(\\\"./proj.js\\\").ProjectionLike} projection Projection.\\n * @param {number=} opt_maxZoom Maximum zoom level (default is\\n *     DEFAULT_MAX_ZOOM).\\n * @param {number|import(\\\"./size.js\\\").Size=} opt_tileSize Tile size (default uses\\n *     DEFAULT_TILE_SIZE).\\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\\n * @return {!TileGrid} TileGrid instance.\\n */\\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\\n    var extent = extentFromProjection(projection);\\n    return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\\n}\\n/**\\n * Generate a tile grid extent from a projection.  If the projection has an\\n * extent, it is used.  If not, a global extent is assumed.\\n * @param {import(\\\"./proj.js\\\").ProjectionLike} projection Projection.\\n * @return {import(\\\"./extent.js\\\").Extent} Extent.\\n */\\nexport function extentFromProjection(projection) {\\n    projection = getProjection(projection);\\n    var extent = projection.getExtent();\\n    if (!extent) {\\n        var half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\\n        extent = createOrUpdate(-half, -half, half, half);\\n    }\\n    return extent;\\n}\\n//# sourceMappingURL=tilegrid.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/source/Tile\\n */\\nimport { abstract } from '../util.js';\\nimport TileCache from '../TileCache.js';\\nimport TileState from '../TileState.js';\\nimport Event from '../events/Event.js';\\nimport { equivalent } from '../proj.js';\\nimport { toSize, scale as scaleSize } from '../size.js';\\nimport Source from './Source.js';\\nimport { getKeyZXY, withinExtentAndZ } from '../tilecoord.js';\\nimport { wrapX, getForProjection as getTileGridForProjection } from '../tilegrid.js';\\n/**\\n * @typedef {Object} Options\\n * @property {import(\\\"./Source.js\\\").AttributionLike} [attributions]\\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\\n * @property {number} [cacheSize]\\n * @property {boolean} [opaque]\\n * @property {number} [tilePixelRatio]\\n * @property {import(\\\"../proj.js\\\").ProjectionLike} [projection]\\n * @property {import(\\\"./State.js\\\").default} [state]\\n * @property {import(\\\"../tilegrid/TileGrid.js\\\").default} [tileGrid]\\n * @property {boolean} [wrapX=true]\\n * @property {number} [transition]\\n * @property {string} [key]\\n */\\n/**\\n * @classdesc\\n * Abstract base class; normally only used for creating subclasses and not\\n * instantiated in apps.\\n * Base class for sources providing images divided into a tile grid.\\n * @abstract\\n * @api\\n */\\nvar TileSource = /** @class */ (function (_super) {\\n    __extends(TileSource, _super);\\n    /**\\n     * @param {Options} options SourceTile source options.\\n     */\\n    function TileSource(options) {\\n        var _this = _super.call(this, {\\n            attributions: options.attributions,\\n            attributionsCollapsible: options.attributionsCollapsible,\\n            projection: options.projection,\\n            state: options.state,\\n            wrapX: options.wrapX\\n        }) || this;\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.opaque_ = options.opaque !== undefined ? options.opaque : false;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\\n            options.tilePixelRatio : 1;\\n        /**\\n         * @protected\\n         * @type {import(\\\"../tilegrid/TileGrid.js\\\").default}\\n         */\\n        _this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\\n        var cacheSize = options.cacheSize;\\n        if (cacheSize === undefined) {\\n            var tileSize = [256, 256];\\n            var tileGrid = options.tileGrid;\\n            if (tileGrid) {\\n                toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\\n            }\\n            var canUseScreen = 'screen' in self;\\n            var width = canUseScreen ? (screen.availWidth || screen.width) : 1920;\\n            var height = canUseScreen ? (screen.availHeight || screen.height) : 1080;\\n            cacheSize = 4 * Math.ceil(width / tileSize[0]) * Math.ceil(height / tileSize[1]);\\n        }\\n        /**\\n         * @protected\\n         * @type {import(\\\"../TileCache.js\\\").default}\\n         */\\n        _this.tileCache = new TileCache(cacheSize);\\n        /**\\n         * @protected\\n         * @type {import(\\\"../size.js\\\").Size}\\n         */\\n        _this.tmpSize = [0, 0];\\n        /**\\n         * @private\\n         * @type {string}\\n         */\\n        _this.key_ = options.key || '';\\n        /**\\n         * @protected\\n         * @type {import(\\\"../Tile.js\\\").Options}\\n         */\\n        _this.tileOptions = { transition: options.transition };\\n        /**\\n         * zDirection hint, read by the renderer. Indicates which resolution should be used\\n         * by a renderer if the views resolution does not match any resolution of the tile source.\\n         * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\\n         * will be used. If -1, the nearest higher resolution will be used.\\n         * @type {number=}\\n         */\\n        _this.zDirection;\\n        return _this;\\n    }\\n    /**\\n     * @return {boolean} Can expire cache.\\n     */\\n    TileSource.prototype.canExpireCache = function () {\\n        return this.tileCache.canExpireCache();\\n    };\\n    /**\\n     * @param {import(\\\"../proj/Projection.js\\\").default} projection Projection.\\n     * @param {!Object<string, import(\\\"../TileRange.js\\\").default>} usedTiles Used tiles.\\n     */\\n    TileSource.prototype.expireCache = function (projection, usedTiles) {\\n        var tileCache = this.getTileCacheForProjection(projection);\\n        if (tileCache) {\\n            tileCache.expireCache(usedTiles);\\n        }\\n    };\\n    /**\\n     * @param {import(\\\"../proj/Projection.js\\\").default} projection Projection.\\n     * @param {number} z Zoom level.\\n     * @param {import(\\\"../TileRange.js\\\").default} tileRange Tile range.\\n     * @param {function(import(\\\"../Tile.js\\\").default):(boolean|void)} callback Called with each\\n     *     loaded tile.  If the callback returns `false`, the tile will not be\\n     *     considered loaded.\\n     * @return {boolean} The tile range is fully covered with loaded tiles.\\n     */\\n    TileSource.prototype.forEachLoadedTile = function (projection, z, tileRange, callback) {\\n        var tileCache = this.getTileCacheForProjection(projection);\\n        if (!tileCache) {\\n            return false;\\n        }\\n        var covered = true;\\n        var tile, tileCoordKey, loaded;\\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\\n                tileCoordKey = getKeyZXY(z, x, y);\\n                loaded = false;\\n                if (tileCache.containsKey(tileCoordKey)) {\\n                    tile = /** @type {!import(\\\"../Tile.js\\\").default} */ (tileCache.get(tileCoordKey));\\n                    loaded = tile.getState() === TileState.LOADED;\\n                    if (loaded) {\\n                        loaded = (callback(tile) !== false);\\n                    }\\n                }\\n                if (!loaded) {\\n                    covered = false;\\n                }\\n            }\\n        }\\n        return covered;\\n    };\\n    /**\\n     * @param {import(\\\"../proj/Projection.js\\\").default} projection Projection.\\n     * @return {number} Gutter.\\n     */\\n    TileSource.prototype.getGutterForProjection = function (projection) {\\n        return 0;\\n    };\\n    /**\\n     * Return the key to be used for all tiles in the source.\\n     * @return {string} The key for all tiles.\\n     * @protected\\n     */\\n    TileSource.prototype.getKey = function () {\\n        return this.key_;\\n    };\\n    /**\\n     * Set the value to be used as the key for all tiles in the source.\\n     * @param {string} key The key for tiles.\\n     * @protected\\n     */\\n    TileSource.prototype.setKey = function (key) {\\n        if (this.key_ !== key) {\\n            this.key_ = key;\\n            this.changed();\\n        }\\n    };\\n    /**\\n     * @param {import(\\\"../proj/Projection.js\\\").default} projection Projection.\\n     * @return {boolean} Opaque.\\n     */\\n    TileSource.prototype.getOpaque = function (projection) {\\n        return this.opaque_;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    TileSource.prototype.getResolutions = function () {\\n        return this.tileGrid.getResolutions();\\n    };\\n    /**\\n     * @abstract\\n     * @param {number} z Tile coordinate z.\\n     * @param {number} x Tile coordinate x.\\n     * @param {number} y Tile coordinate y.\\n     * @param {number} pixelRatio Pixel ratio.\\n     * @param {import(\\\"../proj/Projection.js\\\").default} projection Projection.\\n     * @return {!import(\\\"../Tile.js\\\").default} Tile.\\n     */\\n    TileSource.prototype.getTile = function (z, x, y, pixelRatio, projection) {\\n        return abstract();\\n    };\\n    /**\\n     * Return the tile grid of the tile source.\\n     * @return {import(\\\"../tilegrid/TileGrid.js\\\").default} Tile grid.\\n     * @api\\n     */\\n    TileSource.prototype.getTileGrid = function () {\\n        return this.tileGrid;\\n    };\\n    /**\\n     * @param {import(\\\"../proj/Projection.js\\\").default} projection Projection.\\n     * @return {!import(\\\"../tilegrid/TileGrid.js\\\").default} Tile grid.\\n     */\\n    TileSource.prototype.getTileGridForProjection = function (projection) {\\n        if (!this.tileGrid) {\\n            return getTileGridForProjection(projection);\\n        }\\n        else {\\n            return this.tileGrid;\\n        }\\n    };\\n    /**\\n     * @param {import(\\\"../proj/Projection.js\\\").default} projection Projection.\\n     * @return {import(\\\"../TileCache.js\\\").default} Tile cache.\\n     * @protected\\n     */\\n    TileSource.prototype.getTileCacheForProjection = function (projection) {\\n        var thisProj = this.getProjection();\\n        if (thisProj && !equivalent(thisProj, projection)) {\\n            return null;\\n        }\\n        else {\\n            return this.tileCache;\\n        }\\n    };\\n    /**\\n     * Get the tile pixel ratio for this source. Subclasses may override this\\n     * method, which is meant to return a supported pixel ratio that matches the\\n     * provided `pixelRatio` as close as possible.\\n     * @param {number} pixelRatio Pixel ratio.\\n     * @return {number} Tile pixel ratio.\\n     */\\n    TileSource.prototype.getTilePixelRatio = function (pixelRatio) {\\n        return this.tilePixelRatio_;\\n    };\\n    /**\\n     * @param {number} z Z.\\n     * @param {number} pixelRatio Pixel ratio.\\n     * @param {import(\\\"../proj/Projection.js\\\").default} projection Projection.\\n     * @return {import(\\\"../size.js\\\").Size} Tile size.\\n     */\\n    TileSource.prototype.getTilePixelSize = function (z, pixelRatio, projection) {\\n        var tileGrid = this.getTileGridForProjection(projection);\\n        var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\\n        var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\\n        if (tilePixelRatio == 1) {\\n            return tileSize;\\n        }\\n        else {\\n            return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\\n        }\\n    };\\n    /**\\n     * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\\n     * is outside the resolution and extent range of the tile grid, `null` will be\\n     * returned.\\n     * @param {import(\\\"../tilecoord.js\\\").TileCoord} tileCoord Tile coordinate.\\n     * @param {import(\\\"../proj/Projection.js\\\").default=} opt_projection Projection.\\n     * @return {import(\\\"../tilecoord.js\\\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\\n     *     null if no tile URL should be created for the passed `tileCoord`.\\n     */\\n    TileSource.prototype.getTileCoordForTileUrlFunction = function (tileCoord, opt_projection) {\\n        var projection = opt_projection !== undefined ?\\n            opt_projection : this.getProjection();\\n        var tileGrid = this.getTileGridForProjection(projection);\\n        if (this.getWrapX() && projection.isGlobal()) {\\n            tileCoord = wrapX(tileGrid, tileCoord, projection);\\n        }\\n        return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\\n    };\\n    /**\\n     * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\\n     * @api\\n     */\\n    TileSource.prototype.clear = function () {\\n        this.tileCache.clear();\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    TileSource.prototype.refresh = function () {\\n        this.clear();\\n        _super.prototype.refresh.call(this);\\n    };\\n    /**\\n     * Marks a tile coord as being used, without triggering a load.\\n     * @abstract\\n     * @param {number} z Tile coordinate z.\\n     * @param {number} x Tile coordinate x.\\n     * @param {number} y Tile coordinate y.\\n     * @param {import(\\\"../proj/Projection.js\\\").default} projection Projection.\\n     */\\n    TileSource.prototype.useTile = function (z, x, y, projection) { };\\n    return TileSource;\\n}(Source));\\n/**\\n * @classdesc\\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\\n * type.\\n */\\nvar TileSourceEvent = /** @class */ (function (_super) {\\n    __extends(TileSourceEvent, _super);\\n    /**\\n     * @param {string} type Type.\\n     * @param {import(\\\"../Tile.js\\\").default} tile The tile.\\n     */\\n    function TileSourceEvent(type, tile) {\\n        var _this = _super.call(this, type) || this;\\n        /**\\n         * The tile related to the event.\\n         * @type {import(\\\"../Tile.js\\\").default}\\n         * @api\\n         */\\n        _this.tile = tile;\\n        return _this;\\n    }\\n    return TileSourceEvent;\\n}(Event));\\nexport { TileSourceEvent };\\nexport default TileSource;\\n//# sourceMappingURL=Tile.js.map\",\"/**\\n * @module ol/source/TileEventType\\n */\\n/**\\n * @enum {string}\\n */\\nexport default {\\n    /**\\n     * Triggered when a tile starts loading.\\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\\n     * @api\\n     */\\n    TILELOADSTART: 'tileloadstart',\\n    /**\\n     * Triggered when a tile finishes loading, either when its data is loaded,\\n     * or when loading was aborted because the tile is no longer needed.\\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadend\\n     * @api\\n     */\\n    TILELOADEND: 'tileloadend',\\n    /**\\n     * Triggered if tile loading results in an error.\\n     * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\\n     * @api\\n     */\\n    TILELOADERROR: 'tileloaderror'\\n};\\n//# sourceMappingURL=TileEventType.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/source/UrlTile\\n */\\nimport { getUid } from '../util.js';\\nimport TileState from '../TileState.js';\\nimport { expandUrl, createFromTemplates, nullTileUrlFunction } from '../tileurlfunction.js';\\nimport TileSource, { TileSourceEvent } from './Tile.js';\\nimport TileEventType from './TileEventType.js';\\nimport { getKeyZXY } from '../tilecoord.js';\\n/**\\n * @typedef {Object} Options\\n * @property {import(\\\"./Source.js\\\").AttributionLike} [attributions]\\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\\n * @property {number} [cacheSize]\\n * @property {boolean} [opaque]\\n * @property {import(\\\"../proj.js\\\").ProjectionLike} [projection]\\n * @property {import(\\\"./State.js\\\").default} [state]\\n * @property {import(\\\"../tilegrid/TileGrid.js\\\").default} [tileGrid]\\n * @property {import(\\\"../Tile.js\\\").LoadFunction} tileLoadFunction\\n * @property {number} [tilePixelRatio]\\n * @property {import(\\\"../Tile.js\\\").UrlFunction} [tileUrlFunction]\\n * @property {string} [url]\\n * @property {Array<string>} [urls]\\n * @property {boolean} [wrapX=true]\\n * @property {number} [transition]\\n * @property {string} [key]\\n */\\n/**\\n * @classdesc\\n * Base class for sources providing tiles divided into a tile grid over http.\\n *\\n * @fires import(\\\"./Tile.js\\\").TileSourceEvent\\n */\\nvar UrlTile = /** @class */ (function (_super) {\\n    __extends(UrlTile, _super);\\n    /**\\n     * @param {Options} options Image tile options.\\n     */\\n    function UrlTile(options) {\\n        var _this = _super.call(this, {\\n            attributions: options.attributions,\\n            cacheSize: options.cacheSize,\\n            opaque: options.opaque,\\n            projection: options.projection,\\n            state: options.state,\\n            tileGrid: options.tileGrid,\\n            tilePixelRatio: options.tilePixelRatio,\\n            wrapX: options.wrapX,\\n            transition: options.transition,\\n            key: options.key,\\n            attributionsCollapsible: options.attributionsCollapsible\\n        }) || this;\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.generateTileUrlFunction_ = !options.tileUrlFunction;\\n        /**\\n         * @protected\\n         * @type {import(\\\"../Tile.js\\\").LoadFunction}\\n         */\\n        _this.tileLoadFunction = options.tileLoadFunction;\\n        /**\\n         * @protected\\n         * @type {import(\\\"../Tile.js\\\").UrlFunction}\\n         */\\n        _this.tileUrlFunction = options.tileUrlFunction ? options.tileUrlFunction.bind(_this) : nullTileUrlFunction;\\n        /**\\n         * @protected\\n         * @type {!Array<string>|null}\\n         */\\n        _this.urls = null;\\n        if (options.urls) {\\n            _this.setUrls(options.urls);\\n        }\\n        else if (options.url) {\\n            _this.setUrl(options.url);\\n        }\\n        /**\\n         * @private\\n         * @type {!Object<string, boolean>}\\n         */\\n        _this.tileLoadingKeys_ = {};\\n        return _this;\\n    }\\n    /**\\n     * Return the tile load function of the source.\\n     * @return {import(\\\"../Tile.js\\\").LoadFunction} TileLoadFunction\\n     * @api\\n     */\\n    UrlTile.prototype.getTileLoadFunction = function () {\\n        return this.tileLoadFunction;\\n    };\\n    /**\\n     * Return the tile URL function of the source.\\n     * @return {import(\\\"../Tile.js\\\").UrlFunction} TileUrlFunction\\n     * @api\\n     */\\n    UrlTile.prototype.getTileUrlFunction = function () {\\n        return this.tileUrlFunction;\\n    };\\n    /**\\n     * Return the URLs used for this source.\\n     * When a tileUrlFunction is used instead of url or urls,\\n     * null will be returned.\\n     * @return {!Array<string>|null} URLs.\\n     * @api\\n     */\\n    UrlTile.prototype.getUrls = function () {\\n        return this.urls;\\n    };\\n    /**\\n     * Handle tile change events.\\n     * @param {import(\\\"../events/Event.js\\\").default} event Event.\\n     * @protected\\n     */\\n    UrlTile.prototype.handleTileChange = function (event) {\\n        var tile = /** @type {import(\\\"../Tile.js\\\").default} */ (event.target);\\n        var uid = getUid(tile);\\n        var tileState = tile.getState();\\n        var type;\\n        if (tileState == TileState.LOADING) {\\n            this.tileLoadingKeys_[uid] = true;\\n            type = TileEventType.TILELOADSTART;\\n        }\\n        else if (uid in this.tileLoadingKeys_) {\\n            delete this.tileLoadingKeys_[uid];\\n            type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\\n                (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\\n                    TileEventType.TILELOADEND : undefined;\\n        }\\n        if (type != undefined) {\\n            this.dispatchEvent(new TileSourceEvent(type, tile));\\n        }\\n    };\\n    /**\\n     * Set the tile load function of the source.\\n     * @param {import(\\\"../Tile.js\\\").LoadFunction} tileLoadFunction Tile load function.\\n     * @api\\n     */\\n    UrlTile.prototype.setTileLoadFunction = function (tileLoadFunction) {\\n        this.tileCache.clear();\\n        this.tileLoadFunction = tileLoadFunction;\\n        this.changed();\\n    };\\n    /**\\n     * Set the tile URL function of the source.\\n     * @param {import(\\\"../Tile.js\\\").UrlFunction} tileUrlFunction Tile URL function.\\n     * @param {string=} key Optional new tile key for the source.\\n     * @api\\n     */\\n    UrlTile.prototype.setTileUrlFunction = function (tileUrlFunction, key) {\\n        this.tileUrlFunction = tileUrlFunction;\\n        this.tileCache.pruneExceptNewestZ();\\n        if (typeof key !== 'undefined') {\\n            this.setKey(key);\\n        }\\n        else {\\n            this.changed();\\n        }\\n    };\\n    /**\\n     * Set the URL to use for requests.\\n     * @param {string} url URL.\\n     * @api\\n     */\\n    UrlTile.prototype.setUrl = function (url) {\\n        var urls = this.urls = expandUrl(url);\\n        this.setUrls(urls);\\n    };\\n    /**\\n     * Set the URLs to use for requests.\\n     * @param {Array<string>} urls URLs.\\n     * @api\\n     */\\n    UrlTile.prototype.setUrls = function (urls) {\\n        this.urls = urls;\\n        var key = urls.join('\\\\n');\\n        if (this.generateTileUrlFunction_) {\\n            this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\\n        }\\n        else {\\n            this.setKey(key);\\n        }\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    UrlTile.prototype.useTile = function (z, x, y) {\\n        var tileCoordKey = getKeyZXY(z, x, y);\\n        if (this.tileCache.containsKey(tileCoordKey)) {\\n            this.tileCache.get(tileCoordKey);\\n        }\\n    };\\n    return UrlTile;\\n}(TileSource));\\nexport default UrlTile;\\n//# sourceMappingURL=UrlTile.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/source/TileImage\\n */\\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\\nimport { getUid } from '../util.js';\\nimport ImageTile from '../ImageTile.js';\\nimport TileCache from '../TileCache.js';\\nimport TileState from '../TileState.js';\\nimport { listen } from '../events.js';\\nimport EventType from '../events/EventType.js';\\nimport { equivalent, get as getProjection } from '../proj.js';\\nimport ReprojTile from '../reproj/Tile.js';\\nimport UrlTile from './UrlTile.js';\\nimport { getKey, getKeyZXY } from '../tilecoord.js';\\nimport { getForProjection as getTileGridForProjection } from '../tilegrid.js';\\n/**\\n * @typedef {Object} Options\\n * @property {import(\\\"./Source.js\\\").AttributionLike} [attributions] Attributions.\\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\\n * @property {boolean} [opaque=true] Whether the layer is opaque.\\n * @property {import(\\\"../proj.js\\\").ProjectionLike} [projection] Projection. Default is the view projection.\\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\\n * Higher values can increase reprojection performance, but decrease precision.\\n * @property {import(\\\"./State.js\\\").default} [state] Source state.\\n * @property {typeof import(\\\"../ImageTile.js\\\").default} [tileClass] Class used to instantiate image tiles.\\n * Default is {@link module:ol/ImageTile~ImageTile}.\\n * @property {import(\\\"../tilegrid/TileGrid.js\\\").default} [tileGrid] Tile grid.\\n * @property {import(\\\"../Tile.js\\\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\\n * ```js\\n * function(imageTile, src) {\\n *   imageTile.getImage().src = src;\\n * };\\n * ```\\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\\n * service advertizes 256px by 256px tiles but actually sends 512px\\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\\n * should be set to `2`.\\n * @property {import(\\\"../Tile.js\\\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\\n * used instead of defining each one separately in the `urls` option.\\n * @property {Array<string>} [urls] An array of URL templates.\\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\\n * request out-of-bounds tiles from the server. When set to `false`, only one\\n * world will be rendered. When set to `true`, tiles will be requested for one\\n * world only, but they will be wrapped horizontally to render multiple worlds.\\n * @property {number} [transition] Duration of the opacity transition for rendering.\\n * To disable the opacity transition, pass `transition: 0`.\\n * @property {string} [key] Optional tile key for proper cache fetching\\n */\\n/**\\n * @classdesc\\n * Base class for sources providing images divided into a tile grid.\\n *\\n * @fires import(\\\"./Tile.js\\\").TileSourceEvent\\n * @api\\n */\\nvar TileImage = /** @class */ (function (_super) {\\n    __extends(TileImage, _super);\\n    /**\\n     * @param {!Options} options Image tile options.\\n     */\\n    function TileImage(options) {\\n        var _this = _super.call(this, {\\n            attributions: options.attributions,\\n            cacheSize: options.cacheSize,\\n            opaque: options.opaque,\\n            projection: options.projection,\\n            state: options.state,\\n            tileGrid: options.tileGrid,\\n            tileLoadFunction: options.tileLoadFunction ?\\n                options.tileLoadFunction : defaultTileLoadFunction,\\n            tilePixelRatio: options.tilePixelRatio,\\n            tileUrlFunction: options.tileUrlFunction,\\n            url: options.url,\\n            urls: options.urls,\\n            wrapX: options.wrapX,\\n            transition: options.transition,\\n            key: options.key,\\n            attributionsCollapsible: options.attributionsCollapsible\\n        }) || this;\\n        /**\\n         * @protected\\n         * @type {?string}\\n         */\\n        _this.crossOrigin =\\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\\n        /**\\n         * @protected\\n         * @type {typeof ImageTile}\\n         */\\n        _this.tileClass = options.tileClass !== undefined ?\\n            options.tileClass : ImageTile;\\n        /**\\n         * @protected\\n         * @type {!Object<string, TileCache>}\\n         */\\n        _this.tileCacheForProjection = {};\\n        /**\\n         * @protected\\n         * @type {!Object<string, import(\\\"../tilegrid/TileGrid.js\\\").default>}\\n         */\\n        _this.tileGridForProjection = {};\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        _this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.renderReprojectionEdges_ = false;\\n        return _this;\\n    }\\n    /**\\n     * @inheritDoc\\n     */\\n    TileImage.prototype.canExpireCache = function () {\\n        if (!ENABLE_RASTER_REPROJECTION) {\\n            return _super.prototype.canExpireCache.call(this);\\n        }\\n        if (this.tileCache.canExpireCache()) {\\n            return true;\\n        }\\n        else {\\n            for (var key in this.tileCacheForProjection) {\\n                if (this.tileCacheForProjection[key].canExpireCache()) {\\n                    return true;\\n                }\\n            }\\n        }\\n        return false;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    TileImage.prototype.expireCache = function (projection, usedTiles) {\\n        if (!ENABLE_RASTER_REPROJECTION) {\\n            _super.prototype.expireCache.call(this, projection, usedTiles);\\n            return;\\n        }\\n        var usedTileCache = this.getTileCacheForProjection(projection);\\n        this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\\n        for (var id in this.tileCacheForProjection) {\\n            var tileCache = this.tileCacheForProjection[id];\\n            tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\\n        }\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    TileImage.prototype.getGutterForProjection = function (projection) {\\n        if (ENABLE_RASTER_REPROJECTION &&\\n            this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\\n            return 0;\\n        }\\n        else {\\n            return this.getGutter();\\n        }\\n    };\\n    /**\\n     * @return {number} Gutter.\\n     */\\n    TileImage.prototype.getGutter = function () {\\n        return 0;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    TileImage.prototype.getOpaque = function (projection) {\\n        if (ENABLE_RASTER_REPROJECTION &&\\n            this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\\n            return false;\\n        }\\n        else {\\n            return _super.prototype.getOpaque.call(this, projection);\\n        }\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    TileImage.prototype.getTileGridForProjection = function (projection) {\\n        if (!ENABLE_RASTER_REPROJECTION) {\\n            return _super.prototype.getTileGridForProjection.call(this, projection);\\n        }\\n        var thisProj = this.getProjection();\\n        if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\\n            return this.tileGrid;\\n        }\\n        else {\\n            var projKey = getUid(projection);\\n            if (!(projKey in this.tileGridForProjection)) {\\n                this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\\n            }\\n            return (\\n            /** @type {!import(\\\"../tilegrid/TileGrid.js\\\").default} */ (this.tileGridForProjection[projKey]));\\n        }\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    TileImage.prototype.getTileCacheForProjection = function (projection) {\\n        if (!ENABLE_RASTER_REPROJECTION) {\\n            return _super.prototype.getTileCacheForProjection.call(this, projection);\\n        }\\n        var thisProj = this.getProjection();\\n        if (!thisProj || equivalent(thisProj, projection)) {\\n            return this.tileCache;\\n        }\\n        else {\\n            var projKey = getUid(projection);\\n            if (!(projKey in this.tileCacheForProjection)) {\\n                this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\\n            }\\n            return this.tileCacheForProjection[projKey];\\n        }\\n    };\\n    /**\\n     * @param {number} z Tile coordinate z.\\n     * @param {number} x Tile coordinate x.\\n     * @param {number} y Tile coordinate y.\\n     * @param {number} pixelRatio Pixel ratio.\\n     * @param {import(\\\"../proj/Projection.js\\\").default} projection Projection.\\n     * @param {string} key The key set on the tile.\\n     * @return {!import(\\\"../Tile.js\\\").default} Tile.\\n     * @private\\n     */\\n    TileImage.prototype.createTile_ = function (z, x, y, pixelRatio, projection, key) {\\n        var tileCoord = [z, x, y];\\n        var urlTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\\n        var tileUrl = urlTileCoord ?\\n            this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\\n        var tile = new this.tileClass(tileCoord, tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY, tileUrl !== undefined ? tileUrl : '', this.crossOrigin, this.tileLoadFunction, this.tileOptions);\\n        tile.key = key;\\n        listen(tile, EventType.CHANGE, this.handleTileChange, this);\\n        return tile;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    TileImage.prototype.getTile = function (z, x, y, pixelRatio, projection) {\\n        var sourceProjection = /** @type {!import(\\\"../proj/Projection.js\\\").default} */ (this.getProjection());\\n        if (!ENABLE_RASTER_REPROJECTION ||\\n            !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\\n        }\\n        else {\\n            var cache = this.getTileCacheForProjection(projection);\\n            var tileCoord = [z, x, y];\\n            var tile = void 0;\\n            var tileCoordKey = getKey(tileCoord);\\n            if (cache.containsKey(tileCoordKey)) {\\n                tile = /** @type {!import(\\\"../Tile.js\\\").default} */ (cache.get(tileCoordKey));\\n            }\\n            var key = this.getKey();\\n            if (tile && tile.key == key) {\\n                return tile;\\n            }\\n            else {\\n                var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\\n                var targetTileGrid = this.getTileGridForProjection(projection);\\n                var wrappedTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\\n                var newTile = new ReprojTile(sourceProjection, sourceTileGrid, projection, targetTileGrid, tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio), this.getGutter(), function (z, x, y, pixelRatio) {\\n                    return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\\n                }.bind(this), this.reprojectionErrorThreshold_, this.renderReprojectionEdges_);\\n                newTile.key = key;\\n                if (tile) {\\n                    newTile.interimTile = tile;\\n                    newTile.refreshInterimChain();\\n                    cache.replace(tileCoordKey, newTile);\\n                }\\n                else {\\n                    cache.set(tileCoordKey, newTile);\\n                }\\n                return newTile;\\n            }\\n        }\\n    };\\n    /**\\n     * @param {number} z Tile coordinate z.\\n     * @param {number} x Tile coordinate x.\\n     * @param {number} y Tile coordinate y.\\n     * @param {number} pixelRatio Pixel ratio.\\n     * @param {!import(\\\"../proj/Projection.js\\\").default} projection Projection.\\n     * @return {!import(\\\"../Tile.js\\\").default} Tile.\\n     * @protected\\n     */\\n    TileImage.prototype.getTileInternal = function (z, x, y, pixelRatio, projection) {\\n        var tile = null;\\n        var tileCoordKey = getKeyZXY(z, x, y);\\n        var key = this.getKey();\\n        if (!this.tileCache.containsKey(tileCoordKey)) {\\n            tile = this.createTile_(z, x, y, pixelRatio, projection, key);\\n            this.tileCache.set(tileCoordKey, tile);\\n        }\\n        else {\\n            tile = this.tileCache.get(tileCoordKey);\\n            if (tile.key != key) {\\n                // The source's params changed. If the tile has an interim tile and if we\\n                // can use it then we use it. Otherwise we create a new tile.  In both\\n                // cases we attempt to assign an interim tile to the new tile.\\n                var interimTile = tile;\\n                tile = this.createTile_(z, x, y, pixelRatio, projection, key);\\n                //make the new tile the head of the list,\\n                if (interimTile.getState() == TileState.IDLE) {\\n                    //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\\n                    tile.interimTile = interimTile.interimTile;\\n                }\\n                else {\\n                    tile.interimTile = interimTile;\\n                }\\n                tile.refreshInterimChain();\\n                this.tileCache.replace(tileCoordKey, tile);\\n            }\\n        }\\n        return tile;\\n    };\\n    /**\\n     * Sets whether to render reprojection edges or not (usually for debugging).\\n     * @param {boolean} render Render the edges.\\n     * @api\\n     */\\n    TileImage.prototype.setRenderReprojectionEdges = function (render) {\\n        if (!ENABLE_RASTER_REPROJECTION ||\\n            this.renderReprojectionEdges_ == render) {\\n            return;\\n        }\\n        this.renderReprojectionEdges_ = render;\\n        for (var id in this.tileCacheForProjection) {\\n            this.tileCacheForProjection[id].clear();\\n        }\\n        this.changed();\\n    };\\n    /**\\n     * Sets the tile grid to use when reprojecting the tiles to the given\\n     * projection instead of the default tile grid for the projection.\\n     *\\n     * This can be useful when the default tile grid cannot be created\\n     * (e.g. projection has no extent defined) or\\n     * for optimization reasons (custom tile size, resolutions, ...).\\n     *\\n     * @param {import(\\\"../proj.js\\\").ProjectionLike} projection Projection.\\n     * @param {import(\\\"../tilegrid/TileGrid.js\\\").default} tilegrid Tile grid to use for the projection.\\n     * @api\\n     */\\n    TileImage.prototype.setTileGridForProjection = function (projection, tilegrid) {\\n        if (ENABLE_RASTER_REPROJECTION) {\\n            var proj = getProjection(projection);\\n            if (proj) {\\n                var projKey = getUid(proj);\\n                if (!(projKey in this.tileGridForProjection)) {\\n                    this.tileGridForProjection[projKey] = tilegrid;\\n                }\\n            }\\n        }\\n    };\\n    return TileImage;\\n}(UrlTile));\\n/**\\n * @param {ImageTile} imageTile Image tile.\\n * @param {string} src Source.\\n */\\nfunction defaultTileLoadFunction(imageTile, src) {\\n    /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\\n}\\nexport default TileImage;\\n//# sourceMappingURL=TileImage.js.map\",\"/**\\n * @module ol/source/XYZ\\n */\\nvar __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\nimport TileImage from './TileImage.js';\\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\\n/**\\n * @typedef {Object} Options\\n * @property {import(\\\"./Source.js\\\").AttributionLike} [attributions] Attributions.\\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\\n * @property {boolean} [opaque=true] Whether the layer is opaque.\\n * @property {import(\\\"../proj.js\\\").ProjectionLike} [projection='EPSG:3857'] Projection.\\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\\n * Higher values can increase reprojection performance, but decrease precision.\\n * @property {number} [maxZoom=18] Optional max zoom level.\\n * @property {number} [minZoom=0] Optional min zoom level.\\n * @property {import(\\\"../tilegrid/TileGrid.js\\\").default} [tileGrid] Tile grid.\\n * @property {import(\\\"../Tile.js\\\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\\n * ```js\\n * function(imageTile, src) {\\n *   imageTile.getImage().src = src;\\n * };\\n * ```\\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\\n * should be set to `2`.\\n * @property {number|import(\\\"../size.js\\\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\\n * @property {import(\\\"../Tile.js\\\").UrlFunction} [tileUrlFunction] Optional function to get\\n * tile URL given a tile coordinate and the projection.\\n * Required if url or urls are not provided.\\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\\n * may be used instead of defining each one separately in the `urls` option.\\n * @property {Array<string>} [urls] An array of URL templates.\\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\\n * @property {number} [transition] Duration of the opacity transition for rendering.\\n * To disable the opacity transition, pass `transition: 0`.\\n */\\n/**\\n * @classdesc\\n * Layer source for tile data with URLs in a set XYZ format that are\\n * defined in a URL template. By default, this follows the widely-used\\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\\n * using the `{-y}` placeholder in the URL template, so long as the\\n * source does not have a custom tile grid. In this case,\\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\\n * such as:\\n *\\n *  tileUrlFunction: function(coordinate) {\\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\\n *        coordinate[1] + '/' + coordinate[2] + '.png';\\n *    }\\n *\\n * @api\\n */\\nvar XYZ = /** @class */ (function (_super) {\\n    __extends(XYZ, _super);\\n    /**\\n     * @param {Options=} opt_options XYZ options.\\n     */\\n    function XYZ(opt_options) {\\n        var _this = this;\\n        var options = opt_options || {};\\n        var projection = options.projection !== undefined ?\\n            options.projection : 'EPSG:3857';\\n        var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\\n            createXYZ({\\n                extent: extentFromProjection(projection),\\n                maxZoom: options.maxZoom,\\n                minZoom: options.minZoom,\\n                tileSize: options.tileSize\\n            });\\n        _this = _super.call(this, {\\n            attributions: options.attributions,\\n            cacheSize: options.cacheSize,\\n            crossOrigin: options.crossOrigin,\\n            opaque: options.opaque,\\n            projection: projection,\\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\\n            tileGrid: tileGrid,\\n            tileLoadFunction: options.tileLoadFunction,\\n            tilePixelRatio: options.tilePixelRatio,\\n            tileUrlFunction: options.tileUrlFunction,\\n            url: options.url,\\n            urls: options.urls,\\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\\n            transition: options.transition,\\n            attributionsCollapsible: options.attributionsCollapsible\\n        }) || this;\\n        return _this;\\n    }\\n    return XYZ;\\n}(TileImage));\\nexport default XYZ;\\n//# sourceMappingURL=XYZ.js.map\",\"/**\\n * @module ol/format/FormatType\\n */\\n/**\\n * @enum {string}\\n */\\nexport default {\\n    ARRAY_BUFFER: 'arraybuffer',\\n    JSON: 'json',\\n    TEXT: 'text',\\n    XML: 'xml'\\n};\\n//# sourceMappingURL=FormatType.js.map\",\"/**\\n * @module ol/featureloader\\n */\\nimport { VOID } from './functions.js';\\nimport FormatType from './format/FormatType.js';\\n/**\\n * {@link module:ol/source/Vector} sources use a function of this type to\\n * load features.\\n *\\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\\n * a `{number}` representing the resolution (map units per pixel) and an\\n * {@link module:ol/proj/Projection} for the projection  as\\n * arguments. `this` within the function is bound to the\\n * {@link module:ol/source/Vector} it's called from.\\n *\\n * The function is responsible for loading the features and adding them to the\\n * source.\\n * @typedef {function(this:(import(\\\"./source/Vector\\\").default|import(\\\"./VectorTile.js\\\").default), import(\\\"./extent.js\\\").Extent, number,\\n *                    import(\\\"./proj/Projection.js\\\").default): void} FeatureLoader\\n * @api\\n */\\n/**\\n * {@link module:ol/source/Vector} sources use a function of this type to\\n * get the url to load features from.\\n *\\n * This function takes an {@link module:ol/extent~Extent} representing the area\\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\\n * and an {@link module:ol/proj/Projection} for the projection  as\\n * arguments and returns a `{string}` representing the URL.\\n * @typedef {function(import(\\\"./extent.js\\\").Extent, number, import(\\\"./proj/Projection.js\\\").default): string} FeatureUrlFunction\\n * @api\\n */\\n/**\\n * @param {string|FeatureUrlFunction} url Feature URL service.\\n * @param {import(\\\"./format/Feature.js\\\").default} format Feature format.\\n * @param {function(this:import(\\\"./VectorTile.js\\\").default, Array<import(\\\"./Feature.js\\\").default>, import(\\\"./proj/Projection.js\\\").default, import(\\\"./extent.js\\\").Extent): void|function(this:import(\\\"./source/Vector\\\").default, Array<import(\\\"./Feature.js\\\").default>): void} success\\n *     Function called with the loaded features and optionally with the data\\n *     projection. Called with the vector tile or source as `this`.\\n * @param {function(this:import(\\\"./VectorTile.js\\\").default): void|function(this:import(\\\"./source/Vector\\\").default): void} failure\\n *     Function called when loading failed. Called with the vector tile or\\n *     source as `this`.\\n * @return {FeatureLoader} The feature loader.\\n */\\nexport function loadFeaturesXhr(url, format, success, failure) {\\n    return (\\n    /**\\n     * @param {import(\\\"./extent.js\\\").Extent} extent Extent.\\n     * @param {number} resolution Resolution.\\n     * @param {import(\\\"./proj/Projection.js\\\").default} projection Projection.\\n     * @this {import(\\\"./source/Vector\\\").default|import(\\\"./VectorTile.js\\\").default}\\n     */\\n    function (extent, resolution, projection) {\\n        var xhr = new XMLHttpRequest();\\n        xhr.open('GET', typeof url === 'function' ? url(extent, resolution, projection) : url, true);\\n        if (format.getType() == FormatType.ARRAY_BUFFER) {\\n            xhr.responseType = 'arraybuffer';\\n        }\\n        /**\\n         * @param {Event} event Event.\\n         * @private\\n         */\\n        xhr.onload = function (event) {\\n            // status will be 0 for file:// urls\\n            if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\\n                var type = format.getType();\\n                /** @type {Document|Node|Object|string|undefined} */\\n                var source = void 0;\\n                if (type == FormatType.JSON || type == FormatType.TEXT) {\\n                    source = xhr.responseText;\\n                }\\n                else if (type == FormatType.XML) {\\n                    source = xhr.responseXML;\\n                    if (!source) {\\n                        source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\\n                    }\\n                }\\n                else if (type == FormatType.ARRAY_BUFFER) {\\n                    source = /** @type {ArrayBuffer} */ (xhr.response);\\n                }\\n                if (source) {\\n                    success.call(this, format.readFeatures(source, {\\n                        extent: extent,\\n                        featureProjection: projection\\n                    }), format.readProjection(source));\\n                }\\n                else {\\n                    failure.call(this);\\n                }\\n            }\\n            else {\\n                failure.call(this);\\n            }\\n        }.bind(this);\\n        /**\\n         * @private\\n         */\\n        xhr.onerror = function () {\\n            failure.call(this);\\n        }.bind(this);\\n        xhr.send();\\n    });\\n}\\n/**\\n * Create an XHR feature loader for a `url` and `format`. The feature loader\\n * loads features (with XHR), parses the features, and adds them to the\\n * vector source.\\n * @param {string|FeatureUrlFunction} url Feature URL service.\\n * @param {import(\\\"./format/Feature.js\\\").default} format Feature format.\\n * @return {FeatureLoader} The feature loader.\\n * @api\\n */\\nexport function xhr(url, format) {\\n    return loadFeaturesXhr(url, format, \\n    /**\\n     * @param {Array<import(\\\"./Feature.js\\\").default>} features The loaded features.\\n     * @param {import(\\\"./proj/Projection.js\\\").default} dataProjection Data\\n     * projection.\\n     * @this {import(\\\"./source/Vector\\\").default|import(\\\"./VectorTile.js\\\").default}\\n     */\\n    function (features, dataProjection) {\\n        var sourceOrTile = /** @type {?} */ (this);\\n        if (typeof sourceOrTile.addFeatures === 'function') {\\n            /** @type {import(\\\"./source/Vector\\\").default} */ (sourceOrTile).addFeatures(features);\\n        }\\n    }, /* FIXME handle error */ VOID);\\n}\\n//# sourceMappingURL=featureloader.js.map\",\"/**\\n * @module ol/loadingstrategy\\n */\\n/**\\n * Strategy function for loading all features with a single request.\\n * @param {import(\\\"./extent.js\\\").Extent} extent Extent.\\n * @param {number} resolution Resolution.\\n * @return {Array<import(\\\"./extent.js\\\").Extent>} Extents.\\n * @api\\n */\\nexport function all(extent, resolution) {\\n    return [[-Infinity, -Infinity, Infinity, Infinity]];\\n}\\n/**\\n * Strategy function for loading features based on the view's extent and\\n * resolution.\\n * @param {import(\\\"./extent.js\\\").Extent} extent Extent.\\n * @param {number} resolution Resolution.\\n * @return {Array<import(\\\"./extent.js\\\").Extent>} Extents.\\n * @api\\n */\\nexport function bbox(extent, resolution) {\\n    return [extent];\\n}\\n/**\\n * Creates a strategy function for loading features based on a tile grid.\\n * @param {import(\\\"./tilegrid/TileGrid.js\\\").default} tileGrid Tile grid.\\n * @return {function(import(\\\"./extent.js\\\").Extent, number): Array<import(\\\"./extent.js\\\").Extent>} Loading strategy.\\n * @api\\n */\\nexport function tile(tileGrid) {\\n    return (\\n    /**\\n     * @param {import(\\\"./extent.js\\\").Extent} extent Extent.\\n     * @param {number} resolution Resolution.\\n     * @return {Array<import(\\\"./extent.js\\\").Extent>} Extents.\\n     */\\n    function (extent, resolution) {\\n        var z = tileGrid.getZForResolution(resolution);\\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\\n        /** @type {Array<import(\\\"./extent.js\\\").Extent>} */\\n        var extents = [];\\n        /** @type {import(\\\"./tilecoord.js\\\").TileCoord} */\\n        var tileCoord = [z, 0, 0];\\n        for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\\n            for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\\n                extents.push(tileGrid.getTileCoordExtent(tileCoord));\\n            }\\n        }\\n        return extents;\\n    });\\n}\\n//# sourceMappingURL=loadingstrategy.js.map\",\"/**\\n * @module ol/source/VectorEventType\\n */\\n/**\\n * @enum {string}\\n */\\nexport default {\\n    /**\\n     * Triggered when a feature is added to the source.\\n     * @event module:ol/source/Vector.VectorSourceEvent#addfeature\\n     * @api\\n     */\\n    ADDFEATURE: 'addfeature',\\n    /**\\n     * Triggered when a feature is updated.\\n     * @event module:ol/source/Vector.VectorSourceEvent#changefeature\\n     * @api\\n     */\\n    CHANGEFEATURE: 'changefeature',\\n    /**\\n     * Triggered when the clear method is called on the source.\\n     * @event module:ol/source/Vector.VectorSourceEvent#clear\\n     * @api\\n     */\\n    CLEAR: 'clear',\\n    /**\\n     * Triggered when a feature is removed from the source.\\n     * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\\n     * @event module:ol/source/Vector.VectorSourceEvent#removefeature\\n     * @api\\n     */\\n    REMOVEFEATURE: 'removefeature'\\n};\\n//# sourceMappingURL=VectorEventType.js.map\",\"/**\\n * @module ol/structs/RBush\\n */\\nimport { getUid } from '../util.js';\\nimport rbush from 'rbush';\\nimport { createOrUpdate, equals } from '../extent.js';\\nimport { isEmpty } from '../obj.js';\\n/**\\n * @typedef {Object} Entry\\n * @property {number} minX\\n * @property {number} minY\\n * @property {number} maxX\\n * @property {number} maxY\\n * @property {Object} [value]\\n */\\n/**\\n * @classdesc\\n * Wrapper around the RBush by Vladimir Agafonkin.\\n * See https://github.com/mourner/rbush.\\n *\\n * @template T\\n */\\nvar RBush = /** @class */ (function () {\\n    /**\\n     * @param {number=} opt_maxEntries Max entries.\\n     */\\n    function RBush(opt_maxEntries) {\\n        /**\\n         * @private\\n         */\\n        this.rbush_ = rbush(opt_maxEntries, undefined);\\n        /**\\n         * A mapping between the objects added to this rbush wrapper\\n         * and the objects that are actually added to the internal rbush.\\n         * @private\\n         * @type {Object<string, Entry>}\\n         */\\n        this.items_ = {};\\n    }\\n    /**\\n     * Insert a value into the RBush.\\n     * @param {import(\\\"../extent.js\\\").Extent} extent Extent.\\n     * @param {T} value Value.\\n     */\\n    RBush.prototype.insert = function (extent, value) {\\n        /** @type {Entry} */\\n        var item = {\\n            minX: extent[0],\\n            minY: extent[1],\\n            maxX: extent[2],\\n            maxY: extent[3],\\n            value: value\\n        };\\n        this.rbush_.insert(item);\\n        this.items_[getUid(value)] = item;\\n    };\\n    /**\\n     * Bulk-insert values into the RBush.\\n     * @param {Array<import(\\\"../extent.js\\\").Extent>} extents Extents.\\n     * @param {Array<T>} values Values.\\n     */\\n    RBush.prototype.load = function (extents, values) {\\n        var items = new Array(values.length);\\n        for (var i = 0, l = values.length; i < l; i++) {\\n            var extent = extents[i];\\n            var value = values[i];\\n            /** @type {Entry} */\\n            var item = {\\n                minX: extent[0],\\n                minY: extent[1],\\n                maxX: extent[2],\\n                maxY: extent[3],\\n                value: value\\n            };\\n            items[i] = item;\\n            this.items_[getUid(value)] = item;\\n        }\\n        this.rbush_.load(items);\\n    };\\n    /**\\n     * Remove a value from the RBush.\\n     * @param {T} value Value.\\n     * @return {boolean} Removed.\\n     */\\n    RBush.prototype.remove = function (value) {\\n        var uid = getUid(value);\\n        // get the object in which the value was wrapped when adding to the\\n        // internal rbush. then use that object to do the removal.\\n        var item = this.items_[uid];\\n        delete this.items_[uid];\\n        return this.rbush_.remove(item) !== null;\\n    };\\n    /**\\n     * Update the extent of a value in the RBush.\\n     * @param {import(\\\"../extent.js\\\").Extent} extent Extent.\\n     * @param {T} value Value.\\n     */\\n    RBush.prototype.update = function (extent, value) {\\n        var item = this.items_[getUid(value)];\\n        var bbox = [item.minX, item.minY, item.maxX, item.maxY];\\n        if (!equals(bbox, extent)) {\\n            this.remove(value);\\n            this.insert(extent, value);\\n        }\\n    };\\n    /**\\n     * Return all values in the RBush.\\n     * @return {Array<T>} All.\\n     */\\n    RBush.prototype.getAll = function () {\\n        var items = this.rbush_.all();\\n        return items.map(function (item) {\\n            return item.value;\\n        });\\n    };\\n    /**\\n     * Return all values in the given extent.\\n     * @param {import(\\\"../extent.js\\\").Extent} extent Extent.\\n     * @return {Array<T>} All in extent.\\n     */\\n    RBush.prototype.getInExtent = function (extent) {\\n        /** @type {Entry} */\\n        var bbox = {\\n            minX: extent[0],\\n            minY: extent[1],\\n            maxX: extent[2],\\n            maxY: extent[3]\\n        };\\n        var items = this.rbush_.search(bbox);\\n        return items.map(function (item) {\\n            return item.value;\\n        });\\n    };\\n    /**\\n     * Calls a callback function with each value in the tree.\\n     * If the callback returns a truthy value, this value is returned without\\n     * checking the rest of the tree.\\n     * @param {function(T): *} callback Callback.\\n     * @return {*} Callback return value.\\n     */\\n    RBush.prototype.forEach = function (callback) {\\n        return this.forEach_(this.getAll(), callback);\\n    };\\n    /**\\n     * Calls a callback function with each value in the provided extent.\\n     * @param {import(\\\"../extent.js\\\").Extent} extent Extent.\\n     * @param {function(T): *} callback Callback.\\n     * @return {*} Callback return value.\\n     */\\n    RBush.prototype.forEachInExtent = function (extent, callback) {\\n        return this.forEach_(this.getInExtent(extent), callback);\\n    };\\n    /**\\n     * @param {Array<T>} values Values.\\n     * @param {function(T): *} callback Callback.\\n     * @private\\n     * @return {*} Callback return value.\\n     */\\n    RBush.prototype.forEach_ = function (values, callback) {\\n        var result;\\n        for (var i = 0, l = values.length; i < l; i++) {\\n            result = callback(values[i]);\\n            if (result) {\\n                return result;\\n            }\\n        }\\n        return result;\\n    };\\n    /**\\n     * @return {boolean} Is empty.\\n     */\\n    RBush.prototype.isEmpty = function () {\\n        return isEmpty(this.items_);\\n    };\\n    /**\\n     * Remove all values from the RBush.\\n     */\\n    RBush.prototype.clear = function () {\\n        this.rbush_.clear();\\n        this.items_ = {};\\n    };\\n    /**\\n     * @param {import(\\\"../extent.js\\\").Extent=} opt_extent Extent.\\n     * @return {import(\\\"../extent.js\\\").Extent} Extent.\\n     */\\n    RBush.prototype.getExtent = function (opt_extent) {\\n        var data = this.rbush_.toJSON();\\n        return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\\n    };\\n    /**\\n     * @param {RBush} rbush R-Tree.\\n     */\\n    RBush.prototype.concat = function (rbush) {\\n        this.rbush_.load(rbush.rbush_.all());\\n        for (var i in rbush.items_) {\\n            this.items_[i] = rbush.items_[i];\\n        }\\n    };\\n    return RBush;\\n}());\\nexport default RBush;\\n//# sourceMappingURL=RBush.js.map\",\"/**\\n * @module ol/source/Vector\\n */\\nvar __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\nimport { getUid } from '../util.js';\\nimport Collection from '../Collection.js';\\nimport CollectionEventType from '../CollectionEventType.js';\\nimport ObjectEventType from '../ObjectEventType.js';\\nimport { extend } from '../array.js';\\nimport { assert } from '../asserts.js';\\nimport { listen, unlistenByKey } from '../events.js';\\nimport Event from '../events/Event.js';\\nimport EventType from '../events/EventType.js';\\nimport { containsExtent, equals } from '../extent.js';\\nimport { xhr } from '../featureloader.js';\\nimport { TRUE, VOID } from '../functions.js';\\nimport { all as allStrategy } from '../loadingstrategy.js';\\nimport { isEmpty, getValues } from '../obj.js';\\nimport Source from './Source.js';\\nimport SourceState from './State.js';\\nimport VectorEventType from './VectorEventType.js';\\nimport RBush from '../structs/RBush.js';\\n/**\\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\\n *\\n * @typedef {function(import(\\\"../extent.js\\\").Extent, number): Array<import(\\\"../extent.js\\\").Extent>} LoadingStrategy\\n * @api\\n */\\n/**\\n * @classdesc\\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\\n * type.\\n */\\nvar VectorSourceEvent = /** @class */ (function (_super) {\\n    __extends(VectorSourceEvent, _super);\\n    /**\\n     * @param {string} type Type.\\n     * @param {import(\\\"../Feature.js\\\").default=} opt_feature Feature.\\n     */\\n    function VectorSourceEvent(type, opt_feature) {\\n        var _this = _super.call(this, type) || this;\\n        /**\\n         * The feature being added or removed.\\n         * @type {import(\\\"../Feature.js\\\").default|undefined}\\n         * @api\\n         */\\n        _this.feature = opt_feature;\\n        return _this;\\n    }\\n    return VectorSourceEvent;\\n}(Event));\\nexport { VectorSourceEvent };\\n/**\\n * @typedef {Object} Options\\n * @property {import(\\\"./Source.js\\\").AttributionLike} [attributions] Attributions.\\n * @property {Array<import(\\\"../Feature.js\\\").default>|Collection<import(\\\"../Feature.js\\\").default>} [features]\\n * Features. If provided as {@link module:ol/Collection}, the features in the source\\n * and the collection will stay in sync.\\n * @property {import(\\\"../format/Feature.js\\\").default} [format] The feature format used by the XHR\\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\\n * @property {import(\\\"../featureloader.js\\\").FeatureLoader} [loader]\\n * The loader function used to load features, from a remote source for example.\\n * If this is not set and `url` is set, the source will create and use an XHR\\n * feature loader.\\n *\\n * Example:\\n *\\n * ```js\\n * import {Vector} from 'ol/source';\\n * import {GeoJSON} from 'ol/format';\\n * import {bbox} from 'ol/loadingstrategy';\\n *\\n * var vectorSource = new Vector({\\n *   format: new GeoJSON(),\\n *   loader: function(extent, resolution, projection) {\\n *      var proj = projection.getCode();\\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\\n *          'outputFormat=application/json&srsname=' + proj + '&' +\\n *          'bbox=' + extent.join(',') + ',' + proj;\\n *      var xhr = new XMLHttpRequest();\\n *      xhr.open('GET', url);\\n *      var onError = function() {\\n *        vectorSource.removeLoadedExtent(extent);\\n *      }\\n *      xhr.onerror = onError;\\n *      xhr.onload = function() {\\n *        if (xhr.status == 200) {\\n *          vectorSource.addFeatures(\\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\\n *        } else {\\n *          onError();\\n *        }\\n *      }\\n *      xhr.send();\\n *    },\\n *    strategy: bbox\\n *  });\\n * ```\\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\\n * stroke operations.\\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\\n * By default an {@link module:ol/loadingstrategy~all}\\n * strategy is used, a one-off strategy which loads all features at once.\\n * @property {string|import(\\\"../featureloader.js\\\").FeatureUrlFunction} [url]\\n * Setting this option instructs the source to load features using an XHR loader\\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\\n * other loading strategies.\\n * Requires `format` to be set as well.\\n * When default XHR feature loader is provided, the features will\\n * be transformed from the data projection to the view projection\\n * during parsing. If your remote data source does not advertise its projection\\n * properly, this transformation will be incorrect. For some formats, the\\n * default projection (usually EPSG:4326) can be overridden by setting the\\n * dataProjection constructor option on the format.\\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\\n * @property {boolean} [useSpatialIndex=true]\\n * By default, an RTree is used as spatial index. When features are removed and\\n * added frequently, and the total number of features is low, setting this to\\n * `false` may improve performance.\\n *\\n * Note that\\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\\n * through all features.\\n *\\n * When set to `false`, the features will be maintained in an\\n * {@link module:ol/Collection}, which can be retrieved through\\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\\n * -180° and 180° meridians to work properly, this should be set to `false`. The\\n * resulting geometry coordinates will then exceed the world bounds.\\n */\\n/**\\n * @classdesc\\n * Provides a source of features for vector layers. Vector features provided\\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\\n * vector data that is optimized for rendering.\\n *\\n * @fires VectorSourceEvent\\n * @api\\n */\\nvar VectorSource = /** @class */ (function (_super) {\\n    __extends(VectorSource, _super);\\n    /**\\n     * @param {Options=} opt_options Vector source options.\\n     */\\n    function VectorSource(opt_options) {\\n        var _this = this;\\n        var options = opt_options || {};\\n        _this = _super.call(this, {\\n            attributions: options.attributions,\\n            projection: undefined,\\n            state: SourceState.READY,\\n            wrapX: options.wrapX !== undefined ? options.wrapX : true\\n        }) || this;\\n        /**\\n         * @private\\n         * @type {import(\\\"../featureloader.js\\\").FeatureLoader}\\n         */\\n        _this.loader_ = VOID;\\n        /**\\n         * @private\\n         * @type {import(\\\"../format/Feature.js\\\").default|undefined}\\n         */\\n        _this.format_ = options.format;\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\\n        /**\\n         * @private\\n         * @type {string|import(\\\"../featureloader.js\\\").FeatureUrlFunction|undefined}\\n         */\\n        _this.url_ = options.url;\\n        if (options.loader !== undefined) {\\n            _this.loader_ = options.loader;\\n        }\\n        else if (_this.url_ !== undefined) {\\n            assert(_this.format_, 7); // `format` must be set when `url` is set\\n            // create a XHR feature loader for \\\"url\\\" and \\\"format\\\"\\n            _this.loader_ = xhr(_this.url_, /** @type {import(\\\"../format/Feature.js\\\").default} */ (_this.format_));\\n        }\\n        /**\\n         * @private\\n         * @type {LoadingStrategy}\\n         */\\n        _this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\\n        var useSpatialIndex = options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\\n        /**\\n         * @private\\n         * @type {RBush<import(\\\"../Feature.js\\\").default>}\\n         */\\n        _this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\\n        /**\\n         * @private\\n         * @type {RBush<{extent: import(\\\"../extent.js\\\").Extent}>}\\n         */\\n        _this.loadedExtentsRtree_ = new RBush();\\n        /**\\n         * @private\\n         * @type {!Object<string, import(\\\"../Feature.js\\\").default>}\\n         */\\n        _this.nullGeometryFeatures_ = {};\\n        /**\\n         * A lookup of features by id (the return from feature.getId()).\\n         * @private\\n         * @type {!Object<string, import(\\\"../Feature.js\\\").default>}\\n         */\\n        _this.idIndex_ = {};\\n        /**\\n         * A lookup of features without id (keyed by getUid(feature)).\\n         * @private\\n         * @type {!Object<string, import(\\\"../Feature.js\\\").default>}\\n         */\\n        _this.undefIdIndex_ = {};\\n        /**\\n         * @private\\n         * @type {Object<string, Array<import(\\\"../events.js\\\").EventsKey>>}\\n         */\\n        _this.featureChangeKeys_ = {};\\n        /**\\n         * @private\\n         * @type {Collection<import(\\\"../Feature.js\\\").default>}\\n         */\\n        _this.featuresCollection_ = null;\\n        var collection, features;\\n        if (Array.isArray(options.features)) {\\n            features = options.features;\\n        }\\n        else if (options.features) {\\n            collection = options.features;\\n            features = collection.getArray();\\n        }\\n        if (!useSpatialIndex && collection === undefined) {\\n            collection = new Collection(features);\\n        }\\n        if (features !== undefined) {\\n            _this.addFeaturesInternal(features);\\n        }\\n        if (collection !== undefined) {\\n            _this.bindFeaturesCollection_(collection);\\n        }\\n        return _this;\\n    }\\n    /**\\n     * Add a single feature to the source.  If you want to add a batch of features\\n     * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\\n     * instead. A feature will not be added to the source if feature with\\n     * the same id is already there. The reason for this behavior is to avoid\\n     * feature duplication when using bbox or tile loading strategies.\\n     * @param {import(\\\"../Feature.js\\\").default} feature Feature to add.\\n     * @api\\n     */\\n    VectorSource.prototype.addFeature = function (feature) {\\n        this.addFeatureInternal(feature);\\n        this.changed();\\n    };\\n    /**\\n     * Add a feature without firing a `change` event.\\n     * @param {import(\\\"../Feature.js\\\").default} feature Feature.\\n     * @protected\\n     */\\n    VectorSource.prototype.addFeatureInternal = function (feature) {\\n        var featureKey = getUid(feature);\\n        if (!this.addToIndex_(featureKey, feature)) {\\n            return;\\n        }\\n        this.setupChangeEvents_(featureKey, feature);\\n        var geometry = feature.getGeometry();\\n        if (geometry) {\\n            var extent = geometry.getExtent();\\n            if (this.featuresRtree_) {\\n                this.featuresRtree_.insert(extent, feature);\\n            }\\n        }\\n        else {\\n            this.nullGeometryFeatures_[featureKey] = feature;\\n        }\\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\\n    };\\n    /**\\n     * @param {string} featureKey Unique identifier for the feature.\\n     * @param {import(\\\"../Feature.js\\\").default} feature The feature.\\n     * @private\\n     */\\n    VectorSource.prototype.setupChangeEvents_ = function (featureKey, feature) {\\n        this.featureChangeKeys_[featureKey] = [\\n            listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\\n            listen(feature, ObjectEventType.PROPERTYCHANGE, this.handleFeatureChange_, this)\\n        ];\\n    };\\n    /**\\n     * @param {string} featureKey Unique identifier for the feature.\\n     * @param {import(\\\"../Feature.js\\\").default} feature The feature.\\n     * @return {boolean} The feature is \\\"valid\\\", in the sense that it is also a\\n     *     candidate for insertion into the Rtree.\\n     * @private\\n     */\\n    VectorSource.prototype.addToIndex_ = function (featureKey, feature) {\\n        var valid = true;\\n        var id = feature.getId();\\n        if (id !== undefined) {\\n            if (!(id.toString() in this.idIndex_)) {\\n                this.idIndex_[id.toString()] = feature;\\n            }\\n            else {\\n                valid = false;\\n            }\\n        }\\n        else {\\n            assert(!(featureKey in this.undefIdIndex_), 30); // The passed `feature` was already added to the source\\n            this.undefIdIndex_[featureKey] = feature;\\n        }\\n        return valid;\\n    };\\n    /**\\n     * Add a batch of features to the source.\\n     * @param {Array<import(\\\"../Feature.js\\\").default>} features Features to add.\\n     * @api\\n     */\\n    VectorSource.prototype.addFeatures = function (features) {\\n        this.addFeaturesInternal(features);\\n        this.changed();\\n    };\\n    /**\\n     * Add features without firing a `change` event.\\n     * @param {Array<import(\\\"../Feature.js\\\").default>} features Features.\\n     * @protected\\n     */\\n    VectorSource.prototype.addFeaturesInternal = function (features) {\\n        var extents = [];\\n        var newFeatures = [];\\n        var geometryFeatures = [];\\n        for (var i = 0, length_1 = features.length; i < length_1; i++) {\\n            var feature = features[i];\\n            var featureKey = getUid(feature);\\n            if (this.addToIndex_(featureKey, feature)) {\\n                newFeatures.push(feature);\\n            }\\n        }\\n        for (var i = 0, length_2 = newFeatures.length; i < length_2; i++) {\\n            var feature = newFeatures[i];\\n            var featureKey = getUid(feature);\\n            this.setupChangeEvents_(featureKey, feature);\\n            var geometry = feature.getGeometry();\\n            if (geometry) {\\n                var extent = geometry.getExtent();\\n                extents.push(extent);\\n                geometryFeatures.push(feature);\\n            }\\n            else {\\n                this.nullGeometryFeatures_[featureKey] = feature;\\n            }\\n        }\\n        if (this.featuresRtree_) {\\n            this.featuresRtree_.load(extents, geometryFeatures);\\n        }\\n        for (var i = 0, length_3 = newFeatures.length; i < length_3; i++) {\\n            this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]));\\n        }\\n    };\\n    /**\\n     * @param {!Collection<import(\\\"../Feature.js\\\").default>} collection Collection.\\n     * @private\\n     */\\n    VectorSource.prototype.bindFeaturesCollection_ = function (collection) {\\n        var modifyingCollection = false;\\n        listen(this, VectorEventType.ADDFEATURE, \\n        /**\\n         * @param {VectorSourceEvent} evt The vector source event\\n         */\\n        function (evt) {\\n            if (!modifyingCollection) {\\n                modifyingCollection = true;\\n                collection.push(evt.feature);\\n                modifyingCollection = false;\\n            }\\n        });\\n        listen(this, VectorEventType.REMOVEFEATURE, \\n        /**\\n         * @param {VectorSourceEvent} evt The vector source event\\n         */\\n        function (evt) {\\n            if (!modifyingCollection) {\\n                modifyingCollection = true;\\n                collection.remove(evt.feature);\\n                modifyingCollection = false;\\n            }\\n        });\\n        listen(collection, CollectionEventType.ADD, \\n        /**\\n         * @param {import(\\\"../Collection.js\\\").CollectionEvent} evt The collection event\\n         */\\n        function (evt) {\\n            if (!modifyingCollection) {\\n                modifyingCollection = true;\\n                this.addFeature(/** @type {import(\\\"../Feature.js\\\").default} */ (evt.element));\\n                modifyingCollection = false;\\n            }\\n        }, this);\\n        listen(collection, CollectionEventType.REMOVE, \\n        /**\\n         * @param {import(\\\"../Collection.js\\\").CollectionEvent} evt The collection event\\n         */\\n        function (evt) {\\n            if (!modifyingCollection) {\\n                modifyingCollection = true;\\n                this.removeFeature(/** @type {import(\\\"../Feature.js\\\").default} */ (evt.element));\\n                modifyingCollection = false;\\n            }\\n        }, this);\\n        this.featuresCollection_ = collection;\\n    };\\n    /**\\n     * Remove all features from the source.\\n     * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\\n     * @api\\n     */\\n    VectorSource.prototype.clear = function (opt_fast) {\\n        if (opt_fast) {\\n            for (var featureId in this.featureChangeKeys_) {\\n                var keys = this.featureChangeKeys_[featureId];\\n                keys.forEach(unlistenByKey);\\n            }\\n            if (!this.featuresCollection_) {\\n                this.featureChangeKeys_ = {};\\n                this.idIndex_ = {};\\n                this.undefIdIndex_ = {};\\n            }\\n        }\\n        else {\\n            if (this.featuresRtree_) {\\n                this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\\n                for (var id in this.nullGeometryFeatures_) {\\n                    this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\\n                }\\n            }\\n        }\\n        if (this.featuresCollection_) {\\n            this.featuresCollection_.clear();\\n        }\\n        if (this.featuresRtree_) {\\n            this.featuresRtree_.clear();\\n        }\\n        this.nullGeometryFeatures_ = {};\\n        var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\\n        this.dispatchEvent(clearEvent);\\n        this.changed();\\n    };\\n    /**\\n     * Iterate through all features on the source, calling the provided callback\\n     * with each one.  If the callback returns any \\\"truthy\\\" value, iteration will\\n     * stop and the function will return the same value.\\n     * Note: this function only iterate through the feature that have a defined geometry.\\n     *\\n     * @param {function(import(\\\"../Feature.js\\\").default): T} callback Called with each feature\\n     *     on the source.  Return a truthy value to stop iteration.\\n     * @return {T|undefined} The return value from the last call to the callback.\\n     * @template T\\n     * @api\\n     */\\n    VectorSource.prototype.forEachFeature = function (callback) {\\n        if (this.featuresRtree_) {\\n            return this.featuresRtree_.forEach(callback);\\n        }\\n        else if (this.featuresCollection_) {\\n            this.featuresCollection_.forEach(callback);\\n        }\\n    };\\n    /**\\n     * Iterate through all features whose geometries contain the provided\\n     * coordinate, calling the callback with each feature.  If the callback returns\\n     * a \\\"truthy\\\" value, iteration will stop and the function will return the same\\n     * value.\\n     *\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} coordinate Coordinate.\\n     * @param {function(import(\\\"../Feature.js\\\").default): T} callback Called with each feature\\n     *     whose goemetry contains the provided coordinate.\\n     * @return {T|undefined} The return value from the last call to the callback.\\n     * @template T\\n     */\\n    VectorSource.prototype.forEachFeatureAtCoordinateDirect = function (coordinate, callback) {\\n        var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\\n        return this.forEachFeatureInExtent(extent, function (feature) {\\n            var geometry = feature.getGeometry();\\n            if (geometry.intersectsCoordinate(coordinate)) {\\n                return callback(feature);\\n            }\\n            else {\\n                return undefined;\\n            }\\n        });\\n    };\\n    /**\\n     * Iterate through all features whose bounding box intersects the provided\\n     * extent (note that the feature's geometry may not intersect the extent),\\n     * calling the callback with each feature.  If the callback returns a \\\"truthy\\\"\\n     * value, iteration will stop and the function will return the same value.\\n     *\\n     * If you are interested in features whose geometry intersects an extent, call\\n     * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\\n     *\\n     * When `useSpatialIndex` is set to false, this method will loop through all\\n     * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\\n     *\\n     * @param {import(\\\"../extent.js\\\").Extent} extent Extent.\\n     * @param {function(import(\\\"../Feature.js\\\").default): T} callback Called with each feature\\n     *     whose bounding box intersects the provided extent.\\n     * @return {T|undefined} The return value from the last call to the callback.\\n     * @template T\\n     * @api\\n     */\\n    VectorSource.prototype.forEachFeatureInExtent = function (extent, callback) {\\n        if (this.featuresRtree_) {\\n            return this.featuresRtree_.forEachInExtent(extent, callback);\\n        }\\n        else if (this.featuresCollection_) {\\n            this.featuresCollection_.forEach(callback);\\n        }\\n    };\\n    /**\\n     * Iterate through all features whose geometry intersects the provided extent,\\n     * calling the callback with each feature.  If the callback returns a \\\"truthy\\\"\\n     * value, iteration will stop and the function will return the same value.\\n     *\\n     * If you only want to test for bounding box intersection, call the\\n     * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\\n     *\\n     * @param {import(\\\"../extent.js\\\").Extent} extent Extent.\\n     * @param {function(import(\\\"../Feature.js\\\").default): T} callback Called with each feature\\n     *     whose geometry intersects the provided extent.\\n     * @return {T|undefined} The return value from the last call to the callback.\\n     * @template T\\n     * @api\\n     */\\n    VectorSource.prototype.forEachFeatureIntersectingExtent = function (extent, callback) {\\n        return this.forEachFeatureInExtent(extent, \\n        /**\\n         * @param {import(\\\"../Feature.js\\\").default} feature Feature.\\n         * @return {T|undefined} The return value from the last call to the callback.\\n         */\\n        function (feature) {\\n            var geometry = feature.getGeometry();\\n            if (geometry.intersectsExtent(extent)) {\\n                var result = callback(feature);\\n                if (result) {\\n                    return result;\\n                }\\n            }\\n        });\\n    };\\n    /**\\n     * Get the features collection associated with this source. Will be `null`\\n     * unless the source was configured with `useSpatialIndex` set to `false`, or\\n     * with an {@link module:ol/Collection} as `features`.\\n     * @return {Collection<import(\\\"../Feature.js\\\").default>} The collection of features.\\n     * @api\\n     */\\n    VectorSource.prototype.getFeaturesCollection = function () {\\n        return this.featuresCollection_;\\n    };\\n    /**\\n     * Get all features on the source in random order.\\n     * @return {Array<import(\\\"../Feature.js\\\").default>} Features.\\n     * @api\\n     */\\n    VectorSource.prototype.getFeatures = function () {\\n        var features;\\n        if (this.featuresCollection_) {\\n            features = this.featuresCollection_.getArray();\\n        }\\n        else if (this.featuresRtree_) {\\n            features = this.featuresRtree_.getAll();\\n            if (!isEmpty(this.nullGeometryFeatures_)) {\\n                extend(features, getValues(this.nullGeometryFeatures_));\\n            }\\n        }\\n        return (\\n        /** @type {Array<import(\\\"../Feature.js\\\").default>} */ (features));\\n    };\\n    /**\\n     * Get all features whose geometry intersects the provided coordinate.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} coordinate Coordinate.\\n     * @return {Array<import(\\\"../Feature.js\\\").default>} Features.\\n     * @api\\n     */\\n    VectorSource.prototype.getFeaturesAtCoordinate = function (coordinate) {\\n        var features = [];\\n        this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\\n            features.push(feature);\\n        });\\n        return features;\\n    };\\n    /**\\n     * Get all features in the provided extent.  Note that this returns an array of\\n     * all features intersecting the given extent in random order (so it may include\\n     * features whose geometries do not intersect the extent).\\n     *\\n     * This method is not available when the source is configured with\\n     * `useSpatialIndex` set to `false`.\\n     * @param {import(\\\"../extent.js\\\").Extent} extent Extent.\\n     * @return {Array<import(\\\"../Feature.js\\\").default>} Features.\\n     * @api\\n     */\\n    VectorSource.prototype.getFeaturesInExtent = function (extent) {\\n        return this.featuresRtree_.getInExtent(extent);\\n    };\\n    /**\\n     * Get the closest feature to the provided coordinate.\\n     *\\n     * This method is not available when the source is configured with\\n     * `useSpatialIndex` set to `false`.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} coordinate Coordinate.\\n     * @param {function(import(\\\"../Feature.js\\\").default):boolean=} opt_filter Feature filter function.\\n     *     The filter function will receive one argument, the {@link module:ol/Feature feature}\\n     *     and it should return a boolean value. By default, no filtering is made.\\n     * @return {import(\\\"../Feature.js\\\").default} Closest feature.\\n     * @api\\n     */\\n    VectorSource.prototype.getClosestFeatureToCoordinate = function (coordinate, opt_filter) {\\n        // Find the closest feature using branch and bound.  We start searching an\\n        // infinite extent, and find the distance from the first feature found.  This\\n        // becomes the closest feature.  We then compute a smaller extent which any\\n        // closer feature must intersect.  We continue searching with this smaller\\n        // extent, trying to find a closer feature.  Every time we find a closer\\n        // feature, we update the extent being searched so that any even closer\\n        // feature must intersect it.  We continue until we run out of features.\\n        var x = coordinate[0];\\n        var y = coordinate[1];\\n        var closestFeature = null;\\n        var closestPoint = [NaN, NaN];\\n        var minSquaredDistance = Infinity;\\n        var extent = [-Infinity, -Infinity, Infinity, Infinity];\\n        var filter = opt_filter ? opt_filter : TRUE;\\n        this.featuresRtree_.forEachInExtent(extent, \\n        /**\\n         * @param {import(\\\"../Feature.js\\\").default} feature Feature.\\n         */\\n        function (feature) {\\n            if (filter(feature)) {\\n                var geometry = feature.getGeometry();\\n                var previousMinSquaredDistance = minSquaredDistance;\\n                minSquaredDistance = geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\\n                if (minSquaredDistance < previousMinSquaredDistance) {\\n                    closestFeature = feature;\\n                    // This is sneaky.  Reduce the extent that it is currently being\\n                    // searched while the R-Tree traversal using this same extent object\\n                    // is still in progress.  This is safe because the new extent is\\n                    // strictly contained by the old extent.\\n                    var minDistance = Math.sqrt(minSquaredDistance);\\n                    extent[0] = x - minDistance;\\n                    extent[1] = y - minDistance;\\n                    extent[2] = x + minDistance;\\n                    extent[3] = y + minDistance;\\n                }\\n            }\\n        });\\n        return closestFeature;\\n    };\\n    /**\\n     * Get the extent of the features currently in the source.\\n     *\\n     * This method is not available when the source is configured with\\n     * `useSpatialIndex` set to `false`.\\n     * @param {import(\\\"../extent.js\\\").Extent=} opt_extent Destination extent. If provided, no new extent\\n     *     will be created. Instead, that extent's coordinates will be overwritten.\\n     * @return {import(\\\"../extent.js\\\").Extent} Extent.\\n     * @api\\n     */\\n    VectorSource.prototype.getExtent = function (opt_extent) {\\n        return this.featuresRtree_.getExtent(opt_extent);\\n    };\\n    /**\\n     * Get a feature by its identifier (the value returned by feature.getId()).\\n     * Note that the index treats string and numeric identifiers as the same.  So\\n     * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\\n     *\\n     * @param {string|number} id Feature identifier.\\n     * @return {import(\\\"../Feature.js\\\").default} The feature (or `null` if not found).\\n     * @api\\n     */\\n    VectorSource.prototype.getFeatureById = function (id) {\\n        var feature = this.idIndex_[id.toString()];\\n        return feature !== undefined ? feature : null;\\n    };\\n    /**\\n     * Get the format associated with this source.\\n     *\\n     * @return {import(\\\"../format/Feature.js\\\").default|undefined} The feature format.\\n     * @api\\n     */\\n    VectorSource.prototype.getFormat = function () {\\n        return this.format_;\\n    };\\n    /**\\n     * @return {boolean} The source can have overlapping geometries.\\n     */\\n    VectorSource.prototype.getOverlaps = function () {\\n        return this.overlaps_;\\n    };\\n    /**\\n     * Get the url associated with this source.\\n     *\\n     * @return {string|import(\\\"../featureloader.js\\\").FeatureUrlFunction|undefined} The url.\\n     * @api\\n     */\\n    VectorSource.prototype.getUrl = function () {\\n        return this.url_;\\n    };\\n    /**\\n     * @param {Event} event Event.\\n     * @private\\n     */\\n    VectorSource.prototype.handleFeatureChange_ = function (event) {\\n        var feature = /** @type {import(\\\"../Feature.js\\\").default} */ (event.target);\\n        var featureKey = getUid(feature);\\n        var geometry = feature.getGeometry();\\n        if (!geometry) {\\n            if (!(featureKey in this.nullGeometryFeatures_)) {\\n                if (this.featuresRtree_) {\\n                    this.featuresRtree_.remove(feature);\\n                }\\n                this.nullGeometryFeatures_[featureKey] = feature;\\n            }\\n        }\\n        else {\\n            var extent = geometry.getExtent();\\n            if (featureKey in this.nullGeometryFeatures_) {\\n                delete this.nullGeometryFeatures_[featureKey];\\n                if (this.featuresRtree_) {\\n                    this.featuresRtree_.insert(extent, feature);\\n                }\\n            }\\n            else {\\n                if (this.featuresRtree_) {\\n                    this.featuresRtree_.update(extent, feature);\\n                }\\n            }\\n        }\\n        var id = feature.getId();\\n        if (id !== undefined) {\\n            var sid = id.toString();\\n            if (featureKey in this.undefIdIndex_) {\\n                delete this.undefIdIndex_[featureKey];\\n                this.idIndex_[sid] = feature;\\n            }\\n            else {\\n                if (this.idIndex_[sid] !== feature) {\\n                    this.removeFromIdIndex_(feature);\\n                    this.idIndex_[sid] = feature;\\n                }\\n            }\\n        }\\n        else {\\n            if (!(featureKey in this.undefIdIndex_)) {\\n                this.removeFromIdIndex_(feature);\\n                this.undefIdIndex_[featureKey] = feature;\\n            }\\n        }\\n        this.changed();\\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature));\\n    };\\n    /**\\n     * Returns true if the feature is contained within the source.\\n     * @param {import(\\\"../Feature.js\\\").default} feature Feature.\\n     * @return {boolean} Has feature.\\n     * @api\\n     */\\n    VectorSource.prototype.hasFeature = function (feature) {\\n        var id = feature.getId();\\n        if (id !== undefined) {\\n            return id in this.idIndex_;\\n        }\\n        else {\\n            return getUid(feature) in this.undefIdIndex_;\\n        }\\n    };\\n    /**\\n     * @return {boolean} Is empty.\\n     */\\n    VectorSource.prototype.isEmpty = function () {\\n        return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\\n    };\\n    /**\\n     * @param {import(\\\"../extent.js\\\").Extent} extent Extent.\\n     * @param {number} resolution Resolution.\\n     * @param {import(\\\"../proj/Projection.js\\\").default} projection Projection.\\n     */\\n    VectorSource.prototype.loadFeatures = function (extent, resolution, projection) {\\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\\n        var extentsToLoad = this.strategy_(extent, resolution);\\n        this.loading = false;\\n        var _loop_1 = function (i, ii) {\\n            var extentToLoad = extentsToLoad[i];\\n            var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad, \\n            /**\\n             * @param {{extent: import(\\\"../extent.js\\\").Extent}} object Object.\\n             * @return {boolean} Contains.\\n             */\\n            function (object) {\\n                return containsExtent(object.extent, extentToLoad);\\n            });\\n            if (!alreadyLoaded) {\\n                this_1.loader_.call(this_1, extentToLoad, resolution, projection);\\n                loadedExtentsRtree.insert(extentToLoad, { extent: extentToLoad.slice() });\\n                this_1.loading = this_1.loader_ !== VOID;\\n            }\\n        };\\n        var this_1 = this;\\n        for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) {\\n            _loop_1(i, ii);\\n        }\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    VectorSource.prototype.refresh = function () {\\n        this.clear(true);\\n        this.loadedExtentsRtree_.clear();\\n        _super.prototype.refresh.call(this);\\n    };\\n    /**\\n     * Remove an extent from the list of loaded extents.\\n     * @param {import(\\\"../extent.js\\\").Extent} extent Extent.\\n     * @api\\n     */\\n    VectorSource.prototype.removeLoadedExtent = function (extent) {\\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\\n        var obj;\\n        loadedExtentsRtree.forEachInExtent(extent, function (object) {\\n            if (equals(object.extent, extent)) {\\n                obj = object;\\n                return true;\\n            }\\n        });\\n        if (obj) {\\n            loadedExtentsRtree.remove(obj);\\n        }\\n    };\\n    /**\\n     * Remove a single feature from the source.  If you want to remove all features\\n     * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\\n     * instead.\\n     * @param {import(\\\"../Feature.js\\\").default} feature Feature to remove.\\n     * @api\\n     */\\n    VectorSource.prototype.removeFeature = function (feature) {\\n        var featureKey = getUid(feature);\\n        if (featureKey in this.nullGeometryFeatures_) {\\n            delete this.nullGeometryFeatures_[featureKey];\\n        }\\n        else {\\n            if (this.featuresRtree_) {\\n                this.featuresRtree_.remove(feature);\\n            }\\n        }\\n        this.removeFeatureInternal(feature);\\n        this.changed();\\n    };\\n    /**\\n     * Remove feature without firing a `change` event.\\n     * @param {import(\\\"../Feature.js\\\").default} feature Feature.\\n     * @protected\\n     */\\n    VectorSource.prototype.removeFeatureInternal = function (feature) {\\n        var featureKey = getUid(feature);\\n        this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\\n        delete this.featureChangeKeys_[featureKey];\\n        var id = feature.getId();\\n        if (id !== undefined) {\\n            delete this.idIndex_[id.toString()];\\n        }\\n        else {\\n            delete this.undefIdIndex_[featureKey];\\n        }\\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature));\\n    };\\n    /**\\n     * Remove a feature from the id index.  Called internally when the feature id\\n     * may have changed.\\n     * @param {import(\\\"../Feature.js\\\").default} feature The feature.\\n     * @return {boolean} Removed the feature from the index.\\n     * @private\\n     */\\n    VectorSource.prototype.removeFromIdIndex_ = function (feature) {\\n        var removed = false;\\n        for (var id in this.idIndex_) {\\n            if (this.idIndex_[id] === feature) {\\n                delete this.idIndex_[id];\\n                removed = true;\\n                break;\\n            }\\n        }\\n        return removed;\\n    };\\n    /**\\n     * Set the new loader of the source. The next render cycle will use the\\n     * new loader.\\n     * @param {import(\\\"../featureloader.js\\\").FeatureLoader} loader The loader to set.\\n     * @api\\n     */\\n    VectorSource.prototype.setLoader = function (loader) {\\n        this.loader_ = loader;\\n    };\\n    /**\\n     * Points the source to a new url. The next render cycle will use the new url.\\n     * @param {string|import(\\\"../featureloader.js\\\").FeatureUrlFunction} url Url.\\n     * @api\\n     */\\n    VectorSource.prototype.setUrl = function (url) {\\n        assert(this.format_, 7); // `format` must be set when `url` is set\\n        this.setLoader(xhr(url, this.format_));\\n    };\\n    return VectorSource;\\n}(Source));\\nexport default VectorSource;\\n//# sourceMappingURL=Vector.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/Feature\\n */\\nimport { assert } from './asserts.js';\\nimport { listen, unlisten, unlistenByKey } from './events.js';\\nimport EventType from './events/EventType.js';\\nimport BaseObject, { getChangeEventType } from './Object.js';\\n/**\\n * @typedef {typeof Feature|typeof import(\\\"./render/Feature.js\\\").default} FeatureClass\\n */\\n/**\\n * @typedef {Feature|import(\\\"./render/Feature.js\\\").default} FeatureLike\\n */\\n/**\\n * @classdesc\\n * A vector object for geographic features with a geometry and other\\n * attribute properties, similar to the features in vector file formats like\\n * GeoJSON.\\n *\\n * Features can be styled individually with `setStyle`; otherwise they use the\\n * style of their vector layer.\\n *\\n * Note that attribute properties are set as {@link module:ol/Object} properties on\\n * the feature object, so they are observable, and have get/set accessors.\\n *\\n * Typically, a feature has a single geometry property. You can set the\\n * geometry using the `setGeometry` method and get it with `getGeometry`.\\n * It is possible to store more than one geometry on a feature using attribute\\n * properties. By default, the geometry used for rendering is identified by\\n * the property name `geometry`. If you want to use another geometry property\\n * for rendering, use the `setGeometryName` method to change the attribute\\n * property associated with the geometry for the feature.  For example:\\n *\\n * ```js\\n *\\n * import Feature from 'ol/Feature';\\n * import Polygon from 'ol/geom/Polygon';\\n * import Point from 'ol/geom/Point';\\n *\\n * var feature = new Feature({\\n *   geometry: new Polygon(polyCoords),\\n *   labelPoint: new Point(labelCoords),\\n *   name: 'My Polygon'\\n * });\\n *\\n * // get the polygon geometry\\n * var poly = feature.getGeometry();\\n *\\n * // Render the feature as a point using the coordinates from labelPoint\\n * feature.setGeometryName('labelPoint');\\n *\\n * // get the point geometry\\n * var point = feature.getGeometry();\\n * ```\\n *\\n * @api\\n */\\nvar Feature = /** @class */ (function (_super) {\\n    __extends(Feature, _super);\\n    /**\\n     * @param {import(\\\"./geom/Geometry.js\\\").default|Object<string, *>=} opt_geometryOrProperties\\n     *     You may pass a Geometry object directly, or an object literal containing\\n     *     properties. If you pass an object literal, you may include a Geometry\\n     *     associated with a `geometry` key.\\n     */\\n    function Feature(opt_geometryOrProperties) {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * @private\\n         * @type {number|string|undefined}\\n         */\\n        _this.id_ = undefined;\\n        /**\\n         * @type {string}\\n         * @private\\n         */\\n        _this.geometryName_ = 'geometry';\\n        /**\\n         * User provided style.\\n         * @private\\n         * @type {import(\\\"./style/Style.js\\\").StyleLike}\\n         */\\n        _this.style_ = null;\\n        /**\\n         * @private\\n         * @type {import(\\\"./style/Style.js\\\").StyleFunction|undefined}\\n         */\\n        _this.styleFunction_ = undefined;\\n        /**\\n         * @private\\n         * @type {?import(\\\"./events.js\\\").EventsKey}\\n         */\\n        _this.geometryChangeKey_ = null;\\n        listen(_this, getChangeEventType(_this.geometryName_), _this.handleGeometryChanged_, _this);\\n        if (opt_geometryOrProperties) {\\n            if (typeof /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry === 'function') {\\n                var geometry = /** @type {import(\\\"./geom/Geometry.js\\\").default} */ (opt_geometryOrProperties);\\n                _this.setGeometry(geometry);\\n            }\\n            else {\\n                /** @type {Object<string, *>} */\\n                var properties = opt_geometryOrProperties;\\n                _this.setProperties(properties);\\n            }\\n        }\\n        return _this;\\n    }\\n    /**\\n     * Clone this feature. If the original feature has a geometry it\\n     * is also cloned. The feature id is not set in the clone.\\n     * @return {Feature} The clone.\\n     * @api\\n     */\\n    Feature.prototype.clone = function () {\\n        var clone = new Feature(this.getProperties());\\n        clone.setGeometryName(this.getGeometryName());\\n        var geometry = this.getGeometry();\\n        if (geometry) {\\n            clone.setGeometry(geometry.clone());\\n        }\\n        var style = this.getStyle();\\n        if (style) {\\n            clone.setStyle(style);\\n        }\\n        return clone;\\n    };\\n    /**\\n     * Get the feature's default geometry.  A feature may have any number of named\\n     * geometries.  The \\\"default\\\" geometry (the one that is rendered by default) is\\n     * set when calling {@link module:ol/Feature~Feature#setGeometry}.\\n     * @return {import(\\\"./geom/Geometry.js\\\").default|undefined} The default geometry for the feature.\\n     * @api\\n     * @observable\\n     */\\n    Feature.prototype.getGeometry = function () {\\n        return (\\n        /** @type {import(\\\"./geom/Geometry.js\\\").default|undefined} */ (this.get(this.geometryName_)));\\n    };\\n    /**\\n     * Get the feature identifier.  This is a stable identifier for the feature and\\n     * is either set when reading data from a remote source or set explicitly by\\n     * calling {@link module:ol/Feature~Feature#setId}.\\n     * @return {number|string|undefined} Id.\\n     * @api\\n     */\\n    Feature.prototype.getId = function () {\\n        return this.id_;\\n    };\\n    /**\\n     * Get the name of the feature's default geometry.  By default, the default\\n     * geometry is named `geometry`.\\n     * @return {string} Get the property name associated with the default geometry\\n     *     for this feature.\\n     * @api\\n     */\\n    Feature.prototype.getGeometryName = function () {\\n        return this.geometryName_;\\n    };\\n    /**\\n     * Get the feature's style. Will return what was provided to the\\n     * {@link module:ol/Feature~Feature#setStyle} method.\\n     * @return {import(\\\"./style/Style.js\\\").StyleLike} The feature style.\\n     * @api\\n     */\\n    Feature.prototype.getStyle = function () {\\n        return this.style_;\\n    };\\n    /**\\n     * Get the feature's style function.\\n     * @return {import(\\\"./style/Style.js\\\").StyleFunction|undefined} Return a function\\n     * representing the current style of this feature.\\n     * @api\\n     */\\n    Feature.prototype.getStyleFunction = function () {\\n        return this.styleFunction_;\\n    };\\n    /**\\n     * @private\\n     */\\n    Feature.prototype.handleGeometryChange_ = function () {\\n        this.changed();\\n    };\\n    /**\\n     * @private\\n     */\\n    Feature.prototype.handleGeometryChanged_ = function () {\\n        if (this.geometryChangeKey_) {\\n            unlistenByKey(this.geometryChangeKey_);\\n            this.geometryChangeKey_ = null;\\n        }\\n        var geometry = this.getGeometry();\\n        if (geometry) {\\n            this.geometryChangeKey_ = listen(geometry, EventType.CHANGE, this.handleGeometryChange_, this);\\n        }\\n        this.changed();\\n    };\\n    /**\\n     * Set the default geometry for the feature.  This will update the property\\n     * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\\n     * @param {import(\\\"./geom/Geometry.js\\\").default|undefined} geometry The new geometry.\\n     * @api\\n     * @observable\\n     */\\n    Feature.prototype.setGeometry = function (geometry) {\\n        this.set(this.geometryName_, geometry);\\n    };\\n    /**\\n     * Set the style for the feature.  This can be a single style object, an array\\n     * of styles, or a function that takes a resolution and returns an array of\\n     * styles. If it is `null` the feature has no style (a `null` style).\\n     * @param {import(\\\"./style/Style.js\\\").StyleLike} style Style for this feature.\\n     * @api\\n     * @fires module:ol/events/Event~Event#event:change\\n     */\\n    Feature.prototype.setStyle = function (style) {\\n        this.style_ = style;\\n        this.styleFunction_ = !style ? undefined : createStyleFunction(style);\\n        this.changed();\\n    };\\n    /**\\n     * Set the feature id.  The feature id is considered stable and may be used when\\n     * requesting features or comparing identifiers returned from a remote source.\\n     * The feature id can be used with the\\n     * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\\n     * @param {number|string|undefined} id The feature id.\\n     * @api\\n     * @fires module:ol/events/Event~Event#event:change\\n     */\\n    Feature.prototype.setId = function (id) {\\n        this.id_ = id;\\n        this.changed();\\n    };\\n    /**\\n     * Set the property name to be used when getting the feature's default geometry.\\n     * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\\n     * this name will be returned.\\n     * @param {string} name The property name of the default geometry.\\n     * @api\\n     */\\n    Feature.prototype.setGeometryName = function (name) {\\n        unlisten(this, getChangeEventType(this.geometryName_), this.handleGeometryChanged_, this);\\n        this.geometryName_ = name;\\n        listen(this, getChangeEventType(this.geometryName_), this.handleGeometryChanged_, this);\\n        this.handleGeometryChanged_();\\n    };\\n    return Feature;\\n}(BaseObject));\\n/**\\n * Convert the provided object into a feature style function.  Functions passed\\n * through unchanged.  Arrays of Style or single style objects wrapped\\n * in a new feature style function.\\n * @param {!import(\\\"./style/Style.js\\\").StyleFunction|!Array<import(\\\"./style/Style.js\\\").default>|!import(\\\"./style/Style.js\\\").default} obj\\n *     A feature style function, a single style, or an array of styles.\\n * @return {import(\\\"./style/Style.js\\\").StyleFunction} A style function.\\n */\\nexport function createStyleFunction(obj) {\\n    if (typeof obj === 'function') {\\n        return obj;\\n    }\\n    else {\\n        /**\\n         * @type {Array<import(\\\"./style/Style.js\\\").default>}\\n         */\\n        var styles_1;\\n        if (Array.isArray(obj)) {\\n            styles_1 = obj;\\n        }\\n        else {\\n            assert(typeof /** @type {?} */ (obj).getZIndex === 'function', 41); // Expected an `import(\\\"./style/Style.js\\\").Style` or an array of `import(\\\"./style/Style.js\\\").Style`\\n            var style = /** @type {import(\\\"./style/Style.js\\\").default} */ (obj);\\n            styles_1 = [style];\\n        }\\n        return function () {\\n            return styles_1;\\n        };\\n    }\\n}\\nexport default Feature;\\n//# sourceMappingURL=Feature.js.map\",\"/**\\n * @module ol/format/Feature\\n */\\nimport { assign } from '../obj.js';\\nimport { abstract } from '../util.js';\\nimport { get as getProjection, equivalent as equivalentProjection, transformExtent } from '../proj.js';\\n/**\\n * @typedef {Object} ReadOptions\\n * @property {import(\\\"../proj.js\\\").ProjectionLike} [dataProjection] Projection of the data we are reading.\\n * If not provided, the projection will be derived from the data (where possible) or\\n * the `dataProjection` of the format is assigned (where set). If the projection\\n * can not be derived from the data and if no `dataProjection` is set for a format,\\n * the features will not be reprojected.\\n * @property {import(\\\"../extent.js\\\").Extent} [extent] Tile extent of the tile being read. This is only used and\\n * required for {@link module:ol/format/MVT}.\\n * @property {import(\\\"../proj.js\\\").ProjectionLike} [featureProjection] Projection of the feature geometries\\n * created by the format reader. If not provided, features will be returned in the\\n * `dataProjection`.\\n */\\n/**\\n * @typedef {Object} WriteOptions\\n * @property {import(\\\"../proj.js\\\").ProjectionLike} [dataProjection] Projection of the data we are writing.\\n * If not provided, the `dataProjection` of the format is assigned (where set).\\n * If no `dataProjection` is set for a format, the features will be returned\\n * in the `featureProjection`.\\n * @property {import(\\\"../proj.js\\\").ProjectionLike} [featureProjection] Projection of the feature geometries\\n * that will be serialized by the format writer. If not provided, geometries are assumed\\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\\n * as they are provided at construction.  If `true`, the right-hand rule will\\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\\n * exterior and counter-clockwise for interior rings).  Note that not all\\n * formats support this.  The GeoJSON format does use this property when writing\\n * geometries.\\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\\n * coordinates with a large number of decimal places, not generally wanted on output.\\n * Set a number here to round coordinates. Can also be used to ensure that\\n * coordinates read in can be written back out with the same number of decimals.\\n * Default is no rounding.\\n */\\n/**\\n * @classdesc\\n * Abstract base class; normally only used for creating subclasses and not\\n * instantiated in apps.\\n * Base class for feature formats.\\n * {FeatureFormat} subclasses provide the ability to decode and encode\\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\\n * file formats.  See the documentation for each format for more details.\\n *\\n * @abstract\\n * @api\\n */\\nvar FeatureFormat = /** @class */ (function () {\\n    function FeatureFormat() {\\n        /**\\n         * @protected\\n         * @type {import(\\\"../proj/Projection.js\\\").default}\\n         */\\n        this.dataProjection = null;\\n        /**\\n         * @protected\\n         * @type {import(\\\"../proj/Projection.js\\\").default}\\n         */\\n        this.defaultFeatureProjection = null;\\n    }\\n    /**\\n     * Adds the data projection to the read options.\\n     * @param {Document|Node|Object|string} source Source.\\n     * @param {ReadOptions=} opt_options Options.\\n     * @return {ReadOptions|undefined} Options.\\n     * @protected\\n     */\\n    FeatureFormat.prototype.getReadOptions = function (source, opt_options) {\\n        var options;\\n        if (opt_options) {\\n            options = {\\n                dataProjection: opt_options.dataProjection ?\\n                    opt_options.dataProjection : this.readProjection(source),\\n                featureProjection: opt_options.featureProjection\\n            };\\n        }\\n        return this.adaptOptions(options);\\n    };\\n    /**\\n     * Sets the `dataProjection` on the options, if no `dataProjection`\\n     * is set.\\n     * @param {WriteOptions|ReadOptions|undefined} options\\n     *     Options.\\n     * @protected\\n     * @return {WriteOptions|ReadOptions|undefined}\\n     *     Updated options.\\n     */\\n    FeatureFormat.prototype.adaptOptions = function (options) {\\n        return assign({\\n            dataProjection: this.dataProjection,\\n            featureProjection: this.defaultFeatureProjection\\n        }, options);\\n    };\\n    /**\\n     * @abstract\\n     * @return {import(\\\"./FormatType.js\\\").default} Format.\\n     */\\n    FeatureFormat.prototype.getType = function () {\\n        return abstract();\\n    };\\n    /**\\n     * Read a single feature from a source.\\n     *\\n     * @abstract\\n     * @param {Document|Node|Object|string} source Source.\\n     * @param {ReadOptions=} opt_options Read options.\\n     * @return {import(\\\"../Feature.js\\\").FeatureLike} Feature.\\n     */\\n    FeatureFormat.prototype.readFeature = function (source, opt_options) {\\n        return abstract();\\n    };\\n    /**\\n     * Read all features from a source.\\n     *\\n     * @abstract\\n     * @param {Document|Node|ArrayBuffer|Object|string} source Source.\\n     * @param {ReadOptions=} opt_options Read options.\\n     * @return {Array<import(\\\"../Feature.js\\\").FeatureLike>} Features.\\n     */\\n    FeatureFormat.prototype.readFeatures = function (source, opt_options) {\\n        return abstract();\\n    };\\n    /**\\n     * Read a single geometry from a source.\\n     *\\n     * @abstract\\n     * @param {Document|Node|Object|string} source Source.\\n     * @param {ReadOptions=} opt_options Read options.\\n     * @return {import(\\\"../geom/Geometry.js\\\").default} Geometry.\\n     */\\n    FeatureFormat.prototype.readGeometry = function (source, opt_options) {\\n        return abstract();\\n    };\\n    /**\\n     * Read the projection from a source.\\n     *\\n     * @abstract\\n     * @param {Document|Node|Object|string} source Source.\\n     * @return {import(\\\"../proj/Projection.js\\\").default} Projection.\\n     */\\n    FeatureFormat.prototype.readProjection = function (source) {\\n        return abstract();\\n    };\\n    /**\\n     * Encode a feature in this format.\\n     *\\n     * @abstract\\n     * @param {import(\\\"../Feature.js\\\").default} feature Feature.\\n     * @param {WriteOptions=} opt_options Write options.\\n     * @return {string} Result.\\n     */\\n    FeatureFormat.prototype.writeFeature = function (feature, opt_options) {\\n        return abstract();\\n    };\\n    /**\\n     * Encode an array of features in this format.\\n     *\\n     * @abstract\\n     * @param {Array<import(\\\"../Feature.js\\\").default>} features Features.\\n     * @param {WriteOptions=} opt_options Write options.\\n     * @return {string} Result.\\n     */\\n    FeatureFormat.prototype.writeFeatures = function (features, opt_options) {\\n        return abstract();\\n    };\\n    /**\\n     * Write a single geometry in this format.\\n     *\\n     * @abstract\\n     * @param {import(\\\"../geom/Geometry.js\\\").default} geometry Geometry.\\n     * @param {WriteOptions=} opt_options Write options.\\n     * @return {string} Result.\\n     */\\n    FeatureFormat.prototype.writeGeometry = function (geometry, opt_options) {\\n        return abstract();\\n    };\\n    return FeatureFormat;\\n}());\\nexport default FeatureFormat;\\n/**\\n * @param {import(\\\"../geom/Geometry.js\\\").default} geometry Geometry.\\n * @param {boolean} write Set to true for writing, false for reading.\\n * @param {(WriteOptions|ReadOptions)=} opt_options Options.\\n * @return {import(\\\"../geom/Geometry.js\\\").default} Transformed geometry.\\n */\\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\\n    var featureProjection = opt_options ? getProjection(opt_options.featureProjection) : null;\\n    var dataProjection = opt_options ? getProjection(opt_options.dataProjection) : null;\\n    var transformed;\\n    if (featureProjection && dataProjection && !equivalentProjection(featureProjection, dataProjection)) {\\n        transformed = (write ? geometry.clone() : geometry).transform(write ? featureProjection : dataProjection, write ? dataProjection : featureProjection);\\n    }\\n    else {\\n        transformed = geometry;\\n    }\\n    if (write && opt_options && /** @type {WriteOptions} */ (opt_options).decimals !== undefined) {\\n        var power_1 = Math.pow(10, /** @type {WriteOptions} */ (opt_options).decimals);\\n        // if decimals option on write, round each coordinate appropriately\\n        /**\\n         * @param {Array<number>} coordinates Coordinates.\\n         * @return {Array<number>} Transformed coordinates.\\n         */\\n        var transform = function (coordinates) {\\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\\n                coordinates[i] = Math.round(coordinates[i] * power_1) / power_1;\\n            }\\n            return coordinates;\\n        };\\n        if (transformed === geometry) {\\n            transformed = geometry.clone();\\n        }\\n        transformed.applyTransform(transform);\\n    }\\n    return transformed;\\n}\\n/**\\n * @param {import(\\\"../extent.js\\\").Extent} extent Extent.\\n * @param {ReadOptions=} opt_options Read options.\\n * @return {import(\\\"../extent.js\\\").Extent} Transformed extent.\\n */\\nexport function transformExtentWithOptions(extent, opt_options) {\\n    var featureProjection = opt_options ? getProjection(opt_options.featureProjection) : null;\\n    var dataProjection = opt_options ? getProjection(opt_options.dataProjection) : null;\\n    if (featureProjection && dataProjection && !equivalentProjection(featureProjection, dataProjection)) {\\n        return transformExtent(extent, dataProjection, featureProjection);\\n    }\\n    else {\\n        return extent;\\n    }\\n}\\n//# sourceMappingURL=Feature.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/format/JSONFeature\\n */\\nimport { abstract } from '../util.js';\\nimport FeatureFormat from './Feature.js';\\nimport FormatType from './FormatType.js';\\n/**\\n * @classdesc\\n * Abstract base class; normally only used for creating subclasses and not\\n * instantiated in apps.\\n * Base class for JSON feature formats.\\n *\\n * @abstract\\n */\\nvar JSONFeature = /** @class */ (function (_super) {\\n    __extends(JSONFeature, _super);\\n    function JSONFeature() {\\n        return _super.call(this) || this;\\n    }\\n    /**\\n     * @inheritDoc\\n     */\\n    JSONFeature.prototype.getType = function () {\\n        return FormatType.JSON;\\n    };\\n    /**\\n     * Read a feature.  Only works for a single feature. Use `readFeatures` to\\n     * read a feature collection.\\n     *\\n     * @param {ArrayBuffer|Document|Node|Object|string} source Source.\\n     * @param {import(\\\"./Feature.js\\\").ReadOptions=} opt_options Read options.\\n     * @return {import(\\\"../Feature.js\\\").default} Feature.\\n     * @api\\n     */\\n    JSONFeature.prototype.readFeature = function (source, opt_options) {\\n        return this.readFeatureFromObject(getObject(source), this.getReadOptions(source, opt_options));\\n    };\\n    /**\\n     * Read all features.  Works with both a single feature and a feature\\n     * collection.\\n     *\\n     * @param {ArrayBuffer|Document|Node|Object|string} source Source.\\n     * @param {import(\\\"./Feature.js\\\").ReadOptions=} opt_options Read options.\\n     * @return {Array<import(\\\"../Feature.js\\\").default>} Features.\\n     * @api\\n     */\\n    JSONFeature.prototype.readFeatures = function (source, opt_options) {\\n        return this.readFeaturesFromObject(getObject(source), this.getReadOptions(source, opt_options));\\n    };\\n    /**\\n     * @abstract\\n     * @param {Object} object Object.\\n     * @param {import(\\\"./Feature.js\\\").ReadOptions=} opt_options Read options.\\n     * @protected\\n     * @return {import(\\\"../Feature.js\\\").default} Feature.\\n     */\\n    JSONFeature.prototype.readFeatureFromObject = function (object, opt_options) {\\n        return abstract();\\n    };\\n    /**\\n     * @abstract\\n     * @param {Object} object Object.\\n     * @param {import(\\\"./Feature.js\\\").ReadOptions=} opt_options Read options.\\n     * @protected\\n     * @return {Array<import(\\\"../Feature.js\\\").default>} Features.\\n     */\\n    JSONFeature.prototype.readFeaturesFromObject = function (object, opt_options) {\\n        return abstract();\\n    };\\n    /**\\n     * Read a geometry.\\n     *\\n     * @param {ArrayBuffer|Document|Node|Object|string} source Source.\\n     * @param {import(\\\"./Feature.js\\\").ReadOptions=} opt_options Read options.\\n     * @return {import(\\\"../geom/Geometry.js\\\").default} Geometry.\\n     * @api\\n     */\\n    JSONFeature.prototype.readGeometry = function (source, opt_options) {\\n        return this.readGeometryFromObject(getObject(source), this.getReadOptions(source, opt_options));\\n    };\\n    /**\\n     * @abstract\\n     * @param {Object} object Object.\\n     * @param {import(\\\"./Feature.js\\\").ReadOptions=} opt_options Read options.\\n     * @protected\\n     * @return {import(\\\"../geom/Geometry.js\\\").default} Geometry.\\n     */\\n    JSONFeature.prototype.readGeometryFromObject = function (object, opt_options) {\\n        return abstract();\\n    };\\n    /**\\n     * Read the projection.\\n     *\\n     * @param {ArrayBuffer|Document|Node|Object|string} source Source.\\n     * @return {import(\\\"../proj/Projection.js\\\").default} Projection.\\n     * @api\\n     */\\n    JSONFeature.prototype.readProjection = function (source) {\\n        return this.readProjectionFromObject(getObject(source));\\n    };\\n    /**\\n     * @abstract\\n     * @param {Object} object Object.\\n     * @protected\\n     * @return {import(\\\"../proj/Projection.js\\\").default} Projection.\\n     */\\n    JSONFeature.prototype.readProjectionFromObject = function (object) {\\n        return abstract();\\n    };\\n    /**\\n     * Encode a feature as string.\\n     *\\n     * @param {import(\\\"../Feature.js\\\").default} feature Feature.\\n     * @param {import(\\\"./Feature.js\\\").WriteOptions=} opt_options Write options.\\n     * @return {string} Encoded feature.\\n     * @api\\n     */\\n    JSONFeature.prototype.writeFeature = function (feature, opt_options) {\\n        return JSON.stringify(this.writeFeatureObject(feature, opt_options));\\n    };\\n    /**\\n     * @abstract\\n     * @param {import(\\\"../Feature.js\\\").default} feature Feature.\\n     * @param {import(\\\"./Feature.js\\\").WriteOptions=} opt_options Write options.\\n     * @return {Object} Object.\\n     */\\n    JSONFeature.prototype.writeFeatureObject = function (feature, opt_options) {\\n        return abstract();\\n    };\\n    /**\\n     * Encode an array of features as string.\\n     *\\n     * @param {Array<import(\\\"../Feature.js\\\").default>} features Features.\\n     * @param {import(\\\"./Feature.js\\\").WriteOptions=} opt_options Write options.\\n     * @return {string} Encoded features.\\n     * @api\\n     */\\n    JSONFeature.prototype.writeFeatures = function (features, opt_options) {\\n        return JSON.stringify(this.writeFeaturesObject(features, opt_options));\\n    };\\n    /**\\n     * @abstract\\n     * @param {Array<import(\\\"../Feature.js\\\").default>} features Features.\\n     * @param {import(\\\"./Feature.js\\\").WriteOptions=} opt_options Write options.\\n     * @return {Object} Object.\\n     */\\n    JSONFeature.prototype.writeFeaturesObject = function (features, opt_options) {\\n        return abstract();\\n    };\\n    /**\\n     * Encode a geometry as string.\\n     *\\n     * @param {import(\\\"../geom/Geometry.js\\\").default} geometry Geometry.\\n     * @param {import(\\\"./Feature.js\\\").WriteOptions=} opt_options Write options.\\n     * @return {string} Encoded geometry.\\n     * @api\\n     */\\n    JSONFeature.prototype.writeGeometry = function (geometry, opt_options) {\\n        return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\\n    };\\n    /**\\n     * @abstract\\n     * @param {import(\\\"../geom/Geometry.js\\\").default} geometry Geometry.\\n     * @param {import(\\\"./Feature.js\\\").WriteOptions=} opt_options Write options.\\n     * @return {Object} Object.\\n     */\\n    JSONFeature.prototype.writeGeometryObject = function (geometry, opt_options) {\\n        return abstract();\\n    };\\n    return JSONFeature;\\n}(FeatureFormat));\\n/**\\n * @param {Document|Node|Object|string} source Source.\\n * @return {Object} Object.\\n */\\nfunction getObject(source) {\\n    if (typeof source === 'string') {\\n        var object = JSON.parse(source);\\n        return object ? /** @type {Object} */ (object) : null;\\n    }\\n    else if (source !== null) {\\n        return source;\\n    }\\n    else {\\n        return null;\\n    }\\n}\\nexport default JSONFeature;\\n//# sourceMappingURL=JSONFeature.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/geom/GeometryCollection\\n */\\nimport { listen, unlisten } from '../events.js';\\nimport EventType from '../events/EventType.js';\\nimport { createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter } from '../extent.js';\\nimport Geometry from './Geometry.js';\\nimport GeometryType from './GeometryType.js';\\nimport { clear } from '../obj.js';\\n/**\\n * @classdesc\\n * An array of {@link module:ol/geom/Geometry} objects.\\n *\\n * @api\\n */\\nvar GeometryCollection = /** @class */ (function (_super) {\\n    __extends(GeometryCollection, _super);\\n    /**\\n     * @param {Array<Geometry>=} opt_geometries Geometries.\\n     */\\n    function GeometryCollection(opt_geometries) {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * @private\\n         * @type {Array<Geometry>}\\n         */\\n        _this.geometries_ = opt_geometries ? opt_geometries : null;\\n        _this.listenGeometriesChange_();\\n        return _this;\\n    }\\n    /**\\n     * @private\\n     */\\n    GeometryCollection.prototype.unlistenGeometriesChange_ = function () {\\n        if (!this.geometries_) {\\n            return;\\n        }\\n        for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\\n            unlisten(this.geometries_[i], EventType.CHANGE, this.changed, this);\\n        }\\n    };\\n    /**\\n     * @private\\n     */\\n    GeometryCollection.prototype.listenGeometriesChange_ = function () {\\n        if (!this.geometries_) {\\n            return;\\n        }\\n        for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\\n            listen(this.geometries_[i], EventType.CHANGE, this.changed, this);\\n        }\\n    };\\n    /**\\n     * Make a complete copy of the geometry.\\n     * @return {!GeometryCollection} Clone.\\n     * @override\\n     * @api\\n     */\\n    GeometryCollection.prototype.clone = function () {\\n        var geometryCollection = new GeometryCollection(null);\\n        geometryCollection.setGeometries(this.geometries_);\\n        return geometryCollection;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    GeometryCollection.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\\n            return minSquaredDistance;\\n        }\\n        var geometries = this.geometries_;\\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\\n            minSquaredDistance = geometries[i].closestPointXY(x, y, closestPoint, minSquaredDistance);\\n        }\\n        return minSquaredDistance;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    GeometryCollection.prototype.containsXY = function (x, y) {\\n        var geometries = this.geometries_;\\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\\n            if (geometries[i].containsXY(x, y)) {\\n                return true;\\n            }\\n        }\\n        return false;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    GeometryCollection.prototype.computeExtent = function (extent) {\\n        createOrUpdateEmpty(extent);\\n        var geometries = this.geometries_;\\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\\n            extend(extent, geometries[i].getExtent());\\n        }\\n        return extent;\\n    };\\n    /**\\n     * Return the geometries that make up this geometry collection.\\n     * @return {Array<Geometry>} Geometries.\\n     * @api\\n     */\\n    GeometryCollection.prototype.getGeometries = function () {\\n        return cloneGeometries(this.geometries_);\\n    };\\n    /**\\n     * @return {Array<Geometry>} Geometries.\\n     */\\n    GeometryCollection.prototype.getGeometriesArray = function () {\\n        return this.geometries_;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    GeometryCollection.prototype.getSimplifiedGeometry = function (squaredTolerance) {\\n        if (this.simplifiedGeometryRevision != this.getRevision()) {\\n            clear(this.simplifiedGeometryCache);\\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\\n            this.simplifiedGeometryRevision = this.getRevision();\\n        }\\n        if (squaredTolerance < 0 ||\\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\\n                squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\\n            return this;\\n        }\\n        var key = squaredTolerance.toString();\\n        if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\\n            return this.simplifiedGeometryCache[key];\\n        }\\n        else {\\n            var simplifiedGeometries = [];\\n            var geometries = this.geometries_;\\n            var simplified = false;\\n            for (var i = 0, ii = geometries.length; i < ii; ++i) {\\n                var geometry = geometries[i];\\n                var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\\n                simplifiedGeometries.push(simplifiedGeometry);\\n                if (simplifiedGeometry !== geometry) {\\n                    simplified = true;\\n                }\\n            }\\n            if (simplified) {\\n                var simplifiedGeometryCollection = new GeometryCollection(null);\\n                simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\\n                this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\\n                return simplifiedGeometryCollection;\\n            }\\n            else {\\n                this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\\n                return this;\\n            }\\n        }\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    GeometryCollection.prototype.getType = function () {\\n        return GeometryType.GEOMETRY_COLLECTION;\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    GeometryCollection.prototype.intersectsExtent = function (extent) {\\n        var geometries = this.geometries_;\\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\\n            if (geometries[i].intersectsExtent(extent)) {\\n                return true;\\n            }\\n        }\\n        return false;\\n    };\\n    /**\\n     * @return {boolean} Is empty.\\n     */\\n    GeometryCollection.prototype.isEmpty = function () {\\n        return this.geometries_.length === 0;\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    GeometryCollection.prototype.rotate = function (angle, anchor) {\\n        var geometries = this.geometries_;\\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\\n            geometries[i].rotate(angle, anchor);\\n        }\\n        this.changed();\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    GeometryCollection.prototype.scale = function (sx, opt_sy, opt_anchor) {\\n        var anchor = opt_anchor;\\n        if (!anchor) {\\n            anchor = getCenter(this.getExtent());\\n        }\\n        var geometries = this.geometries_;\\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\\n            geometries[i].scale(sx, opt_sy, anchor);\\n        }\\n        this.changed();\\n    };\\n    /**\\n     * Set the geometries that make up this geometry collection.\\n     * @param {Array<Geometry>} geometries Geometries.\\n     * @api\\n     */\\n    GeometryCollection.prototype.setGeometries = function (geometries) {\\n        this.setGeometriesArray(cloneGeometries(geometries));\\n    };\\n    /**\\n     * @param {Array<Geometry>} geometries Geometries.\\n     */\\n    GeometryCollection.prototype.setGeometriesArray = function (geometries) {\\n        this.unlistenGeometriesChange_();\\n        this.geometries_ = geometries;\\n        this.listenGeometriesChange_();\\n        this.changed();\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    GeometryCollection.prototype.applyTransform = function (transformFn) {\\n        var geometries = this.geometries_;\\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\\n            geometries[i].applyTransform(transformFn);\\n        }\\n        this.changed();\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    GeometryCollection.prototype.translate = function (deltaX, deltaY) {\\n        var geometries = this.geometries_;\\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\\n            geometries[i].translate(deltaX, deltaY);\\n        }\\n        this.changed();\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    GeometryCollection.prototype.disposeInternal = function () {\\n        this.unlistenGeometriesChange_();\\n        _super.prototype.disposeInternal.call(this);\\n    };\\n    return GeometryCollection;\\n}(Geometry));\\n/**\\n * @param {Array<Geometry>} geometries Geometries.\\n * @return {Array<Geometry>} Cloned geometries.\\n */\\nfunction cloneGeometries(geometries) {\\n    var clonedGeometries = [];\\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\\n        clonedGeometries.push(geometries[i].clone());\\n    }\\n    return clonedGeometries;\\n}\\nexport default GeometryCollection;\\n//# sourceMappingURL=GeometryCollection.js.map\",\"/**\\n * @module ol/geom/flat/interpolate\\n */\\nimport { binarySearch } from '../../array.js';\\nimport { lerp } from '../../math.js';\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @param {number} fraction Fraction.\\n * @param {Array<number>=} opt_dest Destination.\\n * @return {Array<number>} Destination.\\n */\\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest) {\\n    var pointX = NaN;\\n    var pointY = NaN;\\n    var n = (end - offset) / stride;\\n    if (n === 1) {\\n        pointX = flatCoordinates[offset];\\n        pointY = flatCoordinates[offset + 1];\\n    }\\n    else if (n == 2) {\\n        pointX = (1 - fraction) * flatCoordinates[offset] +\\n            fraction * flatCoordinates[offset + stride];\\n        pointY = (1 - fraction) * flatCoordinates[offset + 1] +\\n            fraction * flatCoordinates[offset + stride + 1];\\n    }\\n    else if (n !== 0) {\\n        var x1 = flatCoordinates[offset];\\n        var y1 = flatCoordinates[offset + 1];\\n        var length_1 = 0;\\n        var cumulativeLengths = [0];\\n        for (var i = offset + stride; i < end; i += stride) {\\n            var x2 = flatCoordinates[i];\\n            var y2 = flatCoordinates[i + 1];\\n            length_1 += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\\n            cumulativeLengths.push(length_1);\\n            x1 = x2;\\n            y1 = y2;\\n        }\\n        var target = fraction * length_1;\\n        var index = binarySearch(cumulativeLengths, target);\\n        if (index < 0) {\\n            var t = (target - cumulativeLengths[-index - 2]) /\\n                (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\\n            var o = offset + (-index - 2) * stride;\\n            pointX = lerp(flatCoordinates[o], flatCoordinates[o + stride], t);\\n            pointY = lerp(flatCoordinates[o + 1], flatCoordinates[o + stride + 1], t);\\n        }\\n        else {\\n            pointX = flatCoordinates[offset + index * stride];\\n            pointY = flatCoordinates[offset + index * stride + 1];\\n        }\\n    }\\n    if (opt_dest) {\\n        opt_dest[0] = pointX;\\n        opt_dest[1] = pointY;\\n        return opt_dest;\\n    }\\n    else {\\n        return [pointX, pointY];\\n    }\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @param {number} m M.\\n * @param {boolean} extrapolate Extrapolate.\\n * @return {import(\\\"../../coordinate.js\\\").Coordinate} Coordinate.\\n */\\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\\n    if (end == offset) {\\n        return null;\\n    }\\n    var coordinate;\\n    if (m < flatCoordinates[offset + stride - 1]) {\\n        if (extrapolate) {\\n            coordinate = flatCoordinates.slice(offset, offset + stride);\\n            coordinate[stride - 1] = m;\\n            return coordinate;\\n        }\\n        else {\\n            return null;\\n        }\\n    }\\n    else if (flatCoordinates[end - 1] < m) {\\n        if (extrapolate) {\\n            coordinate = flatCoordinates.slice(end - stride, end);\\n            coordinate[stride - 1] = m;\\n            return coordinate;\\n        }\\n        else {\\n            return null;\\n        }\\n    }\\n    // FIXME use O(1) search\\n    if (m == flatCoordinates[offset + stride - 1]) {\\n        return flatCoordinates.slice(offset, offset + stride);\\n    }\\n    var lo = offset / stride;\\n    var hi = end / stride;\\n    while (lo < hi) {\\n        var mid = (lo + hi) >> 1;\\n        if (m < flatCoordinates[(mid + 1) * stride - 1]) {\\n            hi = mid;\\n        }\\n        else {\\n            lo = mid + 1;\\n        }\\n    }\\n    var m0 = flatCoordinates[lo * stride - 1];\\n    if (m == m0) {\\n        return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\\n    }\\n    var m1 = flatCoordinates[(lo + 1) * stride - 1];\\n    var t = (m - m0) / (m1 - m0);\\n    coordinate = [];\\n    for (var i = 0; i < stride - 1; ++i) {\\n        coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i], flatCoordinates[lo * stride + i], t));\\n    }\\n    coordinate.push(m);\\n    return coordinate;\\n}\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<number>} ends Ends.\\n * @param {number} stride Stride.\\n * @param {number} m M.\\n * @param {boolean} extrapolate Extrapolate.\\n * @param {boolean} interpolate Interpolate.\\n * @return {import(\\\"../../coordinate.js\\\").Coordinate} Coordinate.\\n */\\nexport function lineStringsCoordinateAtM(flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\\n    if (interpolate) {\\n        return lineStringCoordinateAtM(flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\\n    }\\n    var coordinate;\\n    if (m < flatCoordinates[stride - 1]) {\\n        if (extrapolate) {\\n            coordinate = flatCoordinates.slice(0, stride);\\n            coordinate[stride - 1] = m;\\n            return coordinate;\\n        }\\n        else {\\n            return null;\\n        }\\n    }\\n    if (flatCoordinates[flatCoordinates.length - 1] < m) {\\n        if (extrapolate) {\\n            coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\\n            coordinate[stride - 1] = m;\\n            return coordinate;\\n        }\\n        else {\\n            return null;\\n        }\\n    }\\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\\n        var end = ends[i];\\n        if (offset == end) {\\n            continue;\\n        }\\n        if (m < flatCoordinates[offset + stride - 1]) {\\n            return null;\\n        }\\n        else if (m <= flatCoordinates[end - 1]) {\\n            return lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, false);\\n        }\\n        offset = end;\\n    }\\n    return null;\\n}\\n//# sourceMappingURL=interpolate.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/geom/LineString\\n */\\nimport { extend } from '../array.js';\\nimport { closestSquaredDistanceXY } from '../extent.js';\\nimport GeometryLayout from './GeometryLayout.js';\\nimport GeometryType from './GeometryType.js';\\nimport SimpleGeometry from './SimpleGeometry.js';\\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\\nimport { deflateCoordinates } from './flat/deflate.js';\\nimport { inflateCoordinates } from './flat/inflate.js';\\nimport { interpolatePoint, lineStringCoordinateAtM } from './flat/interpolate.js';\\nimport { intersectsLineString } from './flat/intersectsextent.js';\\nimport { lineStringLength } from './flat/length.js';\\nimport { forEach as forEachSegment } from './flat/segments.js';\\nimport { douglasPeucker } from './flat/simplify.js';\\n/**\\n * @classdesc\\n * Linestring geometry.\\n *\\n * @api\\n */\\nvar LineString = /** @class */ (function (_super) {\\n    __extends(LineString, _super);\\n    /**\\n     * @param {Array<import(\\\"../coordinate.js\\\").Coordinate>|Array<number>} coordinates Coordinates.\\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\\n     * @param {GeometryLayout=} opt_layout Layout.\\n     */\\n    function LineString(coordinates, opt_layout) {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * @private\\n         * @type {import(\\\"../coordinate.js\\\").Coordinate}\\n         */\\n        _this.flatMidpoint_ = null;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.flatMidpointRevision_ = -1;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.maxDelta_ = -1;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.maxDeltaRevision_ = -1;\\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\\n        }\\n        else {\\n            _this.setCoordinates(/** @type {Array<import(\\\"../coordinate.js\\\").Coordinate>} */ (coordinates), opt_layout);\\n        }\\n        return _this;\\n    }\\n    /**\\n     * Append the passed coordinate to the coordinates of the linestring.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate} coordinate Coordinate.\\n     * @api\\n     */\\n    LineString.prototype.appendCoordinate = function (coordinate) {\\n        if (!this.flatCoordinates) {\\n            this.flatCoordinates = coordinate.slice();\\n        }\\n        else {\\n            extend(this.flatCoordinates, coordinate);\\n        }\\n        this.changed();\\n    };\\n    /**\\n     * Make a complete copy of the geometry.\\n     * @return {!LineString} Clone.\\n     * @override\\n     * @api\\n     */\\n    LineString.prototype.clone = function () {\\n        return new LineString(this.flatCoordinates.slice(), this.layout);\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    LineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\\n            return minSquaredDistance;\\n        }\\n        if (this.maxDeltaRevision_ != this.getRevision()) {\\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\\n            this.maxDeltaRevision_ = this.getRevision();\\n        }\\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\\n    };\\n    /**\\n     * Iterate over each segment, calling the provided callback.\\n     * If the callback returns a truthy value the function returns that\\n     * value immediately. Otherwise the function returns `false`.\\n     *\\n     * @param {function(this: S, import(\\\"../coordinate.js\\\").Coordinate, import(\\\"../coordinate.js\\\").Coordinate): T} callback Function\\n     *     called for each segment.\\n     * @return {T|boolean} Value.\\n     * @template T,S\\n     * @api\\n     */\\n    LineString.prototype.forEachSegment = function (callback) {\\n        return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\\n    };\\n    /**\\n     * Returns the coordinate at `m` using linear interpolation, or `null` if no\\n     * such coordinate exists.\\n     *\\n     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\\n     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\\n     * M will return the first coordinate and Ms greater than the last M will\\n     * return the last coordinate.\\n     *\\n     * @param {number} m M.\\n     * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\\n     * @return {import(\\\"../coordinate.js\\\").Coordinate} Coordinate.\\n     * @api\\n     */\\n    LineString.prototype.getCoordinateAtM = function (m, opt_extrapolate) {\\n        if (this.layout != GeometryLayout.XYM &&\\n            this.layout != GeometryLayout.XYZM) {\\n            return null;\\n        }\\n        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\\n        return lineStringCoordinateAtM(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, m, extrapolate);\\n    };\\n    /**\\n     * Return the coordinates of the linestring.\\n     * @return {Array<import(\\\"../coordinate.js\\\").Coordinate>} Coordinates.\\n     * @override\\n     * @api\\n     */\\n    LineString.prototype.getCoordinates = function () {\\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\\n    };\\n    /**\\n     * Return the coordinate at the provided fraction along the linestring.\\n     * The `fraction` is a number between 0 and 1, where 0 is the start of the\\n     * linestring and 1 is the end.\\n     * @param {number} fraction Fraction.\\n     * @param {import(\\\"../coordinate.js\\\").Coordinate=} opt_dest Optional coordinate whose values will\\n     *     be modified. If not provided, a new coordinate will be returned.\\n     * @return {import(\\\"../coordinate.js\\\").Coordinate} Coordinate of the interpolated point.\\n     * @api\\n     */\\n    LineString.prototype.getCoordinateAt = function (fraction, opt_dest) {\\n        return interpolatePoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, fraction, opt_dest);\\n    };\\n    /**\\n     * Return the length of the linestring on projected plane.\\n     * @return {number} Length (on projected plane).\\n     * @api\\n     */\\n    LineString.prototype.getLength = function () {\\n        return lineStringLength(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\\n    };\\n    /**\\n     * @return {Array<number>} Flat midpoint.\\n     */\\n    LineString.prototype.getFlatMidpoint = function () {\\n        if (this.flatMidpointRevision_ != this.getRevision()) {\\n            this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\\n            this.flatMidpointRevision_ = this.getRevision();\\n        }\\n        return this.flatMidpoint_;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    LineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\\n        var simplifiedFlatCoordinates = [];\\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\\n        return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    LineString.prototype.getType = function () {\\n        return GeometryType.LINE_STRING;\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    LineString.prototype.intersectsExtent = function (extent) {\\n        return intersectsLineString(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\\n    };\\n    /**\\n     * Set the coordinates of the linestring.\\n     * @param {!Array<import(\\\"../coordinate.js\\\").Coordinate>} coordinates Coordinates.\\n     * @param {GeometryLayout=} opt_layout Layout.\\n     * @override\\n     * @api\\n     */\\n    LineString.prototype.setCoordinates = function (coordinates, opt_layout) {\\n        this.setLayout(opt_layout, coordinates, 1);\\n        if (!this.flatCoordinates) {\\n            this.flatCoordinates = [];\\n        }\\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\\n        this.changed();\\n    };\\n    return LineString;\\n}(SimpleGeometry));\\nexport default LineString;\\n//# sourceMappingURL=LineString.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/geom/MultiLineString\\n */\\nimport { extend } from '../array.js';\\nimport { closestSquaredDistanceXY } from '../extent.js';\\nimport GeometryLayout from './GeometryLayout.js';\\nimport GeometryType from './GeometryType.js';\\nimport LineString from './LineString.js';\\nimport SimpleGeometry from './SimpleGeometry.js';\\nimport { assignClosestArrayPoint, arrayMaxSquaredDelta } from './flat/closest.js';\\nimport { deflateCoordinatesArray } from './flat/deflate.js';\\nimport { inflateCoordinatesArray } from './flat/inflate.js';\\nimport { interpolatePoint, lineStringsCoordinateAtM } from './flat/interpolate.js';\\nimport { intersectsLineStringArray } from './flat/intersectsextent.js';\\nimport { douglasPeuckerArray } from './flat/simplify.js';\\n/**\\n * @classdesc\\n * Multi-linestring geometry.\\n *\\n * @api\\n */\\nvar MultiLineString = /** @class */ (function (_super) {\\n    __extends(MultiLineString, _super);\\n    /**\\n     * @param {Array<Array<import(\\\"../coordinate.js\\\").Coordinate>|LineString>|Array<number>} coordinates\\n     *     Coordinates or LineString geometries. (For internal use, flat coordinates in\\n     *     combination with `opt_layout` and `opt_ends` are also accepted.)\\n     * @param {GeometryLayout=} opt_layout Layout.\\n     * @param {Array<number>=} opt_ends Flat coordinate ends for internal use.\\n     */\\n    function MultiLineString(coordinates, opt_layout, opt_ends) {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * @type {Array<number>}\\n         * @private\\n         */\\n        _this.ends_ = [];\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.maxDelta_ = -1;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.maxDeltaRevision_ = -1;\\n        if (Array.isArray(coordinates[0])) {\\n            _this.setCoordinates(/** @type {Array<Array<import(\\\"../coordinate.js\\\").Coordinate>>} */ (coordinates), opt_layout);\\n        }\\n        else if (opt_layout !== undefined && opt_ends) {\\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\\n            _this.ends_ = opt_ends;\\n        }\\n        else {\\n            var layout = _this.getLayout();\\n            var lineStrings = /** @type {Array<LineString>} */ (coordinates);\\n            var flatCoordinates = [];\\n            var ends = [];\\n            for (var i = 0, ii = lineStrings.length; i < ii; ++i) {\\n                var lineString = lineStrings[i];\\n                if (i === 0) {\\n                    layout = lineString.getLayout();\\n                }\\n                extend(flatCoordinates, lineString.getFlatCoordinates());\\n                ends.push(flatCoordinates.length);\\n            }\\n            _this.setFlatCoordinates(layout, flatCoordinates);\\n            _this.ends_ = ends;\\n        }\\n        return _this;\\n    }\\n    /**\\n     * Append the passed linestring to the multilinestring.\\n     * @param {LineString} lineString LineString.\\n     * @api\\n     */\\n    MultiLineString.prototype.appendLineString = function (lineString) {\\n        if (!this.flatCoordinates) {\\n            this.flatCoordinates = lineString.getFlatCoordinates().slice();\\n        }\\n        else {\\n            extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\\n        }\\n        this.ends_.push(this.flatCoordinates.length);\\n        this.changed();\\n    };\\n    /**\\n     * Make a complete copy of the geometry.\\n     * @return {!MultiLineString} Clone.\\n     * @override\\n     * @api\\n     */\\n    MultiLineString.prototype.clone = function () {\\n        return new MultiLineString(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    MultiLineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\\n            return minSquaredDistance;\\n        }\\n        if (this.maxDeltaRevision_ != this.getRevision()) {\\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\\n            this.maxDeltaRevision_ = this.getRevision();\\n        }\\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\\n    };\\n    /**\\n     * Returns the coordinate at `m` using linear interpolation, or `null` if no\\n     * such coordinate exists.\\n     *\\n     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\\n     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\\n     * M will return the first coordinate and Ms greater than the last M will\\n     * return the last coordinate.\\n     *\\n     * `opt_interpolate` controls interpolation between consecutive LineStrings\\n     * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\\n     * will be linearly interpolated between the last coordinate of one LineString\\n     * and the first coordinate of the next LineString.  If `opt_interpolate` is\\n     * `false` then the function will return `null` for Ms falling between\\n     * LineStrings.\\n     *\\n     * @param {number} m M.\\n     * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\\n     * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\\n     * @return {import(\\\"../coordinate.js\\\").Coordinate} Coordinate.\\n     * @api\\n     */\\n    MultiLineString.prototype.getCoordinateAtM = function (m, opt_extrapolate, opt_interpolate) {\\n        if ((this.layout != GeometryLayout.XYM &&\\n            this.layout != GeometryLayout.XYZM) ||\\n            this.flatCoordinates.length === 0) {\\n            return null;\\n        }\\n        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\\n        var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\\n        return lineStringsCoordinateAtM(this.flatCoordinates, 0, this.ends_, this.stride, m, extrapolate, interpolate);\\n    };\\n    /**\\n     * Return the coordinates of the multilinestring.\\n     * @return {Array<Array<import(\\\"../coordinate.js\\\").Coordinate>>} Coordinates.\\n     * @override\\n     * @api\\n     */\\n    MultiLineString.prototype.getCoordinates = function () {\\n        return inflateCoordinatesArray(this.flatCoordinates, 0, this.ends_, this.stride);\\n    };\\n    /**\\n     * @return {Array<number>} Ends.\\n     */\\n    MultiLineString.prototype.getEnds = function () {\\n        return this.ends_;\\n    };\\n    /**\\n     * Return the linestring at the specified index.\\n     * @param {number} index Index.\\n     * @return {LineString} LineString.\\n     * @api\\n     */\\n    MultiLineString.prototype.getLineString = function (index) {\\n        if (index < 0 || this.ends_.length <= index) {\\n            return null;\\n        }\\n        return new LineString(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\\n    };\\n    /**\\n     * Return the linestrings of this multilinestring.\\n     * @return {Array<LineString>} LineStrings.\\n     * @api\\n     */\\n    MultiLineString.prototype.getLineStrings = function () {\\n        var flatCoordinates = this.flatCoordinates;\\n        var ends = this.ends_;\\n        var layout = this.layout;\\n        /** @type {Array<LineString>} */\\n        var lineStrings = [];\\n        var offset = 0;\\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\\n            var end = ends[i];\\n            var lineString = new LineString(flatCoordinates.slice(offset, end), layout);\\n            lineStrings.push(lineString);\\n            offset = end;\\n        }\\n        return lineStrings;\\n    };\\n    /**\\n     * @return {Array<number>} Flat midpoints.\\n     */\\n    MultiLineString.prototype.getFlatMidpoints = function () {\\n        var midpoints = [];\\n        var flatCoordinates = this.flatCoordinates;\\n        var offset = 0;\\n        var ends = this.ends_;\\n        var stride = this.stride;\\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\\n            var end = ends[i];\\n            var midpoint = interpolatePoint(flatCoordinates, offset, end, stride, 0.5);\\n            extend(midpoints, midpoint);\\n            offset = end;\\n        }\\n        return midpoints;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    MultiLineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\\n        var simplifiedFlatCoordinates = [];\\n        var simplifiedEnds = [];\\n        simplifiedFlatCoordinates.length = douglasPeuckerArray(this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0, simplifiedEnds);\\n        return new MultiLineString(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    MultiLineString.prototype.getType = function () {\\n        return GeometryType.MULTI_LINE_STRING;\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    MultiLineString.prototype.intersectsExtent = function (extent) {\\n        return intersectsLineStringArray(this.flatCoordinates, 0, this.ends_, this.stride, extent);\\n    };\\n    /**\\n     * Set the coordinates of the multilinestring.\\n     * @param {!Array<Array<import(\\\"../coordinate.js\\\").Coordinate>>} coordinates Coordinates.\\n     * @param {GeometryLayout=} opt_layout Layout.\\n     * @override\\n     * @api\\n     */\\n    MultiLineString.prototype.setCoordinates = function (coordinates, opt_layout) {\\n        this.setLayout(opt_layout, coordinates, 2);\\n        if (!this.flatCoordinates) {\\n            this.flatCoordinates = [];\\n        }\\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\\n        this.changed();\\n    };\\n    return MultiLineString;\\n}(SimpleGeometry));\\nexport default MultiLineString;\\n//# sourceMappingURL=MultiLineString.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/geom/MultiPoint\\n */\\nimport { extend } from '../array.js';\\nimport { closestSquaredDistanceXY, containsXY } from '../extent.js';\\nimport GeometryType from './GeometryType.js';\\nimport Point from './Point.js';\\nimport SimpleGeometry from './SimpleGeometry.js';\\nimport { deflateCoordinates } from './flat/deflate.js';\\nimport { inflateCoordinates } from './flat/inflate.js';\\nimport { squaredDistance as squaredDx } from '../math.js';\\n/**\\n * @classdesc\\n * Multi-point geometry.\\n *\\n * @api\\n */\\nvar MultiPoint = /** @class */ (function (_super) {\\n    __extends(MultiPoint, _super);\\n    /**\\n     * @param {Array<import(\\\"../coordinate.js\\\").Coordinate>|Array<number>} coordinates Coordinates.\\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\\n     * @param {import(\\\"./GeometryLayout.js\\\").default=} opt_layout Layout.\\n     */\\n    function MultiPoint(coordinates, opt_layout) {\\n        var _this = _super.call(this) || this;\\n        if (opt_layout && !Array.isArray(coordinates[0])) {\\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\\n        }\\n        else {\\n            _this.setCoordinates(/** @type {Array<import(\\\"../coordinate.js\\\").Coordinate>} */ (coordinates), opt_layout);\\n        }\\n        return _this;\\n    }\\n    /**\\n     * Append the passed point to this multipoint.\\n     * @param {Point} point Point.\\n     * @api\\n     */\\n    MultiPoint.prototype.appendPoint = function (point) {\\n        if (!this.flatCoordinates) {\\n            this.flatCoordinates = point.getFlatCoordinates().slice();\\n        }\\n        else {\\n            extend(this.flatCoordinates, point.getFlatCoordinates());\\n        }\\n        this.changed();\\n    };\\n    /**\\n     * Make a complete copy of the geometry.\\n     * @return {!MultiPoint} Clone.\\n     * @override\\n     * @api\\n     */\\n    MultiPoint.prototype.clone = function () {\\n        var multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\\n        return multiPoint;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    MultiPoint.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\\n            return minSquaredDistance;\\n        }\\n        var flatCoordinates = this.flatCoordinates;\\n        var stride = this.stride;\\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\\n            var squaredDistance = squaredDx(x, y, flatCoordinates[i], flatCoordinates[i + 1]);\\n            if (squaredDistance < minSquaredDistance) {\\n                minSquaredDistance = squaredDistance;\\n                for (var j = 0; j < stride; ++j) {\\n                    closestPoint[j] = flatCoordinates[i + j];\\n                }\\n                closestPoint.length = stride;\\n            }\\n        }\\n        return minSquaredDistance;\\n    };\\n    /**\\n     * Return the coordinates of the multipoint.\\n     * @return {Array<import(\\\"../coordinate.js\\\").Coordinate>} Coordinates.\\n     * @override\\n     * @api\\n     */\\n    MultiPoint.prototype.getCoordinates = function () {\\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\\n    };\\n    /**\\n     * Return the point at the specified index.\\n     * @param {number} index Index.\\n     * @return {Point} Point.\\n     * @api\\n     */\\n    MultiPoint.prototype.getPoint = function (index) {\\n        var n = !this.flatCoordinates ? 0 : this.flatCoordinates.length / this.stride;\\n        if (index < 0 || n <= index) {\\n            return null;\\n        }\\n        return new Point(this.flatCoordinates.slice(index * this.stride, (index + 1) * this.stride), this.layout);\\n    };\\n    /**\\n     * Return the points of this multipoint.\\n     * @return {Array<Point>} Points.\\n     * @api\\n     */\\n    MultiPoint.prototype.getPoints = function () {\\n        var flatCoordinates = this.flatCoordinates;\\n        var layout = this.layout;\\n        var stride = this.stride;\\n        /** @type {Array<Point>} */\\n        var points = [];\\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\\n            var point = new Point(flatCoordinates.slice(i, i + stride), layout);\\n            points.push(point);\\n        }\\n        return points;\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    MultiPoint.prototype.getType = function () {\\n        return GeometryType.MULTI_POINT;\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    MultiPoint.prototype.intersectsExtent = function (extent) {\\n        var flatCoordinates = this.flatCoordinates;\\n        var stride = this.stride;\\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\\n            var x = flatCoordinates[i];\\n            var y = flatCoordinates[i + 1];\\n            if (containsXY(extent, x, y)) {\\n                return true;\\n            }\\n        }\\n        return false;\\n    };\\n    /**\\n     * Set the coordinates of the multipoint.\\n     * @param {!Array<import(\\\"../coordinate.js\\\").Coordinate>} coordinates Coordinates.\\n     * @param {import(\\\"./GeometryLayout.js\\\").default=} opt_layout Layout.\\n     * @override\\n     * @api\\n     */\\n    MultiPoint.prototype.setCoordinates = function (coordinates, opt_layout) {\\n        this.setLayout(opt_layout, coordinates, 1);\\n        if (!this.flatCoordinates) {\\n            this.flatCoordinates = [];\\n        }\\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\\n        this.changed();\\n    };\\n    return MultiPoint;\\n}(SimpleGeometry));\\nexport default MultiPoint;\\n//# sourceMappingURL=MultiPoint.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/geom/MultiPolygon\\n */\\nimport { extend } from '../array.js';\\nimport { closestSquaredDistanceXY } from '../extent.js';\\nimport GeometryLayout from './GeometryLayout.js';\\nimport GeometryType from './GeometryType.js';\\nimport MultiPoint from './MultiPoint.js';\\nimport Polygon from './Polygon.js';\\nimport SimpleGeometry from './SimpleGeometry.js';\\nimport { linearRingss as linearRingssArea } from './flat/area.js';\\nimport { linearRingss as linearRingssCenter } from './flat/center.js';\\nimport { assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta } from './flat/closest.js';\\nimport { linearRingssContainsXY } from './flat/contains.js';\\nimport { deflateMultiCoordinatesArray } from './flat/deflate.js';\\nimport { inflateMultiCoordinatesArray } from './flat/inflate.js';\\nimport { getInteriorPointsOfMultiArray } from './flat/interiorpoint.js';\\nimport { intersectsLinearRingMultiArray } from './flat/intersectsextent.js';\\nimport { linearRingssAreOriented, orientLinearRingsArray } from './flat/orient.js';\\nimport { quantizeMultiArray } from './flat/simplify.js';\\n/**\\n * @classdesc\\n * Multi-polygon geometry.\\n *\\n * @api\\n */\\nvar MultiPolygon = /** @class */ (function (_super) {\\n    __extends(MultiPolygon, _super);\\n    /**\\n     * @param {Array<Array<Array<import(\\\"../coordinate.js\\\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\\n     *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\\n     * @param {GeometryLayout=} opt_layout Layout.\\n     * @param {Array<Array<number>>=} opt_endss Array of ends for internal use with flat coordinates.\\n     */\\n    function MultiPolygon(coordinates, opt_layout, opt_endss) {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * @type {Array<Array<number>>}\\n         * @private\\n         */\\n        _this.endss_ = [];\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.flatInteriorPointsRevision_ = -1;\\n        /**\\n         * @private\\n         * @type {Array<number>}\\n         */\\n        _this.flatInteriorPoints_ = null;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.maxDelta_ = -1;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.maxDeltaRevision_ = -1;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        _this.orientedRevision_ = -1;\\n        /**\\n         * @private\\n         * @type {Array<number>}\\n         */\\n        _this.orientedFlatCoordinates_ = null;\\n        if (!opt_endss && !Array.isArray(coordinates[0])) {\\n            var layout = _this.getLayout();\\n            var polygons = /** @type {Array<Polygon>} */ (coordinates);\\n            var flatCoordinates = [];\\n            var endss = [];\\n            for (var i = 0, ii = polygons.length; i < ii; ++i) {\\n                var polygon = polygons[i];\\n                if (i === 0) {\\n                    layout = polygon.getLayout();\\n                }\\n                var offset = flatCoordinates.length;\\n                var ends = polygon.getEnds();\\n                for (var j = 0, jj = ends.length; j < jj; ++j) {\\n                    ends[j] += offset;\\n                }\\n                extend(flatCoordinates, polygon.getFlatCoordinates());\\n                endss.push(ends);\\n            }\\n            opt_layout = layout;\\n            coordinates = flatCoordinates;\\n            opt_endss = endss;\\n        }\\n        if (opt_layout !== undefined && opt_endss) {\\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\\n            _this.endss_ = opt_endss;\\n        }\\n        else {\\n            _this.setCoordinates(/** @type {Array<Array<Array<import(\\\"../coordinate.js\\\").Coordinate>>>} */ (coordinates), opt_layout);\\n        }\\n        return _this;\\n    }\\n    /**\\n     * Append the passed polygon to this multipolygon.\\n     * @param {Polygon} polygon Polygon.\\n     * @api\\n     */\\n    MultiPolygon.prototype.appendPolygon = function (polygon) {\\n        /** @type {Array<number>} */\\n        var ends;\\n        if (!this.flatCoordinates) {\\n            this.flatCoordinates = polygon.getFlatCoordinates().slice();\\n            ends = polygon.getEnds().slice();\\n            this.endss_.push();\\n        }\\n        else {\\n            var offset = this.flatCoordinates.length;\\n            extend(this.flatCoordinates, polygon.getFlatCoordinates());\\n            ends = polygon.getEnds().slice();\\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\\n                ends[i] += offset;\\n            }\\n        }\\n        this.endss_.push(ends);\\n        this.changed();\\n    };\\n    /**\\n     * Make a complete copy of the geometry.\\n     * @return {!MultiPolygon} Clone.\\n     * @override\\n     * @api\\n     */\\n    MultiPolygon.prototype.clone = function () {\\n        var len = this.endss_.length;\\n        var newEndss = new Array(len);\\n        for (var i = 0; i < len; ++i) {\\n            newEndss[i] = this.endss_[i].slice();\\n        }\\n        return new MultiPolygon(this.flatCoordinates.slice(), this.layout, newEndss);\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    MultiPolygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\\n            return minSquaredDistance;\\n        }\\n        if (this.maxDeltaRevision_ != this.getRevision()) {\\n            this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(this.flatCoordinates, 0, this.endss_, this.stride, 0));\\n            this.maxDeltaRevision_ = this.getRevision();\\n        }\\n        return assignClosestMultiArrayPoint(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    MultiPolygon.prototype.containsXY = function (x, y) {\\n        return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\\n    };\\n    /**\\n     * Return the area of the multipolygon on projected plane.\\n     * @return {number} Area (on projected plane).\\n     * @api\\n     */\\n    MultiPolygon.prototype.getArea = function () {\\n        return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\\n    };\\n    /**\\n     * Get the coordinate array for this geometry.  This array has the structure\\n     * of a GeoJSON coordinate array for multi-polygons.\\n     *\\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\\n     *     If `false`, coordinates will be oriented according to the left-hand rule\\n     *     (clockwise for exterior and counter-clockwise for interior rings).\\n     *     By default, coordinate orientation will depend on how the geometry was\\n     *     constructed.\\n     * @return {Array<Array<Array<import(\\\"../coordinate.js\\\").Coordinate>>>} Coordinates.\\n     * @override\\n     * @api\\n     */\\n    MultiPolygon.prototype.getCoordinates = function (opt_right) {\\n        var flatCoordinates;\\n        if (opt_right !== undefined) {\\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\\n            orientLinearRingsArray(flatCoordinates, 0, this.endss_, this.stride, opt_right);\\n        }\\n        else {\\n            flatCoordinates = this.flatCoordinates;\\n        }\\n        return inflateMultiCoordinatesArray(flatCoordinates, 0, this.endss_, this.stride);\\n    };\\n    /**\\n     * @return {Array<Array<number>>} Endss.\\n     */\\n    MultiPolygon.prototype.getEndss = function () {\\n        return this.endss_;\\n    };\\n    /**\\n     * @return {Array<number>} Flat interior points.\\n     */\\n    MultiPolygon.prototype.getFlatInteriorPoints = function () {\\n        if (this.flatInteriorPointsRevision_ != this.getRevision()) {\\n            var flatCenters = linearRingssCenter(this.flatCoordinates, 0, this.endss_, this.stride);\\n            this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, flatCenters);\\n            this.flatInteriorPointsRevision_ = this.getRevision();\\n        }\\n        return this.flatInteriorPoints_;\\n    };\\n    /**\\n     * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\\n     * @return {MultiPoint} Interior points as XYM coordinates, where M is\\n     * the length of the horizontal intersection that the point belongs to.\\n     * @api\\n     */\\n    MultiPolygon.prototype.getInteriorPoints = function () {\\n        return new MultiPoint(this.getFlatInteriorPoints().slice(), GeometryLayout.XYM);\\n    };\\n    /**\\n     * @return {Array<number>} Oriented flat coordinates.\\n     */\\n    MultiPolygon.prototype.getOrientedFlatCoordinates = function () {\\n        if (this.orientedRevision_ != this.getRevision()) {\\n            var flatCoordinates = this.flatCoordinates;\\n            if (linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)) {\\n                this.orientedFlatCoordinates_ = flatCoordinates;\\n            }\\n            else {\\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\\n                this.orientedFlatCoordinates_.length =\\n                    orientLinearRingsArray(this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\\n            }\\n            this.orientedRevision_ = this.getRevision();\\n        }\\n        return this.orientedFlatCoordinates_;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    MultiPolygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\\n        var simplifiedFlatCoordinates = [];\\n        var simplifiedEndss = [];\\n        simplifiedFlatCoordinates.length = quantizeMultiArray(this.flatCoordinates, 0, this.endss_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEndss);\\n        return new MultiPolygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEndss);\\n    };\\n    /**\\n     * Return the polygon at the specified index.\\n     * @param {number} index Index.\\n     * @return {Polygon} Polygon.\\n     * @api\\n     */\\n    MultiPolygon.prototype.getPolygon = function (index) {\\n        if (index < 0 || this.endss_.length <= index) {\\n            return null;\\n        }\\n        var offset;\\n        if (index === 0) {\\n            offset = 0;\\n        }\\n        else {\\n            var prevEnds = this.endss_[index - 1];\\n            offset = prevEnds[prevEnds.length - 1];\\n        }\\n        var ends = this.endss_[index].slice();\\n        var end = ends[ends.length - 1];\\n        if (offset !== 0) {\\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\\n                ends[i] -= offset;\\n            }\\n        }\\n        return new Polygon(this.flatCoordinates.slice(offset, end), this.layout, ends);\\n    };\\n    /**\\n     * Return the polygons of this multipolygon.\\n     * @return {Array<Polygon>} Polygons.\\n     * @api\\n     */\\n    MultiPolygon.prototype.getPolygons = function () {\\n        var layout = this.layout;\\n        var flatCoordinates = this.flatCoordinates;\\n        var endss = this.endss_;\\n        var polygons = [];\\n        var offset = 0;\\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\\n            var ends = endss[i].slice();\\n            var end = ends[ends.length - 1];\\n            if (offset !== 0) {\\n                for (var j = 0, jj = ends.length; j < jj; ++j) {\\n                    ends[j] -= offset;\\n                }\\n            }\\n            var polygon = new Polygon(flatCoordinates.slice(offset, end), layout, ends);\\n            polygons.push(polygon);\\n            offset = end;\\n        }\\n        return polygons;\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    MultiPolygon.prototype.getType = function () {\\n        return GeometryType.MULTI_POLYGON;\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    MultiPolygon.prototype.intersectsExtent = function (extent) {\\n        return intersectsLinearRingMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\\n    };\\n    /**\\n     * Set the coordinates of the multipolygon.\\n     * @param {!Array<Array<Array<import(\\\"../coordinate.js\\\").Coordinate>>>} coordinates Coordinates.\\n     * @param {GeometryLayout=} opt_layout Layout.\\n     * @override\\n     * @api\\n     */\\n    MultiPolygon.prototype.setCoordinates = function (coordinates, opt_layout) {\\n        this.setLayout(opt_layout, coordinates, 3);\\n        if (!this.flatCoordinates) {\\n            this.flatCoordinates = [];\\n        }\\n        var endss = deflateMultiCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\\n        if (endss.length === 0) {\\n            this.flatCoordinates.length = 0;\\n        }\\n        else {\\n            var lastEnds = endss[endss.length - 1];\\n            this.flatCoordinates.length = lastEnds.length === 0 ?\\n                0 : lastEnds[lastEnds.length - 1];\\n        }\\n        this.changed();\\n    };\\n    return MultiPolygon;\\n}(SimpleGeometry));\\nexport default MultiPolygon;\\n//# sourceMappingURL=MultiPolygon.js.map\",\"/**\\n * @module ol/geom/flat/center\\n */\\nimport { createEmpty, createOrUpdateFromFlatCoordinates } from '../../extent.js';\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<Array<number>>} endss Endss.\\n * @param {number} stride Stride.\\n * @return {Array<number>} Flat centers.\\n */\\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\\n    var flatCenters = [];\\n    var extent = createEmpty();\\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\\n        var ends = endss[i];\\n        extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\\n        flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\\n        offset = ends[ends.length - 1];\\n    }\\n    return flatCenters;\\n}\\n//# sourceMappingURL=center.js.map\",\"/**\\n * @module ol/format/GeoJSON\\n */\\nvar __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\nimport { assert } from '../asserts.js';\\nimport Feature from '../Feature.js';\\nimport { transformGeometryWithOptions } from './Feature.js';\\nimport JSONFeature from './JSONFeature.js';\\nimport GeometryCollection from '../geom/GeometryCollection.js';\\nimport LineString from '../geom/LineString.js';\\nimport MultiLineString from '../geom/MultiLineString.js';\\nimport MultiPoint from '../geom/MultiPoint.js';\\nimport MultiPolygon from '../geom/MultiPolygon.js';\\nimport Point from '../geom/Point.js';\\nimport Polygon from '../geom/Polygon.js';\\nimport { assign, isEmpty } from '../obj.js';\\nimport { get as getProjection } from '../proj.js';\\nimport GeometryType from '../geom/GeometryType.js';\\n/**\\n * @typedef {import(\\\"geojson\\\").GeoJSON} GeoJSONObject\\n * @typedef {import(\\\"geojson\\\").Feature} GeoJSONFeature\\n * @typedef {import(\\\"geojson\\\").FeatureCollection} GeoJSONFeatureCollection\\n * @typedef {import(\\\"geojson\\\").Geometry} GeoJSONGeometry\\n * @typedef {import(\\\"geojson\\\").Point} GeoJSONPoint\\n * @typedef {import(\\\"geojson\\\").LineString} GeoJSONLineString\\n * @typedef {import(\\\"geojson\\\").Polygon} GeoJSONPolygon\\n * @typedef {import(\\\"geojson\\\").MultiPoint} GeoJSONMultiPoint\\n * @typedef {import(\\\"geojson\\\").MultiLineString} GeoJSONMultiLineString\\n * @typedef {import(\\\"geojson\\\").MultiPolygon} GeoJSONMultiPolygon\\n * @typedef {import(\\\"geojson\\\").GeometryCollection} GeoJSONGeometryCollection\\n */\\n/**\\n * @typedef {Object} Options\\n * @property {import(\\\"../proj.js\\\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\\n * @property {import(\\\"../proj.js\\\").ProjectionLike} [featureProjection] Projection for features read or\\n * written by the format.  Options passed to read or write methods will take precedence.\\n * @property {string} [geometryName] Geometry name to use when creating features.\\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\\n * will look for that field to set the geometry name. If both this field is set to `true`\\n * and a `geometryName` is provided, the `geometryName` will take precedence.\\n */\\n/**\\n * @classdesc\\n * Feature format for reading and writing data in the GeoJSON format.\\n *\\n  * @api\\n */\\nvar GeoJSON = /** @class */ (function (_super) {\\n    __extends(GeoJSON, _super);\\n    /**\\n     * @param {Options=} opt_options Options.\\n     */\\n    function GeoJSON(opt_options) {\\n        var _this = this;\\n        var options = opt_options ? opt_options : {};\\n        _this = _super.call(this) || this;\\n        /**\\n         * @inheritDoc\\n         */\\n        _this.dataProjection = getProjection(options.dataProjection ?\\n            options.dataProjection : 'EPSG:4326');\\n        if (options.featureProjection) {\\n            _this.defaultFeatureProjection = getProjection(options.featureProjection);\\n        }\\n        /**\\n         * Name of the geometry attribute for features.\\n         * @type {string|undefined}\\n         * @private\\n         */\\n        _this.geometryName_ = options.geometryName;\\n        /**\\n         * Look for the geometry name in the feature GeoJSON\\n         * @type {boolean|undefined}\\n         * @private\\n         */\\n        _this.extractGeometryName_ = options.extractGeometryName;\\n        return _this;\\n    }\\n    /**\\n     * @inheritDoc\\n     */\\n    GeoJSON.prototype.readFeatureFromObject = function (object, opt_options) {\\n        /**\\n         * @type {GeoJSONFeature}\\n         */\\n        var geoJSONFeature = null;\\n        if (object['type'] === 'Feature') {\\n            geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\\n        }\\n        else {\\n            geoJSONFeature = {\\n                'type': 'Feature',\\n                'geometry': /** @type {GeoJSONGeometry} */ (object),\\n                'properties': null\\n            };\\n        }\\n        var geometry = readGeometry(geoJSONFeature['geometry'], opt_options);\\n        var feature = new Feature();\\n        if (this.geometryName_) {\\n            feature.setGeometryName(this.geometryName_);\\n        }\\n        else if (this.extractGeometryName_ && 'geometry_name' in geoJSONFeature !== undefined) {\\n            feature.setGeometryName(geoJSONFeature['geometry_name']);\\n        }\\n        feature.setGeometry(geometry);\\n        if ('id' in geoJSONFeature) {\\n            feature.setId(geoJSONFeature['id']);\\n        }\\n        if (geoJSONFeature['properties']) {\\n            feature.setProperties(geoJSONFeature['properties'], true);\\n        }\\n        return feature;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    GeoJSON.prototype.readFeaturesFromObject = function (object, opt_options) {\\n        var geoJSONObject = /** @type {GeoJSONObject} */ (object);\\n        /** @type {Array<import(\\\"../Feature.js\\\").default>} */\\n        var features = null;\\n        if (geoJSONObject['type'] === 'FeatureCollection') {\\n            var geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (object);\\n            features = [];\\n            var geoJSONFeatures = geoJSONFeatureCollection['features'];\\n            for (var i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\\n                features.push(this.readFeatureFromObject(geoJSONFeatures[i], opt_options));\\n            }\\n        }\\n        else {\\n            features = [this.readFeatureFromObject(object, opt_options)];\\n        }\\n        return features;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    GeoJSON.prototype.readGeometryFromObject = function (object, opt_options) {\\n        return readGeometry(/** @type {GeoJSONGeometry} */ (object), opt_options);\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    GeoJSON.prototype.readProjectionFromObject = function (object) {\\n        var crs = object['crs'];\\n        var projection;\\n        if (crs) {\\n            if (crs['type'] == 'name') {\\n                projection = getProjection(crs['properties']['name']);\\n            }\\n            else {\\n                assert(false, 36); // Unknown SRS type\\n            }\\n        }\\n        else {\\n            projection = this.dataProjection;\\n        }\\n        return (\\n        /** @type {import(\\\"../proj/Projection.js\\\").default} */ (projection));\\n    };\\n    /**\\n     * Encode a feature as a GeoJSON Feature object.\\n     *\\n     * @param {import(\\\"../Feature.js\\\").default} feature Feature.\\n     * @param {import(\\\"./Feature.js\\\").WriteOptions=} opt_options Write options.\\n     * @return {GeoJSONFeature} Object.\\n     * @override\\n     * @api\\n     */\\n    GeoJSON.prototype.writeFeatureObject = function (feature, opt_options) {\\n        opt_options = this.adaptOptions(opt_options);\\n        /** @type {GeoJSONFeature} */\\n        var object = {\\n            'type': 'Feature',\\n            geometry: null,\\n            properties: null\\n        };\\n        var id = feature.getId();\\n        if (id !== undefined) {\\n            object.id = id;\\n        }\\n        var geometry = feature.getGeometry();\\n        if (geometry) {\\n            object.geometry = writeGeometry(geometry, opt_options);\\n        }\\n        var properties = feature.getProperties();\\n        delete properties[feature.getGeometryName()];\\n        if (!isEmpty(properties)) {\\n            object.properties = properties;\\n        }\\n        return object;\\n    };\\n    /**\\n     * Encode an array of features as a GeoJSON object.\\n     *\\n     * @param {Array<import(\\\"../Feature.js\\\").default>} features Features.\\n     * @param {import(\\\"./Feature.js\\\").WriteOptions=} opt_options Write options.\\n     * @return {GeoJSONFeatureCollection} GeoJSON Object.\\n     * @override\\n     * @api\\n     */\\n    GeoJSON.prototype.writeFeaturesObject = function (features, opt_options) {\\n        opt_options = this.adaptOptions(opt_options);\\n        var objects = [];\\n        for (var i = 0, ii = features.length; i < ii; ++i) {\\n            objects.push(this.writeFeatureObject(features[i], opt_options));\\n        }\\n        return {\\n            type: 'FeatureCollection',\\n            features: objects\\n        };\\n    };\\n    /**\\n     * Encode a geometry as a GeoJSON object.\\n     *\\n     * @param {import(\\\"../geom/Geometry.js\\\").default} geometry Geometry.\\n     * @param {import(\\\"./Feature.js\\\").WriteOptions=} opt_options Write options.\\n     * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\\n     * @override\\n     * @api\\n     */\\n    GeoJSON.prototype.writeGeometryObject = function (geometry, opt_options) {\\n        return writeGeometry(geometry, this.adaptOptions(opt_options));\\n    };\\n    return GeoJSON;\\n}(JSONFeature));\\n/**\\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\\n * @param {import(\\\"./Feature.js\\\").ReadOptions=} opt_options Read options.\\n * @return {import(\\\"../geom/Geometry.js\\\").default} Geometry.\\n */\\nfunction readGeometry(object, opt_options) {\\n    if (!object) {\\n        return null;\\n    }\\n    /**\\n     * @type {import(\\\"../geom/Geometry.js\\\").default}\\n     */\\n    var geometry;\\n    switch (object['type']) {\\n        case GeometryType.POINT: {\\n            geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\\n            break;\\n        }\\n        case GeometryType.LINE_STRING: {\\n            geometry = readLineStringGeometry(/** @type {GeoJSONLineString} */ (object));\\n            break;\\n        }\\n        case GeometryType.POLYGON: {\\n            geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\\n            break;\\n        }\\n        case GeometryType.MULTI_POINT: {\\n            geometry = readMultiPointGeometry(/** @type {GeoJSONMultiPoint} */ (object));\\n            break;\\n        }\\n        case GeometryType.MULTI_LINE_STRING: {\\n            geometry = readMultiLineStringGeometry(/** @type {GeoJSONMultiLineString} */ (object));\\n            break;\\n        }\\n        case GeometryType.MULTI_POLYGON: {\\n            geometry = readMultiPolygonGeometry(/** @type {GeoJSONMultiPolygon} */ (object));\\n            break;\\n        }\\n        case GeometryType.GEOMETRY_COLLECTION: {\\n            geometry = readGeometryCollectionGeometry(/** @type {GeoJSONGeometryCollection} */ (object));\\n            break;\\n        }\\n        default: {\\n            throw new Error('Unsupported GeoJSON type: ' + object.type);\\n        }\\n    }\\n    return transformGeometryWithOptions(geometry, false, opt_options);\\n}\\n/**\\n * @param {GeoJSONGeometryCollection} object Object.\\n * @param {import(\\\"./Feature.js\\\").ReadOptions=} opt_options Read options.\\n * @return {GeometryCollection} Geometry collection.\\n */\\nfunction readGeometryCollectionGeometry(object, opt_options) {\\n    var geometries = object['geometries'].map(\\n    /**\\n     * @param {GeoJSONGeometry} geometry Geometry.\\n     * @return {import(\\\"../geom/Geometry.js\\\").default} geometry Geometry.\\n     */\\n    function (geometry) {\\n        return readGeometry(geometry, opt_options);\\n    });\\n    return new GeometryCollection(geometries);\\n}\\n/**\\n * @param {GeoJSONPoint} object Object.\\n * @return {Point} Point.\\n */\\nfunction readPointGeometry(object) {\\n    return new Point(object['coordinates']);\\n}\\n/**\\n * @param {GeoJSONLineString} object Object.\\n * @return {LineString} LineString.\\n */\\nfunction readLineStringGeometry(object) {\\n    return new LineString(object['coordinates']);\\n}\\n/**\\n * @param {GeoJSONMultiLineString} object Object.\\n * @return {MultiLineString} MultiLineString.\\n */\\nfunction readMultiLineStringGeometry(object) {\\n    return new MultiLineString(object['coordinates']);\\n}\\n/**\\n * @param {GeoJSONMultiPoint} object Object.\\n * @return {MultiPoint} MultiPoint.\\n */\\nfunction readMultiPointGeometry(object) {\\n    return new MultiPoint(object['coordinates']);\\n}\\n/**\\n * @param {GeoJSONMultiPolygon} object Object.\\n * @return {MultiPolygon} MultiPolygon.\\n */\\nfunction readMultiPolygonGeometry(object) {\\n    return new MultiPolygon(object['coordinates']);\\n}\\n/**\\n * @param {GeoJSONPolygon} object Object.\\n * @return {Polygon} Polygon.\\n */\\nfunction readPolygonGeometry(object) {\\n    return new Polygon(object['coordinates']);\\n}\\n/**\\n * @param {import(\\\"../geom/Geometry.js\\\").default} geometry Geometry.\\n * @param {import(\\\"./Feature.js\\\").WriteOptions=} opt_options Write options.\\n * @return {GeoJSONGeometry} GeoJSON geometry.\\n */\\nfunction writeGeometry(geometry, opt_options) {\\n    geometry = transformGeometryWithOptions(geometry, true, opt_options);\\n    var type = geometry.getType();\\n    /** @type {GeoJSONGeometry} */\\n    var geoJSON;\\n    switch (type) {\\n        case GeometryType.POINT: {\\n            geoJSON = writePointGeometry(/** @type {Point} */ (geometry), opt_options);\\n            break;\\n        }\\n        case GeometryType.LINE_STRING: {\\n            geoJSON = writeLineStringGeometry(/** @type {LineString} */ (geometry), opt_options);\\n            break;\\n        }\\n        case GeometryType.POLYGON: {\\n            geoJSON = writePolygonGeometry(/** @type {Polygon} */ (geometry), opt_options);\\n            break;\\n        }\\n        case GeometryType.MULTI_POINT: {\\n            geoJSON = writeMultiPointGeometry(/** @type {MultiPoint} */ (geometry), opt_options);\\n            break;\\n        }\\n        case GeometryType.MULTI_LINE_STRING: {\\n            geoJSON = writeMultiLineStringGeometry(/** @type {MultiLineString} */ (geometry), opt_options);\\n            break;\\n        }\\n        case GeometryType.MULTI_POLYGON: {\\n            geoJSON = writeMultiPolygonGeometry(/** @type {MultiPolygon} */ (geometry), opt_options);\\n            break;\\n        }\\n        case GeometryType.GEOMETRY_COLLECTION: {\\n            geoJSON = writeGeometryCollectionGeometry(/** @type {GeometryCollection} */ (geometry), opt_options);\\n            break;\\n        }\\n        case GeometryType.CIRCLE: {\\n            geoJSON = {\\n                type: 'GeometryCollection',\\n                geometries: []\\n            };\\n            break;\\n        }\\n        default: {\\n            throw new Error('Unsupported geometry type: ' + type);\\n        }\\n    }\\n    return geoJSON;\\n}\\n/**\\n * @param {GeometryCollection} geometry Geometry.\\n * @param {import(\\\"./Feature.js\\\").WriteOptions=} opt_options Write options.\\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\\n */\\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\\n    var geometries = geometry.getGeometriesArray().map(function (geometry) {\\n        var options = assign({}, opt_options);\\n        delete options.featureProjection;\\n        return writeGeometry(geometry, options);\\n    });\\n    return {\\n        type: 'GeometryCollection',\\n        geometries: geometries\\n    };\\n}\\n/**\\n * @param {LineString} geometry Geometry.\\n * @param {import(\\\"./Feature.js\\\").WriteOptions=} opt_options Write options.\\n * @return {GeoJSONGeometry} GeoJSON geometry.\\n */\\nfunction writeLineStringGeometry(geometry, opt_options) {\\n    return {\\n        type: 'LineString',\\n        coordinates: geometry.getCoordinates()\\n    };\\n}\\n/**\\n * @param {MultiLineString} geometry Geometry.\\n * @param {import(\\\"./Feature.js\\\").WriteOptions=} opt_options Write options.\\n * @return {GeoJSONGeometry} GeoJSON geometry.\\n */\\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\\n    return {\\n        type: 'MultiLineString',\\n        coordinates: geometry.getCoordinates()\\n    };\\n}\\n/**\\n * @param {MultiPoint} geometry Geometry.\\n * @param {import(\\\"./Feature.js\\\").WriteOptions=} opt_options Write options.\\n * @return {GeoJSONGeometry} GeoJSON geometry.\\n */\\nfunction writeMultiPointGeometry(geometry, opt_options) {\\n    return {\\n        type: 'MultiPoint',\\n        coordinates: geometry.getCoordinates()\\n    };\\n}\\n/**\\n * @param {MultiPolygon} geometry Geometry.\\n * @param {import(\\\"./Feature.js\\\").WriteOptions=} opt_options Write options.\\n * @return {GeoJSONGeometry} GeoJSON geometry.\\n */\\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\\n    var right;\\n    if (opt_options) {\\n        right = opt_options.rightHanded;\\n    }\\n    return {\\n        type: 'MultiPolygon',\\n        coordinates: geometry.getCoordinates(right)\\n    };\\n}\\n/**\\n * @param {Point} geometry Geometry.\\n * @param {import(\\\"./Feature.js\\\").WriteOptions=} opt_options Write options.\\n * @return {GeoJSONGeometry} GeoJSON geometry.\\n */\\nfunction writePointGeometry(geometry, opt_options) {\\n    return {\\n        type: 'Point',\\n        coordinates: geometry.getCoordinates()\\n    };\\n}\\n/**\\n * @param {Polygon} geometry Geometry.\\n * @param {import(\\\"./Feature.js\\\").WriteOptions=} opt_options Write options.\\n * @return {GeoJSONGeometry} GeoJSON geometry.\\n */\\nfunction writePolygonGeometry(geometry, opt_options) {\\n    var right;\\n    if (opt_options) {\\n        right = opt_options.rightHanded;\\n    }\\n    return {\\n        type: 'Polygon',\\n        coordinates: geometry.getCoordinates(right)\\n    };\\n}\\nexport default GeoJSON;\\n//# sourceMappingURL=GeoJSON.js.map\",\"/**\\n * @module ol/xml\\n */\\nimport { extend } from './array.js';\\n/**\\n * When using {@link module:ol/xml~makeChildAppender} or\\n * {@link module:ol/xml~makeSimpleNodeFactory}, the top `objectStack` item needs\\n * to have this structure.\\n * @typedef {Object} NodeStackItem\\n * @property {Node} node\\n */\\n/**\\n * @typedef {function(Element, Array<*>): void} Parser\\n */\\n/**\\n * @typedef {function(Element, *, Array<*>): void} Serializer\\n */\\n/**\\n * This document should be used when creating nodes for XML serializations. This\\n * document is also used by {@link module:ol/xml~createElementNS}\\n * @const\\n * @type {Document}\\n */\\nexport var DOCUMENT = document.implementation.createDocument('', '', null);\\n/**\\n * @type {string}\\n */\\nexport var XML_SCHEMA_INSTANCE_URI = 'http://www.w3.org/2001/XMLSchema-instance';\\n/**\\n * @param {string} namespaceURI Namespace URI.\\n * @param {string} qualifiedName Qualified name.\\n * @return {Element} Node.\\n */\\nexport function createElementNS(namespaceURI, qualifiedName) {\\n    return DOCUMENT.createElementNS(namespaceURI, qualifiedName);\\n}\\n/**\\n * Recursively grab all text content of child nodes into a single string.\\n * @param {Node} node Node.\\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\\n * breaks.\\n * @return {string} All text content.\\n * @api\\n */\\nexport function getAllTextContent(node, normalizeWhitespace) {\\n    return getAllTextContent_(node, normalizeWhitespace, []).join('');\\n}\\n/**\\n * Recursively grab all text content of child nodes into a single string.\\n * @param {Node} node Node.\\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\\n * breaks.\\n * @param {Array<string>} accumulator Accumulator.\\n * @private\\n * @return {Array<string>} Accumulator.\\n */\\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\\n    if (node.nodeType == Node.CDATA_SECTION_NODE ||\\n        node.nodeType == Node.TEXT_NODE) {\\n        if (normalizeWhitespace) {\\n            accumulator.push(String(node.nodeValue).replace(/(\\\\r\\\\n|\\\\r|\\\\n)/g, ''));\\n        }\\n        else {\\n            accumulator.push(node.nodeValue);\\n        }\\n    }\\n    else {\\n        var n = void 0;\\n        for (n = node.firstChild; n; n = n.nextSibling) {\\n            getAllTextContent_(n, normalizeWhitespace, accumulator);\\n        }\\n    }\\n    return accumulator;\\n}\\n/**\\n * @param {Object} object Object.\\n * @return {boolean} Is a document.\\n */\\nexport function isDocument(object) {\\n    return 'documentElement' in object;\\n}\\n/**\\n * @param {Element} node Node.\\n * @param {?string} namespaceURI Namespace URI.\\n * @param {string} name Attribute name.\\n * @return {string} Value\\n */\\nexport function getAttributeNS(node, namespaceURI, name) {\\n    return node.getAttributeNS(namespaceURI, name) || '';\\n}\\n/**\\n * Parse an XML string to an XML Document.\\n * @param {string} xml XML.\\n * @return {Document} Document.\\n * @api\\n */\\nexport function parse(xml) {\\n    return new DOMParser().parseFromString(xml, 'application/xml');\\n}\\n/**\\n * Make an array extender function for extending the array at the top of the\\n * object stack.\\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\\n * @return {Parser} Parser.\\n * @template T\\n */\\nexport function makeArrayExtender(valueReader, opt_this) {\\n    return (\\n    /**\\n     * @param {Node} node Node.\\n     * @param {Array<*>} objectStack Object stack.\\n     */\\n    function (node, objectStack) {\\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\\n        if (value !== undefined) {\\n            var array = /** @type {Array<*>} */ (objectStack[objectStack.length - 1]);\\n            extend(array, value);\\n        }\\n    });\\n}\\n/**\\n * Make an array pusher function for pushing to the array at the top of the\\n * object stack.\\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\\n * @return {Parser} Parser.\\n * @template T\\n */\\nexport function makeArrayPusher(valueReader, opt_this) {\\n    return (\\n    /**\\n     * @param {Element} node Node.\\n     * @param {Array<*>} objectStack Object stack.\\n     */\\n    function (node, objectStack) {\\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\\n        if (value !== undefined) {\\n            var array = /** @type {Array<*>} */ (objectStack[objectStack.length - 1]);\\n            array.push(value);\\n        }\\n    });\\n}\\n/**\\n * Make an object stack replacer function for replacing the object at the\\n * top of the stack.\\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\\n * @return {Parser} Parser.\\n * @template T\\n */\\nexport function makeReplacer(valueReader, opt_this) {\\n    return (\\n    /**\\n     * @param {Node} node Node.\\n     * @param {Array<*>} objectStack Object stack.\\n     */\\n    function (node, objectStack) {\\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\\n        if (value !== undefined) {\\n            objectStack[objectStack.length - 1] = value;\\n        }\\n    });\\n}\\n/**\\n * Make an object property pusher function for adding a property to the\\n * object at the top of the stack.\\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\\n * @param {string=} opt_property Property.\\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\\n * @return {Parser} Parser.\\n * @template T\\n */\\nexport function makeObjectPropertyPusher(valueReader, opt_property, opt_this) {\\n    return (\\n    /**\\n     * @param {Element} node Node.\\n     * @param {Array<*>} objectStack Object stack.\\n     */\\n    function (node, objectStack) {\\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\\n        if (value !== undefined) {\\n            var object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\\n            var property = opt_property !== undefined ? opt_property : node.localName;\\n            var array = void 0;\\n            if (property in object) {\\n                array = object[property];\\n            }\\n            else {\\n                array = object[property] = [];\\n            }\\n            array.push(value);\\n        }\\n    });\\n}\\n/**\\n * Make an object property setter function.\\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\\n * @param {string=} opt_property Property.\\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\\n * @return {Parser} Parser.\\n * @template T\\n */\\nexport function makeObjectPropertySetter(valueReader, opt_property, opt_this) {\\n    return (\\n    /**\\n     * @param {Element} node Node.\\n     * @param {Array<*>} objectStack Object stack.\\n     */\\n    function (node, objectStack) {\\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\\n        if (value !== undefined) {\\n            var object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\\n            var property = opt_property !== undefined ? opt_property : node.localName;\\n            object[property] = value;\\n        }\\n    });\\n}\\n/**\\n * Create a serializer that appends nodes written by its `nodeWriter` to its\\n * designated parent. The parent is the `node` of the\\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\\n * @param {function(this: T, Node, V, Array<*>): void} nodeWriter Node writer.\\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\\n * @return {Serializer} Serializer.\\n * @template T, V\\n */\\nexport function makeChildAppender(nodeWriter, opt_this) {\\n    return function (node, value, objectStack) {\\n        nodeWriter.call(opt_this !== undefined ? opt_this : this, node, value, objectStack);\\n        var parent = /** @type {NodeStackItem} */ (objectStack[objectStack.length - 1]);\\n        var parentNode = parent.node;\\n        parentNode.appendChild(node);\\n    };\\n}\\n/**\\n * Create a serializer that calls the provided `nodeWriter` from\\n * {@link module:ol/xml~serialize}. This can be used by the parent writer to have the\\n * 'nodeWriter' called with an array of values when the `nodeWriter` was\\n * designed to serialize a single item. An example would be a LineString\\n * geometry writer, which could be reused for writing MultiLineString\\n * geometries.\\n * @param {function(this: T, Element, V, Array<*>): void} nodeWriter Node writer.\\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\\n * @return {Serializer} Serializer.\\n * @template T, V\\n */\\nexport function makeArraySerializer(nodeWriter, opt_this) {\\n    var serializersNS, nodeFactory;\\n    return function (node, value, objectStack) {\\n        if (serializersNS === undefined) {\\n            serializersNS = {};\\n            var serializers = {};\\n            serializers[node.localName] = nodeWriter;\\n            serializersNS[node.namespaceURI] = serializers;\\n            nodeFactory = makeSimpleNodeFactory(node.localName);\\n        }\\n        serialize(serializersNS, nodeFactory, value, objectStack);\\n    };\\n}\\n/**\\n * Create a node factory which can use the `opt_keys` passed to\\n * {@link module:ol/xml~serialize} or {@link module:ol/xml~pushSerializeAndPop} as node names,\\n * or a fixed node name. The namespace of the created nodes can either be fixed,\\n * or the parent namespace will be used.\\n * @param {string=} opt_nodeName Fixed node name which will be used for all\\n *     created nodes. If not provided, the 3rd argument to the resulting node\\n *     factory needs to be provided and will be the nodeName.\\n * @param {string=} opt_namespaceURI Fixed namespace URI which will be used for\\n *     all created nodes. If not provided, the namespace of the parent node will\\n *     be used.\\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\\n */\\nexport function makeSimpleNodeFactory(opt_nodeName, opt_namespaceURI) {\\n    var fixedNodeName = opt_nodeName;\\n    return (\\n    /**\\n     * @param {*} value Value.\\n     * @param {Array<*>} objectStack Object stack.\\n     * @param {string=} opt_nodeName Node name.\\n     * @return {Node} Node.\\n     */\\n    function (value, objectStack, opt_nodeName) {\\n        var context = /** @type {NodeStackItem} */ (objectStack[objectStack.length - 1]);\\n        var node = context.node;\\n        var nodeName = fixedNodeName;\\n        if (nodeName === undefined) {\\n            nodeName = opt_nodeName;\\n        }\\n        var namespaceURI = opt_namespaceURI !== undefined ? opt_namespaceURI : node.namespaceURI;\\n        return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\\n    });\\n}\\n/**\\n * A node factory that creates a node using the parent's `namespaceURI` and the\\n * `nodeName` passed by {@link module:ol/xml~serialize} or\\n * {@link module:ol/xml~pushSerializeAndPop} to the node factory.\\n * @const\\n * @type {function(*, Array<*>, string=): (Node|undefined)}\\n */\\nexport var OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\\n/**\\n * Create an array of `values` to be used with {@link module:ol/xml~serialize} or\\n * {@link module:ol/xml~pushSerializeAndPop}, where `orderedKeys` has to be provided as\\n * `opt_key` argument.\\n * @param {Object<string, V>} object Key-value pairs for the sequence. Keys can\\n *     be a subset of the `orderedKeys`.\\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\\n * @return {Array<V>} Values in the order of the sequence. The resulting array\\n *     has the same length as the `orderedKeys` array. Values that are not\\n *     present in `object` will be `undefined` in the resulting array.\\n * @template V\\n */\\nexport function makeSequence(object, orderedKeys) {\\n    var length = orderedKeys.length;\\n    var sequence = new Array(length);\\n    for (var i = 0; i < length; ++i) {\\n        sequence[i] = object[orderedKeys[i]];\\n    }\\n    return sequence;\\n}\\n/**\\n * Create a namespaced structure, using the same values for each namespace.\\n * This can be used as a starting point for versioned parsers, when only a few\\n * values are version specific.\\n * @param {Array<string>} namespaceURIs Namespace URIs.\\n * @param {T} structure Structure.\\n * @param {Object<string, T>=} opt_structureNS Namespaced structure to add to.\\n * @return {Object<string, T>} Namespaced structure.\\n * @template T\\n */\\nexport function makeStructureNS(namespaceURIs, structure, opt_structureNS) {\\n    /**\\n     * @type {Object<string, T>}\\n     */\\n    var structureNS = opt_structureNS !== undefined ? opt_structureNS : {};\\n    var i, ii;\\n    for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\\n        structureNS[namespaceURIs[i]] = structure;\\n    }\\n    return structureNS;\\n}\\n/**\\n * Parse a node using the parsers and object stack.\\n * @param {Object<string, Object<string, Parser>>} parsersNS\\n *     Parsers by namespace.\\n * @param {Element} node Node.\\n * @param {Array<*>} objectStack Object stack.\\n * @param {*=} opt_this The object to use as `this`.\\n */\\nexport function parseNode(parsersNS, node, objectStack, opt_this) {\\n    var n;\\n    for (n = node.firstElementChild; n; n = n.nextElementSibling) {\\n        var parsers = parsersNS[n.namespaceURI];\\n        if (parsers !== undefined) {\\n            var parser = parsers[n.localName];\\n            if (parser !== undefined) {\\n                parser.call(opt_this, n, objectStack);\\n            }\\n        }\\n    }\\n}\\n/**\\n * Push an object on top of the stack, parse and return the popped object.\\n * @param {T} object Object.\\n * @param {Object<string, Object<string, Parser>>} parsersNS\\n *     Parsers by namespace.\\n * @param {Element} node Node.\\n * @param {Array<*>} objectStack Object stack.\\n * @param {*=} opt_this The object to use as `this`.\\n * @return {T} Object.\\n * @template T\\n */\\nexport function pushParseAndPop(object, parsersNS, node, objectStack, opt_this) {\\n    objectStack.push(object);\\n    parseNode(parsersNS, node, objectStack, opt_this);\\n    return /** @type {T} */ (objectStack.pop());\\n}\\n/**\\n * Walk through an array of `values` and call a serializer for each value.\\n * @param {Object<string, Object<string, Serializer>>} serializersNS\\n *     Namespaced serializers.\\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\\n *     will be used to choose a node writer from `serializersNS`. This\\n *     separation allows us to decide what kind of node to create, depending on\\n *     the value we want to serialize. An example for this would be different\\n *     geometry writers based on the geometry type.\\n * @param {Array<*>} values Values to serialize. An example would be an array\\n *     of {@link module:ol/Feature~Feature} instances.\\n * @param {Array<*>} objectStack Node stack.\\n * @param {Array<string>=} opt_keys Keys of the `values`. Will be passed to the\\n *     `nodeFactory`. This is used for serializing object literals where the\\n *     node name relates to the property key. The array length of `opt_keys` has\\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\\n *     determines the order of the sequence.\\n * @param {T=} opt_this The object to use as `this` for the node factory and\\n *     serializers.\\n * @template T\\n */\\nexport function serialize(serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\\n    var length = (opt_keys !== undefined ? opt_keys : values).length;\\n    var value, node;\\n    for (var i = 0; i < length; ++i) {\\n        value = values[i];\\n        if (value !== undefined) {\\n            node = nodeFactory.call(opt_this !== undefined ? opt_this : this, value, objectStack, opt_keys !== undefined ? opt_keys[i] : undefined);\\n            if (node !== undefined) {\\n                serializersNS[node.namespaceURI][node.localName]\\n                    .call(opt_this, node, value, objectStack);\\n            }\\n        }\\n    }\\n}\\n/**\\n * @param {O} object Object.\\n * @param {Object<string, Object<string, Serializer>>} serializersNS\\n *     Namespaced serializers.\\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\\n *     will be used to choose a node writer from `serializersNS`. This\\n *     separation allows us to decide what kind of node to create, depending on\\n *     the value we want to serialize. An example for this would be different\\n *     geometry writers based on the geometry type.\\n * @param {Array<*>} values Values to serialize. An example would be an array\\n *     of {@link module:ol/Feature~Feature} instances.\\n * @param {Array<*>} objectStack Node stack.\\n * @param {Array<string>=} opt_keys Keys of the `values`. Will be passed to the\\n *     `nodeFactory`. This is used for serializing object literals where the\\n *     node name relates to the property key. The array length of `opt_keys` has\\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\\n *     determines the order of the sequence.\\n * @param {T=} opt_this The object to use as `this` for the node factory and\\n *     serializers.\\n * @return {O|undefined} Object.\\n * @template O, T\\n */\\nexport function pushSerializeAndPop(object, serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\\n    objectStack.push(object);\\n    serialize(serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this);\\n    return /** @type {O|undefined} */ (objectStack.pop());\\n}\\n//# sourceMappingURL=xml.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/format/XMLFeature\\n */\\nimport { abstract } from '../util.js';\\nimport { extend } from '../array.js';\\nimport FeatureFormat from '../format/Feature.js';\\nimport FormatType from '../format/FormatType.js';\\nimport { isDocument, parse } from '../xml.js';\\n/**\\n * @classdesc\\n * Abstract base class; normally only used for creating subclasses and not\\n * instantiated in apps.\\n * Base class for XML feature formats.\\n *\\n * @abstract\\n */\\nvar XMLFeature = /** @class */ (function (_super) {\\n    __extends(XMLFeature, _super);\\n    function XMLFeature() {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * @type {XMLSerializer}\\n         * @private\\n         */\\n        _this.xmlSerializer_ = new XMLSerializer();\\n        return _this;\\n    }\\n    /**\\n     * @inheritDoc\\n     */\\n    XMLFeature.prototype.getType = function () {\\n        return FormatType.XML;\\n    };\\n    /**\\n     * Read a single feature.\\n     *\\n     * @param {Document|Node|Object|string} source Source.\\n     * @param {import(\\\"./Feature.js\\\").ReadOptions=} opt_options Read options.\\n     * @return {import(\\\"../Feature.js\\\").default} Feature.\\n     * @api\\n     */\\n    XMLFeature.prototype.readFeature = function (source, opt_options) {\\n        if (!source) {\\n            return null;\\n        }\\n        else if (typeof source === 'string') {\\n            var doc = parse(source);\\n            return this.readFeatureFromDocument(doc, opt_options);\\n        }\\n        else if (isDocument(source)) {\\n            return this.readFeatureFromDocument(/** @type {Document} */ (source), opt_options);\\n        }\\n        else {\\n            return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\\n        }\\n    };\\n    /**\\n     * @param {Document} doc Document.\\n     * @param {import(\\\"./Feature.js\\\").ReadOptions=} opt_options Options.\\n     * @return {import(\\\"../Feature.js\\\").default} Feature.\\n     */\\n    XMLFeature.prototype.readFeatureFromDocument = function (doc, opt_options) {\\n        var features = this.readFeaturesFromDocument(doc, opt_options);\\n        if (features.length > 0) {\\n            return features[0];\\n        }\\n        else {\\n            return null;\\n        }\\n    };\\n    /**\\n     * @param {Node} node Node.\\n     * @param {import(\\\"./Feature.js\\\").ReadOptions=} opt_options Options.\\n     * @return {import(\\\"../Feature.js\\\").default} Feature.\\n     */\\n    XMLFeature.prototype.readFeatureFromNode = function (node, opt_options) {\\n        return null; // not implemented\\n    };\\n    /**\\n     * Read all features from a feature collection.\\n     *\\n     * @param {Document|Node|Object|string} source Source.\\n     * @param {import(\\\"./Feature.js\\\").ReadOptions=} opt_options Options.\\n     * @return {Array<import(\\\"../Feature.js\\\").default>} Features.\\n     * @api\\n     */\\n    XMLFeature.prototype.readFeatures = function (source, opt_options) {\\n        if (!source) {\\n            return [];\\n        }\\n        else if (typeof source === 'string') {\\n            var doc = parse(source);\\n            return this.readFeaturesFromDocument(doc, opt_options);\\n        }\\n        else if (isDocument(source)) {\\n            return this.readFeaturesFromDocument(\\n            /** @type {Document} */ (source), opt_options);\\n        }\\n        else {\\n            return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\\n        }\\n    };\\n    /**\\n     * @param {Document} doc Document.\\n     * @param {import(\\\"./Feature.js\\\").ReadOptions=} opt_options Options.\\n     * @protected\\n     * @return {Array<import(\\\"../Feature.js\\\").default>} Features.\\n     */\\n    XMLFeature.prototype.readFeaturesFromDocument = function (doc, opt_options) {\\n        /** @type {Array<import(\\\"../Feature.js\\\").default>} */\\n        var features = [];\\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\\n            if (n.nodeType == Node.ELEMENT_NODE) {\\n                extend(features, this.readFeaturesFromNode(n, opt_options));\\n            }\\n        }\\n        return features;\\n    };\\n    /**\\n     * @abstract\\n     * @param {Node} node Node.\\n     * @param {import(\\\"./Feature.js\\\").ReadOptions=} opt_options Options.\\n     * @protected\\n     * @return {Array<import(\\\"../Feature.js\\\").default>} Features.\\n     */\\n    XMLFeature.prototype.readFeaturesFromNode = function (node, opt_options) {\\n        return abstract();\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    XMLFeature.prototype.readGeometry = function (source, opt_options) {\\n        if (!source) {\\n            return null;\\n        }\\n        else if (typeof source === 'string') {\\n            var doc = parse(source);\\n            return this.readGeometryFromDocument(doc, opt_options);\\n        }\\n        else if (isDocument(source)) {\\n            return this.readGeometryFromDocument(\\n            /** @type {Document} */ (source), opt_options);\\n        }\\n        else {\\n            return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\\n        }\\n    };\\n    /**\\n     * @param {Document} doc Document.\\n     * @param {import(\\\"./Feature.js\\\").ReadOptions=} opt_options Options.\\n     * @protected\\n     * @return {import(\\\"../geom/Geometry.js\\\").default} Geometry.\\n     */\\n    XMLFeature.prototype.readGeometryFromDocument = function (doc, opt_options) {\\n        return null; // not implemented\\n    };\\n    /**\\n     * @param {Node} node Node.\\n     * @param {import(\\\"./Feature.js\\\").ReadOptions=} opt_options Options.\\n     * @protected\\n     * @return {import(\\\"../geom/Geometry.js\\\").default} Geometry.\\n     */\\n    XMLFeature.prototype.readGeometryFromNode = function (node, opt_options) {\\n        return null; // not implemented\\n    };\\n    /**\\n     * Read the projection from the source.\\n     *\\n     * @param {Document|Node|Object|string} source Source.\\n     * @return {import(\\\"../proj/Projection.js\\\").default} Projection.\\n     * @api\\n     */\\n    XMLFeature.prototype.readProjection = function (source) {\\n        if (!source) {\\n            return null;\\n        }\\n        else if (typeof source === 'string') {\\n            var doc = parse(source);\\n            return this.readProjectionFromDocument(doc);\\n        }\\n        else if (isDocument(source)) {\\n            return this.readProjectionFromDocument(/** @type {Document} */ (source));\\n        }\\n        else {\\n            return this.readProjectionFromNode(/** @type {Node} */ (source));\\n        }\\n    };\\n    /**\\n     * @param {Document} doc Document.\\n     * @protected\\n     * @return {import(\\\"../proj/Projection.js\\\").default} Projection.\\n     */\\n    XMLFeature.prototype.readProjectionFromDocument = function (doc) {\\n        return this.dataProjection;\\n    };\\n    /**\\n     * @param {Node} node Node.\\n     * @protected\\n     * @return {import(\\\"../proj/Projection.js\\\").default} Projection.\\n     */\\n    XMLFeature.prototype.readProjectionFromNode = function (node) {\\n        return this.dataProjection;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    XMLFeature.prototype.writeFeature = function (feature, opt_options) {\\n        var node = this.writeFeatureNode(feature, opt_options);\\n        return this.xmlSerializer_.serializeToString(node);\\n    };\\n    /**\\n     * @param {import(\\\"../Feature.js\\\").default} feature Feature.\\n     * @param {import(\\\"./Feature.js\\\").WriteOptions=} opt_options Options.\\n     * @protected\\n     * @return {Node} Node.\\n     */\\n    XMLFeature.prototype.writeFeatureNode = function (feature, opt_options) {\\n        return null; // not implemented\\n    };\\n    /**\\n     * Encode an array of features as string.\\n     *\\n     * @param {Array<import(\\\"../Feature.js\\\").default>} features Features.\\n     * @param {import(\\\"./Feature.js\\\").WriteOptions=} opt_options Write options.\\n     * @return {string} Result.\\n     * @api\\n     */\\n    XMLFeature.prototype.writeFeatures = function (features, opt_options) {\\n        var node = this.writeFeaturesNode(features, opt_options);\\n        return this.xmlSerializer_.serializeToString(node);\\n    };\\n    /**\\n     * @param {Array<import(\\\"../Feature.js\\\").default>} features Features.\\n     * @param {import(\\\"./Feature.js\\\").WriteOptions=} opt_options Options.\\n     * @return {Node} Node.\\n     */\\n    XMLFeature.prototype.writeFeaturesNode = function (features, opt_options) {\\n        return null; // not implemented\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    XMLFeature.prototype.writeGeometry = function (geometry, opt_options) {\\n        var node = this.writeGeometryNode(geometry, opt_options);\\n        return this.xmlSerializer_.serializeToString(node);\\n    };\\n    /**\\n     * @param {import(\\\"../geom/Geometry.js\\\").default} geometry Geometry.\\n     * @param {import(\\\"./Feature.js\\\").WriteOptions=} opt_options Options.\\n     * @return {Node} Node.\\n     */\\n    XMLFeature.prototype.writeGeometryNode = function (geometry, opt_options) {\\n        return null; // not implemented\\n    };\\n    return XMLFeature;\\n}(FeatureFormat));\\nexport default XMLFeature;\\n//# sourceMappingURL=XMLFeature.js.map\",\"/**\\n * @module ol/format/xsd\\n */\\nimport { getAllTextContent, DOCUMENT } from '../xml.js';\\nimport { padNumber } from '../string.js';\\n/**\\n * @param {Node} node Node.\\n * @return {boolean|undefined} Boolean.\\n */\\nexport function readBoolean(node) {\\n    var s = getAllTextContent(node, false);\\n    return readBooleanString(s);\\n}\\n/**\\n * @param {string} string String.\\n * @return {boolean|undefined} Boolean.\\n */\\nexport function readBooleanString(string) {\\n    var m = /^\\\\s*(true|1)|(false|0)\\\\s*$/.exec(string);\\n    if (m) {\\n        return m[1] !== undefined || false;\\n    }\\n    else {\\n        return undefined;\\n    }\\n}\\n/**\\n * @param {Node} node Node.\\n * @return {number|undefined} DateTime in seconds.\\n */\\nexport function readDateTime(node) {\\n    var s = getAllTextContent(node, false);\\n    var dateTime = Date.parse(s);\\n    return isNaN(dateTime) ? undefined : dateTime / 1000;\\n}\\n/**\\n * @param {Node} node Node.\\n * @return {number|undefined} Decimal.\\n */\\nexport function readDecimal(node) {\\n    var s = getAllTextContent(node, false);\\n    return readDecimalString(s);\\n}\\n/**\\n * @param {string} string String.\\n * @return {number|undefined} Decimal.\\n */\\nexport function readDecimalString(string) {\\n    // FIXME check spec\\n    var m = /^\\\\s*([+\\\\-]?\\\\d*\\\\.?\\\\d+(?:e[+\\\\-]?\\\\d+)?)\\\\s*$/i.exec(string);\\n    if (m) {\\n        return parseFloat(m[1]);\\n    }\\n    else {\\n        return undefined;\\n    }\\n}\\n/**\\n * @param {Node} node Node.\\n * @return {number|undefined} Non negative integer.\\n */\\nexport function readNonNegativeInteger(node) {\\n    var s = getAllTextContent(node, false);\\n    return readNonNegativeIntegerString(s);\\n}\\n/**\\n * @param {string} string String.\\n * @return {number|undefined} Non negative integer.\\n */\\nexport function readNonNegativeIntegerString(string) {\\n    var m = /^\\\\s*(\\\\d+)\\\\s*$/.exec(string);\\n    if (m) {\\n        return parseInt(m[1], 10);\\n    }\\n    else {\\n        return undefined;\\n    }\\n}\\n/**\\n * @param {Node} node Node.\\n * @return {string|undefined} String.\\n */\\nexport function readString(node) {\\n    return getAllTextContent(node, false).trim();\\n}\\n/**\\n * @param {Node} node Node to append a TextNode with the boolean to.\\n * @param {boolean} bool Boolean.\\n */\\nexport function writeBooleanTextNode(node, bool) {\\n    writeStringTextNode(node, (bool) ? '1' : '0');\\n}\\n/**\\n * @param {Node} node Node to append a CDATA Section with the string to.\\n * @param {string} string String.\\n */\\nexport function writeCDATASection(node, string) {\\n    node.appendChild(DOCUMENT.createCDATASection(string));\\n}\\n/**\\n * @param {Node} node Node to append a TextNode with the dateTime to.\\n * @param {number} dateTime DateTime in seconds.\\n */\\nexport function writeDateTimeTextNode(node, dateTime) {\\n    var date = new Date(dateTime * 1000);\\n    var string = date.getUTCFullYear() + '-' +\\n        padNumber(date.getUTCMonth() + 1, 2) + '-' +\\n        padNumber(date.getUTCDate(), 2) + 'T' +\\n        padNumber(date.getUTCHours(), 2) + ':' +\\n        padNumber(date.getUTCMinutes(), 2) + ':' +\\n        padNumber(date.getUTCSeconds(), 2) + 'Z';\\n    node.appendChild(DOCUMENT.createTextNode(string));\\n}\\n/**\\n * @param {Node} node Node to append a TextNode with the decimal to.\\n * @param {number} decimal Decimal.\\n */\\nexport function writeDecimalTextNode(node, decimal) {\\n    var string = decimal.toPrecision();\\n    node.appendChild(DOCUMENT.createTextNode(string));\\n}\\n/**\\n * @param {Node} node Node to append a TextNode with the decimal to.\\n * @param {number} nonNegativeInteger Non negative integer.\\n */\\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\\n    var string = nonNegativeInteger.toString();\\n    node.appendChild(DOCUMENT.createTextNode(string));\\n}\\n/**\\n * @param {Node} node Node to append a TextNode with the string to.\\n * @param {string} string String.\\n */\\nexport function writeStringTextNode(node, string) {\\n    node.appendChild(DOCUMENT.createTextNode(string));\\n}\\n//# sourceMappingURL=xsd.js.map\",\"/**\\n * @module ol/style/IconAnchorUnits\\n */\\n/**\\n * Icon anchor units. One of 'fraction', 'pixels'.\\n * @enum {string}\\n */\\nexport default {\\n    FRACTION: 'fraction',\\n    PIXELS: 'pixels'\\n};\\n//# sourceMappingURL=IconAnchorUnits.js.map\",\"/**\\n * @module ol/style/IconImage\\n */\\nvar __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\nimport { createCanvasContext2D } from '../dom.js';\\nimport { listenOnce, unlistenByKey } from '../events.js';\\nimport EventTarget from '../events/Target.js';\\nimport EventType from '../events/EventType.js';\\nimport ImageState from '../ImageState.js';\\nimport { shared as iconImageCache } from './IconImageCache.js';\\nvar IconImage = /** @class */ (function (_super) {\\n    __extends(IconImage, _super);\\n    /**\\n     * @param {HTMLImageElement|HTMLCanvasElement} image Image.\\n     * @param {string|undefined} src Src.\\n     * @param {import(\\\"../size.js\\\").Size} size Size.\\n     * @param {?string} crossOrigin Cross origin.\\n     * @param {import(\\\"../ImageState.js\\\").default} imageState Image state.\\n     * @param {import(\\\"../color.js\\\").Color} color Color.\\n     */\\n    function IconImage(image, src, size, crossOrigin, imageState, color) {\\n        var _this = _super.call(this) || this;\\n        /**\\n         * @private\\n         * @type {HTMLImageElement|HTMLCanvasElement}\\n         */\\n        _this.hitDetectionImage_ = null;\\n        /**\\n         * @private\\n         * @type {HTMLImageElement|HTMLCanvasElement}\\n         */\\n        _this.image_ = !image ? new Image() : image;\\n        if (crossOrigin !== null) {\\n            /** @type {HTMLImageElement} */ (_this.image_).crossOrigin = crossOrigin;\\n        }\\n        /**\\n         * @private\\n         * @type {HTMLCanvasElement}\\n         */\\n        _this.canvas_ = color ? document.createElement('canvas') : null;\\n        /**\\n         * @private\\n         * @type {import(\\\"../color.js\\\").Color}\\n         */\\n        _this.color_ = color;\\n        /**\\n         * @private\\n         * @type {Array<import(\\\"../events.js\\\").EventsKey>}\\n         */\\n        _this.imageListenerKeys_ = null;\\n        /**\\n         * @private\\n         * @type {import(\\\"../ImageState.js\\\").default}\\n         */\\n        _this.imageState_ = imageState;\\n        /**\\n         * @private\\n         * @type {import(\\\"../size.js\\\").Size}\\n         */\\n        _this.size_ = size;\\n        /**\\n         * @private\\n         * @type {string|undefined}\\n         */\\n        _this.src_ = src;\\n        /**\\n         * @private\\n         * @type {boolean|undefined}\\n         */\\n        _this.tainted_;\\n        return _this;\\n    }\\n    /**\\n     * @private\\n     * @return {boolean} The image canvas is tainted.\\n     */\\n    IconImage.prototype.isTainted_ = function () {\\n        if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\\n            this.tainted_ = false;\\n            var context = createCanvasContext2D(1, 1);\\n            try {\\n                context.drawImage(this.image_, 0, 0);\\n                context.getImageData(0, 0, 1, 1);\\n            }\\n            catch (e) {\\n                this.tainted_ = true;\\n            }\\n        }\\n        return this.tainted_ === true;\\n    };\\n    /**\\n     * @private\\n     */\\n    IconImage.prototype.dispatchChangeEvent_ = function () {\\n        this.dispatchEvent(EventType.CHANGE);\\n    };\\n    /**\\n     * @private\\n     */\\n    IconImage.prototype.handleImageError_ = function () {\\n        this.imageState_ = ImageState.ERROR;\\n        this.unlistenImage_();\\n        this.dispatchChangeEvent_();\\n    };\\n    /**\\n     * @private\\n     */\\n    IconImage.prototype.handleImageLoad_ = function () {\\n        this.imageState_ = ImageState.LOADED;\\n        if (this.size_) {\\n            this.image_.width = this.size_[0];\\n            this.image_.height = this.size_[1];\\n        }\\n        this.size_ = [this.image_.width, this.image_.height];\\n        this.unlistenImage_();\\n        this.replaceColor_();\\n        this.dispatchChangeEvent_();\\n    };\\n    /**\\n     * @param {number} pixelRatio Pixel ratio.\\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\\n     */\\n    IconImage.prototype.getImage = function (pixelRatio) {\\n        return this.canvas_ ? this.canvas_ : this.image_;\\n    };\\n    /**\\n     * @return {import(\\\"../ImageState.js\\\").default} Image state.\\n     */\\n    IconImage.prototype.getImageState = function () {\\n        return this.imageState_;\\n    };\\n    /**\\n     * @param {number} pixelRatio Pixel ratio.\\n     * @return {HTMLImageElement|HTMLCanvasElement} Image element.\\n     */\\n    IconImage.prototype.getHitDetectionImage = function (pixelRatio) {\\n        if (!this.hitDetectionImage_) {\\n            if (this.isTainted_()) {\\n                var width = this.size_[0];\\n                var height = this.size_[1];\\n                var context = createCanvasContext2D(width, height);\\n                context.fillRect(0, 0, width, height);\\n                this.hitDetectionImage_ = context.canvas;\\n            }\\n            else {\\n                this.hitDetectionImage_ = this.image_;\\n            }\\n        }\\n        return this.hitDetectionImage_;\\n    };\\n    /**\\n     * @return {import(\\\"../size.js\\\").Size} Image size.\\n     */\\n    IconImage.prototype.getSize = function () {\\n        return this.size_;\\n    };\\n    /**\\n     * @return {string|undefined} Image src.\\n     */\\n    IconImage.prototype.getSrc = function () {\\n        return this.src_;\\n    };\\n    /**\\n     * Load not yet loaded URI.\\n     */\\n    IconImage.prototype.load = function () {\\n        if (this.imageState_ == ImageState.IDLE) {\\n            this.imageState_ = ImageState.LOADING;\\n            this.imageListenerKeys_ = [\\n                listenOnce(this.image_, EventType.ERROR, this.handleImageError_, this),\\n                listenOnce(this.image_, EventType.LOAD, this.handleImageLoad_, this)\\n            ];\\n            try {\\n                /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\\n            }\\n            catch (e) {\\n                this.handleImageError_();\\n            }\\n        }\\n    };\\n    /**\\n     * @private\\n     */\\n    IconImage.prototype.replaceColor_ = function () {\\n        if (!this.color_ || this.isTainted_()) {\\n            return;\\n        }\\n        this.canvas_.width = this.image_.width;\\n        this.canvas_.height = this.image_.height;\\n        var ctx = this.canvas_.getContext('2d');\\n        ctx.drawImage(this.image_, 0, 0);\\n        var imgData = ctx.getImageData(0, 0, this.image_.width, this.image_.height);\\n        var data = imgData.data;\\n        var r = this.color_[0] / 255.0;\\n        var g = this.color_[1] / 255.0;\\n        var b = this.color_[2] / 255.0;\\n        for (var i = 0, ii = data.length; i < ii; i += 4) {\\n            data[i] *= r;\\n            data[i + 1] *= g;\\n            data[i + 2] *= b;\\n        }\\n        ctx.putImageData(imgData, 0, 0);\\n    };\\n    /**\\n     * Discards event handlers which listen for load completion or errors.\\n     *\\n     * @private\\n     */\\n    IconImage.prototype.unlistenImage_ = function () {\\n        this.imageListenerKeys_.forEach(unlistenByKey);\\n        this.imageListenerKeys_ = null;\\n    };\\n    return IconImage;\\n}(EventTarget));\\n/**\\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\\n * @param {string} src Src.\\n * @param {import(\\\"../size.js\\\").Size} size Size.\\n * @param {?string} crossOrigin Cross origin.\\n * @param {import(\\\"../ImageState.js\\\").default} imageState Image state.\\n * @param {import(\\\"../color.js\\\").Color} color Color.\\n * @return {IconImage} Icon image.\\n */\\nexport function get(image, src, size, crossOrigin, imageState, color) {\\n    var iconImage = iconImageCache.get(src, crossOrigin, color);\\n    if (!iconImage) {\\n        iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\\n        iconImageCache.set(src, crossOrigin, color, iconImage);\\n    }\\n    return iconImage;\\n}\\nexport default IconImage;\\n//# sourceMappingURL=IconImage.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/format/KML\\n */\\nimport Feature from '../Feature.js';\\nimport { extend, includes } from '../array.js';\\nimport { assert } from '../asserts.js';\\nimport { asArray } from '../color.js';\\nimport { transformGeometryWithOptions } from './Feature.js';\\nimport XMLFeature from './XMLFeature.js';\\nimport { readDecimal, readBoolean, readString, writeStringTextNode, writeCDATASection, writeDecimalTextNode, writeBooleanTextNode } from './xsd.js';\\nimport GeometryCollection from '../geom/GeometryCollection.js';\\nimport GeometryLayout from '../geom/GeometryLayout.js';\\nimport GeometryType from '../geom/GeometryType.js';\\nimport LineString from '../geom/LineString.js';\\nimport MultiLineString from '../geom/MultiLineString.js';\\nimport MultiPoint from '../geom/MultiPoint.js';\\nimport MultiPolygon from '../geom/MultiPolygon.js';\\nimport Point from '../geom/Point.js';\\nimport Polygon from '../geom/Polygon.js';\\nimport { toRadians } from '../math.js';\\nimport { get as getProjection } from '../proj.js';\\nimport Fill from '../style/Fill.js';\\nimport Icon from '../style/Icon.js';\\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\\nimport IconOrigin from '../style/IconOrigin.js';\\nimport Stroke from '../style/Stroke.js';\\nimport Style from '../style/Style.js';\\nimport Text from '../style/Text.js';\\nimport { createElementNS, getAllTextContent, isDocument, makeArrayExtender, makeArrayPusher, makeChildAppender, makeObjectPropertySetter, makeReplacer, makeSequence, makeSimpleNodeFactory, makeStructureNS, OBJECT_PROPERTY_NODE_FACTORY, parse, parseNode, pushParseAndPop, pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI } from '../xml.js';\\n/**\\n * @typedef {Object} Vec2\\n * @property {number} x\\n * @property {IconAnchorUnits} xunits\\n * @property {number} y\\n * @property {IconAnchorUnits} yunits\\n * @property {IconOrigin} origin\\n */\\n/**\\n * @typedef {Object} GxTrackObject\\n * @property {Array<number>} flatCoordinates\\n * @property {Array<number>} whens\\n */\\n/**\\n * @const\\n * @type {Array<string>}\\n */\\nvar GX_NAMESPACE_URIS = [\\n    'http://www.google.com/kml/ext/2.2'\\n];\\n/**\\n * @const\\n * @type {Array<null|string>}\\n */\\nvar NAMESPACE_URIS = [\\n    null,\\n    'http://earth.google.com/kml/2.0',\\n    'http://earth.google.com/kml/2.1',\\n    'http://earth.google.com/kml/2.2',\\n    'http://www.opengis.net/kml/2.2'\\n];\\n/**\\n * @const\\n * @type {string}\\n */\\nvar SCHEMA_LOCATION = 'http://www.opengis.net/kml/2.2 ' +\\n    'https://developers.google.com/kml/schema/kml22gx.xsd';\\n/**\\n * @type {Object<string, IconAnchorUnits>}\\n */\\nvar ICON_ANCHOR_UNITS_MAP = {\\n    'fraction': IconAnchorUnits.FRACTION,\\n    'pixels': IconAnchorUnits.PIXELS,\\n    'insetPixels': IconAnchorUnits.PIXELS\\n};\\n/**\\n * @const\\n * @type {Object<string, Object<string, import(\\\"../xml.js\\\").Parser>>}\\n */\\nvar PLACEMARK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\\n    'ExtendedData': extendedDataParser,\\n    'Region': regionParser,\\n    'MultiGeometry': makeObjectPropertySetter(readMultiGeometry, 'geometry'),\\n    'LineString': makeObjectPropertySetter(readLineString, 'geometry'),\\n    'LinearRing': makeObjectPropertySetter(readLinearRing, 'geometry'),\\n    'Point': makeObjectPropertySetter(readPoint, 'geometry'),\\n    'Polygon': makeObjectPropertySetter(readPolygon, 'geometry'),\\n    'Style': makeObjectPropertySetter(readStyle),\\n    'StyleMap': placemarkStyleMapParser,\\n    'address': makeObjectPropertySetter(readString),\\n    'description': makeObjectPropertySetter(readString),\\n    'name': makeObjectPropertySetter(readString),\\n    'open': makeObjectPropertySetter(readBoolean),\\n    'phoneNumber': makeObjectPropertySetter(readString),\\n    'styleUrl': makeObjectPropertySetter(readURI),\\n    'visibility': makeObjectPropertySetter(readBoolean)\\n}, makeStructureNS(GX_NAMESPACE_URIS, {\\n    'MultiTrack': makeObjectPropertySetter(readGxMultiTrack, 'geometry'),\\n    'Track': makeObjectPropertySetter(readGxTrack, 'geometry')\\n}));\\n/**\\n * @const\\n * @type {Object<string, Object<string, import(\\\"../xml.js\\\").Parser>>}\\n */\\nvar NETWORK_LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\\n    'ExtendedData': extendedDataParser,\\n    'Region': regionParser,\\n    'Link': linkParser,\\n    'address': makeObjectPropertySetter(readString),\\n    'description': makeObjectPropertySetter(readString),\\n    'name': makeObjectPropertySetter(readString),\\n    'open': makeObjectPropertySetter(readBoolean),\\n    'phoneNumber': makeObjectPropertySetter(readString),\\n    'visibility': makeObjectPropertySetter(readBoolean)\\n});\\n/**\\n * @const\\n * @type {Object<string, Object<string, import(\\\"../xml.js\\\").Parser>>}\\n */\\nvar LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\\n    'href': makeObjectPropertySetter(readURI)\\n});\\n/**\\n * @const\\n * @type {Object<string, Object<string, import(\\\"../xml.js\\\").Parser>>}\\n */\\nvar REGION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\\n    'LatLonAltBox': latLonAltBoxParser,\\n    'Lod': lodParser\\n});\\n/**\\n * @const\\n * @type {Object<string, Array<string>>}\\n */\\nvar KML_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\\n    'Document', 'Placemark'\\n]);\\n/**\\n * @const\\n * @type {Object<string, Object<string, import(\\\"../xml.js\\\").Serializer>>}\\n */\\nvar KML_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\\n    'Document': makeChildAppender(writeDocument),\\n    'Placemark': makeChildAppender(writePlacemark)\\n});\\n/**\\n * @type {import(\\\"../color.js\\\").Color}\\n */\\nvar DEFAULT_COLOR;\\n/**\\n * @type {Fill}\\n */\\nvar DEFAULT_FILL_STYLE = null;\\n/**\\n * Get the default fill style (or null if not yet set).\\n * @return {Fill} The default fill style.\\n */\\nexport function getDefaultFillStyle() {\\n    return DEFAULT_FILL_STYLE;\\n}\\n/**\\n * @type {import(\\\"../size.js\\\").Size}\\n */\\nvar DEFAULT_IMAGE_STYLE_ANCHOR;\\n/**\\n * @type {IconAnchorUnits}\\n */\\nvar DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\\n/**\\n * @type {IconAnchorUnits}\\n */\\nvar DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\\n/**\\n * @type {import(\\\"../size.js\\\").Size}\\n */\\nvar DEFAULT_IMAGE_STYLE_SIZE;\\n/**\\n * @type {string}\\n */\\nvar DEFAULT_IMAGE_STYLE_SRC;\\n/**\\n * @type {number}\\n */\\nvar DEFAULT_IMAGE_SCALE_MULTIPLIER;\\n/**\\n * @type {import(\\\"../style/Image.js\\\").default}\\n */\\nvar DEFAULT_IMAGE_STYLE = null;\\n/**\\n * Get the default image style (or null if not yet set).\\n * @return {import(\\\"../style/Image.js\\\").default} The default image style.\\n */\\nexport function getDefaultImageStyle() {\\n    return DEFAULT_IMAGE_STYLE;\\n}\\n/**\\n * @type {string}\\n */\\nvar DEFAULT_NO_IMAGE_STYLE;\\n/**\\n * @type {Stroke}\\n */\\nvar DEFAULT_STROKE_STYLE = null;\\n/**\\n * Get the default stroke style (or null if not yet set).\\n * @return {Stroke} The default stroke style.\\n */\\nexport function getDefaultStrokeStyle() {\\n    return DEFAULT_STROKE_STYLE;\\n}\\n/**\\n * @type {Stroke}\\n */\\nvar DEFAULT_TEXT_STROKE_STYLE;\\n/**\\n * @type {Text}\\n */\\nvar DEFAULT_TEXT_STYLE = null;\\n/**\\n * Get the default text style (or null if not yet set).\\n * @return {Text} The default text style.\\n */\\nexport function getDefaultTextStyle() {\\n    return DEFAULT_TEXT_STYLE;\\n}\\n/**\\n * @type {Style}\\n */\\nvar DEFAULT_STYLE = null;\\n/**\\n * Get the default style (or null if not yet set).\\n * @return {Style} The default style.\\n */\\nexport function getDefaultStyle() {\\n    return DEFAULT_STYLE;\\n}\\n/**\\n * @type {Array<Style>}\\n */\\nvar DEFAULT_STYLE_ARRAY = null;\\n/**\\n * Get the default style array (or null if not yet set).\\n * @return {Array<Style>} The default style.\\n */\\nexport function getDefaultStyleArray() {\\n    return DEFAULT_STYLE_ARRAY;\\n}\\nfunction createStyleDefaults() {\\n    DEFAULT_COLOR = [255, 255, 255, 1];\\n    DEFAULT_FILL_STYLE = new Fill({\\n        color: DEFAULT_COLOR\\n    });\\n    DEFAULT_IMAGE_STYLE_ANCHOR = [20, 2]; // FIXME maybe [8, 32] ?\\n    DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS = IconAnchorUnits.PIXELS;\\n    DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS = IconAnchorUnits.PIXELS;\\n    DEFAULT_IMAGE_STYLE_SIZE = [64, 64];\\n    DEFAULT_IMAGE_STYLE_SRC =\\n        'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\\n    DEFAULT_IMAGE_SCALE_MULTIPLIER = 0.5;\\n    DEFAULT_IMAGE_STYLE = new Icon({\\n        anchor: DEFAULT_IMAGE_STYLE_ANCHOR,\\n        anchorOrigin: IconOrigin.BOTTOM_LEFT,\\n        anchorXUnits: DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,\\n        anchorYUnits: DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,\\n        crossOrigin: 'anonymous',\\n        rotation: 0,\\n        scale: DEFAULT_IMAGE_SCALE_MULTIPLIER,\\n        size: DEFAULT_IMAGE_STYLE_SIZE,\\n        src: DEFAULT_IMAGE_STYLE_SRC\\n    });\\n    DEFAULT_NO_IMAGE_STYLE = 'NO_IMAGE';\\n    DEFAULT_STROKE_STYLE = new Stroke({\\n        color: DEFAULT_COLOR,\\n        width: 1\\n    });\\n    DEFAULT_TEXT_STROKE_STYLE = new Stroke({\\n        color: [51, 51, 51, 1],\\n        width: 2\\n    });\\n    DEFAULT_TEXT_STYLE = new Text({\\n        font: 'bold 16px Helvetica',\\n        fill: DEFAULT_FILL_STYLE,\\n        stroke: DEFAULT_TEXT_STROKE_STYLE,\\n        scale: 0.8\\n    });\\n    DEFAULT_STYLE = new Style({\\n        fill: DEFAULT_FILL_STYLE,\\n        image: DEFAULT_IMAGE_STYLE,\\n        text: DEFAULT_TEXT_STYLE,\\n        stroke: DEFAULT_STROKE_STYLE,\\n        zIndex: 0\\n    });\\n    DEFAULT_STYLE_ARRAY = [DEFAULT_STYLE];\\n}\\n/**\\n * @typedef {Object} Options\\n * @property {boolean} [extractStyles=true] Extract styles from the KML.\\n * @property {boolean} [showPointNames=true] Show names as labels for placemarks which contain points.\\n * @property {Array<Style>} [defaultStyle] Default style. The\\n * default default style is the same as Google Earth.\\n * @property {boolean} [writeStyles=true] Write styles into KML.\\n */\\n/**\\n * @classdesc\\n * Feature format for reading and writing data in the KML format.\\n *\\n * {@link module:ol/format/KML~KML#readFeature} will read the first feature from\\n * a KML source.\\n *\\n * MultiGeometries are converted into GeometryCollections if they are a mix of\\n * geometry types, and into MultiPoint/MultiLineString/MultiPolygon if they are\\n * all of the same type.\\n *\\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\\n * which do not support this will need a URL polyfill to be loaded before use.\\n *\\n * @api\\n */\\nvar KML = /** @class */ (function (_super) {\\n    __extends(KML, _super);\\n    /**\\n     * @param {Options=} opt_options Options.\\n     */\\n    function KML(opt_options) {\\n        var _this = _super.call(this) || this;\\n        var options = opt_options ? opt_options : {};\\n        if (!DEFAULT_STYLE_ARRAY) {\\n            createStyleDefaults();\\n        }\\n        /**\\n         * @inheritDoc\\n         */\\n        _this.dataProjection = getProjection('EPSG:4326');\\n        /**\\n         * @private\\n         * @type {Array<Style>}\\n         */\\n        _this.defaultStyle_ = options.defaultStyle ?\\n            options.defaultStyle : DEFAULT_STYLE_ARRAY;\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.extractStyles_ = options.extractStyles !== undefined ?\\n            options.extractStyles : true;\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.writeStyles_ = options.writeStyles !== undefined ?\\n            options.writeStyles : true;\\n        /**\\n         * @private\\n         * @type {!Object<string, (Array<Style>|string)>}\\n         */\\n        _this.sharedStyles_ = {};\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        _this.showPointNames_ = options.showPointNames !== undefined ?\\n            options.showPointNames : true;\\n        return _this;\\n    }\\n    /**\\n     * @param {Node} node Node.\\n     * @param {Array<*>} objectStack Object stack.\\n     * @private\\n     * @return {Array<Feature>|undefined} Features.\\n     */\\n    KML.prototype.readDocumentOrFolder_ = function (node, objectStack) {\\n        // FIXME use scope somehow\\n        var parsersNS = makeStructureNS(NAMESPACE_URIS, {\\n            'Document': makeArrayExtender(this.readDocumentOrFolder_, this),\\n            'Folder': makeArrayExtender(this.readDocumentOrFolder_, this),\\n            'Placemark': makeArrayPusher(this.readPlacemark_, this),\\n            'Style': this.readSharedStyle_.bind(this),\\n            'StyleMap': this.readSharedStyleMap_.bind(this)\\n        });\\n        /** @type {Array<Feature>} */\\n        var features = pushParseAndPop([], parsersNS, node, objectStack, this);\\n        if (features) {\\n            return features;\\n        }\\n        else {\\n            return undefined;\\n        }\\n    };\\n    /**\\n     * @param {Element} node Node.\\n     * @param {Array<*>} objectStack Object stack.\\n     * @private\\n     * @return {Feature|undefined} Feature.\\n     */\\n    KML.prototype.readPlacemark_ = function (node, objectStack) {\\n        var object = pushParseAndPop({ 'geometry': null }, PLACEMARK_PARSERS, node, objectStack);\\n        if (!object) {\\n            return undefined;\\n        }\\n        var feature = new Feature();\\n        var id = node.getAttribute('id');\\n        if (id !== null) {\\n            feature.setId(id);\\n        }\\n        var options = /** @type {import(\\\"./Feature.js\\\").ReadOptions} */ (objectStack[0]);\\n        var geometry = object['geometry'];\\n        if (geometry) {\\n            transformGeometryWithOptions(geometry, false, options);\\n        }\\n        feature.setGeometry(geometry);\\n        delete object['geometry'];\\n        if (this.extractStyles_) {\\n            var style = object['Style'];\\n            var styleUrl = object['styleUrl'];\\n            var styleFunction = createFeatureStyleFunction(style, styleUrl, this.defaultStyle_, this.sharedStyles_, this.showPointNames_);\\n            feature.setStyle(styleFunction);\\n        }\\n        delete object['Style'];\\n        // we do not remove the styleUrl property from the object, so it\\n        // gets stored on feature when setProperties is called\\n        feature.setProperties(object, true);\\n        return feature;\\n    };\\n    /**\\n     * @param {Element} node Node.\\n     * @param {Array<*>} objectStack Object stack.\\n     * @private\\n     */\\n    KML.prototype.readSharedStyle_ = function (node, objectStack) {\\n        var id = node.getAttribute('id');\\n        if (id !== null) {\\n            var style = readStyle(node, objectStack);\\n            if (style) {\\n                var styleUri = void 0;\\n                var baseURI = node.baseURI;\\n                if (!baseURI || baseURI == 'about:blank') {\\n                    baseURI = window.location.href;\\n                }\\n                if (baseURI) {\\n                    var url = new URL('#' + id, baseURI);\\n                    styleUri = url.href;\\n                }\\n                else {\\n                    styleUri = '#' + id;\\n                }\\n                this.sharedStyles_[styleUri] = style;\\n            }\\n        }\\n    };\\n    /**\\n     * @param {Element} node Node.\\n     * @param {Array<*>} objectStack Object stack.\\n     * @private\\n     */\\n    KML.prototype.readSharedStyleMap_ = function (node, objectStack) {\\n        var id = node.getAttribute('id');\\n        if (id === null) {\\n            return;\\n        }\\n        var styleMapValue = readStyleMapValue(node, objectStack);\\n        if (!styleMapValue) {\\n            return;\\n        }\\n        var styleUri;\\n        var baseURI = node.baseURI;\\n        if (!baseURI || baseURI == 'about:blank') {\\n            baseURI = window.location.href;\\n        }\\n        if (baseURI) {\\n            var url = new URL('#' + id, baseURI);\\n            styleUri = url.href;\\n        }\\n        else {\\n            styleUri = '#' + id;\\n        }\\n        this.sharedStyles_[styleUri] = styleMapValue;\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    KML.prototype.readFeatureFromNode = function (node, opt_options) {\\n        if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\\n            return null;\\n        }\\n        var feature = this.readPlacemark_(node, [this.getReadOptions(node, opt_options)]);\\n        if (feature) {\\n            return feature;\\n        }\\n        else {\\n            return null;\\n        }\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    KML.prototype.readFeaturesFromNode = function (node, opt_options) {\\n        if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\\n            return [];\\n        }\\n        var features;\\n        var localName = node.localName;\\n        if (localName == 'Document' || localName == 'Folder') {\\n            features = this.readDocumentOrFolder_(node, [this.getReadOptions(node, opt_options)]);\\n            if (features) {\\n                return features;\\n            }\\n            else {\\n                return [];\\n            }\\n        }\\n        else if (localName == 'Placemark') {\\n            var feature = this.readPlacemark_(node, [this.getReadOptions(node, opt_options)]);\\n            if (feature) {\\n                return [feature];\\n            }\\n            else {\\n                return [];\\n            }\\n        }\\n        else if (localName == 'kml') {\\n            features = [];\\n            for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\\n                var fs = this.readFeaturesFromNode(n, opt_options);\\n                if (fs) {\\n                    extend(features, fs);\\n                }\\n            }\\n            return features;\\n        }\\n        else {\\n            return [];\\n        }\\n    };\\n    /**\\n     * Read the name of the KML.\\n     *\\n     * @param {Document|Element|string} source Source.\\n     * @return {string|undefined} Name.\\n     * @api\\n     */\\n    KML.prototype.readName = function (source) {\\n        if (!source) {\\n            return undefined;\\n        }\\n        else if (typeof source === 'string') {\\n            var doc = parse(source);\\n            return this.readNameFromDocument(doc);\\n        }\\n        else if (isDocument(source)) {\\n            return this.readNameFromDocument(/** @type {Document} */ (source));\\n        }\\n        else {\\n            return this.readNameFromNode(/** @type {Element} */ (source));\\n        }\\n    };\\n    /**\\n     * @param {Document} doc Document.\\n     * @return {string|undefined} Name.\\n     */\\n    KML.prototype.readNameFromDocument = function (doc) {\\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\\n            if (n.nodeType == Node.ELEMENT_NODE) {\\n                var name_1 = this.readNameFromNode(/** @type {Element} */ (n));\\n                if (name_1) {\\n                    return name_1;\\n                }\\n            }\\n        }\\n        return undefined;\\n    };\\n    /**\\n     * @param {Element} node Node.\\n     * @return {string|undefined} Name.\\n     */\\n    KML.prototype.readNameFromNode = function (node) {\\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\\n                n.localName == 'name') {\\n                return readString(n);\\n            }\\n        }\\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\\n            var localName = n.localName;\\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\\n                (localName == 'Document' ||\\n                    localName == 'Folder' ||\\n                    localName == 'Placemark' ||\\n                    localName == 'kml')) {\\n                var name_2 = this.readNameFromNode(n);\\n                if (name_2) {\\n                    return name_2;\\n                }\\n            }\\n        }\\n        return undefined;\\n    };\\n    /**\\n     * Read the network links of the KML.\\n     *\\n     * @param {Document|Element|string} source Source.\\n     * @return {Array<Object>} Network links.\\n     * @api\\n     */\\n    KML.prototype.readNetworkLinks = function (source) {\\n        var networkLinks = [];\\n        if (typeof source === 'string') {\\n            var doc = parse(source);\\n            extend(networkLinks, this.readNetworkLinksFromDocument(doc));\\n        }\\n        else if (isDocument(source)) {\\n            extend(networkLinks, this.readNetworkLinksFromDocument(\\n            /** @type {Document} */ (source)));\\n        }\\n        else {\\n            extend(networkLinks, this.readNetworkLinksFromNode(\\n            /** @type {Element} */ (source)));\\n        }\\n        return networkLinks;\\n    };\\n    /**\\n     * @param {Document} doc Document.\\n     * @return {Array<Object>} Network links.\\n     */\\n    KML.prototype.readNetworkLinksFromDocument = function (doc) {\\n        var networkLinks = [];\\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\\n            if (n.nodeType == Node.ELEMENT_NODE) {\\n                extend(networkLinks, this.readNetworkLinksFromNode(/** @type {Element} */ (n)));\\n            }\\n        }\\n        return networkLinks;\\n    };\\n    /**\\n     * @param {Element} node Node.\\n     * @return {Array<Object>} Network links.\\n     */\\n    KML.prototype.readNetworkLinksFromNode = function (node) {\\n        var networkLinks = [];\\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\\n                n.localName == 'NetworkLink') {\\n                var obj = pushParseAndPop({}, NETWORK_LINK_PARSERS, n, []);\\n                networkLinks.push(obj);\\n            }\\n        }\\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\\n            var localName = n.localName;\\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\\n                (localName == 'Document' ||\\n                    localName == 'Folder' ||\\n                    localName == 'kml')) {\\n                extend(networkLinks, this.readNetworkLinksFromNode(n));\\n            }\\n        }\\n        return networkLinks;\\n    };\\n    /**\\n     * Read the regions of the KML.\\n     *\\n     * @param {Document|Element|string} source Source.\\n     * @return {Array<Object>} Regions.\\n     * @api\\n     */\\n    KML.prototype.readRegion = function (source) {\\n        var regions = [];\\n        if (typeof source === 'string') {\\n            var doc = parse(source);\\n            extend(regions, this.readRegionFromDocument(doc));\\n        }\\n        else if (isDocument(source)) {\\n            extend(regions, this.readRegionFromDocument(\\n            /** @type {Document} */ (source)));\\n        }\\n        else {\\n            extend(regions, this.readRegionFromNode(\\n            /** @type {Element} */ (source)));\\n        }\\n        return regions;\\n    };\\n    /**\\n     * @param {Document} doc Document.\\n     * @return {Array<Object>} Region.\\n     */\\n    KML.prototype.readRegionFromDocument = function (doc) {\\n        var regions = [];\\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\\n            if (n.nodeType == Node.ELEMENT_NODE) {\\n                extend(regions, this.readRegionFromNode(/** @type {Element} */ (n)));\\n            }\\n        }\\n        return regions;\\n    };\\n    /**\\n     * @param {Element} node Node.\\n     * @return {Array<Object>} Region.\\n     * @api\\n     */\\n    KML.prototype.readRegionFromNode = function (node) {\\n        var regions = [];\\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\\n                n.localName == 'Region') {\\n                var obj = pushParseAndPop({}, REGION_PARSERS, n, []);\\n                regions.push(obj);\\n            }\\n        }\\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\\n            var localName = n.localName;\\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\\n                (localName == 'Document' ||\\n                    localName == 'Folder' ||\\n                    localName == 'kml')) {\\n                extend(regions, this.readRegionFromNode(n));\\n            }\\n        }\\n        return regions;\\n    };\\n    /**\\n     * Encode an array of features in the KML format as an XML node. GeometryCollections,\\n     * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\\n     *\\n     * @param {Array<Feature>} features Features.\\n     * @param {import(\\\"./Feature.js\\\").WriteOptions=} opt_options Options.\\n     * @return {Node} Node.\\n     * @override\\n     * @api\\n     */\\n    KML.prototype.writeFeaturesNode = function (features, opt_options) {\\n        opt_options = this.adaptOptions(opt_options);\\n        var kml = createElementNS(NAMESPACE_URIS[4], 'kml');\\n        var xmlnsUri = 'http://www.w3.org/2000/xmlns/';\\n        kml.setAttributeNS(xmlnsUri, 'xmlns:gx', GX_NAMESPACE_URIS[0]);\\n        kml.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\\n        kml.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', SCHEMA_LOCATION);\\n        var /** @type {import(\\\"../xml.js\\\").NodeStackItem} */ context = { node: kml };\\n        /** @type {!Object<string, (Array<Feature>|Feature|undefined)>} */\\n        var properties = {};\\n        if (features.length > 1) {\\n            properties['Document'] = features;\\n        }\\n        else if (features.length == 1) {\\n            properties['Placemark'] = features[0];\\n        }\\n        var orderedKeys = KML_SEQUENCE[kml.namespaceURI];\\n        var values = makeSequence(properties, orderedKeys);\\n        pushSerializeAndPop(context, KML_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, [opt_options], orderedKeys, this);\\n        return kml;\\n    };\\n    return KML;\\n}(XMLFeature));\\n/**\\n * @param {Style|undefined} foundStyle Style.\\n * @param {string} name Name.\\n * @return {Style} style Style.\\n */\\nfunction createNameStyleFunction(foundStyle, name) {\\n    var textStyle = null;\\n    var textOffset = [0, 0];\\n    var textAlign = 'start';\\n    if (foundStyle.getImage()) {\\n        var imageSize = foundStyle.getImage().getImageSize();\\n        if (imageSize === null) {\\n            imageSize = DEFAULT_IMAGE_STYLE_SIZE;\\n        }\\n        if (imageSize.length == 2) {\\n            var imageScale = foundStyle.getImage().getScale();\\n            // Offset the label to be centered to the right of the icon, if there is\\n            // one.\\n            textOffset[0] = imageScale * imageSize[0] / 2;\\n            textOffset[1] = -imageScale * imageSize[1] / 2;\\n            textAlign = 'left';\\n        }\\n    }\\n    if (foundStyle.getText() !== null) {\\n        // clone the text style, customizing it with name, alignments and offset.\\n        // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\\n        var foundText = foundStyle.getText();\\n        textStyle = foundText.clone();\\n        textStyle.setFont(foundText.getFont() || DEFAULT_TEXT_STYLE.getFont());\\n        textStyle.setScale(foundText.getScale() || DEFAULT_TEXT_STYLE.getScale());\\n        textStyle.setFill(foundText.getFill() || DEFAULT_TEXT_STYLE.getFill());\\n        textStyle.setStroke(foundText.getStroke() || DEFAULT_TEXT_STROKE_STYLE);\\n    }\\n    else {\\n        textStyle = DEFAULT_TEXT_STYLE.clone();\\n    }\\n    textStyle.setText(name);\\n    textStyle.setOffsetX(textOffset[0]);\\n    textStyle.setOffsetY(textOffset[1]);\\n    textStyle.setTextAlign(textAlign);\\n    var nameStyle = new Style({\\n        text: textStyle\\n    });\\n    return nameStyle;\\n}\\n/**\\n * @param {Array<Style>|undefined} style Style.\\n * @param {string} styleUrl Style URL.\\n * @param {Array<Style>} defaultStyle Default style.\\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles Shared styles.\\n * @param {boolean|undefined} showPointNames true to show names for point placemarks.\\n * @return {import(\\\"../style/Style.js\\\").StyleFunction} Feature style function.\\n */\\nfunction createFeatureStyleFunction(style, styleUrl, defaultStyle, sharedStyles, showPointNames) {\\n    return (\\n    /**\\n     * @param {Feature} feature feature.\\n     * @param {number} resolution Resolution.\\n     * @return {Array<Style>} Style.\\n     */\\n    function (feature, resolution) {\\n        var drawName = showPointNames;\\n        /** @type {Style|undefined} */\\n        var nameStyle;\\n        var name = '';\\n        if (drawName) {\\n            var geometry = feature.getGeometry();\\n            if (geometry) {\\n                drawName = geometry.getType() === GeometryType.POINT;\\n            }\\n        }\\n        if (drawName) {\\n            name = /** @type {string} */ (feature.get('name'));\\n            drawName = drawName && !!name;\\n        }\\n        if (style) {\\n            if (drawName) {\\n                nameStyle = createNameStyleFunction(style[0], name);\\n                return style.concat(nameStyle);\\n            }\\n            return style;\\n        }\\n        if (styleUrl) {\\n            var foundStyle = findStyle(styleUrl, defaultStyle, sharedStyles);\\n            if (drawName) {\\n                nameStyle = createNameStyleFunction(foundStyle[0], name);\\n                return foundStyle.concat(nameStyle);\\n            }\\n            return foundStyle;\\n        }\\n        if (drawName) {\\n            nameStyle = createNameStyleFunction(defaultStyle[0], name);\\n            return defaultStyle.concat(nameStyle);\\n        }\\n        return defaultStyle;\\n    });\\n}\\n/**\\n * @param {Array<Style>|string|undefined} styleValue Style value.\\n * @param {Array<Style>} defaultStyle Default style.\\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles\\n * Shared styles.\\n * @return {Array<Style>} Style.\\n */\\nfunction findStyle(styleValue, defaultStyle, sharedStyles) {\\n    if (Array.isArray(styleValue)) {\\n        return styleValue;\\n    }\\n    else if (typeof styleValue === 'string') {\\n        // KML files in the wild occasionally forget the leading `#` on styleUrls\\n        // defined in the same document.  Add a leading `#` if it enables to find\\n        // a style.\\n        if (!(styleValue in sharedStyles) && ('#' + styleValue in sharedStyles)) {\\n            styleValue = '#' + styleValue;\\n        }\\n        return findStyle(sharedStyles[styleValue], defaultStyle, sharedStyles);\\n    }\\n    else {\\n        return defaultStyle;\\n    }\\n}\\n/**\\n * @param {Node} node Node.\\n * @return {import(\\\"../color.js\\\").Color|undefined} Color.\\n */\\nfunction readColor(node) {\\n    var s = getAllTextContent(node, false);\\n    // The KML specification states that colors should not include a leading `#`\\n    // but we tolerate them.\\n    var m = /^\\\\s*#?\\\\s*([0-9A-Fa-f]{8})\\\\s*$/.exec(s);\\n    if (m) {\\n        var hexColor = m[1];\\n        return [\\n            parseInt(hexColor.substr(6, 2), 16),\\n            parseInt(hexColor.substr(4, 2), 16),\\n            parseInt(hexColor.substr(2, 2), 16),\\n            parseInt(hexColor.substr(0, 2), 16) / 255\\n        ];\\n    }\\n    else {\\n        return undefined;\\n    }\\n}\\n/**\\n * @param {Node} node Node.\\n * @return {Array<number>|undefined} Flat coordinates.\\n */\\nexport function readFlatCoordinates(node) {\\n    var s = getAllTextContent(node, false);\\n    var flatCoordinates = [];\\n    // The KML specification states that coordinate tuples should not include\\n    // spaces, but we tolerate them.\\n    var re = /^\\\\s*([+\\\\-]?\\\\d*\\\\.?\\\\d+(?:e[+\\\\-]?\\\\d+)?)\\\\s*,\\\\s*([+\\\\-]?\\\\d*\\\\.?\\\\d+(?:e[+\\\\-]?\\\\d+)?)(?:\\\\s*,\\\\s*([+\\\\-]?\\\\d*\\\\.?\\\\d+(?:e[+\\\\-]?\\\\d+)?))?\\\\s*/i;\\n    var m;\\n    while ((m = re.exec(s))) {\\n        var x = parseFloat(m[1]);\\n        var y = parseFloat(m[2]);\\n        var z = m[3] ? parseFloat(m[3]) : 0;\\n        flatCoordinates.push(x, y, z);\\n        s = s.substr(m[0].length);\\n    }\\n    if (s !== '') {\\n        return undefined;\\n    }\\n    return flatCoordinates;\\n}\\n/**\\n * @param {Node} node Node.\\n * @return {string} URI.\\n */\\nfunction readURI(node) {\\n    var s = getAllTextContent(node, false).trim();\\n    var baseURI = node.baseURI;\\n    if (!baseURI || baseURI == 'about:blank') {\\n        baseURI = window.location.href;\\n    }\\n    if (baseURI) {\\n        var url = new URL(s, baseURI);\\n        return url.href;\\n    }\\n    else {\\n        return s;\\n    }\\n}\\n/**\\n * @param {Element} node Node.\\n * @return {Vec2} Vec2.\\n */\\nfunction readVec2(node) {\\n    var xunits = node.getAttribute('xunits');\\n    var yunits = node.getAttribute('yunits');\\n    var origin;\\n    if (xunits !== 'insetPixels') {\\n        if (yunits !== 'insetPixels') {\\n            origin = IconOrigin.BOTTOM_LEFT;\\n        }\\n        else {\\n            origin = IconOrigin.TOP_LEFT;\\n        }\\n    }\\n    else {\\n        if (yunits !== 'insetPixels') {\\n            origin = IconOrigin.BOTTOM_RIGHT;\\n        }\\n        else {\\n            origin = IconOrigin.TOP_RIGHT;\\n        }\\n    }\\n    return {\\n        x: parseFloat(node.getAttribute('x')),\\n        xunits: ICON_ANCHOR_UNITS_MAP[xunits],\\n        y: parseFloat(node.getAttribute('y')),\\n        yunits: ICON_ANCHOR_UNITS_MAP[yunits],\\n        origin: origin\\n    };\\n}\\n/**\\n * @param {Node} node Node.\\n * @return {number|undefined} Scale.\\n */\\nfunction readScale(node) {\\n    return readDecimal(node);\\n}\\n/**\\n * @const\\n * @type {Object<string, Object<string, import(\\\"../xml.js\\\").Parser>>}\\n */\\nvar STYLE_MAP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\\n    'Pair': pairDataParser\\n});\\n/**\\n * @param {Element} node Node.\\n * @param {Array<*>} objectStack Object stack.\\n * @return {Array<Style>|string|undefined} StyleMap.\\n */\\nfunction readStyleMapValue(node, objectStack) {\\n    return pushParseAndPop(undefined, STYLE_MAP_PARSERS, node, objectStack);\\n}\\n/**\\n * @const\\n * @type {Object<string, Object<string, import(\\\"../xml.js\\\").Parser>>}\\n */\\nvar ICON_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\\n    'Icon': makeObjectPropertySetter(readIcon),\\n    'heading': makeObjectPropertySetter(readDecimal),\\n    'hotSpot': makeObjectPropertySetter(readVec2),\\n    'scale': makeObjectPropertySetter(readScale)\\n});\\n/**\\n * @param {Element} node Node.\\n * @param {Array<*>} objectStack Object stack.\\n */\\nfunction iconStyleParser(node, objectStack) {\\n    // FIXME refreshMode\\n    // FIXME refreshInterval\\n    // FIXME viewRefreshTime\\n    // FIXME viewBoundScale\\n    // FIXME viewFormat\\n    // FIXME httpQuery\\n    var object = pushParseAndPop({}, ICON_STYLE_PARSERS, node, objectStack);\\n    if (!object) {\\n        return;\\n    }\\n    var styleObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\\n    var IconObject = 'Icon' in object ? object['Icon'] : {};\\n    var drawIcon = (!('Icon' in object) || Object.keys(IconObject).length > 0);\\n    var src;\\n    var href = /** @type {string|undefined} */ (IconObject['href']);\\n    if (href) {\\n        src = href;\\n    }\\n    else if (drawIcon) {\\n        src = DEFAULT_IMAGE_STYLE_SRC;\\n    }\\n    var anchor, anchorXUnits, anchorYUnits;\\n    var anchorOrigin = IconOrigin.BOTTOM_LEFT;\\n    var hotSpot = /** @type {Vec2|undefined} */ (object['hotSpot']);\\n    if (hotSpot) {\\n        anchor = [hotSpot.x, hotSpot.y];\\n        anchorXUnits = hotSpot.xunits;\\n        anchorYUnits = hotSpot.yunits;\\n        anchorOrigin = hotSpot.origin;\\n    }\\n    else if (src === DEFAULT_IMAGE_STYLE_SRC) {\\n        anchor = DEFAULT_IMAGE_STYLE_ANCHOR;\\n        anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\\n        anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\\n    }\\n    else if (/^http:\\\\/\\\\/maps\\\\.(?:google|gstatic)\\\\.com\\\\//.test(src)) {\\n        anchor = [0.5, 0];\\n        anchorXUnits = IconAnchorUnits.FRACTION;\\n        anchorYUnits = IconAnchorUnits.FRACTION;\\n    }\\n    var offset;\\n    var x = /** @type {number|undefined} */ (IconObject['x']);\\n    var y = /** @type {number|undefined} */ (IconObject['y']);\\n    if (x !== undefined && y !== undefined) {\\n        offset = [x, y];\\n    }\\n    var size;\\n    var w = /** @type {number|undefined} */ (IconObject['w']);\\n    var h = /** @type {number|undefined} */ (IconObject['h']);\\n    if (w !== undefined && h !== undefined) {\\n        size = [w, h];\\n    }\\n    var rotation;\\n    var heading = /** @type {number} */ (object['heading']);\\n    if (heading !== undefined) {\\n        rotation = toRadians(heading);\\n    }\\n    var scale = /** @type {number|undefined} */ (object['scale']);\\n    if (drawIcon) {\\n        if (src == DEFAULT_IMAGE_STYLE_SRC) {\\n            size = DEFAULT_IMAGE_STYLE_SIZE;\\n            if (scale === undefined) {\\n                scale = DEFAULT_IMAGE_SCALE_MULTIPLIER;\\n            }\\n        }\\n        var imageStyle = new Icon({\\n            anchor: anchor,\\n            anchorOrigin: anchorOrigin,\\n            anchorXUnits: anchorXUnits,\\n            anchorYUnits: anchorYUnits,\\n            crossOrigin: 'anonymous',\\n            offset: offset,\\n            offsetOrigin: IconOrigin.BOTTOM_LEFT,\\n            rotation: rotation,\\n            scale: scale,\\n            size: size,\\n            src: src\\n        });\\n        styleObject['imageStyle'] = imageStyle;\\n    }\\n    else {\\n        // handle the case when we explicitly want to draw no icon.\\n        styleObject['imageStyle'] = DEFAULT_NO_IMAGE_STYLE;\\n    }\\n}\\n/**\\n * @const\\n * @type {Object<string, Object<string, import(\\\"../xml.js\\\").Parser>>}\\n */\\nvar LABEL_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\\n    'color': makeObjectPropertySetter(readColor),\\n    'scale': makeObjectPropertySetter(readScale)\\n});\\n/**\\n * @param {Element} node Node.\\n * @param {Array<*>} objectStack Object stack.\\n */\\nfunction labelStyleParser(node, objectStack) {\\n    // FIXME colorMode\\n    var object = pushParseAndPop({}, LABEL_STYLE_PARSERS, node, objectStack);\\n    if (!object) {\\n        return;\\n    }\\n    var styleObject = objectStack[objectStack.length - 1];\\n    var textStyle = new Text({\\n        fill: new Fill({\\n            color: /** @type {import(\\\"../color.js\\\").Color} */ ('color' in object ? object['color'] : DEFAULT_COLOR)\\n        }),\\n        scale: /** @type {number|undefined} */ (object['scale'])\\n    });\\n    styleObject['textStyle'] = textStyle;\\n}\\n/**\\n * @const\\n * @type {Object<string, Object<string, import(\\\"../xml.js\\\").Parser>>}\\n */\\nvar LINE_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\\n    'color': makeObjectPropertySetter(readColor),\\n    'width': makeObjectPropertySetter(readDecimal)\\n});\\n/**\\n * @param {Element} node Node.\\n * @param {Array<*>} objectStack Object stack.\\n */\\nfunction lineStyleParser(node, objectStack) {\\n    // FIXME colorMode\\n    // FIXME gx:outerColor\\n    // FIXME gx:outerWidth\\n    // FIXME gx:physicalWidth\\n    // FIXME gx:labelVisibility\\n    var object = pushParseAndPop({}, LINE_STYLE_PARSERS, node, objectStack);\\n    if (!object) {\\n        return;\\n    }\\n    var styleObject = objectStack[objectStack.length - 1];\\n    var strokeStyle = new Stroke({\\n        color: /** @type {import(\\\"../color.js\\\").Color} */ ('color' in object ? object['color'] : DEFAULT_COLOR),\\n        width: /** @type {number} */ ('width' in object ? object['width'] : 1)\\n    });\\n    styleObject['strokeStyle'] = strokeStyle;\\n}\\n/**\\n * @const\\n * @type {Object<string, Object<string, import(\\\"../xml.js\\\").Parser>>}\\n */\\nvar POLY_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\\n    'color': makeObjectPropertySetter(readColor),\\n    'fill': makeObjectPropertySetter(readBoolean),\\n    'outline': makeObjectPropertySetter(readBoolean)\\n});\\n/**\\n * @param {Element} node Node.\\n * @param {Array<*>} objectStack Object stack.\\n */\\nfunction polyStyleParser(node, objectStack) {\\n    // FIXME colorMode\\n    var object = pushParseAndPop({}, POLY_STYLE_PARSERS, node, objectStack);\\n    if (!object) {\\n        return;\\n    }\\n    var styleObject = objectStack[objectStack.length - 1];\\n    var fillStyle = new Fill({\\n        color: /** @type {import(\\\"../color.js\\\").Color} */ ('color' in object ? object['color'] : DEFAULT_COLOR)\\n    });\\n    styleObject['fillStyle'] = fillStyle;\\n    var fill = /** @type {boolean|undefined} */ (object['fill']);\\n    if (fill !== undefined) {\\n        styleObject['fill'] = fill;\\n    }\\n    var outline = /** @type {boolean|undefined} */ (object['outline']);\\n    if (outline !== undefined) {\\n        styleObject['outline'] = outline;\\n    }\\n}\\n/**\\n * @const\\n * @type {Object<string, Object<string, import(\\\"../xml.js\\\").Parser>>}\\n */\\nvar FLAT_LINEAR_RING_PARSERS = makeStructureNS(NAMESPACE_URIS, {\\n    'coordinates': makeReplacer(readFlatCoordinates)\\n});\\n/**\\n * @param {Element} node Node.\\n * @param {Array<*>} objectStack Object stack.\\n * @return {Array<number>} LinearRing flat coordinates.\\n */\\nfunction readFlatLinearRing(node, objectStack) {\\n    return pushParseAndPop(null, FLAT_LINEAR_RING_PARSERS, node, objectStack);\\n}\\n/**\\n * @param {Node} node Node.\\n * @param {Array<*>} objectStack Object stack.\\n */\\nfunction gxCoordParser(node, objectStack) {\\n    var gxTrackObject = /** @type {GxTrackObject} */ (objectStack[objectStack.length - 1]);\\n    var flatCoordinates = gxTrackObject.flatCoordinates;\\n    var s = getAllTextContent(node, false);\\n    var re = /^\\\\s*([+\\\\-]?\\\\d+(?:\\\\.\\\\d*)?(?:e[+\\\\-]?\\\\d*)?)\\\\s+([+\\\\-]?\\\\d+(?:\\\\.\\\\d*)?(?:e[+\\\\-]?\\\\d*)?)\\\\s+([+\\\\-]?\\\\d+(?:\\\\.\\\\d*)?(?:e[+\\\\-]?\\\\d*)?)\\\\s*$/i;\\n    var m = re.exec(s);\\n    if (m) {\\n        var x = parseFloat(m[1]);\\n        var y = parseFloat(m[2]);\\n        var z = parseFloat(m[3]);\\n        flatCoordinates.push(x, y, z, 0);\\n    }\\n    else {\\n        flatCoordinates.push(0, 0, 0, 0);\\n    }\\n}\\n/**\\n * @const\\n * @type {Object<string, Object<string, import(\\\"../xml.js\\\").Parser>>}\\n */\\nvar GX_MULTITRACK_GEOMETRY_PARSERS = makeStructureNS(GX_NAMESPACE_URIS, {\\n    'Track': makeArrayPusher(readGxTrack)\\n});\\n/**\\n * @param {Element} node Node.\\n * @param {Array<*>} objectStack Object stack.\\n * @return {MultiLineString|undefined} MultiLineString.\\n */\\nfunction readGxMultiTrack(node, objectStack) {\\n    var lineStrings = pushParseAndPop([], GX_MULTITRACK_GEOMETRY_PARSERS, node, objectStack);\\n    if (!lineStrings) {\\n        return undefined;\\n    }\\n    return new MultiLineString(lineStrings);\\n}\\n/**\\n * @const\\n * @type {Object<string, Object<string, import(\\\"../xml.js\\\").Parser>>}\\n */\\nvar GX_TRACK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\\n    'when': whenParser\\n}, makeStructureNS(GX_NAMESPACE_URIS, {\\n    'coord': gxCoordParser\\n}));\\n/**\\n * @param {Element} node Node.\\n * @param {Array<*>} objectStack Object stack.\\n * @return {LineString|undefined} LineString.\\n */\\nfunction readGxTrack(node, objectStack) {\\n    var gxTrackObject = pushParseAndPop(\\n    /** @type {GxTrackObject} */ ({\\n        flatCoordinates: [],\\n        whens: []\\n    }), GX_TRACK_PARSERS, node, objectStack);\\n    if (!gxTrackObject) {\\n        return undefined;\\n    }\\n    var flatCoordinates = gxTrackObject.flatCoordinates;\\n    var whens = gxTrackObject.whens;\\n    for (var i = 0, ii = Math.min(flatCoordinates.length, whens.length); i < ii; ++i) {\\n        flatCoordinates[4 * i + 3] = whens[i];\\n    }\\n    return new LineString(flatCoordinates, GeometryLayout.XYZM);\\n}\\n/**\\n * @const\\n * @type {Object<string, Object<string, import(\\\"../xml.js\\\").Parser>>}\\n */\\nvar ICON_PARSERS = makeStructureNS(NAMESPACE_URIS, {\\n    'href': makeObjectPropertySetter(readURI)\\n}, makeStructureNS(GX_NAMESPACE_URIS, {\\n    'x': makeObjectPropertySetter(readDecimal),\\n    'y': makeObjectPropertySetter(readDecimal),\\n    'w': makeObjectPropertySetter(readDecimal),\\n    'h': makeObjectPropertySetter(readDecimal)\\n}));\\n/**\\n * @param {Element} node Node.\\n * @param {Array<*>} objectStack Object stack.\\n * @return {Object} Icon object.\\n */\\nfunction readIcon(node, objectStack) {\\n    var iconObject = pushParseAndPop({}, ICON_PARSERS, node, objectStack);\\n    if (iconObject) {\\n        return iconObject;\\n    }\\n    else {\\n        return null;\\n    }\\n}\\n/**\\n * @const\\n * @type {Object<string, Object<string, import(\\\"../xml.js\\\").Parser>>}\\n */\\nvar GEOMETRY_FLAT_COORDINATES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\\n    'coordinates': makeReplacer(readFlatCoordinates)\\n});\\n/**\\n * @param {Element} node Node.\\n * @param {Array<*>} objectStack Object stack.\\n * @return {Array<number>} Flat coordinates.\\n */\\nfunction readFlatCoordinatesFromNode(node, objectStack) {\\n    return pushParseAndPop(null, GEOMETRY_FLAT_COORDINATES_PARSERS, node, objectStack);\\n}\\n/**\\n * @const\\n * @type {Object<string, Object<string, import(\\\"../xml.js\\\").Parser>>}\\n */\\nvar EXTRUDE_AND_ALTITUDE_MODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\\n    'extrude': makeObjectPropertySetter(readBoolean),\\n    'tessellate': makeObjectPropertySetter(readBoolean),\\n    'altitudeMode': makeObjectPropertySetter(readString)\\n});\\n/**\\n * @param {Element} node Node.\\n * @param {Array<*>} objectStack Object stack.\\n * @return {LineString|undefined} LineString.\\n */\\nfunction readLineString(node, objectStack) {\\n    var properties = pushParseAndPop({}, EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\\n    var flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\\n    if (flatCoordinates) {\\n        var lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\\n        lineString.setProperties(properties, true);\\n        return lineString;\\n    }\\n    else {\\n        return undefined;\\n    }\\n}\\n/**\\n * @param {Element} node Node.\\n * @param {Array<*>} objectStack Object stack.\\n * @return {Polygon|undefined} Polygon.\\n */\\nfunction readLinearRing(node, objectStack) {\\n    var properties = pushParseAndPop({}, EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\\n    var flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\\n    if (flatCoordinates) {\\n        var polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, [flatCoordinates.length]);\\n        polygon.setProperties(properties, true);\\n        return polygon;\\n    }\\n    else {\\n        return undefined;\\n    }\\n}\\n/**\\n * @const\\n * @type {Object<string, Object<string, import(\\\"../xml.js\\\").Parser>>}\\n */\\nvar MULTI_GEOMETRY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\\n    'LineString': makeArrayPusher(readLineString),\\n    'LinearRing': makeArrayPusher(readLinearRing),\\n    'MultiGeometry': makeArrayPusher(readMultiGeometry),\\n    'Point': makeArrayPusher(readPoint),\\n    'Polygon': makeArrayPusher(readPolygon)\\n});\\n/**\\n * @param {Element} node Node.\\n * @param {Array<*>} objectStack Object stack.\\n * @return {import(\\\"../geom/Geometry.js\\\").default} Geometry.\\n */\\nfunction readMultiGeometry(node, objectStack) {\\n    var geometries = pushParseAndPop([], MULTI_GEOMETRY_PARSERS, node, objectStack);\\n    if (!geometries) {\\n        return null;\\n    }\\n    if (geometries.length === 0) {\\n        return new GeometryCollection(geometries);\\n    }\\n    var multiGeometry;\\n    var homogeneous = true;\\n    var type = geometries[0].getType();\\n    var geometry;\\n    for (var i = 1, ii = geometries.length; i < ii; ++i) {\\n        geometry = geometries[i];\\n        if (geometry.getType() != type) {\\n            homogeneous = false;\\n            break;\\n        }\\n    }\\n    if (homogeneous) {\\n        var layout = void 0;\\n        var flatCoordinates = void 0;\\n        if (type == GeometryType.POINT) {\\n            var point = geometries[0];\\n            layout = point.getLayout();\\n            flatCoordinates = point.getFlatCoordinates();\\n            for (var i = 1, ii = geometries.length; i < ii; ++i) {\\n                geometry = geometries[i];\\n                extend(flatCoordinates, geometry.getFlatCoordinates());\\n            }\\n            multiGeometry = new MultiPoint(flatCoordinates, layout);\\n            setCommonGeometryProperties(multiGeometry, geometries);\\n        }\\n        else if (type == GeometryType.LINE_STRING) {\\n            multiGeometry = new MultiLineString(geometries);\\n            setCommonGeometryProperties(multiGeometry, geometries);\\n        }\\n        else if (type == GeometryType.POLYGON) {\\n            multiGeometry = new MultiPolygon(geometries);\\n            setCommonGeometryProperties(multiGeometry, geometries);\\n        }\\n        else if (type == GeometryType.GEOMETRY_COLLECTION) {\\n            multiGeometry = new GeometryCollection(geometries);\\n        }\\n        else {\\n            assert(false, 37); // Unknown geometry type found\\n        }\\n    }\\n    else {\\n        multiGeometry = new GeometryCollection(geometries);\\n    }\\n    return (\\n    /** @type {import(\\\"../geom/Geometry.js\\\").default} */ (multiGeometry));\\n}\\n/**\\n * @param {Element} node Node.\\n * @param {Array<*>} objectStack Object stack.\\n * @return {Point|undefined} Point.\\n */\\nfunction readPoint(node, objectStack) {\\n    var properties = pushParseAndPop({}, EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\\n    var flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\\n    if (flatCoordinates) {\\n        var point = new Point(flatCoordinates, GeometryLayout.XYZ);\\n        point.setProperties(properties, true);\\n        return point;\\n    }\\n    else {\\n        return undefined;\\n    }\\n}\\n/**\\n * @const\\n * @type {Object<string, Object<string, import(\\\"../xml.js\\\").Parser>>}\\n */\\nvar FLAT_LINEAR_RINGS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\\n    'innerBoundaryIs': innerBoundaryIsParser,\\n    'outerBoundaryIs': outerBoundaryIsParser\\n});\\n/**\\n * @param {Element} node Node.\\n * @param {Array<*>} objectStack Object stack.\\n * @return {Polygon|undefined} Polygon.\\n */\\nfunction readPolygon(node, objectStack) {\\n    var properties = pushParseAndPop(/** @type {Object<string,*>} */ ({}), EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\\n    var flatLinearRings = pushParseAndPop([null], FLAT_LINEAR_RINGS_PARSERS, node, objectStack);\\n    if (flatLinearRings && flatLinearRings[0]) {\\n        var flatCoordinates = flatLinearRings[0];\\n        var ends = [flatCoordinates.length];\\n        for (var i = 1, ii = flatLinearRings.length; i < ii; ++i) {\\n            extend(flatCoordinates, flatLinearRings[i]);\\n            ends.push(flatCoordinates.length);\\n        }\\n        var polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\\n        polygon.setProperties(properties, true);\\n        return polygon;\\n    }\\n    else {\\n        return undefined;\\n    }\\n}\\n/**\\n * @const\\n * @type {Object<string, Object<string, import(\\\"../xml.js\\\").Parser>>}\\n */\\nvar STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\\n    'IconStyle': iconStyleParser,\\n    'LabelStyle': labelStyleParser,\\n    'LineStyle': lineStyleParser,\\n    'PolyStyle': polyStyleParser\\n});\\n/**\\n * @param {Element} node Node.\\n * @param {Array<*>} objectStack Object stack.\\n * @return {Array<Style>} Style.\\n */\\nfunction readStyle(node, objectStack) {\\n    var styleObject = pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\\n    if (!styleObject) {\\n        return null;\\n    }\\n    var fillStyle = /** @type {Fill} */ ('fillStyle' in styleObject ?\\n        styleObject['fillStyle'] : DEFAULT_FILL_STYLE);\\n    var fill = /** @type {boolean|undefined} */ (styleObject['fill']);\\n    if (fill !== undefined && !fill) {\\n        fillStyle = null;\\n    }\\n    var imageStyle;\\n    if ('imageStyle' in styleObject) {\\n        if (styleObject['imageStyle'] != DEFAULT_NO_IMAGE_STYLE) {\\n            imageStyle = styleObject['imageStyle'];\\n        }\\n    }\\n    else {\\n        imageStyle = DEFAULT_IMAGE_STYLE;\\n    }\\n    var textStyle = /** @type {Text} */ ('textStyle' in styleObject ?\\n        styleObject['textStyle'] : DEFAULT_TEXT_STYLE);\\n    var strokeStyle = /** @type {Stroke} */ ('strokeStyle' in styleObject ?\\n        styleObject['strokeStyle'] : DEFAULT_STROKE_STYLE);\\n    var outline = /** @type {boolean|undefined} */ (styleObject['outline']);\\n    if (outline !== undefined && !outline) {\\n        strokeStyle = null;\\n    }\\n    return [new Style({\\n            fill: fillStyle,\\n            image: imageStyle,\\n            stroke: strokeStyle,\\n            text: textStyle,\\n            zIndex: undefined // FIXME\\n        })];\\n}\\n/**\\n * Reads an array of geometries and creates arrays for common geometry\\n * properties. Then sets them to the multi geometry.\\n * @param {MultiPoint|MultiLineString|MultiPolygon} multiGeometry A multi-geometry.\\n * @param {Array<import(\\\"../geom/Geometry.js\\\").default>} geometries List of geometries.\\n */\\nfunction setCommonGeometryProperties(multiGeometry, geometries) {\\n    var ii = geometries.length;\\n    var extrudes = new Array(geometries.length);\\n    var tessellates = new Array(geometries.length);\\n    var altitudeModes = new Array(geometries.length);\\n    var hasExtrude, hasTessellate, hasAltitudeMode;\\n    hasExtrude = hasTessellate = hasAltitudeMode = false;\\n    for (var i = 0; i < ii; ++i) {\\n        var geometry = geometries[i];\\n        extrudes[i] = geometry.get('extrude');\\n        tessellates[i] = geometry.get('tessellate');\\n        altitudeModes[i] = geometry.get('altitudeMode');\\n        hasExtrude = hasExtrude || extrudes[i] !== undefined;\\n        hasTessellate = hasTessellate || tessellates[i] !== undefined;\\n        hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\\n    }\\n    if (hasExtrude) {\\n        multiGeometry.set('extrude', extrudes);\\n    }\\n    if (hasTessellate) {\\n        multiGeometry.set('tessellate', tessellates);\\n    }\\n    if (hasAltitudeMode) {\\n        multiGeometry.set('altitudeMode', altitudeModes);\\n    }\\n}\\n/**\\n * @const\\n * @type {Object<string, Object<string, import(\\\"../xml.js\\\").Parser>>}\\n */\\nvar DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\\n    'displayName': makeObjectPropertySetter(readString),\\n    'value': makeObjectPropertySetter(readString)\\n});\\n/**\\n * @param {Element} node Node.\\n * @param {Array<*>} objectStack Object stack.\\n */\\nfunction dataParser(node, objectStack) {\\n    var name = node.getAttribute('name');\\n    parseNode(DATA_PARSERS, node, objectStack);\\n    var featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\\n    if (name !== null) {\\n        featureObject[name] = featureObject.value;\\n    }\\n    else if (featureObject.displayName !== null) {\\n        featureObject[featureObject.displayName] = featureObject.value;\\n    }\\n    delete featureObject['value'];\\n}\\n/**\\n * @const\\n * @type {Object<string, Object<string, import(\\\"../xml.js\\\").Parser>>}\\n */\\nvar EXTENDED_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\\n    'Data': dataParser,\\n    'SchemaData': schemaDataParser\\n});\\n/**\\n * @param {Element} node Node.\\n * @param {Array<*>} objectStack Object stack.\\n */\\nfunction extendedDataParser(node, objectStack) {\\n    parseNode(EXTENDED_DATA_PARSERS, node, objectStack);\\n}\\n/**\\n * @param {Element} node Node.\\n * @param {Array<*>} objectStack Object stack.\\n */\\nfunction regionParser(node, objectStack) {\\n    parseNode(REGION_PARSERS, node, objectStack);\\n}\\n/**\\n * @const\\n * @type {Object<string, Object<string, import(\\\"../xml.js\\\").Parser>>}\\n */\\nvar PAIR_PARSERS = makeStructureNS(NAMESPACE_URIS, {\\n    'Style': makeObjectPropertySetter(readStyle),\\n    'key': makeObjectPropertySetter(readString),\\n    'styleUrl': makeObjectPropertySetter(readURI)\\n});\\n/**\\n * @param {Element} node Node.\\n * @param {Array<*>} objectStack Object stack.\\n */\\nfunction pairDataParser(node, objectStack) {\\n    var pairObject = pushParseAndPop({}, PAIR_PARSERS, node, objectStack);\\n    if (!pairObject) {\\n        return;\\n    }\\n    var key = /** @type {string|undefined} */ (pairObject['key']);\\n    if (key && key == 'normal') {\\n        var styleUrl = /** @type {string|undefined} */ (pairObject['styleUrl']);\\n        if (styleUrl) {\\n            objectStack[objectStack.length - 1] = styleUrl;\\n        }\\n        var style = /** @type {Style} */ (pairObject['Style']);\\n        if (style) {\\n            objectStack[objectStack.length - 1] = style;\\n        }\\n    }\\n}\\n/**\\n * @param {Element} node Node.\\n * @param {Array<*>} objectStack Object stack.\\n */\\nfunction placemarkStyleMapParser(node, objectStack) {\\n    var styleMapValue = readStyleMapValue(node, objectStack);\\n    if (!styleMapValue) {\\n        return;\\n    }\\n    var placemarkObject = objectStack[objectStack.length - 1];\\n    if (Array.isArray(styleMapValue)) {\\n        placemarkObject['Style'] = styleMapValue;\\n    }\\n    else if (typeof styleMapValue === 'string') {\\n        placemarkObject['styleUrl'] = styleMapValue;\\n    }\\n    else {\\n        assert(false, 38); // `styleMapValue` has an unknown type\\n    }\\n}\\n/**\\n * @const\\n * @type {Object<string, Object<string, import(\\\"../xml.js\\\").Parser>>}\\n */\\nvar SCHEMA_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\\n    'SimpleData': simpleDataParser\\n});\\n/**\\n * @param {Element} node Node.\\n * @param {Array<*>} objectStack Object stack.\\n */\\nfunction schemaDataParser(node, objectStack) {\\n    parseNode(SCHEMA_DATA_PARSERS, node, objectStack);\\n}\\n/**\\n * @param {Element} node Node.\\n * @param {Array<*>} objectStack Object stack.\\n */\\nfunction simpleDataParser(node, objectStack) {\\n    var name = node.getAttribute('name');\\n    if (name !== null) {\\n        var data = readString(node);\\n        var featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\\n        featureObject[name] = data;\\n    }\\n}\\n/**\\n * @const\\n * @type {Object<string, Object<string, import(\\\"../xml.js\\\").Parser>>}\\n */\\nvar LAT_LON_ALT_BOX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\\n    'altitudeMode': makeObjectPropertySetter(readString),\\n    'minAltitude': makeObjectPropertySetter(readDecimal),\\n    'maxAltitude': makeObjectPropertySetter(readDecimal),\\n    'north': makeObjectPropertySetter(readDecimal),\\n    'south': makeObjectPropertySetter(readDecimal),\\n    'east': makeObjectPropertySetter(readDecimal),\\n    'west': makeObjectPropertySetter(readDecimal)\\n});\\n/**\\n * @param {Element} node Node.\\n * @param {Array<*>} objectStack Object stack.\\n */\\nfunction latLonAltBoxParser(node, objectStack) {\\n    var object = pushParseAndPop({}, LAT_LON_ALT_BOX_PARSERS, node, objectStack);\\n    if (!object) {\\n        return;\\n    }\\n    var regionObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\\n    var extent = [\\n        parseFloat(object['west']),\\n        parseFloat(object['south']),\\n        parseFloat(object['east']),\\n        parseFloat(object['north'])\\n    ];\\n    regionObject['extent'] = extent;\\n    regionObject['altitudeMode'] = object['altitudeMode'];\\n    regionObject['minAltitude'] = parseFloat(object['minAltitude']);\\n    regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\\n}\\n/**\\n * @const\\n * @type {Object<string, Object<string, import(\\\"../xml.js\\\").Parser>>}\\n */\\nvar LOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\\n    'minLodPixels': makeObjectPropertySetter(readDecimal),\\n    'maxLodPixels': makeObjectPropertySetter(readDecimal),\\n    'minFadeExtent': makeObjectPropertySetter(readDecimal),\\n    'maxFadeExtent': makeObjectPropertySetter(readDecimal)\\n});\\n/**\\n * @param {Element} node Node.\\n * @param {Array<*>} objectStack Object stack.\\n */\\nfunction lodParser(node, objectStack) {\\n    var object = pushParseAndPop({}, LOD_PARSERS, node, objectStack);\\n    if (!object) {\\n        return;\\n    }\\n    var lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\\n    lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\\n    lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\\n    lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\\n    lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\\n}\\n/**\\n * @const\\n * @type {Object<string, Object<string, import(\\\"../xml.js\\\").Parser>>}\\n */\\nvar INNER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\\n    'LinearRing': makeReplacer(readFlatLinearRing)\\n});\\n/**\\n * @param {Element} node Node.\\n * @param {Array<*>} objectStack Object stack.\\n */\\nfunction innerBoundaryIsParser(node, objectStack) {\\n    /** @type {Array<number>|undefined} */\\n    var flatLinearRing = pushParseAndPop(undefined, INNER_BOUNDARY_IS_PARSERS, node, objectStack);\\n    if (flatLinearRing) {\\n        var flatLinearRings = /** @type {Array<Array<number>>} */ (objectStack[objectStack.length - 1]);\\n        flatLinearRings.push(flatLinearRing);\\n    }\\n}\\n/**\\n * @const\\n * @type {Object<string, Object<string, import(\\\"../xml.js\\\").Parser>>}\\n */\\nvar OUTER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\\n    'LinearRing': makeReplacer(readFlatLinearRing)\\n});\\n/**\\n * @param {Element} node Node.\\n * @param {Array<*>} objectStack Object stack.\\n */\\nfunction outerBoundaryIsParser(node, objectStack) {\\n    /** @type {Array<number>|undefined} */\\n    var flatLinearRing = pushParseAndPop(undefined, OUTER_BOUNDARY_IS_PARSERS, node, objectStack);\\n    if (flatLinearRing) {\\n        var flatLinearRings = /** @type {Array<Array<number>>} */ (objectStack[objectStack.length - 1]);\\n        flatLinearRings[0] = flatLinearRing;\\n    }\\n}\\n/**\\n * @param {Element} node Node.\\n * @param {Array<*>} objectStack Object stack.\\n */\\nfunction linkParser(node, objectStack) {\\n    parseNode(LINK_PARSERS, node, objectStack);\\n}\\n/**\\n * @param {Node} node Node.\\n * @param {Array<*>} objectStack Object stack.\\n */\\nfunction whenParser(node, objectStack) {\\n    var gxTrackObject = /** @type {GxTrackObject} */ (objectStack[objectStack.length - 1]);\\n    var whens = gxTrackObject.whens;\\n    var s = getAllTextContent(node, false);\\n    var when = Date.parse(s);\\n    whens.push(isNaN(when) ? 0 : when);\\n}\\n/**\\n * @param {Node} node Node to append a TextNode with the color to.\\n * @param {import(\\\"../color.js\\\").Color|string} color Color.\\n */\\nfunction writeColorTextNode(node, color) {\\n    var rgba = asArray(color);\\n    var opacity = (rgba.length == 4) ? rgba[3] : 1;\\n    /** @type {Array<string|number>} */\\n    var abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\\n    for (var i = 0; i < 4; ++i) {\\n        var hex = Math.floor(/** @type {number} */ (abgr[i])).toString(16);\\n        abgr[i] = (hex.length == 1) ? '0' + hex : hex;\\n    }\\n    writeStringTextNode(node, abgr.join(''));\\n}\\n/**\\n * @param {Node} node Node to append a TextNode with the coordinates to.\\n * @param {Array<number>} coordinates Coordinates.\\n * @param {Array<*>} objectStack Object stack.\\n */\\nfunction writeCoordinatesTextNode(node, coordinates, objectStack) {\\n    var context = objectStack[objectStack.length - 1];\\n    var layout = context['layout'];\\n    var stride = context['stride'];\\n    var dimension;\\n    if (layout == GeometryLayout.XY ||\\n        layout == GeometryLayout.XYM) {\\n        dimension = 2;\\n    }\\n    else if (layout == GeometryLayout.XYZ ||\\n        layout == GeometryLayout.XYZM) {\\n        dimension = 3;\\n    }\\n    else {\\n        assert(false, 34); // Invalid geometry layout\\n    }\\n    var ii = coordinates.length;\\n    var text = '';\\n    if (ii > 0) {\\n        text += coordinates[0];\\n        for (var d = 1; d < dimension; ++d) {\\n            text += ',' + coordinates[d];\\n        }\\n        for (var i = stride; i < ii; i += stride) {\\n            text += ' ' + coordinates[i];\\n            for (var d = 1; d < dimension; ++d) {\\n                text += ',' + coordinates[i + d];\\n            }\\n        }\\n    }\\n    writeStringTextNode(node, text);\\n}\\n/**\\n * @const\\n * @type {Object<string, Object<string, import(\\\"../xml.js\\\").Serializer>>}\\n */\\nvar EXTENDEDDATA_NODE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\\n    'Data': makeChildAppender(writeDataNode),\\n    'value': makeChildAppender(writeDataNodeValue),\\n    'displayName': makeChildAppender(writeDataNodeName)\\n});\\n/**\\n * @param {Element} node Node.\\n * @param {{name: *, value: *}} pair Name value pair.\\n * @param {Array<*>} objectStack Object stack.\\n */\\nfunction writeDataNode(node, pair, objectStack) {\\n    node.setAttribute('name', pair.name);\\n    var /** @type {import(\\\"../xml.js\\\").NodeStackItem} */ context = { node: node };\\n    var value = pair.value;\\n    if (typeof value == 'object') {\\n        if (value !== null && value.displayName) {\\n            pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, [value.displayName], objectStack, ['displayName']);\\n        }\\n        if (value !== null && value.value) {\\n            pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, [value.value], objectStack, ['value']);\\n        }\\n    }\\n    else {\\n        pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, [value], objectStack, ['value']);\\n    }\\n}\\n/**\\n * @param {Node} node Node to append a TextNode with the name to.\\n * @param {string} name DisplayName.\\n */\\nfunction writeDataNodeName(node, name) {\\n    writeCDATASection(node, name);\\n}\\n/**\\n * @param {Node} node Node to append a CDATA Section with the value to.\\n * @param {string} value Value.\\n */\\nfunction writeDataNodeValue(node, value) {\\n    writeStringTextNode(node, value);\\n}\\n/**\\n * @const\\n * @type {Object<string, Object<string, import(\\\"../xml.js\\\").Serializer>>}\\n */\\nvar DOCUMENT_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\\n    'Placemark': makeChildAppender(writePlacemark)\\n});\\n/**\\n * @const\\n * @param {*} value Value.\\n * @param {Array<*>} objectStack Object stack.\\n * @param {string=} opt_nodeName Node name.\\n * @return {Node|undefined} Node.\\n */\\nvar DOCUMENT_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\\n    var parentNode = objectStack[objectStack.length - 1].node;\\n    return createElementNS(parentNode.namespaceURI, 'Placemark');\\n};\\n/**\\n * @param {Node} node Node.\\n * @param {Array<Feature>} features Features.\\n * @param {Array<*>} objectStack Object stack.\\n * @this {KML}\\n */\\nfunction writeDocument(node, features, objectStack) {\\n    var /** @type {import(\\\"../xml.js\\\").NodeStackItem} */ context = { node: node };\\n    pushSerializeAndPop(context, DOCUMENT_SERIALIZERS, DOCUMENT_NODE_FACTORY, features, objectStack, undefined, this);\\n}\\n/**\\n * A factory for creating Data nodes.\\n * @const\\n * @type {function(*, Array<*>): (Node|undefined)}\\n */\\nvar DATA_NODE_FACTORY = makeSimpleNodeFactory('Data');\\n/**\\n * @param {Node} node Node.\\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\\n * @param {Array<*>} objectStack Object stack.\\n */\\nfunction writeExtendedData(node, namesAndValues, objectStack) {\\n    var /** @type {import(\\\"../xml.js\\\").NodeStackItem} */ context = { node: node };\\n    var names = namesAndValues.names;\\n    var values = namesAndValues.values;\\n    var length = names.length;\\n    for (var i = 0; i < length; i++) {\\n        pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, DATA_NODE_FACTORY, [{ name: names[i], value: values[i] }], objectStack);\\n    }\\n}\\n/**\\n * @const\\n * @type {Object<string, Array<string>>}\\n */\\nvar ICON_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\\n    'href'\\n], makeStructureNS(GX_NAMESPACE_URIS, [\\n    'x', 'y', 'w', 'h'\\n]));\\n/**\\n * @const\\n * @type {Object<string, Object<string, import(\\\"../xml.js\\\").Serializer>>}\\n */\\nvar ICON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\\n    'href': makeChildAppender(writeStringTextNode)\\n}, makeStructureNS(GX_NAMESPACE_URIS, {\\n    'x': makeChildAppender(writeDecimalTextNode),\\n    'y': makeChildAppender(writeDecimalTextNode),\\n    'w': makeChildAppender(writeDecimalTextNode),\\n    'h': makeChildAppender(writeDecimalTextNode)\\n}));\\n/**\\n * @const\\n * @param {*} value Value.\\n * @param {Array<*>} objectStack Object stack.\\n * @param {string=} opt_nodeName Node name.\\n * @return {Node|undefined} Node.\\n */\\nvar GX_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\\n    return createElementNS(GX_NAMESPACE_URIS[0], 'gx:' + opt_nodeName);\\n};\\n/**\\n * @param {Node} node Node.\\n * @param {Object} icon Icon object.\\n * @param {Array<*>} objectStack Object stack.\\n */\\nfunction writeIcon(node, icon, objectStack) {\\n    var /** @type {import(\\\"../xml.js\\\").NodeStackItem} */ context = { node: node };\\n    var parentNode = objectStack[objectStack.length - 1].node;\\n    var orderedKeys = ICON_SEQUENCE[parentNode.namespaceURI];\\n    var values = makeSequence(icon, orderedKeys);\\n    pushSerializeAndPop(context, ICON_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\\n    orderedKeys =\\n        ICON_SEQUENCE[GX_NAMESPACE_URIS[0]];\\n    values = makeSequence(icon, orderedKeys);\\n    pushSerializeAndPop(context, ICON_SERIALIZERS, GX_NODE_FACTORY, values, objectStack, orderedKeys);\\n}\\n/**\\n * @const\\n * @type {Object<string, Array<string>>}\\n */\\nvar ICON_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\\n    'scale', 'heading', 'Icon', 'hotSpot'\\n]);\\n/**\\n * @const\\n * @type {Object<string, Object<string, import(\\\"../xml.js\\\").Serializer>>}\\n */\\nvar ICON_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\\n    'Icon': makeChildAppender(writeIcon),\\n    'heading': makeChildAppender(writeDecimalTextNode),\\n    'hotSpot': makeChildAppender(writeVec2),\\n    'scale': makeChildAppender(writeScaleTextNode)\\n});\\n/**\\n * @param {Node} node Node.\\n * @param {import(\\\"../style/Icon.js\\\").default} style Icon style.\\n * @param {Array<*>} objectStack Object stack.\\n */\\nfunction writeIconStyle(node, style, objectStack) {\\n    var /** @type {import(\\\"../xml.js\\\").NodeStackItem} */ context = { node: node };\\n    var properties = {};\\n    var src = style.getSrc();\\n    var size = style.getSize();\\n    var iconImageSize = style.getImageSize();\\n    var iconProperties = {\\n        'href': src\\n    };\\n    if (size) {\\n        iconProperties['w'] = size[0];\\n        iconProperties['h'] = size[1];\\n        var anchor = style.getAnchor(); // top-left\\n        var origin_1 = style.getOrigin(); // top-left\\n        if (origin_1 && iconImageSize && origin_1[0] !== 0 && origin_1[1] !== size[1]) {\\n            iconProperties['x'] = origin_1[0];\\n            iconProperties['y'] = iconImageSize[1] - (origin_1[1] + size[1]);\\n        }\\n        if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\\n            var /** @type {Vec2} */ hotSpot = {\\n                x: anchor[0],\\n                xunits: IconAnchorUnits.PIXELS,\\n                y: size[1] - anchor[1],\\n                yunits: IconAnchorUnits.PIXELS\\n            };\\n            properties['hotSpot'] = hotSpot;\\n        }\\n    }\\n    properties['Icon'] = iconProperties;\\n    var scale = style.getScale();\\n    if (scale !== 1) {\\n        properties['scale'] = scale;\\n    }\\n    var rotation = style.getRotation();\\n    if (rotation !== 0) {\\n        properties['heading'] = rotation; // 0-360\\n    }\\n    var parentNode = objectStack[objectStack.length - 1].node;\\n    var orderedKeys = ICON_STYLE_SEQUENCE[parentNode.namespaceURI];\\n    var values = makeSequence(properties, orderedKeys);\\n    pushSerializeAndPop(context, ICON_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\\n}\\n/**\\n * @const\\n * @type {Object<string, Array<string>>}\\n */\\nvar LABEL_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\\n    'color', 'scale'\\n]);\\n/**\\n * @const\\n * @type {Object<string, Object<string, import(\\\"../xml.js\\\").Serializer>>}\\n */\\nvar LABEL_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\\n    'color': makeChildAppender(writeColorTextNode),\\n    'scale': makeChildAppender(writeScaleTextNode)\\n});\\n/**\\n * @param {Node} node Node.\\n * @param {Text} style style.\\n * @param {Array<*>} objectStack Object stack.\\n */\\nfunction writeLabelStyle(node, style, objectStack) {\\n    var /** @type {import(\\\"../xml.js\\\").NodeStackItem} */ context = { node: node };\\n    var properties = {};\\n    var fill = style.getFill();\\n    if (fill) {\\n        properties['color'] = fill.getColor();\\n    }\\n    var scale = style.getScale();\\n    if (scale && scale !== 1) {\\n        properties['scale'] = scale;\\n    }\\n    var parentNode = objectStack[objectStack.length - 1].node;\\n    var orderedKeys = LABEL_STYLE_SEQUENCE[parentNode.namespaceURI];\\n    var values = makeSequence(properties, orderedKeys);\\n    pushSerializeAndPop(context, LABEL_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\\n}\\n/**\\n * @const\\n * @type {Object<string, Array<string>>}\\n */\\nvar LINE_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\\n    'color', 'width'\\n]);\\n/**\\n * @const\\n * @type {Object<string, Object<string, import(\\\"../xml.js\\\").Serializer>>}\\n */\\nvar LINE_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\\n    'color': makeChildAppender(writeColorTextNode),\\n    'width': makeChildAppender(writeDecimalTextNode)\\n});\\n/**\\n * @param {Node} node Node.\\n * @param {Stroke} style style.\\n * @param {Array<*>} objectStack Object stack.\\n */\\nfunction writeLineStyle(node, style, objectStack) {\\n    var /** @type {import(\\\"../xml.js\\\").NodeStackItem} */ context = { node: node };\\n    var properties = {\\n        'color': style.getColor(),\\n        'width': style.getWidth()\\n    };\\n    var parentNode = objectStack[objectStack.length - 1].node;\\n    var orderedKeys = LINE_STYLE_SEQUENCE[parentNode.namespaceURI];\\n    var values = makeSequence(properties, orderedKeys);\\n    pushSerializeAndPop(context, LINE_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\\n}\\n/**\\n * @const\\n * @type {Object<string, string>}\\n */\\nvar GEOMETRY_TYPE_TO_NODENAME = {\\n    'Point': 'Point',\\n    'LineString': 'LineString',\\n    'LinearRing': 'LinearRing',\\n    'Polygon': 'Polygon',\\n    'MultiPoint': 'MultiGeometry',\\n    'MultiLineString': 'MultiGeometry',\\n    'MultiPolygon': 'MultiGeometry',\\n    'GeometryCollection': 'MultiGeometry'\\n};\\n/**\\n * @const\\n * @param {*} value Value.\\n * @param {Array<*>} objectStack Object stack.\\n * @param {string=} opt_nodeName Node name.\\n * @return {Node|undefined} Node.\\n */\\nvar GEOMETRY_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\\n    if (value) {\\n        var parentNode = objectStack[objectStack.length - 1].node;\\n        return createElementNS(parentNode.namespaceURI, GEOMETRY_TYPE_TO_NODENAME[ /** @type {import(\\\"../geom/Geometry.js\\\").default} */(value).getType()]);\\n    }\\n};\\n/**\\n * A factory for creating Point nodes.\\n * @const\\n * @type {function(*, Array<*>, string=): (Node|undefined)}\\n */\\nvar POINT_NODE_FACTORY = makeSimpleNodeFactory('Point');\\n/**\\n * A factory for creating LineString nodes.\\n * @const\\n * @type {function(*, Array<*>, string=): (Node|undefined)}\\n */\\nvar LINE_STRING_NODE_FACTORY = makeSimpleNodeFactory('LineString');\\n/**\\n * A factory for creating LinearRing nodes.\\n * @const\\n * @type {function(*, Array<*>, string=): (Node|undefined)}\\n */\\nvar LINEAR_RING_NODE_FACTORY = makeSimpleNodeFactory('LinearRing');\\n/**\\n * A factory for creating Polygon nodes.\\n * @const\\n * @type {function(*, Array<*>, string=): (Node|undefined)}\\n */\\nvar POLYGON_NODE_FACTORY = makeSimpleNodeFactory('Polygon');\\n/**\\n * @const\\n * @type {Object<string, Object<string, import(\\\"../xml.js\\\").Serializer>>}\\n */\\nvar MULTI_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\\n    'LineString': makeChildAppender(writePrimitiveGeometry),\\n    'Point': makeChildAppender(writePrimitiveGeometry),\\n    'Polygon': makeChildAppender(writePolygon),\\n    'GeometryCollection': makeChildAppender(writeMultiGeometry)\\n});\\n/**\\n * @param {Node} node Node.\\n * @param {import(\\\"../geom/Geometry.js\\\").default} geometry Geometry.\\n * @param {Array<*>} objectStack Object stack.\\n */\\nfunction writeMultiGeometry(node, geometry, objectStack) {\\n    /** @type {import(\\\"../xml.js\\\").NodeStackItem} */\\n    var context = { node: node };\\n    var type = geometry.getType();\\n    /** @type {Array<import(\\\"../geom/Geometry.js\\\").default>} */\\n    var geometries;\\n    /** @type {function(*, Array<*>, string=): (Node|undefined)} */\\n    var factory;\\n    if (type == GeometryType.GEOMETRY_COLLECTION) {\\n        geometries = /** @type {GeometryCollection} */ (geometry).getGeometries();\\n        factory = GEOMETRY_NODE_FACTORY;\\n    }\\n    else if (type == GeometryType.MULTI_POINT) {\\n        geometries = /** @type {MultiPoint} */ (geometry).getPoints();\\n        factory = POINT_NODE_FACTORY;\\n    }\\n    else if (type == GeometryType.MULTI_LINE_STRING) {\\n        geometries =\\n            ( /** @type {MultiLineString} */(geometry)).getLineStrings();\\n        factory = LINE_STRING_NODE_FACTORY;\\n    }\\n    else if (type == GeometryType.MULTI_POLYGON) {\\n        geometries =\\n            ( /** @type {MultiPolygon} */(geometry)).getPolygons();\\n        factory = POLYGON_NODE_FACTORY;\\n    }\\n    else {\\n        assert(false, 39); // Unknown geometry type\\n    }\\n    pushSerializeAndPop(context, MULTI_GEOMETRY_SERIALIZERS, factory, geometries, objectStack);\\n}\\n/**\\n * @const\\n * @type {Object<string, Object<string, import(\\\"../xml.js\\\").Serializer>>}\\n */\\nvar BOUNDARY_IS_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\\n    'LinearRing': makeChildAppender(writePrimitiveGeometry)\\n});\\n/**\\n * @param {Node} node Node.\\n * @param {import(\\\"../geom/LinearRing.js\\\").default} linearRing Linear ring.\\n * @param {Array<*>} objectStack Object stack.\\n */\\nfunction writeBoundaryIs(node, linearRing, objectStack) {\\n    var /** @type {import(\\\"../xml.js\\\").NodeStackItem} */ context = { node: node };\\n    pushSerializeAndPop(context, BOUNDARY_IS_SERIALIZERS, LINEAR_RING_NODE_FACTORY, [linearRing], objectStack);\\n}\\n/**\\n * @const\\n * @type {Object<string, Object<string, import(\\\"../xml.js\\\").Serializer>>}\\n */\\nvar PLACEMARK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\\n    'ExtendedData': makeChildAppender(writeExtendedData),\\n    'MultiGeometry': makeChildAppender(writeMultiGeometry),\\n    'LineString': makeChildAppender(writePrimitiveGeometry),\\n    'LinearRing': makeChildAppender(writePrimitiveGeometry),\\n    'Point': makeChildAppender(writePrimitiveGeometry),\\n    'Polygon': makeChildAppender(writePolygon),\\n    'Style': makeChildAppender(writeStyle),\\n    'address': makeChildAppender(writeStringTextNode),\\n    'description': makeChildAppender(writeStringTextNode),\\n    'name': makeChildAppender(writeStringTextNode),\\n    'open': makeChildAppender(writeBooleanTextNode),\\n    'phoneNumber': makeChildAppender(writeStringTextNode),\\n    'styleUrl': makeChildAppender(writeStringTextNode),\\n    'visibility': makeChildAppender(writeBooleanTextNode)\\n});\\n/**\\n * @const\\n * @type {Object<string, Array<string>>}\\n */\\nvar PLACEMARK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\\n    'name', 'open', 'visibility', 'address', 'phoneNumber', 'description',\\n    'styleUrl', 'Style'\\n]);\\n/**\\n * A factory for creating ExtendedData nodes.\\n * @const\\n * @type {function(*, Array<*>): (Node|undefined)}\\n */\\nvar EXTENDEDDATA_NODE_FACTORY = makeSimpleNodeFactory('ExtendedData');\\n/**\\n * FIXME currently we do serialize arbitrary/custom feature properties\\n * (ExtendedData).\\n * @param {Element} node Node.\\n * @param {Feature} feature Feature.\\n * @param {Array<*>} objectStack Object stack.\\n * @this {KML}\\n */\\nfunction writePlacemark(node, feature, objectStack) {\\n    var /** @type {import(\\\"../xml.js\\\").NodeStackItem} */ context = { node: node };\\n    // set id\\n    if (feature.getId()) {\\n        node.setAttribute('id', /** @type {string} */ (feature.getId()));\\n    }\\n    // serialize properties (properties unknown to KML are not serialized)\\n    var properties = feature.getProperties();\\n    // don't export these to ExtendedData\\n    var filter = { 'address': 1, 'description': 1, 'name': 1, 'open': 1,\\n        'phoneNumber': 1, 'styleUrl': 1, 'visibility': 1 };\\n    filter[feature.getGeometryName()] = 1;\\n    var keys = Object.keys(properties || {}).sort().filter(function (v) {\\n        return !filter[v];\\n    });\\n    if (keys.length > 0) {\\n        var sequence = makeSequence(properties, keys);\\n        var namesAndValues = { names: keys, values: sequence };\\n        pushSerializeAndPop(context, PLACEMARK_SERIALIZERS, EXTENDEDDATA_NODE_FACTORY, [namesAndValues], objectStack);\\n    }\\n    var styleFunction = feature.getStyleFunction();\\n    if (styleFunction) {\\n        // FIXME the styles returned by the style function are supposed to be\\n        // resolution-independent here\\n        var styles = styleFunction(feature, 0);\\n        if (styles) {\\n            var style = Array.isArray(styles) ? styles[0] : styles;\\n            if (this.writeStyles_) {\\n                properties['Style'] = style;\\n            }\\n            var textStyle = style.getText();\\n            if (textStyle) {\\n                properties['name'] = textStyle.getText();\\n            }\\n        }\\n    }\\n    var parentNode = objectStack[objectStack.length - 1].node;\\n    var orderedKeys = PLACEMARK_SEQUENCE[parentNode.namespaceURI];\\n    var values = makeSequence(properties, orderedKeys);\\n    pushSerializeAndPop(context, PLACEMARK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\\n    // serialize geometry\\n    var options = /** @type {import(\\\"./Feature.js\\\").WriteOptions} */ (objectStack[0]);\\n    var geometry = feature.getGeometry();\\n    if (geometry) {\\n        geometry = transformGeometryWithOptions(geometry, true, options);\\n    }\\n    pushSerializeAndPop(context, PLACEMARK_SERIALIZERS, GEOMETRY_NODE_FACTORY, [geometry], objectStack);\\n}\\n/**\\n * @const\\n * @type {Object<string, Array<string>>}\\n */\\nvar PRIMITIVE_GEOMETRY_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\\n    'extrude', 'tessellate', 'altitudeMode', 'coordinates'\\n]);\\n/**\\n * @const\\n * @type {Object<string, Object<string, import(\\\"../xml.js\\\").Serializer>>}\\n */\\nvar PRIMITIVE_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\\n    'extrude': makeChildAppender(writeBooleanTextNode),\\n    'tessellate': makeChildAppender(writeBooleanTextNode),\\n    'altitudeMode': makeChildAppender(writeStringTextNode),\\n    'coordinates': makeChildAppender(writeCoordinatesTextNode)\\n});\\n/**\\n * @param {Node} node Node.\\n * @param {import(\\\"../geom/SimpleGeometry.js\\\").default} geometry Geometry.\\n * @param {Array<*>} objectStack Object stack.\\n */\\nfunction writePrimitiveGeometry(node, geometry, objectStack) {\\n    var flatCoordinates = geometry.getFlatCoordinates();\\n    var /** @type {import(\\\"../xml.js\\\").NodeStackItem} */ context = { node: node };\\n    context['layout'] = geometry.getLayout();\\n    context['stride'] = geometry.getStride();\\n    // serialize properties (properties unknown to KML are not serialized)\\n    var properties = geometry.getProperties();\\n    properties.coordinates = flatCoordinates;\\n    var parentNode = objectStack[objectStack.length - 1].node;\\n    var orderedKeys = PRIMITIVE_GEOMETRY_SEQUENCE[parentNode.namespaceURI];\\n    var values = makeSequence(properties, orderedKeys);\\n    pushSerializeAndPop(context, PRIMITIVE_GEOMETRY_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\\n}\\n/**\\n * @const\\n * @type {Object<string, Object<string, import(\\\"../xml.js\\\").Serializer>>}\\n */\\nvar POLYGON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\\n    'outerBoundaryIs': makeChildAppender(writeBoundaryIs),\\n    'innerBoundaryIs': makeChildAppender(writeBoundaryIs)\\n});\\n/**\\n * A factory for creating innerBoundaryIs nodes.\\n * @const\\n * @type {function(*, Array<*>, string=): (Node|undefined)}\\n */\\nvar INNER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('innerBoundaryIs');\\n/**\\n * A factory for creating outerBoundaryIs nodes.\\n * @const\\n * @type {function(*, Array<*>, string=): (Node|undefined)}\\n */\\nvar OUTER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('outerBoundaryIs');\\n/**\\n * @param {Node} node Node.\\n * @param {Polygon} polygon Polygon.\\n * @param {Array<*>} objectStack Object stack.\\n */\\nfunction writePolygon(node, polygon, objectStack) {\\n    var linearRings = polygon.getLinearRings();\\n    var outerRing = linearRings.shift();\\n    var /** @type {import(\\\"../xml.js\\\").NodeStackItem} */ context = { node: node };\\n    // inner rings\\n    pushSerializeAndPop(context, POLYGON_SERIALIZERS, INNER_BOUNDARY_NODE_FACTORY, linearRings, objectStack);\\n    // outer ring\\n    pushSerializeAndPop(context, POLYGON_SERIALIZERS, OUTER_BOUNDARY_NODE_FACTORY, [outerRing], objectStack);\\n}\\n/**\\n * @const\\n * @type {Object<string, Object<string, import(\\\"../xml.js\\\").Serializer>>}\\n */\\nvar POLY_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\\n    'color': makeChildAppender(writeColorTextNode)\\n});\\n/**\\n * A factory for creating coordinates nodes.\\n * @const\\n * @type {function(*, Array<*>, string=): (Node|undefined)}\\n */\\nvar COLOR_NODE_FACTORY = makeSimpleNodeFactory('color');\\n/**\\n * @param {Node} node Node.\\n * @param {Fill} style Style.\\n * @param {Array<*>} objectStack Object stack.\\n */\\nfunction writePolyStyle(node, style, objectStack) {\\n    var /** @type {import(\\\"../xml.js\\\").NodeStackItem} */ context = { node: node };\\n    pushSerializeAndPop(context, POLY_STYLE_SERIALIZERS, COLOR_NODE_FACTORY, [style.getColor()], objectStack);\\n}\\n/**\\n * @param {Node} node Node to append a TextNode with the scale to.\\n * @param {number|undefined} scale Scale.\\n */\\nfunction writeScaleTextNode(node, scale) {\\n    // the Math is to remove any excess decimals created by float arithmetic\\n    writeDecimalTextNode(node, Math.round(scale * 1e6) / 1e6);\\n}\\n/**\\n * @const\\n * @type {Object<string, Array<string>>}\\n */\\nvar STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\\n    'IconStyle', 'LabelStyle', 'LineStyle', 'PolyStyle'\\n]);\\n/**\\n * @const\\n * @type {Object<string, Object<string, import(\\\"../xml.js\\\").Serializer>>}\\n */\\nvar STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\\n    'IconStyle': makeChildAppender(writeIconStyle),\\n    'LabelStyle': makeChildAppender(writeLabelStyle),\\n    'LineStyle': makeChildAppender(writeLineStyle),\\n    'PolyStyle': makeChildAppender(writePolyStyle)\\n});\\n/**\\n * @param {Node} node Node.\\n * @param {Style} style Style.\\n * @param {Array<*>} objectStack Object stack.\\n */\\nfunction writeStyle(node, style, objectStack) {\\n    var /** @type {import(\\\"../xml.js\\\").NodeStackItem} */ context = { node: node };\\n    var properties = {};\\n    var fillStyle = style.getFill();\\n    var strokeStyle = style.getStroke();\\n    var imageStyle = style.getImage();\\n    var textStyle = style.getText();\\n    if (imageStyle && typeof /** @type {?} */ (imageStyle).getSrc === 'function') {\\n        properties['IconStyle'] = imageStyle;\\n    }\\n    if (textStyle) {\\n        properties['LabelStyle'] = textStyle;\\n    }\\n    if (strokeStyle) {\\n        properties['LineStyle'] = strokeStyle;\\n    }\\n    if (fillStyle) {\\n        properties['PolyStyle'] = fillStyle;\\n    }\\n    var parentNode = objectStack[objectStack.length - 1].node;\\n    var orderedKeys = STYLE_SEQUENCE[parentNode.namespaceURI];\\n    var values = makeSequence(properties, orderedKeys);\\n    pushSerializeAndPop(context, STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\\n}\\n/**\\n * @param {Element} node Node to append a TextNode with the Vec2 to.\\n * @param {Vec2} vec2 Vec2.\\n */\\nfunction writeVec2(node, vec2) {\\n    node.setAttribute('x', String(vec2.x));\\n    node.setAttribute('y', String(vec2.y));\\n    node.setAttribute('xunits', vec2.xunits);\\n    node.setAttribute('yunits', vec2.yunits);\\n}\\nexport default KML;\\n//# sourceMappingURL=KML.js.map\",\"/**\\n * @module ol/style/IconOrigin\\n */\\n/**\\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\\n * @enum {string}\\n */\\nexport default {\\n    BOTTOM_LEFT: 'bottom-left',\\n    BOTTOM_RIGHT: 'bottom-right',\\n    TOP_LEFT: 'top-left',\\n    TOP_RIGHT: 'top-right'\\n};\\n//# sourceMappingURL=IconOrigin.js.map\",\"var __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\n/**\\n * @module ol/style/Icon\\n */\\nimport { getUid } from '../util.js';\\nimport ImageState from '../ImageState.js';\\nimport { assert } from '../asserts.js';\\nimport { asArray } from '../color.js';\\nimport { listen, unlisten } from '../events.js';\\nimport EventType from '../events/EventType.js';\\nimport IconAnchorUnits from './IconAnchorUnits.js';\\nimport { get as getIconImage } from './IconImage.js';\\nimport IconOrigin from './IconOrigin.js';\\nimport ImageStyle from './Image.js';\\n/**\\n * @typedef {Object} Options\\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\\n * @property {import(\\\"./IconOrigin.js\\\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\\n * `top-left` or `top-right`.\\n * @property {import(\\\"./IconAnchorUnits.js\\\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\\n * the x value in pixels.\\n * @property {import(\\\"./IconAnchorUnits.js\\\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\\n * the y value in pixels.\\n * @property {import(\\\"../color.js\\\").Color|string} [color] Color to tint the icon. If not specified,\\n * the icon will be left as is.\\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\\n * provided image must already be loaded. And in that case, it is required\\n * to provide the size of the image, with the `imgSize` option.\\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\\n * sub-rectangle to use from the original icon image.\\n * @property {import(\\\"./IconOrigin.js\\\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\\n * `top-left` or `top-right`.\\n * @property {number} [opacity=1] Opacity of the icon.\\n * @property {number} [scale=1] Scale.\\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\\n * @property {import(\\\"../size.js\\\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\\n * sub-rectangle to use from the origin (sprite) icon image.\\n * @property {import(\\\"../size.js\\\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\\n * @property {string} [src] Image source URI.\\n */\\n/**\\n * @classdesc\\n * Set icon style for vector features.\\n * @api\\n */\\nvar Icon = /** @class */ (function (_super) {\\n    __extends(Icon, _super);\\n    /**\\n     * @param {Options=} opt_options Options.\\n     */\\n    function Icon(opt_options) {\\n        var _this = this;\\n        var options = opt_options || {};\\n        /**\\n         * @type {number}\\n         */\\n        var opacity = options.opacity !== undefined ? options.opacity : 1;\\n        /**\\n         * @type {number}\\n         */\\n        var rotation = options.rotation !== undefined ? options.rotation : 0;\\n        /**\\n         * @type {number}\\n         */\\n        var scale = options.scale !== undefined ? options.scale : 1;\\n        /**\\n         * @type {boolean}\\n         */\\n        var rotateWithView = options.rotateWithView !== undefined ?\\n            options.rotateWithView : false;\\n        _this = _super.call(this, {\\n            opacity: opacity,\\n            rotation: rotation,\\n            scale: scale,\\n            rotateWithView: rotateWithView\\n        }) || this;\\n        /**\\n         * @private\\n         * @type {Array<number>}\\n         */\\n        _this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\\n        /**\\n         * @private\\n         * @type {Array<number>}\\n         */\\n        _this.normalizedAnchor_ = null;\\n        /**\\n         * @private\\n         * @type {import(\\\"./IconOrigin.js\\\").default}\\n         */\\n        _this.anchorOrigin_ = options.anchorOrigin !== undefined ?\\n            options.anchorOrigin : IconOrigin.TOP_LEFT;\\n        /**\\n         * @private\\n         * @type {import(\\\"./IconAnchorUnits.js\\\").default}\\n         */\\n        _this.anchorXUnits_ = options.anchorXUnits !== undefined ?\\n            options.anchorXUnits : IconAnchorUnits.FRACTION;\\n        /**\\n         * @private\\n         * @type {import(\\\"./IconAnchorUnits.js\\\").default}\\n         */\\n        _this.anchorYUnits_ = options.anchorYUnits !== undefined ?\\n            options.anchorYUnits : IconAnchorUnits.FRACTION;\\n        /**\\n         * @private\\n         * @type {?string}\\n         */\\n        _this.crossOrigin_ =\\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\\n        /**\\n         * @type {HTMLImageElement|HTMLCanvasElement}\\n         */\\n        var image = options.img !== undefined ? options.img : null;\\n        /**\\n         * @type {import(\\\"../size.js\\\").Size}\\n         */\\n        var imgSize = options.imgSize !== undefined ? options.imgSize : null;\\n        /**\\n         * @type {string|undefined}\\n         */\\n        var src = options.src;\\n        assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\\n        assert(!image || (image && imgSize), 5); // `imgSize` must be set when `image` is provided\\n        if ((src === undefined || src.length === 0) && image) {\\n            src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\\n        }\\n        assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\\n        /**\\n         * @type {import(\\\"../ImageState.js\\\").default}\\n         */\\n        var imageState = options.src !== undefined ?\\n            ImageState.IDLE : ImageState.LOADED;\\n        /**\\n         * @private\\n         * @type {import(\\\"../color.js\\\").Color}\\n         */\\n        _this.color_ = options.color !== undefined ? asArray(options.color) : null;\\n        /**\\n         * @private\\n         * @type {import(\\\"./IconImage.js\\\").default}\\n         */\\n        _this.iconImage_ = getIconImage(image, /** @type {string} */ (src), imgSize, _this.crossOrigin_, imageState, _this.color_);\\n        /**\\n         * @private\\n         * @type {Array<number>}\\n         */\\n        _this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\\n        /**\\n         * @private\\n         * @type {import(\\\"./IconOrigin.js\\\").default}\\n         */\\n        _this.offsetOrigin_ = options.offsetOrigin !== undefined ?\\n            options.offsetOrigin : IconOrigin.TOP_LEFT;\\n        /**\\n         * @private\\n         * @type {Array<number>}\\n         */\\n        _this.origin_ = null;\\n        /**\\n         * @private\\n         * @type {import(\\\"../size.js\\\").Size}\\n         */\\n        _this.size_ = options.size !== undefined ? options.size : null;\\n        return _this;\\n    }\\n    /**\\n     * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\\n     * @return {Icon} The cloned style.\\n     * @api\\n     */\\n    Icon.prototype.clone = function () {\\n        return new Icon({\\n            anchor: this.anchor_.slice(),\\n            anchorOrigin: this.anchorOrigin_,\\n            anchorXUnits: this.anchorXUnits_,\\n            anchorYUnits: this.anchorYUnits_,\\n            crossOrigin: this.crossOrigin_,\\n            color: (this.color_ && this.color_.slice) ? this.color_.slice() : this.color_ || undefined,\\n            src: this.getSrc(),\\n            offset: this.offset_.slice(),\\n            offsetOrigin: this.offsetOrigin_,\\n            size: this.size_ !== null ? this.size_.slice() : undefined,\\n            opacity: this.getOpacity(),\\n            scale: this.getScale(),\\n            rotation: this.getRotation(),\\n            rotateWithView: this.getRotateWithView()\\n        });\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    Icon.prototype.getAnchor = function () {\\n        if (this.normalizedAnchor_) {\\n            return this.normalizedAnchor_;\\n        }\\n        var anchor = this.anchor_;\\n        var size = this.getSize();\\n        if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\\n            this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\\n            if (!size) {\\n                return null;\\n            }\\n            anchor = this.anchor_.slice();\\n            if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\\n                anchor[0] *= size[0];\\n            }\\n            if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\\n                anchor[1] *= size[1];\\n            }\\n        }\\n        if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\\n            if (!size) {\\n                return null;\\n            }\\n            if (anchor === this.anchor_) {\\n                anchor = this.anchor_.slice();\\n            }\\n            if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\\n                this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\\n                anchor[0] = -anchor[0] + size[0];\\n            }\\n            if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\\n                this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\\n                anchor[1] = -anchor[1] + size[1];\\n            }\\n        }\\n        this.normalizedAnchor_ = anchor;\\n        return this.normalizedAnchor_;\\n    };\\n    /**\\n     * Set the anchor point. The anchor determines the center point for the\\n     * symbolizer.\\n     *\\n     * @param {Array<number>} anchor Anchor.\\n     * @api\\n     */\\n    Icon.prototype.setAnchor = function (anchor) {\\n        this.anchor_ = anchor;\\n        this.normalizedAnchor_ = null;\\n    };\\n    /**\\n     * Get the icon color.\\n     * @return {import(\\\"../color.js\\\").Color} Color.\\n     * @api\\n     */\\n    Icon.prototype.getColor = function () {\\n        return this.color_;\\n    };\\n    /**\\n     * Get the image icon.\\n     * @param {number} pixelRatio Pixel ratio.\\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\\n     * @override\\n     * @api\\n     */\\n    Icon.prototype.getImage = function (pixelRatio) {\\n        return this.iconImage_.getImage(pixelRatio);\\n    };\\n    /**\\n     * @override\\n     */\\n    Icon.prototype.getImageSize = function () {\\n        return this.iconImage_.getSize();\\n    };\\n    /**\\n     * @override\\n     */\\n    Icon.prototype.getHitDetectionImageSize = function () {\\n        return this.getImageSize();\\n    };\\n    /**\\n     * @override\\n     */\\n    Icon.prototype.getImageState = function () {\\n        return this.iconImage_.getImageState();\\n    };\\n    /**\\n     * @override\\n     */\\n    Icon.prototype.getHitDetectionImage = function (pixelRatio) {\\n        return this.iconImage_.getHitDetectionImage(pixelRatio);\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    Icon.prototype.getOrigin = function () {\\n        if (this.origin_) {\\n            return this.origin_;\\n        }\\n        var offset = this.offset_;\\n        if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\\n            var size = this.getSize();\\n            var iconImageSize = this.iconImage_.getSize();\\n            if (!size || !iconImageSize) {\\n                return null;\\n            }\\n            offset = offset.slice();\\n            if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\\n                offset[0] = iconImageSize[0] - size[0] - offset[0];\\n            }\\n            if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\\n                offset[1] = iconImageSize[1] - size[1] - offset[1];\\n            }\\n        }\\n        this.origin_ = offset;\\n        return this.origin_;\\n    };\\n    /**\\n     * Get the image URL.\\n     * @return {string|undefined} Image src.\\n     * @api\\n     */\\n    Icon.prototype.getSrc = function () {\\n        return this.iconImage_.getSrc();\\n    };\\n    /**\\n     * @inheritDoc\\n     * @api\\n     */\\n    Icon.prototype.getSize = function () {\\n        return !this.size_ ? this.iconImage_.getSize() : this.size_;\\n    };\\n    /**\\n     * @override\\n     */\\n    Icon.prototype.listenImageChange = function (listener, thisArg) {\\n        return listen(this.iconImage_, EventType.CHANGE, listener, thisArg);\\n    };\\n    /**\\n     * Load not yet loaded URI.\\n     * When rendering a feature with an icon style, the vector renderer will\\n     * automatically call this method. However, you might want to call this\\n     * method yourself for preloading or other purposes.\\n     * @override\\n     * @api\\n     */\\n    Icon.prototype.load = function () {\\n        this.iconImage_.load();\\n    };\\n    /**\\n     * @override\\n     */\\n    Icon.prototype.unlistenImageChange = function (listener, thisArg) {\\n        unlisten(this.iconImage_, EventType.CHANGE, listener, thisArg);\\n    };\\n    return Icon;\\n}(ImageStyle));\\nexport default Icon;\\n//# sourceMappingURL=Icon.js.map\",\"/**\\n * @module ol/style/Text\\n */\\nimport Fill from './Fill.js';\\nimport TextPlacement from './TextPlacement.js';\\n/**\\n * The default fill color to use if no fill was set at construction time; a\\n * blackish `#333`.\\n *\\n * @const {string}\\n */\\nvar DEFAULT_FILL_COLOR = '#333';\\n/**\\n * @typedef {Object} Options\\n * @property {string} [font] Font style as CSS 'font' value, see:\\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\\n * the width of the polygon at the label position or the length of the path that it follows.\\n * @property {import(\\\"./TextPlacement.js\\\").default|string} [placement='point'] Text placement.\\n * @property {number} [scale] Scale.\\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\\n * @property {string} [text] Text content.\\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\\n * placement where `maxAngle` is not exceeded.\\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\\n * 'hanging', 'ideographic'.\\n * @property {import(\\\"./Fill.js\\\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\\n * @property {import(\\\"./Stroke.js\\\").default} [stroke] Stroke style.\\n * @property {import(\\\"./Fill.js\\\").default} [backgroundFill] Fill style for the text background when `placement` is\\n * `'point'`. Default is no fill.\\n * @property {import(\\\"./Stroke.js\\\").default} [backgroundStroke] Stroke style for the text background  when `placement`\\n * is `'point'`. Default is no stroke.\\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\\n * values in the array is `[top, right, bottom, left]`.\\n */\\n/**\\n * @classdesc\\n * Set text style for vector features.\\n * @api\\n */\\nvar Text = /** @class */ (function () {\\n    /**\\n     * @param {Options=} opt_options Options.\\n     */\\n    function Text(opt_options) {\\n        var options = opt_options || {};\\n        /**\\n         * @private\\n         * @type {string|undefined}\\n         */\\n        this.font_ = options.font;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        this.rotation_ = options.rotation;\\n        /**\\n         * @private\\n         * @type {boolean|undefined}\\n         */\\n        this.rotateWithView_ = options.rotateWithView;\\n        /**\\n         * @private\\n         * @type {number|undefined}\\n         */\\n        this.scale_ = options.scale;\\n        /**\\n         * @private\\n         * @type {string|undefined}\\n         */\\n        this.text_ = options.text;\\n        /**\\n         * @private\\n         * @type {string|undefined}\\n         */\\n        this.textAlign_ = options.textAlign;\\n        /**\\n         * @private\\n         * @type {string|undefined}\\n         */\\n        this.textBaseline_ = options.textBaseline;\\n        /**\\n         * @private\\n         * @type {import(\\\"./Fill.js\\\").default}\\n         */\\n        this.fill_ = options.fill !== undefined ? options.fill :\\n            new Fill({ color: DEFAULT_FILL_COLOR });\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\\n        /**\\n         * @private\\n         * @type {import(\\\"./TextPlacement.js\\\").default|string}\\n         */\\n        this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\\n        /**\\n         * @private\\n         * @type {boolean}\\n         */\\n        this.overflow_ = !!options.overflow;\\n        /**\\n         * @private\\n         * @type {import(\\\"./Stroke.js\\\").default}\\n         */\\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\\n        /**\\n         * @private\\n         * @type {number}\\n         */\\n        this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\\n        /**\\n         * @private\\n         * @type {import(\\\"./Fill.js\\\").default}\\n         */\\n        this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\\n        /**\\n         * @private\\n         * @type {import(\\\"./Stroke.js\\\").default}\\n         */\\n        this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\\n        /**\\n         * @private\\n         * @type {Array<number>}\\n         */\\n        this.padding_ = options.padding === undefined ? null : options.padding;\\n    }\\n    /**\\n     * Clones the style.\\n     * @return {Text} The cloned style.\\n     * @api\\n     */\\n    Text.prototype.clone = function () {\\n        return new Text({\\n            font: this.getFont(),\\n            placement: this.getPlacement(),\\n            maxAngle: this.getMaxAngle(),\\n            overflow: this.getOverflow(),\\n            rotation: this.getRotation(),\\n            rotateWithView: this.getRotateWithView(),\\n            scale: this.getScale(),\\n            text: this.getText(),\\n            textAlign: this.getTextAlign(),\\n            textBaseline: this.getTextBaseline(),\\n            fill: this.getFill() ? this.getFill().clone() : undefined,\\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\\n            offsetX: this.getOffsetX(),\\n            offsetY: this.getOffsetY(),\\n            backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\\n            backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\\n        });\\n    };\\n    /**\\n     * Get the `overflow` configuration.\\n     * @return {boolean} Let text overflow the length of the path they follow.\\n     * @api\\n     */\\n    Text.prototype.getOverflow = function () {\\n        return this.overflow_;\\n    };\\n    /**\\n     * Get the font name.\\n     * @return {string|undefined} Font.\\n     * @api\\n     */\\n    Text.prototype.getFont = function () {\\n        return this.font_;\\n    };\\n    /**\\n     * Get the maximum angle between adjacent characters.\\n     * @return {number} Angle in radians.\\n     * @api\\n     */\\n    Text.prototype.getMaxAngle = function () {\\n        return this.maxAngle_;\\n    };\\n    /**\\n     * Get the label placement.\\n     * @return {import(\\\"./TextPlacement.js\\\").default|string} Text placement.\\n     * @api\\n     */\\n    Text.prototype.getPlacement = function () {\\n        return this.placement_;\\n    };\\n    /**\\n     * Get the x-offset for the text.\\n     * @return {number} Horizontal text offset.\\n     * @api\\n     */\\n    Text.prototype.getOffsetX = function () {\\n        return this.offsetX_;\\n    };\\n    /**\\n     * Get the y-offset for the text.\\n     * @return {number} Vertical text offset.\\n     * @api\\n     */\\n    Text.prototype.getOffsetY = function () {\\n        return this.offsetY_;\\n    };\\n    /**\\n     * Get the fill style for the text.\\n     * @return {import(\\\"./Fill.js\\\").default} Fill style.\\n     * @api\\n     */\\n    Text.prototype.getFill = function () {\\n        return this.fill_;\\n    };\\n    /**\\n     * Determine whether the text rotates with the map.\\n     * @return {boolean|undefined} Rotate with map.\\n     * @api\\n     */\\n    Text.prototype.getRotateWithView = function () {\\n        return this.rotateWithView_;\\n    };\\n    /**\\n     * Get the text rotation.\\n     * @return {number|undefined} Rotation.\\n     * @api\\n     */\\n    Text.prototype.getRotation = function () {\\n        return this.rotation_;\\n    };\\n    /**\\n     * Get the text scale.\\n     * @return {number|undefined} Scale.\\n     * @api\\n     */\\n    Text.prototype.getScale = function () {\\n        return this.scale_;\\n    };\\n    /**\\n     * Get the stroke style for the text.\\n     * @return {import(\\\"./Stroke.js\\\").default} Stroke style.\\n     * @api\\n     */\\n    Text.prototype.getStroke = function () {\\n        return this.stroke_;\\n    };\\n    /**\\n     * Get the text to be rendered.\\n     * @return {string|undefined} Text.\\n     * @api\\n     */\\n    Text.prototype.getText = function () {\\n        return this.text_;\\n    };\\n    /**\\n     * Get the text alignment.\\n     * @return {string|undefined} Text align.\\n     * @api\\n     */\\n    Text.prototype.getTextAlign = function () {\\n        return this.textAlign_;\\n    };\\n    /**\\n     * Get the text baseline.\\n     * @return {string|undefined} Text baseline.\\n     * @api\\n     */\\n    Text.prototype.getTextBaseline = function () {\\n        return this.textBaseline_;\\n    };\\n    /**\\n     * Get the background fill style for the text.\\n     * @return {import(\\\"./Fill.js\\\").default} Fill style.\\n     * @api\\n     */\\n    Text.prototype.getBackgroundFill = function () {\\n        return this.backgroundFill_;\\n    };\\n    /**\\n     * Get the background stroke style for the text.\\n     * @return {import(\\\"./Stroke.js\\\").default} Stroke style.\\n     * @api\\n     */\\n    Text.prototype.getBackgroundStroke = function () {\\n        return this.backgroundStroke_;\\n    };\\n    /**\\n     * Get the padding for the text.\\n     * @return {Array<number>} Padding.\\n     * @api\\n     */\\n    Text.prototype.getPadding = function () {\\n        return this.padding_;\\n    };\\n    /**\\n     * Set the `overflow` property.\\n     *\\n     * @param {boolean} overflow Let text overflow the path that it follows.\\n     * @api\\n     */\\n    Text.prototype.setOverflow = function (overflow) {\\n        this.overflow_ = overflow;\\n    };\\n    /**\\n     * Set the font.\\n     *\\n     * @param {string|undefined} font Font.\\n     * @api\\n     */\\n    Text.prototype.setFont = function (font) {\\n        this.font_ = font;\\n    };\\n    /**\\n     * Set the maximum angle between adjacent characters.\\n     *\\n     * @param {number} maxAngle Angle in radians.\\n     * @api\\n     */\\n    Text.prototype.setMaxAngle = function (maxAngle) {\\n        this.maxAngle_ = maxAngle;\\n    };\\n    /**\\n     * Set the x offset.\\n     *\\n     * @param {number} offsetX Horizontal text offset.\\n     * @api\\n     */\\n    Text.prototype.setOffsetX = function (offsetX) {\\n        this.offsetX_ = offsetX;\\n    };\\n    /**\\n     * Set the y offset.\\n     *\\n     * @param {number} offsetY Vertical text offset.\\n     * @api\\n     */\\n    Text.prototype.setOffsetY = function (offsetY) {\\n        this.offsetY_ = offsetY;\\n    };\\n    /**\\n     * Set the text placement.\\n     *\\n     * @param {import(\\\"./TextPlacement.js\\\").default|string} placement Placement.\\n     * @api\\n     */\\n    Text.prototype.setPlacement = function (placement) {\\n        this.placement_ = placement;\\n    };\\n    /**\\n     * Set whether to rotate the text with the view.\\n     *\\n     * @param {boolean} rotateWithView Rotate with map.\\n     * @api\\n     */\\n    Text.prototype.setRotateWithView = function (rotateWithView) {\\n        this.rotateWithView_ = rotateWithView;\\n    };\\n    /**\\n     * Set the fill.\\n     *\\n     * @param {import(\\\"./Fill.js\\\").default} fill Fill style.\\n     * @api\\n     */\\n    Text.prototype.setFill = function (fill) {\\n        this.fill_ = fill;\\n    };\\n    /**\\n     * Set the rotation.\\n     *\\n     * @param {number|undefined} rotation Rotation.\\n     * @api\\n     */\\n    Text.prototype.setRotation = function (rotation) {\\n        this.rotation_ = rotation;\\n    };\\n    /**\\n     * Set the scale.\\n     *\\n     * @param {number|undefined} scale Scale.\\n     * @api\\n     */\\n    Text.prototype.setScale = function (scale) {\\n        this.scale_ = scale;\\n    };\\n    /**\\n     * Set the stroke.\\n     *\\n     * @param {import(\\\"./Stroke.js\\\").default} stroke Stroke style.\\n     * @api\\n     */\\n    Text.prototype.setStroke = function (stroke) {\\n        this.stroke_ = stroke;\\n    };\\n    /**\\n     * Set the text.\\n     *\\n     * @param {string|undefined} text Text.\\n     * @api\\n     */\\n    Text.prototype.setText = function (text) {\\n        this.text_ = text;\\n    };\\n    /**\\n     * Set the text alignment.\\n     *\\n     * @param {string|undefined} textAlign Text align.\\n     * @api\\n     */\\n    Text.prototype.setTextAlign = function (textAlign) {\\n        this.textAlign_ = textAlign;\\n    };\\n    /**\\n     * Set the text baseline.\\n     *\\n     * @param {string|undefined} textBaseline Text baseline.\\n     * @api\\n     */\\n    Text.prototype.setTextBaseline = function (textBaseline) {\\n        this.textBaseline_ = textBaseline;\\n    };\\n    /**\\n     * Set the background fill.\\n     *\\n     * @param {import(\\\"./Fill.js\\\").default} fill Fill style.\\n     * @api\\n     */\\n    Text.prototype.setBackgroundFill = function (fill) {\\n        this.backgroundFill_ = fill;\\n    };\\n    /**\\n     * Set the background stroke.\\n     *\\n     * @param {import(\\\"./Stroke.js\\\").default} stroke Stroke style.\\n     * @api\\n     */\\n    Text.prototype.setBackgroundStroke = function (stroke) {\\n        this.backgroundStroke_ = stroke;\\n    };\\n    /**\\n     * Set the padding (`[top, right, bottom, left]`).\\n     *\\n     * @param {!Array<number>} padding Padding.\\n     * @api\\n     */\\n    Text.prototype.setPadding = function (padding) {\\n        this.padding_ = padding;\\n    };\\n    return Text;\\n}());\\nexport default Text;\\n//# sourceMappingURL=Text.js.map\",\"import hashed from 'hashed';\\nimport {transform} from 'ol/proj';\\n\\nfunction toPrecision(value, precision) {\\n  const factor = Math.pow(10, precision);\\n  return (Math.round(value * factor) / factor).toString();\\n}\\n\\nfunction synchronize(map, options) {\\n  options = options || {};\\n  let animate;\\n  if ('animate' in options) {\\n    animate = options.animate;\\n  } else {\\n    animate = {duration: 250};\\n  }\\n\\n  const view = map.getView();\\n  const projection = view.getProjection().getCode();\\n\\n  let zoom, center, rotation;\\n  if (view.isDef()) {\\n    zoom = view.getZoom();\\n    center = view.getCenter();\\n    rotation = view.getRotation();\\n  } else {\\n    const viewport = map.getViewport();\\n    if (viewport) {\\n      zoom = Math.LOG2E * Math.log(viewport.clientWidth / 256);\\n    } else {\\n      zoom = 0;\\n    }\\n    center = [0, 0];\\n    rotation = 0;\\n  }\\n\\n  const config = {\\n    center: {\\n      default: center,\\n      serialize: function(coord, state) {\\n        let precision;\\n        if (state && 'zoom' in state) {\\n          precision = Math.max(0, Math.ceil(Math.log(state.zoom) / Math.LN2));\\n        } else {\\n          precision = 3;\\n        }\\n        coord = transform(coord, projection, 'EPSG:4326');\\n        return (\\n          toPrecision(coord[0], precision) +\\n          ',' +\\n          toPrecision(coord[1], precision)\\n        );\\n      },\\n      deserialize: function(str) {\\n        const parts = str.split(',');\\n        if (parts.length !== 2) {\\n          throw new Error('Expected lon,lat but got ' + str);\\n        }\\n        const coord = [parseFloat(parts[0]), parseFloat(parts[1])];\\n        return transform(coord, 'EPSG:4326', projection);\\n      }\\n    },\\n    zoom: {\\n      default: zoom,\\n      serialize: function(value) {\\n        return toPrecision(value, 1);\\n      },\\n      deserialize: Number\\n    },\\n    rotation: {\\n      default: rotation,\\n      serialize: function(value) {\\n        return toPrecision(value, 2);\\n      },\\n      deserialize: Number\\n    }\\n  };\\n\\n  function hashHandler(state) {\\n    if (view.isDef() && animate) {\\n      view.animate(Object.assign({}, state, animate));\\n      return;\\n    }\\n    if ('center' in state) {\\n      view.setCenter(state.center);\\n    }\\n    if ('zoom' in state) {\\n      view.setZoom(state.zoom);\\n    }\\n    if ('rotation' in state) {\\n      view.setRotation(state.rotation);\\n    }\\n  }\\n\\n  const update = hashed.register(config, hashHandler);\\n\\n  function onMoveEnd() {\\n    update({\\n      center: view.getCenter(),\\n      zoom: view.getZoom(),\\n      rotation: view.getRotation()\\n    });\\n  }\\n\\n  map.on('moveend', onMoveEnd);\\n\\n  return function unregister() {\\n    map.un('moveend', onMoveEnd);\\n    hashed.unregister(hashHandler);\\n  };\\n}\\n\\nexport default synchronize;\\n\",\"/**\\n * @module ol/interaction/DragAndDrop\\n */\\n// FIXME should handle all geo-referenced data, not just vector data\\nvar __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\nimport { TRUE } from '../functions.js';\\nimport { listen, unlistenByKey } from '../events.js';\\nimport Event from '../events/Event.js';\\nimport EventType from '../events/EventType.js';\\nimport Interaction from './Interaction.js';\\nimport { get as getProjection } from '../proj.js';\\n/**\\n * @typedef {Object} Options\\n * @property {Array<typeof import(\\\"../format/Feature.js\\\").default>} [formatConstructors] Format constructors.\\n * @property {import(\\\"../source/Vector.js\\\").default} [source] Optional vector source where features will be added.  If a source is provided\\n * all existing features will be removed and new features will be added when\\n * they are dropped on the target.  If you want to add features to a vector\\n * source without removing the existing features (append only), instead of\\n * providing the source option listen for the \\\"addfeatures\\\" event.\\n * @property {import(\\\"../proj.js\\\").ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\\n * @property {HTMLElement} [target] The element that is used as the drop target, default is the viewport element.\\n */\\n/**\\n * @enum {string}\\n */\\nvar DragAndDropEventType = {\\n    /**\\n     * Triggered when features are added\\n     * @event DragAndDropEvent#addfeatures\\n     * @api\\n     */\\n    ADD_FEATURES: 'addfeatures'\\n};\\n/**\\n * @classdesc\\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\\n * of this type.\\n */\\nvar DragAndDropEvent = /** @class */ (function (_super) {\\n    __extends(DragAndDropEvent, _super);\\n    /**\\n     * @param {DragAndDropEventType} type Type.\\n     * @param {File} file File.\\n     * @param {Array<import(\\\"../Feature.js\\\").default>=} opt_features Features.\\n     * @param {import(\\\"../proj/Projection.js\\\").default=} opt_projection Projection.\\n     */\\n    function DragAndDropEvent(type, file, opt_features, opt_projection) {\\n        var _this = _super.call(this, type) || this;\\n        /**\\n         * The features parsed from dropped data.\\n         * @type {Array<import(\\\"../Feature.js\\\").FeatureLike>|undefined}\\n         * @api\\n         */\\n        _this.features = opt_features;\\n        /**\\n         * The dropped file.\\n         * @type {File}\\n         * @api\\n         */\\n        _this.file = file;\\n        /**\\n         * The feature projection.\\n         * @type {import(\\\"../proj/Projection.js\\\").default|undefined}\\n         * @api\\n         */\\n        _this.projection = opt_projection;\\n        return _this;\\n    }\\n    return DragAndDropEvent;\\n}(Event));\\n/**\\n * @classdesc\\n * Handles input of vector data by drag and drop.\\n * @api\\n *\\n * @fires DragAndDropEvent\\n */\\nvar DragAndDrop = /** @class */ (function (_super) {\\n    __extends(DragAndDrop, _super);\\n    /**\\n     * @param {Options=} opt_options Options.\\n     */\\n    function DragAndDrop(opt_options) {\\n        var _this = this;\\n        var options = opt_options ? opt_options : {};\\n        _this = _super.call(this, {\\n            handleEvent: TRUE\\n        }) || this;\\n        /**\\n         * @private\\n         * @type {Array<typeof import(\\\"../format/Feature.js\\\").default>}\\n         */\\n        _this.formatConstructors_ = options.formatConstructors ?\\n            options.formatConstructors : [];\\n        /**\\n         * @private\\n         * @type {import(\\\"../proj/Projection.js\\\").default}\\n         */\\n        _this.projection_ = options.projection ?\\n            getProjection(options.projection) : null;\\n        /**\\n         * @private\\n         * @type {Array<import(\\\"../events.js\\\").EventsKey>}\\n         */\\n        _this.dropListenKeys_ = null;\\n        /**\\n         * @private\\n         * @type {import(\\\"../source/Vector.js\\\").default}\\n         */\\n        _this.source_ = options.source || null;\\n        /**\\n         * @private\\n         * @type {HTMLElement}\\n         */\\n        _this.target = options.target ? options.target : null;\\n        return _this;\\n    }\\n    /**\\n     * @param {File} file File.\\n     * @param {Event} event Load event.\\n     * @private\\n     */\\n    DragAndDrop.prototype.handleResult_ = function (file, event) {\\n        var result = event.target.result;\\n        var map = this.getMap();\\n        var projection = this.projection_;\\n        if (!projection) {\\n            var view = map.getView();\\n            projection = view.getProjection();\\n        }\\n        var formatConstructors = this.formatConstructors_;\\n        var features = [];\\n        for (var i = 0, ii = formatConstructors.length; i < ii; ++i) {\\n            var format = new formatConstructors[i]();\\n            features = this.tryReadFeatures_(format, result, {\\n                featureProjection: projection\\n            });\\n            if (features && features.length > 0) {\\n                break;\\n            }\\n        }\\n        if (this.source_) {\\n            this.source_.clear();\\n            this.source_.addFeatures(features);\\n        }\\n        this.dispatchEvent(new DragAndDropEvent(DragAndDropEventType.ADD_FEATURES, file, features, projection));\\n    };\\n    /**\\n     * @private\\n     */\\n    DragAndDrop.prototype.registerListeners_ = function () {\\n        var map = this.getMap();\\n        if (map) {\\n            var dropArea = this.target ? this.target : map.getViewport();\\n            this.dropListenKeys_ = [\\n                listen(dropArea, EventType.DROP, handleDrop, this),\\n                listen(dropArea, EventType.DRAGENTER, handleStop, this),\\n                listen(dropArea, EventType.DRAGOVER, handleStop, this),\\n                listen(dropArea, EventType.DROP, handleStop, this)\\n            ];\\n        }\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    DragAndDrop.prototype.setActive = function (active) {\\n        _super.prototype.setActive.call(this, active);\\n        if (active) {\\n            this.registerListeners_();\\n        }\\n        else {\\n            this.unregisterListeners_();\\n        }\\n    };\\n    /**\\n     * @inheritDoc\\n     */\\n    DragAndDrop.prototype.setMap = function (map) {\\n        this.unregisterListeners_();\\n        _super.prototype.setMap.call(this, map);\\n        if (this.getActive()) {\\n            this.registerListeners_();\\n        }\\n    };\\n    /**\\n     * @param {import(\\\"../format/Feature.js\\\").default} format Format.\\n     * @param {string} text Text.\\n     * @param {import(\\\"../format/Feature.js\\\").ReadOptions} options Read options.\\n     * @private\\n     * @return {Array<import(\\\"../Feature.js\\\").FeatureLike>} Features.\\n     */\\n    DragAndDrop.prototype.tryReadFeatures_ = function (format, text, options) {\\n        try {\\n            return format.readFeatures(text, options);\\n        }\\n        catch (e) {\\n            return null;\\n        }\\n    };\\n    /**\\n     * @private\\n     */\\n    DragAndDrop.prototype.unregisterListeners_ = function () {\\n        if (this.dropListenKeys_) {\\n            this.dropListenKeys_.forEach(unlistenByKey);\\n            this.dropListenKeys_ = null;\\n        }\\n    };\\n    return DragAndDrop;\\n}(Interaction));\\n/**\\n * @param {DragEvent} event Event.\\n * @this {DragAndDrop}\\n */\\nfunction handleDrop(event) {\\n    var files = event.dataTransfer.files;\\n    for (var i = 0, ii = files.length; i < ii; ++i) {\\n        var file = files.item(i);\\n        var reader = new FileReader();\\n        reader.addEventListener(EventType.LOAD, this.handleResult_.bind(this, file));\\n        reader.readAsText(file);\\n    }\\n}\\n/**\\n * @param {DragEvent} event Event.\\n */\\nfunction handleStop(event) {\\n    event.stopPropagation();\\n    event.preventDefault();\\n    event.dataTransfer.dropEffect = 'copy';\\n}\\nexport default DragAndDrop;\\n//# sourceMappingURL=DragAndDrop.js.map\",\"import 'ol/ol.css';\\nimport {Map, View} from 'ol';\\nimport TileLayer from 'ol/layer/Tile';\\nimport VectorLayer from 'ol/layer/Vector';\\nimport XYZSource from 'ol/source/XYZ';\\nimport VectorSource from 'ol/source/Vector';\\nimport {fromLonLat} from 'ol/proj';\\nimport {GeoJSON, KML} from 'ol/format';\\nimport sync from 'ol-hashed';\\nimport DragAndDrop from 'ol/interaction/DragAndDrop';\\n\\nconst map = new Map({\\n  target: 'map-container',\\n  layers: [\\n    new TileLayer({\\n      source: new XYZSource({\\n        url: 'http://tile.stamen.com/terrain/{z}/{x}/{y}.jpg'\\n      })\\n    })\\n  ],\\n  view: new View({\\n    center: fromLonLat([0, 0]),\\n    zoom: 2\\n  })\\n});\\nsync(map);\\n\\nconst source = new VectorSource()\\n\\nconst layer = new VectorLayer({\\n        source: source\\n    })\\nmap.addLayer(layer)\\n\\nmap.addInteraction(new DragAndDrop({\\n    source: source,\\n    formatConstructors: [\\n        GeoJSON,\\n        KML\\n    ]\\n}))\"]}","code":"!function(t){var e={};function n(i){if(e[i])return e[i].exports;var r=e[i]={i:i,l:!1,exports:{}};return t[i].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=t,n.c=e,n.d=function(t,e,i){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},n.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&\"object\"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,\"default\",{enumerable:!0,value:t}),2&e&&\"string\"!=typeof t)for(var r in t)n.d(i,r,function(e){return t[e]}.bind(null,r));return i},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,\"a\",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p=\"\",n(n.s=27)}([function(t,e,n){const i=n(3);e.typeOf=function(t){let e=typeof t;return\"object\"===e&&(null===t?e=\"null\":i.isArray(t)?e=\"array\":i.isDate(t)?e=\"date\":i.isRegExp(t)?e=\"regexp\":i.isError(t)&&(e=\"error\")),e},e.extend=function(t,e){for(const n in e)t[n]=e[n];return t},e.zip=function(t){const e=[];let n=0;for(const i in t)e[2*n]=i,e[2*n+1]=t[i],++n;return e},e.unzip=function(t){const e={};for(let n=0,i=t.length;n<i;n+=2)e[t[n]]=t[n+1];return e}},function(t,e,n){\"use strict\";t.exports=r,t.exports.default=r;var i=n(26);function r(t,e){if(!(this instanceof r))return new r(t,e);this._maxEntries=Math.max(4,t||9),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),e&&this._initFormat(e),this.clear()}function o(t,e,n){if(!n)return e.indexOf(t);for(var i=0;i<e.length;i++)if(n(t,e[i]))return i;return-1}function s(t,e){a(t,0,t.children.length,e,t)}function a(t,e,n,i,r){r||(r=_(null)),r.minX=1/0,r.minY=1/0,r.maxX=-1/0,r.maxY=-1/0;for(var o,s=e;s<n;s++)o=t.children[s],u(r,t.leaf?i(o):o);return r}function u(t,e){return t.minX=Math.min(t.minX,e.minX),t.minY=Math.min(t.minY,e.minY),t.maxX=Math.max(t.maxX,e.maxX),t.maxY=Math.max(t.maxY,e.maxY),t}function l(t,e){return t.minX-e.minX}function h(t,e){return t.minY-e.minY}function c(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function p(t){return t.maxX-t.minX+(t.maxY-t.minY)}function f(t,e){return t.minX<=e.minX&&t.minY<=e.minY&&e.maxX<=t.maxX&&e.maxY<=t.maxY}function d(t,e){return e.minX<=t.maxX&&e.minY<=t.maxY&&e.maxX>=t.minX&&e.maxY>=t.minY}function _(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function g(t,e,n,r,o){for(var s,a=[e,n];a.length;)(n=a.pop())-(e=a.pop())<=r||(s=e+Math.ceil((n-e)/r/2)*r,i(t,s,e,n,o),a.push(e,s,s,n))}r.prototype={all:function(){return this._all(this.data,[])},search:function(t){var e=this.data,n=[],i=this.toBBox;if(!d(t,e))return n;for(var r,o,s,a,u=[];e;){for(r=0,o=e.children.length;r<o;r++)s=e.children[r],d(t,a=e.leaf?i(s):s)&&(e.leaf?n.push(s):f(t,a)?this._all(s,n):u.push(s));e=u.pop()}return n},collides:function(t){var e=this.data,n=this.toBBox;if(!d(t,e))return!1;for(var i,r,o,s,a=[];e;){for(i=0,r=e.children.length;i<r;i++)if(o=e.children[i],d(t,s=e.leaf?n(o):o)){if(e.leaf||f(t,s))return!0;a.push(o)}e=a.pop()}return!1},load:function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var e=0,n=t.length;e<n;e++)this.insert(t[e]);return this}var i=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===i.height)this._splitRoot(this.data,i);else{if(this.data.height<i.height){var r=this.data;this.data=i,i=r}this._insert(i,this.data.height-i.height-1,!0)}else this.data=i;return this},insert:function(t){return t&&this._insert(t,this.data.height-1),this},clear:function(){return this.data=_([]),this},remove:function(t,e){if(!t)return this;for(var n,i,r,s,a=this.data,u=this.toBBox(t),l=[],h=[];a||l.length;){if(a||(a=l.pop(),i=l[l.length-1],n=h.pop(),s=!0),a.leaf&&-1!==(r=o(t,a.children,e)))return a.children.splice(r,1),l.push(a),this._condense(l),this;s||a.leaf||!f(a,u)?i?(n++,a=i.children[n],s=!1):a=null:(l.push(a),h.push(n),n=0,i=a,a=a.children[0])}return this},toBBox:function(t){return t},compareMinX:l,compareMinY:h,toJSON:function(){return this.data},fromJSON:function(t){return this.data=t,this},_all:function(t,e){for(var n=[];t;)t.leaf?e.push.apply(e,t.children):n.push.apply(n,t.children),t=n.pop();return e},_build:function(t,e,n,i){var r,o=n-e+1,a=this._maxEntries;if(o<=a)return s(r=_(t.slice(e,n+1)),this.toBBox),r;i||(i=Math.ceil(Math.log(o)/Math.log(a)),a=Math.ceil(o/Math.pow(a,i-1))),(r=_([])).leaf=!1,r.height=i;var u,l,h,c,p=Math.ceil(o/a),f=p*Math.ceil(Math.sqrt(a));for(g(t,e,n,f,this.compareMinX),u=e;u<=n;u+=f)for(g(t,u,h=Math.min(u+f-1,n),p,this.compareMinY),l=u;l<=h;l+=p)c=Math.min(l+p-1,h),r.children.push(this._build(t,l,c,i-1));return s(r,this.toBBox),r},_chooseSubtree:function(t,e,n,i){for(var r,o,s,a,u,l,h,p,f,d;i.push(e),!e.leaf&&i.length-1!==n;){for(h=p=1/0,r=0,o=e.children.length;r<o;r++)u=c(s=e.children[r]),f=t,d=s,(l=(Math.max(d.maxX,f.maxX)-Math.min(d.minX,f.minX))*(Math.max(d.maxY,f.maxY)-Math.min(d.minY,f.minY))-u)<p?(p=l,h=u<h?u:h,a=s):l===p&&u<h&&(h=u,a=s);e=a||e.children[0]}return e},_insert:function(t,e,n){var i=this.toBBox,r=n?t:i(t),o=[],s=this._chooseSubtree(r,this.data,e,o);for(s.children.push(t),u(s,r);e>=0&&o[e].children.length>this._maxEntries;)this._split(o,e),e--;this._adjustParentBBoxes(r,o,e)},_split:function(t,e){var n=t[e],i=n.children.length,r=this._minEntries;this._chooseSplitAxis(n,r,i);var o=this._chooseSplitIndex(n,r,i),a=_(n.children.splice(o,n.children.length-o));a.height=n.height,a.leaf=n.leaf,s(n,this.toBBox),s(a,this.toBBox),e?t[e-1].children.push(a):this._splitRoot(n,a)},_splitRoot:function(t,e){this.data=_([t,e]),this.data.height=t.height+1,this.data.leaf=!1,s(this.data,this.toBBox)},_chooseSplitIndex:function(t,e,n){var i,r,o,s,u,l,h,p,f,d,_,g,y,v;for(l=h=1/0,i=e;i<=n-e;i++)r=a(t,0,i,this.toBBox),o=a(t,i,n,this.toBBox),f=r,d=o,_=void 0,g=void 0,y=void 0,v=void 0,_=Math.max(f.minX,d.minX),g=Math.max(f.minY,d.minY),y=Math.min(f.maxX,d.maxX),v=Math.min(f.maxY,d.maxY),s=Math.max(0,y-_)*Math.max(0,v-g),u=c(r)+c(o),s<l?(l=s,p=i,h=u<h?u:h):s===l&&u<h&&(h=u,p=i);return p},_chooseSplitAxis:function(t,e,n){var i=t.leaf?this.compareMinX:l,r=t.leaf?this.compareMinY:h;this._allDistMargin(t,e,n,i)<this._allDistMargin(t,e,n,r)&&t.children.sort(i)},_allDistMargin:function(t,e,n,i){t.children.sort(i);var r,o,s=this.toBBox,l=a(t,0,e,s),h=a(t,n-e,n,s),c=p(l)+p(h);for(r=e;r<n-e;r++)o=t.children[r],u(l,t.leaf?s(o):o),c+=p(l);for(r=n-e-1;r>=e;r--)o=t.children[r],u(h,t.leaf?s(o):o),c+=p(h);return c},_adjustParentBBoxes:function(t,e,n){for(var i=n;i>=0;i--)u(e[i],t)},_condense:function(t){for(var e,n=t.length-1;n>=0;n--)0===t[n].children.length?n>0?(e=t[n-1].children).splice(e.indexOf(t[n]),1):this.clear():s(t[n],this.toBBox)},_initFormat:function(t){var e=[\"return a\",\" - b\",\";\"];this.compareMinX=new Function(\"a\",\"b\",e.join(t[0])),this.compareMinY=new Function(\"a\",\"b\",e.join(t[1])),this.toBBox=new Function(\"a\",\"return {minX: a\"+t[0]+\", minY: a\"+t[1]+\", maxX: a\"+t[2]+\", maxY: a\"+t[3]+\"};\")}}},function(t,e,n){const i=n(18).Store,r=n(25);let o;function s(){o&&window.removeEventListener(\"popstate\",a),window.addEventListener(\"popstate\",a),o=new i(r.deserialize(location.hash),function(t,e){const n={};for(const i in t)t[i]!==e[i]&&(n[i]=t[i]);history.pushState(t,\"\",r.serialize(n))})}function a(){o.update(r.deserialize(location.hash))}e.register=function(t,e){return o.register(t,e)},e.unregister=function(t){o.unregister(t)},e.serialize=function(t){return r.serialize(o.serialize(t))},e.reset=s,s()},function(t,e,n){(function(t){var i=Object.getOwnPropertyDescriptors||function(t){for(var e=Object.keys(t),n={},i=0;i<e.length;i++)n[e[i]]=Object.getOwnPropertyDescriptor(t,e[i]);return n},r=/%[sdj%]/g;e.format=function(t){if(!y(t)){for(var e=[],n=0;n<arguments.length;n++)e.push(a(arguments[n]));return e.join(\" \")}n=1;for(var i=arguments,o=i.length,s=String(t).replace(r,function(t){if(\"%%\"===t)return\"%\";if(n>=o)return t;switch(t){case\"%s\":return String(i[n++]);case\"%d\":return Number(i[n++]);case\"%j\":try{return JSON.stringify(i[n++])}catch(t){return\"[Circular]\"}default:return t}}),u=i[n];n<o;u=i[++n])_(u)||!E(u)?s+=\" \"+u:s+=\" \"+a(u);return s},e.deprecate=function(n,i){if(void 0!==t&&!0===t.noDeprecation)return n;if(void 0===t)return function(){return e.deprecate(n,i).apply(this,arguments)};var r=!1;return function(){if(!r){if(t.throwDeprecation)throw new Error(i);t.traceDeprecation?console.trace(i):console.error(i),r=!0}return n.apply(this,arguments)}};var o,s={};function a(t,n){var i={seen:[],stylize:l};return arguments.length>=3&&(i.depth=arguments[2]),arguments.length>=4&&(i.colors=arguments[3]),d(n)?i.showHidden=n:n&&e._extend(i,n),v(i.showHidden)&&(i.showHidden=!1),v(i.depth)&&(i.depth=2),v(i.colors)&&(i.colors=!1),v(i.customInspect)&&(i.customInspect=!0),i.colors&&(i.stylize=u),h(i,t,i.depth)}function u(t,e){var n=a.styles[e];return n?\"\u001b[\"+a.colors[n][0]+\"m\"+t+\"\u001b[\"+a.colors[n][1]+\"m\":t}function l(t,e){return t}function h(t,n,i){if(t.customInspect&&n&&O(n.inspect)&&n.inspect!==e.inspect&&(!n.constructor||n.constructor.prototype!==n)){var r=n.inspect(i,t);return y(r)||(r=h(t,r,i)),r}var o=function(t,e){if(v(e))return t.stylize(\"undefined\",\"undefined\");if(y(e)){var n=\"'\"+JSON.stringify(e).replace(/^\"|\"$/g,\"\").replace(/'/g,\"\\\\'\").replace(/\\\\\"/g,'\"')+\"'\";return t.stylize(n,\"string\")}if(g(e))return t.stylize(\"\"+e,\"number\");if(d(e))return t.stylize(\"\"+e,\"boolean\");if(_(e))return t.stylize(\"null\",\"null\")}(t,n);if(o)return o;var s=Object.keys(n),a=function(t){var e={};return t.forEach(function(t,n){e[t]=!0}),e}(s);if(t.showHidden&&(s=Object.getOwnPropertyNames(n)),w(n)&&(s.indexOf(\"message\")>=0||s.indexOf(\"description\")>=0))return c(n);if(0===s.length){if(O(n)){var u=n.name?\": \"+n.name:\"\";return t.stylize(\"[Function\"+u+\"]\",\"special\")}if(m(n))return t.stylize(RegExp.prototype.toString.call(n),\"regexp\");if(x(n))return t.stylize(Date.prototype.toString.call(n),\"date\");if(w(n))return c(n)}var l,E=\"\",T=!1,b=[\"{\",\"}\"];(f(n)&&(T=!0,b=[\"[\",\"]\"]),O(n))&&(E=\" [Function\"+(n.name?\": \"+n.name:\"\")+\"]\");return m(n)&&(E=\" \"+RegExp.prototype.toString.call(n)),x(n)&&(E=\" \"+Date.prototype.toUTCString.call(n)),w(n)&&(E=\" \"+c(n)),0!==s.length||T&&0!=n.length?i<0?m(n)?t.stylize(RegExp.prototype.toString.call(n),\"regexp\"):t.stylize(\"[Object]\",\"special\"):(t.seen.push(n),l=T?function(t,e,n,i,r){for(var o=[],s=0,a=e.length;s<a;++s)S(e,String(s))?o.push(p(t,e,n,i,String(s),!0)):o.push(\"\");return r.forEach(function(r){r.match(/^\\d+$/)||o.push(p(t,e,n,i,r,!0))}),o}(t,n,i,a,s):s.map(function(e){return p(t,n,i,a,e,T)}),t.seen.pop(),function(t,e,n){if(t.reduce(function(t,e){return 0,e.indexOf(\"\\n\")>=0&&0,t+e.replace(/\\u001b\\[\\d\\d?m/g,\"\").length+1},0)>60)return n[0]+(\"\"===e?\"\":e+\"\\n \")+\" \"+t.join(\",\\n  \")+\" \"+n[1];return n[0]+e+\" \"+t.join(\", \")+\" \"+n[1]}(l,E,b)):b[0]+E+b[1]}function c(t){return\"[\"+Error.prototype.toString.call(t)+\"]\"}function p(t,e,n,i,r,o){var s,a,u;if((u=Object.getOwnPropertyDescriptor(e,r)||{value:e[r]}).get?a=u.set?t.stylize(\"[Getter/Setter]\",\"special\"):t.stylize(\"[Getter]\",\"special\"):u.set&&(a=t.stylize(\"[Setter]\",\"special\")),S(i,r)||(s=\"[\"+r+\"]\"),a||(t.seen.indexOf(u.value)<0?(a=_(n)?h(t,u.value,null):h(t,u.value,n-1)).indexOf(\"\\n\")>-1&&(a=o?a.split(\"\\n\").map(function(t){return\"  \"+t}).join(\"\\n\").substr(2):\"\\n\"+a.split(\"\\n\").map(function(t){return\"   \"+t}).join(\"\\n\")):a=t.stylize(\"[Circular]\",\"special\")),v(s)){if(o&&r.match(/^\\d+$/))return a;(s=JSON.stringify(\"\"+r)).match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)?(s=s.substr(1,s.length-2),s=t.stylize(s,\"name\")):(s=s.replace(/'/g,\"\\\\'\").replace(/\\\\\"/g,'\"').replace(/(^\"|\"$)/g,\"'\"),s=t.stylize(s,\"string\"))}return s+\": \"+a}function f(t){return Array.isArray(t)}function d(t){return\"boolean\"==typeof t}function _(t){return null===t}function g(t){return\"number\"==typeof t}function y(t){return\"string\"==typeof t}function v(t){return void 0===t}function m(t){return E(t)&&\"[object RegExp]\"===T(t)}function E(t){return\"object\"==typeof t&&null!==t}function x(t){return E(t)&&\"[object Date]\"===T(t)}function w(t){return E(t)&&(\"[object Error]\"===T(t)||t instanceof Error)}function O(t){return\"function\"==typeof t}function T(t){return Object.prototype.toString.call(t)}function b(t){return t<10?\"0\"+t.toString(10):t.toString(10)}e.debuglog=function(n){if(v(o)&&(o=t.env.NODE_DEBUG||\"\"),n=n.toUpperCase(),!s[n])if(new RegExp(\"\\\\b\"+n+\"\\\\b\",\"i\").test(o)){var i=t.pid;s[n]=function(){var t=e.format.apply(e,arguments);console.error(\"%s %d: %s\",n,i,t)}}else s[n]=function(){};return s[n]},e.inspect=a,a.colors={bold:[1,22],italic:[3,23],underline:[4,24],inverse:[7,27],white:[37,39],grey:[90,39],black:[30,39],blue:[34,39],cyan:[36,39],green:[32,39],magenta:[35,39],red:[31,39],yellow:[33,39]},a.styles={special:\"cyan\",number:\"yellow\",boolean:\"yellow\",undefined:\"grey\",null:\"bold\",string:\"green\",date:\"magenta\",regexp:\"red\"},e.isArray=f,e.isBoolean=d,e.isNull=_,e.isNullOrUndefined=function(t){return null==t},e.isNumber=g,e.isString=y,e.isSymbol=function(t){return\"symbol\"==typeof t},e.isUndefined=v,e.isRegExp=m,e.isObject=E,e.isDate=x,e.isError=w,e.isFunction=O,e.isPrimitive=function(t){return null===t||\"boolean\"==typeof t||\"number\"==typeof t||\"string\"==typeof t||\"symbol\"==typeof t||void 0===t},e.isBuffer=n(22);var C=[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];function S(t,e){return Object.prototype.hasOwnProperty.call(t,e)}e.log=function(){var t,n;console.log(\"%s - %s\",(t=new Date,n=[b(t.getHours()),b(t.getMinutes()),b(t.getSeconds())].join(\":\"),[t.getDate(),C[t.getMonth()],n].join(\" \")),e.format.apply(e,arguments))},e.inherits=n(23),e._extend=function(t,e){if(!e||!E(e))return t;for(var n=Object.keys(e),i=n.length;i--;)t[n[i]]=e[n[i]];return t};var R=\"undefined\"!=typeof Symbol?Symbol(\"util.promisify.custom\"):void 0;function I(t,e){if(!t){var n=new Error(\"Promise was rejected with a falsy value\");n.reason=t,t=n}return e(t)}e.promisify=function(t){if(\"function\"!=typeof t)throw new TypeError('The \"original\" argument must be of type Function');if(R&&t[R]){var e;if(\"function\"!=typeof(e=t[R]))throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');return Object.defineProperty(e,R,{value:e,enumerable:!1,writable:!1,configurable:!0}),e}function e(){for(var e,n,i=new Promise(function(t,i){e=t,n=i}),r=[],o=0;o<arguments.length;o++)r.push(arguments[o]);r.push(function(t,i){t?n(t):e(i)});try{t.apply(this,r)}catch(t){n(t)}return i}return Object.setPrototypeOf(e,Object.getPrototypeOf(t)),R&&Object.defineProperty(e,R,{value:e,enumerable:!1,writable:!1,configurable:!0}),Object.defineProperties(e,i(t))},e.promisify.custom=R,e.callbackify=function(e){if(\"function\"!=typeof e)throw new TypeError('The \"original\" argument must be of type Function');function n(){for(var n=[],i=0;i<arguments.length;i++)n.push(arguments[i]);var r=n.pop();if(\"function\"!=typeof r)throw new TypeError(\"The last argument must be of type Function\");var o=this,s=function(){return r.apply(o,arguments)};e.apply(this,n).then(function(e){t.nextTick(s,null,e)},function(e){t.nextTick(I,e,s)})}return Object.setPrototypeOf(n,Object.getPrototypeOf(e)),Object.defineProperties(n,i(e)),n}}).call(this,n(21))},function(t,e,n){const i=n(3),r=encodeURIComponent,o={string:function(t){if(\"string\"!=typeof t)throw new Error(\"Expected string to serialize: \"+t);return r(t)},number:function(t){if(\"number\"!=typeof t)throw new Error(\"Expected number to serialize: \"+t);return r(String(t))},boolean:function(t){if(\"boolean\"!=typeof t)throw new Error(\"Expected boolean to serialize: \"+t);return t?\"1\":\"0\"},date:function(t){if(!i.isDate(t))throw new Error(\"Expected date to serialize: \"+t);return r(t.toISOString())},array:function(t){if(!i.isArray(t))throw new Error(\"Expected array to serialize: \"+t);return r(JSON.stringify(t))},object:function(t){return r(JSON.stringify(t))}};e.get=function(t){if(!(t in o))throw new Error(\"Unable to serialize type: \"+t);return o[t]}},,,,,,,,,function(t,e,n){var i=n(14);\"string\"==typeof i&&(i=[[t.i,i,\"\"]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(16)(i,r);i.locals&&(t.exports=i.locals)},function(t,e,n){(t.exports=n(15)(!1)).push([t.i,'.ol-box {\\n  box-sizing: border-box;\\n  border-radius: 2px;\\n  border: 2px solid blue;\\n}\\n\\n.ol-mouse-position {\\n  top: 8px;\\n  right: 8px;\\n  position: absolute;\\n}\\n\\n.ol-scale-line {\\n  background: rgba(0,60,136,0.3);\\n  border-radius: 4px;\\n  bottom: 8px;\\n  left: 8px;\\n  padding: 2px;\\n  position: absolute;\\n}\\n.ol-scale-line-inner {\\n  border: 1px solid #eee;\\n  border-top: none;\\n  color: #eee;\\n  font-size: 10px;\\n  text-align: center;\\n  margin: 1px;\\n  will-change: contents, width;\\n  transition: all 0.25s;\\n}\\n.ol-scale-bar {\\n  position: absolute;\\n  bottom: 8px;\\n  left: 8px;\\n}\\n.ol-scale-step-marker {\\n  width: 1px;\\n  height: 15px;\\n  background-color: #000000;\\n  float: right;\\n  z-Index: 10;\\n}\\n.ol-scale-step-text {\\n  position: absolute;\\n  bottom: -5px;\\n  font-size: 12px;\\n  z-Index: 11;\\n  color: #000000;\\n  text-shadow: -2px 0 #FFFFFF, 0 2px #FFFFFF, 2px 0 #FFFFFF, 0 -2px #FFFFFF;\\n}\\n.ol-scale-text {\\n  position: absolute;\\n  font-size: 14px;\\n  text-align: center;\\n  bottom: 25px;\\n  color: #000000;\\n  text-shadow: -2px 0 #FFFFFF, 0 2px #FFFFFF, 2px 0 #FFFFFF, 0 -2px #FFFFFF;\\n}\\n.ol-scale-singlebar {\\n  position: relative;\\n  height: 10px;\\n  z-Index: 9;\\n  border: 1px solid black;\\n}\\n\\n.ol-overlay-container {\\n  will-change: left,right,top,bottom;\\n}\\n\\n.ol-unsupported {\\n  display: none;\\n}\\n.ol-viewport, .ol-unselectable {\\n  -webkit-touch-callout: none;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n  -webkit-tap-highlight-color: rgba(0,0,0,0);\\n}\\n.ol-selectable {\\n  -webkit-touch-callout: default;\\n  -webkit-user-select: text;\\n  -moz-user-select: text;\\n  -ms-user-select: text;\\n  user-select: text;\\n}\\n.ol-grabbing {\\n  cursor: -webkit-grabbing;\\n  cursor: -moz-grabbing;\\n  cursor: grabbing;\\n}\\n.ol-grab {\\n  cursor: move;\\n  cursor: -webkit-grab;\\n  cursor: -moz-grab;\\n  cursor: grab;\\n}\\n.ol-control {\\n  position: absolute;\\n  background-color: rgba(255,255,255,0.4);\\n  border-radius: 4px;\\n  padding: 2px;\\n}\\n.ol-control:hover {\\n  background-color: rgba(255,255,255,0.6);\\n}\\n.ol-zoom {\\n  top: .5em;\\n  left: .5em;\\n}\\n.ol-rotate {\\n  top: .5em;\\n  right: .5em;\\n  transition: opacity .25s linear, visibility 0s linear;\\n}\\n.ol-rotate.ol-hidden {\\n  opacity: 0;\\n  visibility: hidden;\\n  transition: opacity .25s linear, visibility 0s linear .25s;\\n}\\n.ol-zoom-extent {\\n  top: 4.643em;\\n  left: .5em;\\n}\\n.ol-full-screen {\\n  right: .5em;\\n  top: .5em;\\n}\\n@media print {\\n  .ol-control {\\n    display: none;\\n  }\\n}\\n\\n.ol-control button {\\n  display: block;\\n  margin: 1px;\\n  padding: 0;\\n  color: white;\\n  font-size: 1.14em;\\n  font-weight: bold;\\n  text-decoration: none;\\n  text-align: center;\\n  height: 1.375em;\\n  width: 1.375em;\\n  line-height: .4em;\\n  background-color: rgba(0,60,136,0.5);\\n  border: none;\\n  border-radius: 2px;\\n}\\n.ol-control button::-moz-focus-inner {\\n  border: none;\\n  padding: 0;\\n}\\n.ol-zoom-extent button {\\n  line-height: 1.4em;\\n}\\n.ol-compass {\\n  display: block;\\n  font-weight: normal;\\n  font-size: 1.2em;\\n  will-change: transform;\\n}\\n.ol-touch .ol-control button {\\n  font-size: 1.5em;\\n}\\n.ol-touch .ol-zoom-extent {\\n  top: 5.5em;\\n}\\n.ol-control button:hover,\\n.ol-control button:focus {\\n  text-decoration: none;\\n  background-color: rgba(0,60,136,0.7);\\n}\\n.ol-zoom .ol-zoom-in {\\n  border-radius: 2px 2px 0 0;\\n}\\n.ol-zoom .ol-zoom-out {\\n  border-radius: 0 0 2px 2px;\\n}\\n\\n\\n.ol-attribution {\\n  text-align: right;\\n  bottom: .5em;\\n  right: .5em;\\n  max-width: calc(100% - 1.3em);\\n}\\n\\n.ol-attribution ul {\\n  margin: 0;\\n  padding: 0 .5em;\\n  font-size: .7rem;\\n  line-height: 1.375em;\\n  color: #000;\\n  text-shadow: 0 0 2px #fff;\\n}\\n.ol-attribution li {\\n  display: inline;\\n  list-style: none;\\n  line-height: inherit;\\n}\\n.ol-attribution li:not(:last-child):after {\\n  content: \" \";\\n}\\n.ol-attribution img {\\n  max-height: 2em;\\n  max-width: inherit;\\n  vertical-align: middle;\\n}\\n.ol-attribution ul, .ol-attribution button {\\n  display: inline-block;\\n}\\n.ol-attribution.ol-collapsed ul {\\n  display: none;\\n}\\n.ol-attribution:not(.ol-collapsed) {\\n  background: rgba(255,255,255,0.8);\\n}\\n.ol-attribution.ol-uncollapsible {\\n  bottom: 0;\\n  right: 0;\\n  border-radius: 4px 0 0;\\n  height: 1.1em;\\n  line-height: 1em;\\n}\\n.ol-attribution.ol-uncollapsible img {\\n  margin-top: -.2em;\\n  max-height: 1.6em;\\n}\\n.ol-attribution.ol-uncollapsible button {\\n  display: none;\\n}\\n\\n.ol-zoomslider {\\n  top: 4.5em;\\n  left: .5em;\\n  height: 200px;\\n}\\n.ol-zoomslider button {\\n  position: relative;\\n  height: 10px;\\n}\\n\\n.ol-touch .ol-zoomslider {\\n  top: 5.5em;\\n}\\n\\n.ol-overviewmap {\\n  left: 0.5em;\\n  bottom: 0.5em;\\n}\\n.ol-overviewmap.ol-uncollapsible {\\n  bottom: 0;\\n  left: 0;\\n  border-radius: 0 4px 0 0;\\n}\\n.ol-overviewmap .ol-overviewmap-map,\\n.ol-overviewmap button {\\n  display: inline-block;\\n}\\n.ol-overviewmap .ol-overviewmap-map {\\n  border: 1px solid #7b98bc;\\n  height: 150px;\\n  margin: 2px;\\n  width: 150px;\\n}\\n.ol-overviewmap:not(.ol-collapsed) button{\\n  bottom: 1px;\\n  left: 2px;\\n  position: absolute;\\n}\\n.ol-overviewmap.ol-collapsed .ol-overviewmap-map,\\n.ol-overviewmap.ol-uncollapsible button {\\n  display: none;\\n}\\n.ol-overviewmap:not(.ol-collapsed) {\\n  background: rgba(255,255,255,0.8);\\n}\\n.ol-overviewmap-box {\\n  border: 2px dotted rgba(0,60,136,0.7);\\n}\\n\\n.ol-overviewmap .ol-overviewmap-box:hover {\\n  cursor: move;\\n}\\n',\"\"])},function(t,e,n){\"use strict\";t.exports=function(t){var e=[];return e.toString=function(){return this.map(function(e){var n=function(t,e){var n=t[1]||\"\",i=t[3];if(!i)return n;if(e&&\"function\"==typeof btoa){var r=(s=i,\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,\"+btoa(unescape(encodeURIComponent(JSON.stringify(s))))+\" */\"),o=i.sources.map(function(t){return\"/*# sourceURL=\"+i.sourceRoot+t+\" */\"});return[n].concat(o).concat([r]).join(\"\\n\")}var s;return[n].join(\"\\n\")}(e,t);return e[2]?\"@media \"+e[2]+\"{\"+n+\"}\":n}).join(\"\")},e.i=function(t,n){\"string\"==typeof t&&(t=[[null,t,\"\"]]);for(var i={},r=0;r<this.length;r++){var o=this[r][0];null!=o&&(i[o]=!0)}for(r=0;r<t.length;r++){var s=t[r];null!=s[0]&&i[s[0]]||(n&&!s[2]?s[2]=n:n&&(s[2]=\"(\"+s[2]+\") and (\"+n+\")\"),e.push(s))}},e}},function(t,e,n){var i,r,o={},s=(i=function(){return window&&document&&document.all&&!window.atob},function(){return void 0===r&&(r=i.apply(this,arguments)),r}),a=function(t){var e={};return function(t,n){if(\"function\"==typeof t)return t();if(void 0===e[t]){var i=function(t,e){return e?e.querySelector(t):document.querySelector(t)}.call(this,t,n);if(window.HTMLIFrameElement&&i instanceof window.HTMLIFrameElement)try{i=i.contentDocument.head}catch(t){i=null}e[t]=i}return e[t]}}(),u=null,l=0,h=[],c=n(17);function p(t,e){for(var n=0;n<t.length;n++){var i=t[n],r=o[i.id];if(r){r.refs++;for(var s=0;s<r.parts.length;s++)r.parts[s](i.parts[s]);for(;s<i.parts.length;s++)r.parts.push(v(i.parts[s],e))}else{var a=[];for(s=0;s<i.parts.length;s++)a.push(v(i.parts[s],e));o[i.id]={id:i.id,refs:1,parts:a}}}}function f(t,e){for(var n=[],i={},r=0;r<t.length;r++){var o=t[r],s=e.base?o[0]+e.base:o[0],a={css:o[1],media:o[2],sourceMap:o[3]};i[s]?i[s].parts.push(a):n.push(i[s]={id:s,parts:[a]})}return n}function d(t,e){var n=a(t.insertInto);if(!n)throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");var i=h[h.length-1];if(\"top\"===t.insertAt)i?i.nextSibling?n.insertBefore(e,i.nextSibling):n.appendChild(e):n.insertBefore(e,n.firstChild),h.push(e);else if(\"bottom\"===t.insertAt)n.appendChild(e);else{if(\"object\"!=typeof t.insertAt||!t.insertAt.before)throw new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");var r=a(t.insertAt.before,n);n.insertBefore(e,r)}}function _(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t);var e=h.indexOf(t);e>=0&&h.splice(e,1)}function g(t){var e=document.createElement(\"style\");if(void 0===t.attrs.type&&(t.attrs.type=\"text/css\"),void 0===t.attrs.nonce){var i=function(){0;return n.nc}();i&&(t.attrs.nonce=i)}return y(e,t.attrs),d(t,e),e}function y(t,e){Object.keys(e).forEach(function(n){t.setAttribute(n,e[n])})}function v(t,e){var n,i,r,o;if(e.transform&&t.css){if(!(o=\"function\"==typeof e.transform?e.transform(t.css):e.transform.default(t.css)))return function(){};t.css=o}if(e.singleton){var s=l++;n=u||(u=g(e)),i=x.bind(null,n,s,!1),r=x.bind(null,n,s,!0)}else t.sourceMap&&\"function\"==typeof URL&&\"function\"==typeof URL.createObjectURL&&\"function\"==typeof URL.revokeObjectURL&&\"function\"==typeof Blob&&\"function\"==typeof btoa?(n=function(t){var e=document.createElement(\"link\");return void 0===t.attrs.type&&(t.attrs.type=\"text/css\"),t.attrs.rel=\"stylesheet\",y(e,t.attrs),d(t,e),e}(e),i=function(t,e,n){var i=n.css,r=n.sourceMap,o=void 0===e.convertToAbsoluteUrls&&r;(e.convertToAbsoluteUrls||o)&&(i=c(i));r&&(i+=\"\\n/*# sourceMappingURL=data:application/json;base64,\"+btoa(unescape(encodeURIComponent(JSON.stringify(r))))+\" */\");var s=new Blob([i],{type:\"text/css\"}),a=t.href;t.href=URL.createObjectURL(s),a&&URL.revokeObjectURL(a)}.bind(null,n,e),r=function(){_(n),n.href&&URL.revokeObjectURL(n.href)}):(n=g(e),i=function(t,e){var n=e.css,i=e.media;i&&t.setAttribute(\"media\",i);if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}.bind(null,n),r=function(){_(n)});return i(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap)return;i(t=e)}else r()}}t.exports=function(t,e){if(\"undefined\"!=typeof DEBUG&&DEBUG&&\"object\"!=typeof document)throw new Error(\"The style-loader cannot be used in a non-browser environment\");(e=e||{}).attrs=\"object\"==typeof e.attrs?e.attrs:{},e.singleton||\"boolean\"==typeof e.singleton||(e.singleton=s()),e.insertInto||(e.insertInto=\"head\"),e.insertAt||(e.insertAt=\"bottom\");var n=f(t,e);return p(n,e),function(t){for(var i=[],r=0;r<n.length;r++){var s=n[r];(a=o[s.id]).refs--,i.push(a)}t&&p(f(t,e),e);for(r=0;r<i.length;r++){var a;if(0===(a=i[r]).refs){for(var u=0;u<a.parts.length;u++)a.parts[u]();delete o[a.id]}}}};var m,E=(m=[],function(t,e){return m[t]=e,m.filter(Boolean).join(\"\\n\")});function x(t,e,n,i){var r=n?\"\":i.css;if(t.styleSheet)t.styleSheet.cssText=E(e,r);else{var o=document.createTextNode(r),s=t.childNodes;s[e]&&t.removeChild(s[e]),s.length?t.insertBefore(o,s[e]):t.appendChild(o)}}},function(t,e){t.exports=function(t){var e=\"undefined\"!=typeof window&&window.location;if(!e)throw new Error(\"fixUrls requires window.location\");if(!t||\"string\"!=typeof t)return t;var n=e.protocol+\"//\"+e.host,i=n+e.pathname.replace(/\\/[^\\/]*$/,\"/\");return t.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi,function(t,e){var r,o=e.trim().replace(/^\"(.*)\"$/,function(t,e){return e}).replace(/^'(.*)'$/,function(t,e){return e});return/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(o)?t:(r=0===o.indexOf(\"//\")?o:0===o.indexOf(\"/\")?n+o:i+o.replace(/^\\.\\//,\"\"),\"url(\"+JSON.stringify(r)+\")\")})}},function(t,e,n){const i=n(19).Schema,r=n(0),o=n(4),s=e.Store=function(t,e){this._values=t,this._defaults={},this._providers=[],this._callback=e,this._callbackTimer=null};s.prototype._scheduleCallback=function(){this._callbackTimer&&clearTimeout(this._callbackTimer),this._callbackTimer=setTimeout(this._debouncedCallback.bind(this))},s.prototype._debouncedCallback=function(){this._callbackTimer=null,this._callback(this._values,this._defaults)},s.prototype.update=function(t){this._updateTimer&&clearTimeout(this._updateTimer),this._updateTimer=setTimeout(this._debouncedUpdate.bind(this,t))},s.prototype._debouncedUpdate=function(t){this._updateTimer=null;const e=this._values,n=this._providers.slice();for(let i=n.length-1;i>=0;--i){const r=n[i],o=r.schema;let s=!1;const a={};o.forEachKey(function(n,i){let r;if(i in t){if(e[i]!==t[i])try{r=o.deserialize(n,t[i]),e[i]=t[i],a[n]=r,s=!0}catch(t){}}else{r=o.getDefault(n);const t=o.serialize(n,r);e[i]!==t&&(s=!0,e[i]=t,a[n]=r)}}),s&&this._providers.indexOf(r)>=0&&r.callback(a)}},s.prototype.unregister=function(t){let e;if(this._providers=this._providers.filter(function(n){const i=n.callback===t;return i&&(e=n),!i}),!e)throw new Error(\"Unable to unregister hashed state provider\");const n=this._values,i=this._defaults;e.schema.forEachKey(function(t,e){delete n[e],delete i[e]}),this._scheduleCallback()},s.prototype.register=function(t,e){const n={schema:new i(t),callback:e};for(let t=0,e=this._providers.length;t<e;++t){const e=n.schema.conflicts(this._providers[t].schema);if(e)throw new Error(\"Provider already registered using the same name: \"+e);if(n.callback===this._providers[t].callback)throw new Error(\"Provider already registered with the same callback\")}return this._providers.push(n),this._initializeProvider(n),function(t){if(-1===this._providers.indexOf(n))throw new Error(\"Unregistered provider attempting to update state\");const e=n.schema;let i=!1;const r=this._values;e.forEachKey(function(n,o){if(n in t){const s=e.serialize(n,t[n],t);r[o]!==s&&(i=!0,r[o]=s)}}),i&&this._scheduleCallback()}.bind(this)},s.prototype._initializeProvider=function(t){const e={},n={},i=this._values;t.schema.forEachKey(function(r,o){let s;const a=t.schema.getDefault(r),u=t.schema.serialize(r,a);if(o in i)try{s=t.schema.deserialize(r,i[o])}catch(t){s=a}else s=a;e[r]=s,n[o]=u,i[o]=t.schema.serialize(r,s)});for(const t in n)this._defaults[t]=n[t];t.callback(e)},s.prototype.serialize=function(t){const e={};for(let n=0,i=this._providers.length;n<i;++n){const i=this._providers[n];i.schema.forEachKey(function(n,r){r in t&&(e[r]=i.schema.serialize(n,t[r],t))})}for(const n in t)if(!(n in e)){const i=t[n],s=r.typeOf(i),a=o.get(s);e[n]=a(i)}return e}},function(t,e,n){const i=n(20).Field,r=n(0),o=e.Schema=function(t){const e={};let n;\"_\"in(t=r.extend({},t))&&(n=t._,delete t._);for(const n in t)e[n]=new i(t[n]);this._prefix=n,this._fields=e};o.prototype.getPrefixed=function(t){return this._prefix?this._prefix+\".\"+t:t},o.prototype.forEachKey=function(t,e){let n;for(const i in this._fields)if(!1===(n=t.call(e,i,this.getPrefixed(i))))return},o.prototype.serialize=function(t,e,n){if(!(t in this._fields))throw new Error(\"Unknown key: \"+t);return this._fields[t].serialize(e,n)},o.prototype.deserialize=function(t,e){if(!(t in this._fields))throw new Error(\"Unknown key: \"+t);return this._fields[t].deserialize(e)},o.prototype.getDefault=function(t){if(!(t in this._fields))throw new Error(\"Unknown key: \"+t);return this._fields[t].default},o.prototype.conflicts=function(t){const e={};for(const t in this._fields)e[this.getPrefixed(t)]=!0;let n=!1;return t.forEachKey(function(t,i){return i in e&&(n=i),!n}),n}},function(t,e,n){const i=n(0),r=n(4),o=n(24);e.Field=function(t){if(\"object\"!==i.typeOf(t))this.default=t;else{if(!(\"default\"in t))throw new Error(\"Missing default\");this.default=t.default}const e=i.typeOf(this.default);this.serialize=t.serialize||r.get(e),this.deserialize=t.deserialize||o.get(e)}},function(t,e){var n,i,r=t.exports={};function o(){throw new Error(\"setTimeout has not been defined\")}function s(){throw new Error(\"clearTimeout has not been defined\")}function a(t){if(n===setTimeout)return setTimeout(t,0);if((n===o||!n)&&setTimeout)return n=setTimeout,setTimeout(t,0);try{return n(t,0)}catch(e){try{return n.call(null,t,0)}catch(e){return n.call(this,t,0)}}}!function(){try{n=\"function\"==typeof setTimeout?setTimeout:o}catch(t){n=o}try{i=\"function\"==typeof clearTimeout?clearTimeout:s}catch(t){i=s}}();var u,l=[],h=!1,c=-1;function p(){h&&u&&(h=!1,u.length?l=u.concat(l):c=-1,l.length&&f())}function f(){if(!h){var t=a(p);h=!0;for(var e=l.length;e;){for(u=l,l=[];++c<e;)u&&u[c].run();c=-1,e=l.length}u=null,h=!1,function(t){if(i===clearTimeout)return clearTimeout(t);if((i===s||!i)&&clearTimeout)return i=clearTimeout,clearTimeout(t);try{i(t)}catch(e){try{return i.call(null,t)}catch(e){return i.call(this,t)}}}(t)}}function d(t,e){this.fun=t,this.array=e}function _(){}r.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)e[n-1]=arguments[n];l.push(new d(t,e)),1!==l.length||h||a(f)},d.prototype.run=function(){this.fun.apply(null,this.array)},r.title=\"browser\",r.browser=!0,r.env={},r.argv=[],r.version=\"\",r.versions={},r.on=_,r.addListener=_,r.once=_,r.off=_,r.removeListener=_,r.removeAllListeners=_,r.emit=_,r.prependListener=_,r.prependOnceListener=_,r.listeners=function(t){return[]},r.binding=function(t){throw new Error(\"process.binding is not supported\")},r.cwd=function(){return\"/\"},r.chdir=function(t){throw new Error(\"process.chdir is not supported\")},r.umask=function(){return 0}},function(t,e){t.exports=function(t){return t&&\"object\"==typeof t&&\"function\"==typeof t.copy&&\"function\"==typeof t.fill&&\"function\"==typeof t.readUInt8}},function(t,e){\"function\"==typeof Object.create?t.exports=function(t,e){t.super_=e,t.prototype=Object.create(e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}})}:t.exports=function(t,e){t.super_=e;var n=function(){};n.prototype=e.prototype,t.prototype=new n,t.prototype.constructor=t}},function(t,e,n){const i=n(0),r=decodeURIComponent,o={string:function(t){if(!t||\"string\"!=typeof t)throw new Error(\"Expected string to deserialize: \"+t);return r(t)},number:function(t){if(!t||\"string\"!=typeof t)throw new Error(\"Expected string to deserialize: \"+t);const e=Number(r(t));if(isNaN(e))throw new Error(\"Expected to deserialize a number: \"+t);return e},boolean:function(t){if(!t||\"string\"!=typeof t)throw new Error(\"Expected string to deserialize: \"+t);let e;if(\"1\"===t)e=!0;else{if(\"0\"!==t)throw new Error('Expected \"1\" or \"0\" for boolean: '+t);e=!1}return e},date:function(t){if(!t||\"string\"!=typeof t)throw new Error(\"Expected string to deserialize: \"+t);const e=new Date(r(t));if(isNaN(e.getTime()))throw new Error(\"Expected to deserialize a date: \"+t);return e},array:function(t){if(!t||\"string\"!=typeof t)throw new Error(\"Expected string to deserialize: \"+t);let e;try{e=JSON.parse(r(t))}catch(t){}if(!e||\"array\"!==i.typeOf(e))throw new Error(\"Expected to deserialize an array: \"+t);return e},object:function(t){if(!t||\"string\"!=typeof t)throw new Error(\"Expected string to deserialize: \"+t);let e;try{e=JSON.parse(r(t))}catch(t){}if(!e||\"object\"!==i.typeOf(e))throw new Error(\"Expected to deserialize an object: \"+t);return e}};e.get=function(t){if(!(t in o))throw new Error(\"Unable to deserialize type: \"+t);return o[t]}},function(t,e,n){const i=n(0);e.deserialize=function(t){let e;e=t.length>2?t.substring(2).split(\"/\"):[];return i.unzip(e)},e.serialize=function(t){let e=\"#\";const n=i.zip(t);return n.length>0&&(e=\"#/\"+n.join(\"/\")),e}},function(t,e,n){t.exports=function(){\"use strict\";function t(t,e,n){var i=t[e];t[e]=t[n],t[n]=i}function e(t,e){return t<e?-1:t>e?1:0}return function(n,i,r,o,s){!function e(n,i,r,o,s){for(;o>r;){if(o-r>600){var a=o-r+1,u=i-r+1,l=Math.log(a),h=.5*Math.exp(2*l/3),c=.5*Math.sqrt(l*h*(a-h)/a)*(u-a/2<0?-1:1),p=Math.max(r,Math.floor(i-u*h/a+c)),f=Math.min(o,Math.floor(i+(a-u)*h/a+c));e(n,i,p,f,s)}var d=n[i],_=r,g=o;for(t(n,r,i),s(n[o],d)>0&&t(n,r,o);_<g;){for(t(n,_,g),_++,g--;s(n[_],d)<0;)_++;for(;s(n[g],d)>0;)g--}0===s(n[r],d)?t(n,r,g):t(n,++g,o),g<=i&&(r=g+1),i<=g&&(o=g-1)}}(n,i,r||0,o||n.length-1,s||e)}}()},function(t,e,n){\"use strict\";n.r(e);n(13);function i(){return function(){throw new Error(\"Unimplemented abstract method.\")}()}var r=0;function o(t){return t.ol_uid||(t.ol_uid=String(++r))}var s,a=\"6.0.0-beta.6\",u=(s=function(t,e){return(s=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}s(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),l=function(t){function e(e){var n=this,i=\"Assertion failed. See https://openlayers.org/en/\"+(\"latest\"===a?a:\"v\"+a.split(\"-\")[0])+\"/doc/errors/#\"+e+\" for details.\";return(n=t.call(this,i)||this).code=e,n.name=\"AssertionError\",n.message=i,n}return u(e,t),e}(Error),h={ADD:\"add\",REMOVE:\"remove\"},c=\"propertychange\",p=\"function\"==typeof Object.assign?Object.assign:function(t,e){if(null==t)throw new TypeError(\"Cannot convert undefined or null to object\");for(var n=Object(t),i=1,r=arguments.length;i<r;++i){var o=arguments[i];if(null!=o)for(var s in o)o.hasOwnProperty(s)&&(n[s]=o[s])}return n};function f(t){for(var e in t)delete t[e]}var d=\"function\"==typeof Object.values?Object.values:function(t){var e=[];for(var n in t)e.push(t[n]);return e};function _(t){var e;for(e in t)return!1;return!e}function g(t,e,n,i){for(var r,o=0,s=t.length;o<s;++o)if((r=t[o]).listener===e&&r.bindTo===n)return i&&(r.deleteIndex=o),r}function y(t,e){var n=v(t);return n?n[e]:void 0}function v(t,e){var n=t.ol_lm;return!n&&e&&(n=t.ol_lm={}),n}function m(t,e){var n=y(t,e);if(n){for(var i=0,r=n.length;i<r;++i)t.removeEventListener(e,n[i].boundListener),f(n[i]);n.length=0;var o=v(t);o&&(delete o[e],0===Object.keys(o).length&&function(t){delete t.ol_lm}(t))}}function E(t,e,n,i,r){var o=v(t,!0),s=o[e];s||(s=o[e]=[]);var a=g(s,n,i,!1);return a?r||(a.callOnce=!1):(a={bindTo:i,callOnce:!!r,listener:n,target:t,type:e},t.addEventListener(e,function(t){var e=function(e){var n=t.listener,i=t.bindTo||t.target;return t.callOnce&&O(t),n.call(i,e)};return t.boundListener=e,e}(a)),s.push(a)),a}function x(t,e,n,i){return E(t,e,n,i,!0)}function w(t,e,n,i){var r=y(t,e);if(r){var o=g(r,n,i,!0);o&&O(o)}}function O(t){if(t&&t.target){t.target.removeEventListener(t.type,t.boundListener);var e=y(t.target,t.type);if(e){var n=\"deleteIndex\"in t?t.deleteIndex:e.indexOf(t);-1!==n&&e.splice(n,1),0===e.length&&m(t.target,t.type)}f(t)}}var T=function(){function t(){this.disposed_=!1}return t.prototype.dispose=function(){this.disposed_||(this.disposed_=!0,this.disposeInternal())},t.prototype.disposeInternal=function(){},t}();function b(){return!0}function C(){return!1}function S(){}var R=function(){function t(t){this.propagationStopped,this.type=t,this.target=null}return t.prototype.preventDefault=function(){this.propagationStopped=!0},t.prototype.stopPropagation=function(){this.propagationStopped=!0},t}(),I=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),P=function(t){function e(){var e=t.call(this)||this;return e.pendingRemovals_={},e.dispatching_={},e.listeners_={},e}return I(e,t),e.prototype.addEventListener=function(t,e){var n=this.listeners_[t];n||(n=this.listeners_[t]=[]),-1===n.indexOf(e)&&n.push(e)},e.prototype.dispatchEvent=function(t){var e=\"string\"==typeof t?new R(t):t,n=e.type;e.target=this;var i,r=this.listeners_[n];if(r){n in this.dispatching_||(this.dispatching_[n]=0,this.pendingRemovals_[n]=0),++this.dispatching_[n];for(var o=0,s=r.length;o<s;++o)if(!1===r[o].call(this,e)||e.propagationStopped){i=!1;break}if(--this.dispatching_[n],0===this.dispatching_[n]){var a=this.pendingRemovals_[n];for(delete this.pendingRemovals_[n];a--;)this.removeEventListener(n,S);delete this.dispatching_[n]}return i}},e.prototype.disposeInternal=function(){!function(t){var e=v(t);if(e)for(var n in e)m(t,n)}(this)},e.prototype.getListeners=function(t){return this.listeners_[t]},e.prototype.hasListener=function(t){return t?t in this.listeners_:Object.keys(this.listeners_).length>0},e.prototype.removeEventListener=function(t,e){var n=this.listeners_[t];if(n){var i=n.indexOf(e);t in this.pendingRemovals_?(n[i]=S,++this.pendingRemovals_[t]):(n.splice(i,1),0===n.length&&delete this.listeners_[t])}},e}(T),F={CHANGE:\"change\",CLEAR:\"clear\",CONTEXTMENU:\"contextmenu\",CLICK:\"click\",DBLCLICK:\"dblclick\",DRAGENTER:\"dragenter\",DRAGOVER:\"dragover\",DROP:\"drop\",ERROR:\"error\",KEYDOWN:\"keydown\",KEYPRESS:\"keypress\",LOAD:\"load\",MOUSEDOWN:\"mousedown\",MOUSEMOVE:\"mousemove\",MOUSEOUT:\"mouseout\",MOUSEUP:\"mouseup\",MOUSEWHEEL:\"mousewheel\",MSPOINTERDOWN:\"MSPointerDown\",RESIZE:\"resize\",TOUCHSTART:\"touchstart\",TOUCHMOVE:\"touchmove\",TOUCHEND:\"touchend\",WHEEL:\"wheel\"},L=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();var M=function(t){function e(){var e=t.call(this)||this;return e.revision_=0,e}return L(e,t),e.prototype.changed=function(){++this.revision_,this.dispatchEvent(F.CHANGE)},e.prototype.getRevision=function(){return this.revision_},e.prototype.on=function(t,e){if(Array.isArray(t)){for(var n=t.length,i=new Array(n),r=0;r<n;++r)i[r]=E(this,t[r],e);return i}return E(this,t,e)},e.prototype.once=function(t,e){if(Array.isArray(t)){for(var n=t.length,i=new Array(n),r=0;r<n;++r)i[r]=x(this,t[r],e);return i}return x(this,t,e)},e.prototype.un=function(t,e){if(Array.isArray(t))for(var n=0,i=t.length;n<i;++n)w(this,t[n],e);else w(this,t,e)},e}(P),A=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),D=function(t){function e(e,n,i){var r=t.call(this,e)||this;return r.key=n,r.oldValue=i,r}return A(e,t),e}(R),k=function(t){function e(e){var n=t.call(this)||this;return o(n),n.values_={},void 0!==e&&n.setProperties(e),n}return A(e,t),e.prototype.get=function(t){var e;return this.values_.hasOwnProperty(t)&&(e=this.values_[t]),e},e.prototype.getKeys=function(){return Object.keys(this.values_)},e.prototype.getProperties=function(){return p({},this.values_)},e.prototype.notify=function(t,e){var n;n=G(t),this.dispatchEvent(new D(n,t,e)),n=c,this.dispatchEvent(new D(n,t,e))},e.prototype.set=function(t,e,n){if(n)this.values_[t]=e;else{var i=this.values_[t];this.values_[t]=e,i!==e&&this.notify(t,i)}},e.prototype.setProperties=function(t,e){for(var n in t)this.set(n,t[n],e)},e.prototype.unset=function(t,e){if(t in this.values_){var n=this.values_[t];delete this.values_[t],e||this.notify(t,n)}},e}(M),N={};function G(t){return N.hasOwnProperty(t)?N[t]:N[t]=\"change:\"+t}var j=k,z=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Y=\"length\",X=function(t){function e(e,n,i){var r=t.call(this,e)||this;return r.element=n,r.index=i,r}return z(e,t),e}(R),U=function(t){function e(e,n){var i=t.call(this)||this,r=n||{};if(i.unique_=!!r.unique,i.array_=e||[],i.unique_)for(var o=0,s=i.array_.length;o<s;++o)i.assertUnique_(i.array_[o],o);return i.updateLength_(),i}return z(e,t),e.prototype.clear=function(){for(;this.getLength()>0;)this.pop()},e.prototype.extend=function(t){for(var e=0,n=t.length;e<n;++e)this.push(t[e]);return this},e.prototype.forEach=function(t){for(var e=this.array_,n=0,i=e.length;n<i;++n)t(e[n],n,e)},e.prototype.getArray=function(){return this.array_},e.prototype.item=function(t){return this.array_[t]},e.prototype.getLength=function(){return this.get(Y)},e.prototype.insertAt=function(t,e){this.unique_&&this.assertUnique_(e),this.array_.splice(t,0,e),this.updateLength_(),this.dispatchEvent(new X(h.ADD,e,t))},e.prototype.pop=function(){return this.removeAt(this.getLength()-1)},e.prototype.push=function(t){this.unique_&&this.assertUnique_(t);var e=this.getLength();return this.insertAt(e,t),this.getLength()},e.prototype.remove=function(t){for(var e=this.array_,n=0,i=e.length;n<i;++n)if(e[n]===t)return this.removeAt(n)},e.prototype.removeAt=function(t){var e=this.array_[t];return this.array_.splice(t,1),this.updateLength_(),this.dispatchEvent(new X(h.REMOVE,e,t)),e},e.prototype.setAt=function(t,e){var n=this.getLength();if(t<n){this.unique_&&this.assertUnique_(e,t);var i=this.array_[t];this.array_[t]=e,this.dispatchEvent(new X(h.REMOVE,i,t)),this.dispatchEvent(new X(h.ADD,e,t))}else{for(var r=n;r<t;++r)this.insertAt(r,void 0);this.insertAt(t,e)}},e.prototype.updateLength_=function(){this.set(Y,this.array_.length)},e.prototype.assertUnique_=function(t,e){for(var n=0,i=this.array_.length;n<i;++n)if(this.array_[n]===t&&n!==e)throw new l(58)},e}(j),K=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),W=function(t){function e(e,n,i){var r=t.call(this,e)||this;return r.map=n,r.frameState=void 0!==i?i:null,r}return K(e,t),e}(R),B=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Z=function(t){function e(e,n,i,r,o){var s=t.call(this,e,n,o)||this;return s.originalEvent=i,s.pixel=n.getEventPixel(i),s.coordinate=n.getCoordinateFromPixel(s.pixel),s.dragging=void 0!==r&&r,s}return B(e,t),e.prototype.preventDefault=function(){t.prototype.preventDefault.call(this),this.originalEvent.preventDefault()},e.prototype.stopPropagation=function(){t.prototype.stopPropagation.call(this),this.originalEvent.stopPropagation()},e}(W),V=\"undefined\"!=typeof navigator?navigator.userAgent.toLowerCase():\"\",H=-1!==V.indexOf(\"firefox\"),q=-1!==V.indexOf(\"safari\")&&-1==V.indexOf(\"chrom\"),J=-1!==V.indexOf(\"webkit\")&&-1==V.indexOf(\"edge\"),Q=-1!==V.indexOf(\"macintosh\"),$=window.devicePixelRatio||1,tt=(navigator,\"ontouchstart\"in window),et=\"PointerEvent\"in window,nt=!!navigator.msPointerEnabled,it={SINGLECLICK:\"singleclick\",CLICK:F.CLICK,DBLCLICK:F.DBLCLICK,POINTERDRAG:\"pointerdrag\",POINTERMOVE:\"pointermove\",POINTERDOWN:\"pointerdown\",POINTERUP:\"pointerup\",POINTEROVER:\"pointerover\",POINTEROUT:\"pointerout\",POINTERENTER:\"pointerenter\",POINTERLEAVE:\"pointerleave\",POINTERCANCEL:\"pointercancel\"},rt=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),ot=function(t){function e(e,n,i,r,o){var s=t.call(this,e,n,i.originalEvent,r,o)||this;return s.pointerEvent=i,s}return rt(e,t),e}(Z),st={POINTERMOVE:\"pointermove\",POINTERDOWN:\"pointerdown\",POINTERUP:\"pointerup\",POINTEROVER:\"pointerover\",POINTEROUT:\"pointerout\",POINTERENTER:\"pointerenter\",POINTERLEAVE:\"pointerleave\",POINTERCANCEL:\"pointercancel\"},at=function(){function t(t,e){this.dispatcher=t,this.mapping_=e}return t.prototype.getEvents=function(){return Object.keys(this.mapping_)},t.prototype.getHandlerForEvent=function(t){return this.mapping_[t]},t}(),ut=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),lt=1,ht=\"mouse\";function ct(t){if(!this.isEventSimulatedFromTouch_(t)){lt.toString()in this.pointerMap&&this.cancel(t);var e=gt(t,this.dispatcher);this.pointerMap[lt.toString()]=t,this.dispatcher.down(e,t)}}function pt(t){if(!this.isEventSimulatedFromTouch_(t)){var e=gt(t,this.dispatcher);this.dispatcher.move(e,t)}}function ft(t){if(!this.isEventSimulatedFromTouch_(t)){var e=this.pointerMap[lt.toString()];if(e&&e.button===t.button){var n=gt(t,this.dispatcher);this.dispatcher.up(n,t),this.cleanupMouse()}}}function dt(t){if(!this.isEventSimulatedFromTouch_(t)){var e=gt(t,this.dispatcher);this.dispatcher.enterOver(e,t)}}function _t(t){if(!this.isEventSimulatedFromTouch_(t)){var e=gt(t,this.dispatcher);this.dispatcher.leaveOut(e,t)}}function gt(t,e){var n=e.cloneEvent(t,t),i=n.preventDefault;return n.preventDefault=function(){t.preventDefault(),i()},n.pointerId=lt,n.isPrimary=!0,n.pointerType=ht,n}var yt=function(t){function e(e){var n=this,i={mousedown:ct,mousemove:pt,mouseup:ft,mouseover:dt,mouseout:_t};return(n=t.call(this,e,i)||this).pointerMap=e.pointerMap,n.lastTouches=[],n}return ut(e,t),e.prototype.isEventSimulatedFromTouch_=function(t){for(var e=this.lastTouches,n=t.clientX,i=t.clientY,r=0,o=e.length,s=void 0;r<o&&(s=e[r]);r++){var a=Math.abs(n-s[0]),u=Math.abs(i-s[1]);if(a<=25&&u<=25)return!0}return!1},e.prototype.cancel=function(t){var e=gt(t,this.dispatcher);this.dispatcher.cancel(e,t),this.cleanupMouse()},e.prototype.cleanupMouse=function(){delete this.pointerMap[lt.toString()]},e}(at),vt=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),mt=[\"\",\"unavailable\",\"touch\",\"pen\",\"mouse\"];function Et(t){this.pointerMap[t.pointerId.toString()]=t;var e=this.prepareEvent_(t);this.dispatcher.down(e,t)}function xt(t){var e=this.prepareEvent_(t);this.dispatcher.move(e,t)}function wt(t){var e=this.prepareEvent_(t);this.dispatcher.up(e,t),this.cleanup(t.pointerId)}function Ot(t){var e=this.prepareEvent_(t);this.dispatcher.leaveOut(e,t)}function Tt(t){var e=this.prepareEvent_(t);this.dispatcher.enterOver(e,t)}function bt(t){var e=this.prepareEvent_(t);this.dispatcher.cancel(e,t),this.cleanup(t.pointerId)}function Ct(t){var e=this.dispatcher.makeEvent(\"lostpointercapture\",t,t);this.dispatcher.dispatchEvent(e)}function St(t){var e=this.dispatcher.makeEvent(\"gotpointercapture\",t,t);this.dispatcher.dispatchEvent(e)}var Rt=function(t){function e(e){var n=this,i={MSPointerDown:Et,MSPointerMove:xt,MSPointerUp:wt,MSPointerOut:Ot,MSPointerOver:Tt,MSPointerCancel:bt,MSGotPointerCapture:St,MSLostPointerCapture:Ct};return(n=t.call(this,e,i)||this).pointerMap=e.pointerMap,n}return vt(e,t),e.prototype.prepareEvent_=function(t){var e=t;return\"number\"==typeof t.pointerType&&((e=this.dispatcher.cloneEvent(t,t)).pointerType=mt[t.pointerType]),e},e.prototype.cleanup=function(t){delete this.pointerMap[t.toString()]},e}(at),It=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();function Pt(t){this.dispatcher.fireNativeEvent(t)}function Ft(t){this.dispatcher.fireNativeEvent(t)}function Lt(t){this.dispatcher.fireNativeEvent(t)}function Mt(t){this.dispatcher.fireNativeEvent(t)}function At(t){this.dispatcher.fireNativeEvent(t)}function Dt(t){this.dispatcher.fireNativeEvent(t)}function kt(t){this.dispatcher.fireNativeEvent(t)}function Nt(t){this.dispatcher.fireNativeEvent(t)}var Gt=function(t){function e(e){var n={pointerdown:Pt,pointermove:Ft,pointerup:Lt,pointerout:Mt,pointerover:At,pointercancel:Dt,gotpointercapture:Nt,lostpointercapture:kt};return t.call(this,e,n)||this}return It(e,t),e}(at),jt=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),zt=!1,Yt=function(t){function e(e,n,i){var r=t.call(this,e)||this;r.originalEvent=n;var o=i||{};return r.buttons=function(t){var e;if(t.buttons||zt)e=t.buttons;else switch(t.which){case 1:e=1;break;case 2:e=4;break;case 3:e=2;break;default:e=0}return e}(o),r.pressure=function(t,e){var n=0;n=t.pressure?t.pressure:e?.5:0;return n}(o,r.buttons),r.bubbles=\"bubbles\"in o&&o.bubbles,r.cancelable=\"cancelable\"in o&&o.cancelable,r.view=\"view\"in o?o.view:null,r.detail=\"detail\"in o?o.detail:null,r.screenX=\"screenX\"in o?o.screenX:0,r.screenY=\"screenY\"in o?o.screenY:0,r.clientX=\"clientX\"in o?o.clientX:0,r.clientY=\"clientY\"in o?o.clientY:0,r.ctrlKey=\"ctrlKey\"in o&&o.ctrlKey,r.altKey=\"altKey\"in o&&o.altKey,r.shiftKey=\"shiftKey\"in o&&o.shiftKey,r.metaKey=\"metaKey\"in o&&o.metaKey,r.button=\"button\"in o?o.button:0,r.relatedTarget=\"relatedTarget\"in o?o.relatedTarget:null,r.pointerId=\"pointerId\"in o?o.pointerId:0,r.width=\"width\"in o?o.width:0,r.height=\"height\"in o?o.height:0,r.tiltX=\"tiltX\"in o?o.tiltX:0,r.tiltY=\"tiltY\"in o?o.tiltY:0,r.pointerType=\"pointerType\"in o?o.pointerType:\"\",r.hwTimestamp=\"hwTimestamp\"in o?o.hwTimestamp:0,r.isPrimary=\"isPrimary\"in o&&o.isPrimary,n.preventDefault&&(r.preventDefault=function(){n.preventDefault()}),r}return jt(e,t),e}(R);!function(){try{var t=new MouseEvent(\"click\",{buttons:1});zt=1===t.buttons}catch(t){}}();var Xt=Yt;function Ut(t,e){return t>e?1:t<e?-1:0}function Kt(t,e){return t.indexOf(e)>=0}function Wt(t,e,n){var i=t.length;if(t[0]<=e)return 0;if(e<=t[i-1])return i-1;var r=void 0;if(n>0){for(r=1;r<i;++r)if(t[r]<e)return r-1}else if(n<0){for(r=1;r<i;++r)if(t[r]<=e)return r}else for(r=1;r<i;++r){if(t[r]==e)return r;if(t[r]<e)return t[r-1]-e<e-t[r]?r-1:r}return i-1}function Bt(t,e,n){for(;e<n;){var i=t[e];t[e]=t[n],t[n]=i,++e,--n}}function Zt(t,e){for(var n=Array.isArray(e)?e:[e],i=n.length,r=0;r<i;r++)t[t.length]=n[r]}function Vt(t,e){var n=t.length;if(n!==e.length)return!1;for(var i=0;i<n;i++)if(t[i]!==e[i])return!1;return!0}var Ht=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();function qt(t){this.vacuumTouches_(t),this.setPrimaryTouch_(t.changedTouches[0]),this.dedupSynthMouse_(t),this.clickCount_++,this.processTouches_(t,this.overDown_)}function Jt(t){this.processTouches_(t,this.moveOverOut_)}function Qt(t){this.dedupSynthMouse_(t),this.processTouches_(t,this.upOut_)}function $t(t){this.processTouches_(t,this.cancelOut_)}var te=function(t){function e(e,n){var i=this,r={touchstart:qt,touchmove:Jt,touchend:Qt,touchcancel:$t};return(i=t.call(this,e,r)||this).pointerMap=e.pointerMap,i.mouseSource=n,i.firstTouchId_=void 0,i.clickCount_=0,i.resetId_,i.dedupTimeout_=2500,i}return Ht(e,t),e.prototype.isPrimaryTouch_=function(t){return this.firstTouchId_===t.identifier},e.prototype.setPrimaryTouch_=function(t){var e=Object.keys(this.pointerMap).length;(0===e||1===e&&lt.toString()in this.pointerMap)&&(this.firstTouchId_=t.identifier,this.cancelResetClickCount_())},e.prototype.removePrimaryPointer_=function(t){t.isPrimary&&(this.firstTouchId_=void 0,this.resetClickCount_())},e.prototype.resetClickCount_=function(){this.resetId_=setTimeout(this.resetClickCountHandler_.bind(this),200)},e.prototype.resetClickCountHandler_=function(){this.clickCount_=0,this.resetId_=void 0},e.prototype.cancelResetClickCount_=function(){void 0!==this.resetId_&&clearTimeout(this.resetId_)},e.prototype.touchToPointer_=function(t,e){var n=this.dispatcher.cloneEvent(t,e);return n.pointerId=e.identifier+2,n.bubbles=!0,n.cancelable=!0,n.detail=this.clickCount_,n.button=0,n.buttons=1,n.width=e.radiusX||0,n.height=e.radiusY||0,n.pressure=e.force||.5,n.isPrimary=this.isPrimaryTouch_(e),n.pointerType=\"touch\",n.clientX=e.clientX,n.clientY=e.clientY,n.screenX=e.screenX,n.screenY=e.screenY,n},e.prototype.processTouches_=function(t,e){var n=Array.prototype.slice.call(t.changedTouches),i=n.length;function r(){t.preventDefault()}for(var o=0;o<i;++o){var s=this.touchToPointer_(t,n[o]);s.preventDefault=r,e.call(this,t,s)}},e.prototype.findTouch_=function(t,e){for(var n=t.length,i=0;i<n;i++){if(t[i].identifier===e)return!0}return!1},e.prototype.vacuumTouches_=function(t){var e=t.touches,n=Object.keys(this.pointerMap),i=n.length;if(i>=e.length){for(var r=[],o=0;o<i;++o){var s=Number(n[o]),a=this.pointerMap[s];s==lt||this.findTouch_(e,s-2)||r.push(a.out)}for(o=0;o<r.length;++o)this.cancelOut_(t,r[o])}},e.prototype.overDown_=function(t,e){this.pointerMap[e.pointerId]={target:e.target,out:e,outTarget:e.target},this.dispatcher.over(e,t),this.dispatcher.enter(e,t),this.dispatcher.down(e,t)},e.prototype.moveOverOut_=function(t,e){var n=e,i=this.pointerMap[n.pointerId];if(i){var r=i.out,o=i.outTarget;this.dispatcher.move(n,t),r&&o!==n.target&&(r.relatedTarget=n.target,n.relatedTarget=o,r.target=o,n.target?(this.dispatcher.leaveOut(r,t),this.dispatcher.enterOver(n,t)):(n.target=o,n.relatedTarget=null,this.cancelOut_(t,n))),i.out=n,i.outTarget=n.target}},e.prototype.upOut_=function(t,e){this.dispatcher.up(e,t),this.dispatcher.out(e,t),this.dispatcher.leave(e,t),this.cleanUpPointer_(e)},e.prototype.cancelOut_=function(t,e){this.dispatcher.cancel(e,t),this.dispatcher.out(e,t),this.dispatcher.leave(e,t),this.cleanUpPointer_(e)},e.prototype.cleanUpPointer_=function(t){delete this.pointerMap[t.pointerId],this.removePrimaryPointer_(t)},e.prototype.dedupSynthMouse_=function(t){var e=this.mouseSource.lastTouches,n=t.changedTouches[0];if(this.isPrimaryTouch_(n)){var i=[n.clientX,n.clientY];e.push(i),setTimeout(function(){var t,n,r;n=i,r=(t=e).indexOf(n),r>-1&&t.splice(r,1)},this.dedupTimeout_)}},e}(at),ee=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),ne=[[\"bubbles\",!1],[\"cancelable\",!1],[\"view\",null],[\"detail\",null],[\"screenX\",0],[\"screenY\",0],[\"clientX\",0],[\"clientY\",0],[\"ctrlKey\",!1],[\"altKey\",!1],[\"shiftKey\",!1],[\"metaKey\",!1],[\"button\",0],[\"relatedTarget\",null],[\"buttons\",0],[\"pointerId\",0],[\"width\",0],[\"height\",0],[\"pressure\",0],[\"tiltX\",0],[\"tiltY\",0],[\"pointerType\",\"\"],[\"hwTimestamp\",0],[\"isPrimary\",!1],[\"type\",\"\"],[\"target\",null],[\"currentTarget\",null],[\"which\",0]],ie=function(t){function e(e){var n=t.call(this)||this;return n.element_=e,n.pointerMap={},n.eventMap_={},n.eventSourceList_=[],n.registerSources(),n}return ee(e,t),e.prototype.registerSources=function(){if(et)this.registerSource(\"native\",new Gt(this));else if(nt)this.registerSource(\"ms\",new Rt(this));else{var t=new yt(this);this.registerSource(\"mouse\",t),tt&&this.registerSource(\"touch\",new te(this,t))}this.register_()},e.prototype.registerSource=function(t,e){var n=e,i=n.getEvents();i&&(i.forEach(function(t){var e=n.getHandlerForEvent(t);e&&(this.eventMap_[t]=e.bind(n))}.bind(this)),this.eventSourceList_.push(n))},e.prototype.register_=function(){for(var t=this.eventSourceList_.length,e=0;e<t;e++){var n=this.eventSourceList_[e];this.addEvents_(n.getEvents())}},e.prototype.unregister_=function(){for(var t=this.eventSourceList_.length,e=0;e<t;e++){var n=this.eventSourceList_[e];this.removeEvents_(n.getEvents())}},e.prototype.eventHandler_=function(t){var e=t.type,n=this.eventMap_[e];n&&n(t)},e.prototype.addEvents_=function(t){t.forEach(function(t){E(this.element_,t,this.eventHandler_,this)}.bind(this))},e.prototype.removeEvents_=function(t){t.forEach(function(t){w(this.element_,t,this.eventHandler_,this)}.bind(this))},e.prototype.cloneEvent=function(t,e){for(var n={},i=0,r=ne.length;i<r;i++){var o=ne[i][0];n[o]=t[o]||e[o]||ne[i][1]}return n},e.prototype.down=function(t,e){this.fireEvent(st.POINTERDOWN,t,e)},e.prototype.move=function(t,e){this.fireEvent(st.POINTERMOVE,t,e)},e.prototype.up=function(t,e){this.fireEvent(st.POINTERUP,t,e)},e.prototype.enter=function(t,e){t.bubbles=!1,this.fireEvent(st.POINTERENTER,t,e)},e.prototype.leave=function(t,e){t.bubbles=!1,this.fireEvent(st.POINTERLEAVE,t,e)},e.prototype.over=function(t,e){t.bubbles=!0,this.fireEvent(st.POINTEROVER,t,e)},e.prototype.out=function(t,e){t.bubbles=!0,this.fireEvent(st.POINTEROUT,t,e)},e.prototype.cancel=function(t,e){this.fireEvent(st.POINTERCANCEL,t,e)},e.prototype.leaveOut=function(t,e){this.out(t,e),this.contains_(t.target,t.relatedTarget)||this.leave(t,e)},e.prototype.enterOver=function(t,e){this.over(t,e),this.contains_(t.target,t.relatedTarget)||this.enter(t,e)},e.prototype.contains_=function(t,e){return!(!t||!e)&&t.contains(e)},e.prototype.makeEvent=function(t,e,n){return new Xt(t,n,e)},e.prototype.fireEvent=function(t,e,n){var i=this.makeEvent(t,e,n);this.dispatchEvent(i)},e.prototype.fireNativeEvent=function(t){var e=this.makeEvent(t.type,t,t);this.dispatchEvent(e)},e.prototype.wrapMouseEvent=function(t,e){return this.makeEvent(t,gt(e,this),e)},e.prototype.disposeInternal=function(){this.unregister_(),t.prototype.disposeInternal.call(this)},e}(P),re=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),oe=function(t){function e(e,n){var i=t.call(this)||this;i.map_=e,i.clickTimeoutId_,i.dragging_=!1,i.dragListenerKeys_=[],i.moveTolerance_=n?n*$:$,i.down_=null;var r=i.map_.getViewport();return i.activePointers_=0,i.trackedTouches_={},i.pointerEventHandler_=new ie(r),i.documentPointerEventHandler_=null,i.pointerdownListenerKey_=E(i.pointerEventHandler_,st.POINTERDOWN,i.handlePointerDown_,i),i.relayedListenerKey_=E(i.pointerEventHandler_,st.POINTERMOVE,i.relayEvent_,i),i}return re(e,t),e.prototype.emulateClick_=function(t){var e=new ot(it.CLICK,this.map_,t);this.dispatchEvent(e),void 0!==this.clickTimeoutId_?(clearTimeout(this.clickTimeoutId_),this.clickTimeoutId_=void 0,e=new ot(it.DBLCLICK,this.map_,t),this.dispatchEvent(e)):this.clickTimeoutId_=setTimeout(function(){this.clickTimeoutId_=void 0;var e=new ot(it.SINGLECLICK,this.map_,t);this.dispatchEvent(e)}.bind(this),250)},e.prototype.updateActivePointers_=function(t){var e=t;e.type==it.POINTERUP||e.type==it.POINTERCANCEL?delete this.trackedTouches_[e.pointerId]:e.type==it.POINTERDOWN&&(this.trackedTouches_[e.pointerId]=!0),this.activePointers_=Object.keys(this.trackedTouches_).length},e.prototype.handlePointerUp_=function(t){this.updateActivePointers_(t);var e=new ot(it.POINTERUP,this.map_,t);this.dispatchEvent(e),e.propagationStopped||this.dragging_||!this.isMouseActionButton_(t)||this.emulateClick_(this.down_),0===this.activePointers_&&(this.dragListenerKeys_.forEach(O),this.dragListenerKeys_.length=0,this.dragging_=!1,this.down_=null,this.documentPointerEventHandler_.dispose(),this.documentPointerEventHandler_=null)},e.prototype.isMouseActionButton_=function(t){return 0===t.button},e.prototype.handlePointerDown_=function(t){this.updateActivePointers_(t);var e=new ot(it.POINTERDOWN,this.map_,t);this.dispatchEvent(e),this.down_=t,0===this.dragListenerKeys_.length&&(this.documentPointerEventHandler_=new ie(document),this.dragListenerKeys_.push(E(this.documentPointerEventHandler_,it.POINTERMOVE,this.handlePointerMove_,this),E(this.documentPointerEventHandler_,it.POINTERUP,this.handlePointerUp_,this),E(this.pointerEventHandler_,it.POINTERCANCEL,this.handlePointerUp_,this)))},e.prototype.handlePointerMove_=function(t){if(this.isMoving_(t)){this.dragging_=!0;var e=new ot(it.POINTERDRAG,this.map_,t,this.dragging_);this.dispatchEvent(e)}t.preventDefault()},e.prototype.relayEvent_=function(t){var e=!(!this.down_||!this.isMoving_(t));this.dispatchEvent(new ot(t.type,this.map_,t,e))},e.prototype.isMoving_=function(t){return this.dragging_||Math.abs(t.clientX-this.down_.clientX)>this.moveTolerance_||Math.abs(t.clientY-this.down_.clientY)>this.moveTolerance_},e.prototype.disposeInternal=function(){this.relayedListenerKey_&&(O(this.relayedListenerKey_),this.relayedListenerKey_=null),this.pointerdownListenerKey_&&(O(this.pointerdownListenerKey_),this.pointerdownListenerKey_=null),this.dragListenerKeys_.forEach(O),this.dragListenerKeys_.length=0,this.documentPointerEventHandler_&&(this.documentPointerEventHandler_.dispose(),this.documentPointerEventHandler_=null),this.pointerEventHandler_&&(this.pointerEventHandler_.dispose(),this.pointerEventHandler_=null),t.prototype.disposeInternal.call(this)},e}(P),se=\"postrender\",ae=\"movestart\",ue=\"moveend\",le={LAYERGROUP:\"layergroup\",SIZE:\"size\",TARGET:\"target\",VIEW:\"view\"},he=\"prerender\",ce=\"postrender\",pe=\"precompose\",fe=\"postcompose\",de=\"rendercomplete\",_e={IDLE:0,LOADING:1,LOADED:2,ERROR:3,EMPTY:4,ABORT:5};function ge(t,e){if(!t)throw new l(e)}var ye=function(){function t(t,e){this.priorityFunction_=t,this.keyFunction_=e,this.elements_=[],this.priorities_=[],this.queuedElements_={}}return t.prototype.clear=function(){this.elements_.length=0,this.priorities_.length=0,f(this.queuedElements_)},t.prototype.dequeue=function(){var t=this.elements_,e=this.priorities_,n=t[0];1==t.length?(t.length=0,e.length=0):(t[0]=t.pop(),e[0]=e.pop(),this.siftUp_(0));var i=this.keyFunction_(n);return delete this.queuedElements_[i],n},t.prototype.enqueue=function(t){ge(!(this.keyFunction_(t)in this.queuedElements_),31);var e=this.priorityFunction_(t);return e!=1/0&&(this.elements_.push(t),this.priorities_.push(e),this.queuedElements_[this.keyFunction_(t)]=!0,this.siftDown_(0,this.elements_.length-1),!0)},t.prototype.getCount=function(){return this.elements_.length},t.prototype.getLeftChildIndex_=function(t){return 2*t+1},t.prototype.getRightChildIndex_=function(t){return 2*t+2},t.prototype.getParentIndex_=function(t){return t-1>>1},t.prototype.heapify_=function(){var t;for(t=(this.elements_.length>>1)-1;t>=0;t--)this.siftUp_(t)},t.prototype.isEmpty=function(){return 0===this.elements_.length},t.prototype.isKeyQueued=function(t){return t in this.queuedElements_},t.prototype.isQueued=function(t){return this.isKeyQueued(this.keyFunction_(t))},t.prototype.siftUp_=function(t){for(var e=this.elements_,n=this.priorities_,i=e.length,r=e[t],o=n[t],s=t;t<i>>1;){var a=this.getLeftChildIndex_(t),u=this.getRightChildIndex_(t),l=u<i&&n[u]<n[a]?u:a;e[t]=e[l],n[t]=n[l],t=l}e[t]=r,n[t]=o,this.siftDown_(s,t)},t.prototype.siftDown_=function(t,e){for(var n=this.elements_,i=this.priorities_,r=n[e],o=i[e];e>t;){var s=this.getParentIndex_(e);if(!(i[s]>o))break;n[e]=n[s],i[e]=i[s],e=s}n[e]=r,i[e]=o},t.prototype.reprioritize=function(){var t,e,n,i=this.priorityFunction_,r=this.elements_,o=this.priorities_,s=0,a=r.length;for(e=0;e<a;++e)(n=i(t=r[e]))==1/0?delete this.queuedElements_[this.keyFunction_(t)]:(o[s]=n,r[s++]=t);r.length=s,o.length=s,this.heapify_()},t}(),ve=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),me=function(t){function e(e,n){var i=t.call(this,function(t){return e.apply(null,t)},function(t){return t[0].getKey()})||this;return i.tileChangeCallback_=n,i.tilesLoading_=0,i.tilesLoadingKeys_={},i}return ve(e,t),e.prototype.enqueue=function(e){var n=t.prototype.enqueue.call(this,e);n&&E(e[0],F.CHANGE,this.handleTileChange,this);return n},e.prototype.getTilesLoading=function(){return this.tilesLoading_},e.prototype.handleTileChange=function(t){var e=t.target,n=e.getState();if(e.hifi&&n===_e.LOADED||n===_e.ERROR||n===_e.EMPTY||n===_e.ABORT){w(e,F.CHANGE,this.handleTileChange,this);var i=e.getKey();i in this.tilesLoadingKeys_&&(delete this.tilesLoadingKeys_[i],--this.tilesLoading_),this.tileChangeCallback_()}},e.prototype.loadMoreTiles=function(t,e){for(var n,i,r,o=0,s=!1;this.tilesLoading_<t&&o<e&&this.getCount()>0;)r=(i=this.dequeue()[0]).getKey(),(n=i.getState())===_e.ABORT?s=!0:n!==_e.IDLE||r in this.tilesLoadingKeys_||(this.tilesLoadingKeys_[r]=!0,++this.tilesLoading_,++o,i.load());0===o&&s&&this.tileChangeCallback_()},e}(ye),Ee=42,xe=256;function we(t,e,n){return Math.min(Math.max(t,e),n)}var Oe=\"cosh\"in Math?Math.cosh:function(t){var e=Math.exp(t);return(e+1/e)/2};function Te(t,e,n,i,r,o){var s=r-n,a=o-i;if(0!==s||0!==a){var u=((t-n)*s+(e-i)*a)/(s*s+a*a);u>1?(n=r,i=o):u>0&&(n+=s*u,i+=a*u)}return be(t,e,n,i)}function be(t,e,n,i){var r=n-t,o=i-e;return r*r+o*o}function Ce(t){return t*Math.PI/180}function Se(t,e){var n=t%e;return n*e<0?n+e:n}function Re(t,e,n){return t+n*(e-t)}function Ie(t){return t}var Pe={BOTTOM_LEFT:\"bottom-left\",BOTTOM_RIGHT:\"bottom-right\",TOP_LEFT:\"top-left\",TOP_RIGHT:\"top-right\"},Fe={UNKNOWN:0,INTERSECTING:1,ABOVE:2,RIGHT:4,BELOW:8,LEFT:16};function Le(t){for(var e=ze(),n=0,i=t.length;n<i;++n)Be(e,t[n]);return e}function Me(t,e,n){return n?(n[0]=t[0]-e,n[1]=t[1]-e,n[2]=t[2]+e,n[3]=t[3]+e,n):[t[0]-e,t[1]-e,t[2]+e,t[3]+e]}function Ae(t,e){return e?(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e):t.slice()}function De(t,e,n){var i,r;return(i=e<t[0]?t[0]-e:t[2]<e?e-t[2]:0)*i+(r=n<t[1]?t[1]-n:t[3]<n?n-t[3]:0)*r}function ke(t,e){return Ge(t,e[0],e[1])}function Ne(t,e){return t[0]<=e[0]&&e[2]<=t[2]&&t[1]<=e[1]&&e[3]<=t[3]}function Ge(t,e,n){return t[0]<=e&&e<=t[2]&&t[1]<=n&&n<=t[3]}function je(t,e){var n=t[0],i=t[1],r=t[2],o=t[3],s=e[0],a=e[1],u=Fe.UNKNOWN;return s<n?u|=Fe.LEFT:s>r&&(u|=Fe.RIGHT),a<i?u|=Fe.BELOW:a>o&&(u|=Fe.ABOVE),u===Fe.UNKNOWN&&(u=Fe.INTERSECTING),u}function ze(){return[1/0,1/0,-1/0,-1/0]}function Ye(t,e,n,i,r){return r?(r[0]=t,r[1]=e,r[2]=n,r[3]=i,r):[t,e,n,i]}function Xe(t){return Ye(1/0,1/0,-1/0,-1/0,t)}function Ue(t,e,n,i,r){return Ve(Xe(r),t,e,n,i)}function Ke(t,e){return t[0]==e[0]&&t[2]==e[2]&&t[1]==e[1]&&t[3]==e[3]}function We(t,e){return e[0]<t[0]&&(t[0]=e[0]),e[2]>t[2]&&(t[2]=e[2]),e[1]<t[1]&&(t[1]=e[1]),e[3]>t[3]&&(t[3]=e[3]),t}function Be(t,e){e[0]<t[0]&&(t[0]=e[0]),e[0]>t[2]&&(t[2]=e[0]),e[1]<t[1]&&(t[1]=e[1]),e[1]>t[3]&&(t[3]=e[1])}function Ze(t,e){for(var n=0,i=e.length;n<i;++n)Be(t,e[n]);return t}function Ve(t,e,n,i,r){for(;n<i;n+=r)He(t,e[n],e[n+1]);return t}function He(t,e,n){t[0]=Math.min(t[0],e),t[1]=Math.min(t[1],n),t[2]=Math.max(t[2],e),t[3]=Math.max(t[3],n)}function qe(t){var e=0;return ln(t)||(e=an(t)*nn(t)),e}function Je(t){return[t[0],t[1]]}function Qe(t){return[t[2],t[1]]}function $e(t){return[(t[0]+t[2])/2,(t[1]+t[3])/2]}function tn(t,e){var n;return e===Pe.BOTTOM_LEFT?n=Je(t):e===Pe.BOTTOM_RIGHT?n=Qe(t):e===Pe.TOP_LEFT?n=on(t):e===Pe.TOP_RIGHT?n=sn(t):ge(!1,13),n}function en(t,e,n,i,r){var o=e*i[0]/2,s=e*i[1]/2,a=Math.cos(n),u=Math.sin(n),l=o*a,h=o*u,c=s*a,p=s*u,f=t[0],d=t[1],_=f-l+p,g=f-l-p,y=f+l-p,v=f+l+p,m=d-h-c,E=d-h+c,x=d+h+c,w=d+h-c;return Ye(Math.min(_,g,y,v),Math.min(m,E,x,w),Math.max(_,g,y,v),Math.max(m,E,x,w),r)}function nn(t){return t[3]-t[1]}function rn(t,e,n){var i=n||[1/0,1/0,-1/0,-1/0];return un(t,e)?(t[0]>e[0]?i[0]=t[0]:i[0]=e[0],t[1]>e[1]?i[1]=t[1]:i[1]=e[1],t[2]<e[2]?i[2]=t[2]:i[2]=e[2],t[3]<e[3]?i[3]=t[3]:i[3]=e[3]):Xe(i),i}function on(t){return[t[0],t[3]]}function sn(t){return[t[2],t[3]]}function an(t){return t[2]-t[0]}function un(t,e){return t[0]<=e[2]&&t[2]>=e[0]&&t[1]<=e[3]&&t[3]>=e[1]}function ln(t){return t[2]<t[0]||t[3]<t[1]}function hn(t,e,n){var i=an(e)/n[0],r=nn(e)/n[1];return Math.min(t,Math.min(i,r))}function cn(t,e,n){var i=Math.min(t,e);return i*=Math.log(1+50*Math.max(0,t/e-1))/50+1,n&&(i=Math.max(i,n),i/=Math.log(1+50*Math.max(0,n/t-1))/50+1),we(i,n/2,2*e)}function pn(t,e,n,i){return function(r,o,s,a){if(void 0!==r){var u=i?hn(t,i,s):t;return(void 0===n||n)&&a?cn(r,u,e):we(r,e,u)}}}function fn(t){return void 0!==t?0:void 0}function dn(t){return void 0!==t?t:void 0}var _n=0,gn=1,yn=\"center\",vn=\"resolution\",mn=\"rotation\";function En(t,e){for(var n=!0,i=t.length-1;i>=0;--i)if(t[i]!=e[i]){n=!1;break}return n}function xn(t,e){var n=Math.cos(e),i=Math.sin(e),r=t[0]*n-t[1]*i,o=t[1]*n+t[0]*i;return t[0]=r,t[1]=o,t}function wn(t){return Math.pow(t,3)}function On(t){return 1-wn(1-t)}function Tn(t){return 3*t*t-2*t*t*t}function bn(t){return t}var Cn={POINT:\"Point\",LINE_STRING:\"LineString\",LINEAR_RING:\"LinearRing\",POLYGON:\"Polygon\",MULTI_POINT:\"MultiPoint\",MULTI_LINE_STRING:\"MultiLineString\",MULTI_POLYGON:\"MultiPolygon\",GEOMETRY_COLLECTION:\"GeometryCollection\",CIRCLE:\"Circle\"},Sn={XY:\"XY\",XYZ:\"XYZ\",XYM:\"XYM\",XYZM:\"XYZM\"};function Rn(t,e,n,i,r,o){for(var s=o||[],a=0,u=e;u<n;u+=i){var l=t[u],h=t[u+1];s[a++]=r[0]*l+r[2]*h+r[4],s[a++]=r[1]*l+r[3]*h+r[5]}return o&&s.length!=a&&(s.length=a),s}\n/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\nvar In=6371008.8;function Pn(t,e,n){var i=n||In,r=Ce(t[1]),o=Ce(e[1]),s=(o-r)/2,a=Ce(e[0]-t[0])/2,u=Math.sin(s)*Math.sin(s)+Math.sin(a)*Math.sin(a)*Math.cos(r)*Math.cos(o);return 2*i*Math.atan2(Math.sqrt(u),Math.sqrt(1-u))}var Fn={DEGREES:\"degrees\",FEET:\"ft\",METERS:\"m\",PIXELS:\"pixels\",TILE_PIXELS:\"tile-pixels\",USFEET:\"us-ft\"},Ln={};Ln[Fn.DEGREES]=2*Math.PI*6370997/360,Ln[Fn.FEET]=.3048,Ln[Fn.METERS]=1,Ln[Fn.USFEET]=1200/3937;var Mn=Fn,An=function(){function t(t){this.code_=t.code,this.units_=t.units,this.extent_=void 0!==t.extent?t.extent:null,this.worldExtent_=void 0!==t.worldExtent?t.worldExtent:null,this.axisOrientation_=void 0!==t.axisOrientation?t.axisOrientation:\"enu\",this.global_=void 0!==t.global&&t.global,this.canWrapX_=!(!this.global_||!this.extent_),this.getPointResolutionFunc_=t.getPointResolution,this.defaultTileGrid_=null,this.metersPerUnit_=t.metersPerUnit}return t.prototype.canWrapX=function(){return this.canWrapX_},t.prototype.getCode=function(){return this.code_},t.prototype.getExtent=function(){return this.extent_},t.prototype.getUnits=function(){return this.units_},t.prototype.getMetersPerUnit=function(){return this.metersPerUnit_||Ln[this.units_]},t.prototype.getWorldExtent=function(){return this.worldExtent_},t.prototype.getAxisOrientation=function(){return this.axisOrientation_},t.prototype.isGlobal=function(){return this.global_},t.prototype.setGlobal=function(t){this.global_=t,this.canWrapX_=!(!t||!this.extent_)},t.prototype.getDefaultTileGrid=function(){return this.defaultTileGrid_},t.prototype.setDefaultTileGrid=function(t){this.defaultTileGrid_=t},t.prototype.setExtent=function(t){this.extent_=t,this.canWrapX_=!(!this.global_||!t)},t.prototype.setWorldExtent=function(t){this.worldExtent_=t},t.prototype.setGetPointResolution=function(t){this.getPointResolutionFunc_=t},t.prototype.getPointResolutionFunc=function(){return this.getPointResolutionFunc_},t}(),Dn=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),kn=6378137,Nn=Math.PI*kn,Gn=[-Nn,-Nn,Nn,Nn],jn=[-180,-85,180,85],zn=function(t){function e(e){return t.call(this,{code:e,units:Mn.METERS,extent:Gn,global:!0,worldExtent:jn,getPointResolution:function(t,e){return t/Oe(e[1]/kn)}})||this}return Dn(e,t),e}(An),Yn=[new zn(\"EPSG:3857\"),new zn(\"EPSG:102100\"),new zn(\"EPSG:102113\"),new zn(\"EPSG:900913\"),new zn(\"urn:ogc:def:crs:EPSG:6.18:3:3857\"),new zn(\"urn:ogc:def:crs:EPSG::3857\"),new zn(\"http://www.opengis.net/gml/srs/epsg.xml#3857\")];function Xn(t,e,n){var i=t.length,r=n>1?n:2,o=e;void 0===o&&(o=r>2?t.slice():new Array(i));for(var s=Nn,a=0;a<i;a+=r){o[a]=s*t[a]/180;var u=kn*Math.log(Math.tan(Math.PI*(+t[a+1]+90)/360));u>s?u=s:u<-s&&(u=-s),o[a+1]=u}return o}function Un(t,e,n){var i=t.length,r=n>1?n:2,o=e;void 0===o&&(o=r>2?t.slice():new Array(i));for(var s=0;s<i;s+=r)o[s]=180*t[s]/Nn,o[s+1]=360*Math.atan(Math.exp(t[s+1]/kn))/Math.PI-90;return o}var Kn=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Wn=[-180,-90,180,90],Bn=6378137*Math.PI/180,Zn=function(t){function e(e,n){return t.call(this,{code:e,units:Mn.DEGREES,extent:Wn,axisOrientation:n,global:!0,metersPerUnit:Bn,worldExtent:Wn})||this}return Kn(e,t),e}(An),Vn=[new Zn(\"CRS:84\"),new Zn(\"EPSG:4326\",\"neu\"),new Zn(\"urn:ogc:def:crs:EPSG::4326\",\"neu\"),new Zn(\"urn:ogc:def:crs:EPSG:6.6:4326\",\"neu\"),new Zn(\"urn:ogc:def:crs:OGC:1.3:CRS84\"),new Zn(\"urn:ogc:def:crs:OGC:2:84\"),new Zn(\"http://www.opengis.net/gml/srs/epsg.xml#4326\",\"neu\"),new Zn(\"urn:x-ogc:def:crs:EPSG:4326\",\"neu\")],Hn={};var qn,Jn,Qn,$n={};function ti(t,e,n){var i=t.getCode(),r=e.getCode();i in $n||($n[i]={}),$n[i][r]=n}function ei(t,e,n){var i;if(void 0!==e){for(var r=0,o=t.length;r<o;++r)e[r]=t[r];i=e}else i=t.slice();return i}function ni(t,e,n){if(void 0!==e&&t!==e){for(var i=0,r=t.length;i<r;++i)e[i]=t[i];t=e}return t}function ii(t){!function(t,e){Hn[t]=e}(t.getCode(),t),ti(t,t,ei)}function ri(t){return\"string\"==typeof t?Hn[t]||null:t||null}function oi(t,e,n,i){var r,o=(t=ri(t)).getPointResolutionFunc();if(o)r=o(e,n),i&&i!==t.getUnits()&&(s=t.getMetersPerUnit())&&(r=r*s/Ln[i]);else if(t.getUnits()==Mn.DEGREES&&!i||i==Mn.DEGREES)r=e;else{var s,a=li(t,ri(\"EPSG:4326\")),u=[n[0]-e/2,n[1],n[0]+e/2,n[1],n[0],n[1]-e/2,n[0],n[1]+e/2];r=(Pn((u=a(u,u,2)).slice(0,2),u.slice(2,4))+Pn(u.slice(4,6),u.slice(6,8)))/2,void 0!==(s=i?Ln[i]:t.getMetersPerUnit())&&(r/=s)}return r}function si(t){!function(t){t.forEach(ii)}(t),t.forEach(function(e){t.forEach(function(t){e!==t&&ti(e,t,ei)})})}function ai(t,e){return t?\"string\"==typeof t?ri(t):t:ri(e)}function ui(t,e){if(t===e)return!0;var n=t.getUnits()===e.getUnits();return t.getCode()===e.getCode()?n:li(t,e)===ei&&n}function li(t,e){var n=function(t,e){var n;return t in $n&&e in $n[t]&&(n=$n[t][e]),n}(t.getCode(),e.getCode());return n||(n=ni),n}function hi(t,e){return li(ri(t),ri(e))}function ci(t,e,n){return hi(e,n)(t,void 0,t.length)}si(Yn),si(Vn),qn=Yn,Jn=Xn,Qn=Un,Vn.forEach(function(t){qn.forEach(function(e){ti(t,e,Jn),ti(e,t,Qn)})});new Array(6);function pi(t,e,n,i,r,o,s){return t[0]=e,t[1]=n,t[2]=i,t[3]=r,t[4]=o,t[5]=s,t}function fi(t,e){var n=e[0],i=e[1];return e[0]=t[0]*n+t[2]*i+t[4],e[1]=t[1]*n+t[3]*i+t[5],e}function di(t,e,n,i,r,o,s,a){var u=Math.sin(o),l=Math.cos(o);return t[0]=i*l,t[1]=r*u,t[2]=-i*u,t[3]=r*l,t[4]=s*i*l-a*i*u+e,t[5]=s*r*u+a*r*l+n,t}function _i(t,e){var n,i=(n=e)[0]*n[3]-n[1]*n[2];ge(0!==i,32);var r=e[0],o=e[1],s=e[2],a=e[3],u=e[4],l=e[5];return t[0]=a/i,t[1]=-o/i,t[2]=-s/i,t[3]=r/i,t[4]=(s*l-a*u)/i,t[5]=-(r*l-o*u)/i,t}function gi(t){return\"matrix(\"+t.join(\", \")+\")\"}var yi=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),vi=[1,0,0,1,0,0],mi=function(t){function e(){var e=t.call(this)||this;return e.extent_=[1/0,1/0,-1/0,-1/0],e.extentRevision_=-1,e.simplifiedGeometryCache={},e.simplifiedGeometryMaxMinSquaredTolerance=0,e.simplifiedGeometryRevision=0,e}return yi(e,t),e.prototype.clone=function(){return i()},e.prototype.closestPointXY=function(t,e,n,r){return i()},e.prototype.containsXY=function(t,e){var n=this.getClosestPoint([t,e]);return n[0]===t&&n[1]===e},e.prototype.getClosestPoint=function(t,e){var n=e||[NaN,NaN];return this.closestPointXY(t[0],t[1],n,1/0),n},e.prototype.intersectsCoordinate=function(t){return this.containsXY(t[0],t[1])},e.prototype.computeExtent=function(t){return i()},e.prototype.getExtent=function(t){return this.extentRevision_!=this.getRevision()&&(this.extent_=this.computeExtent(this.extent_),this.extentRevision_=this.getRevision()),function(t,e){return e?(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e):t}(this.extent_,t)},e.prototype.rotate=function(t,e){i()},e.prototype.scale=function(t,e,n){i()},e.prototype.simplify=function(t){return this.getSimplifiedGeometry(t*t)},e.prototype.getSimplifiedGeometry=function(t){return i()},e.prototype.getType=function(){return i()},e.prototype.applyTransform=function(t){i()},e.prototype.intersectsExtent=function(t){return i()},e.prototype.translate=function(t,e){i()},e.prototype.transform=function(t,e){var n=ri(t),i=n.getUnits()==Mn.TILE_PIXELS?function(t,i,r){var o=n.getExtent(),s=n.getWorldExtent(),a=nn(s)/nn(o);return di(vi,s[0],s[3],a,-a,0,0,0),Rn(t,0,t.length,r,vi,i),hi(n,e)(t,i,r)}:hi(n,e);return this.applyTransform(i),this},e}(j),Ei=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();function xi(t){var e;return t==Sn.XY?e=2:t==Sn.XYZ||t==Sn.XYM?e=3:t==Sn.XYZM&&(e=4),e}var wi=function(t){function e(){var e=t.call(this)||this;return e.layout=Sn.XY,e.stride=2,e.flatCoordinates=null,e}return Ei(e,t),e.prototype.computeExtent=function(t){return Ue(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,t)},e.prototype.getCoordinates=function(){return i()},e.prototype.getFirstCoordinate=function(){return this.flatCoordinates.slice(0,this.stride)},e.prototype.getFlatCoordinates=function(){return this.flatCoordinates},e.prototype.getLastCoordinate=function(){return this.flatCoordinates.slice(this.flatCoordinates.length-this.stride)},e.prototype.getLayout=function(){return this.layout},e.prototype.getSimplifiedGeometry=function(t){if(this.simplifiedGeometryRevision!=this.getRevision()&&(f(this.simplifiedGeometryCache),this.simplifiedGeometryMaxMinSquaredTolerance=0,this.simplifiedGeometryRevision=this.getRevision()),t<0||0!==this.simplifiedGeometryMaxMinSquaredTolerance&&t<=this.simplifiedGeometryMaxMinSquaredTolerance)return this;var e=t.toString();if(this.simplifiedGeometryCache.hasOwnProperty(e))return this.simplifiedGeometryCache[e];var n=this.getSimplifiedGeometryInternal(t);return n.getFlatCoordinates().length<this.flatCoordinates.length?(this.simplifiedGeometryCache[e]=n,n):(this.simplifiedGeometryMaxMinSquaredTolerance=t,this)},e.prototype.getSimplifiedGeometryInternal=function(t){return this},e.prototype.getStride=function(){return this.stride},e.prototype.setFlatCoordinates=function(t,e){this.stride=xi(t),this.layout=t,this.flatCoordinates=e},e.prototype.setCoordinates=function(t,e){i()},e.prototype.setLayout=function(t,e,n){var i;if(t)i=xi(t);else{for(var r=0;r<n;++r){if(0===e.length)return this.layout=Sn.XY,void(this.stride=2);e=e[0]}t=function(t){var e;2==t?e=Sn.XY:3==t?e=Sn.XYZ:4==t&&(e=Sn.XYZM);return e}(i=e.length)}this.layout=t,this.stride=i},e.prototype.applyTransform=function(t){this.flatCoordinates&&(t(this.flatCoordinates,this.flatCoordinates,this.stride),this.changed())},e.prototype.rotate=function(t,e){var n=this.getFlatCoordinates();if(n){var i=this.getStride();!function(t,e,n,i,r,o,s){for(var a=s||[],u=Math.cos(r),l=Math.sin(r),h=o[0],c=o[1],p=0,f=e;f<n;f+=i){var d=t[f]-h,_=t[f+1]-c;a[p++]=h+d*u-_*l,a[p++]=c+d*l+_*u;for(var g=f+2;g<f+i;++g)a[p++]=t[g]}s&&a.length!=p&&(a.length=p)}(n,0,n.length,i,t,e,n),this.changed()}},e.prototype.scale=function(t,e,n){var i=e;void 0===i&&(i=t);var r=n;r||(r=$e(this.getExtent()));var o=this.getFlatCoordinates();if(o){var s=this.getStride();!function(t,e,n,i,r,o,s,a){for(var u=a||[],l=s[0],h=s[1],c=0,p=e;p<n;p+=i){var f=t[p]-l,d=t[p+1]-h;u[c++]=l+r*f,u[c++]=h+o*d;for(var _=p+2;_<p+i;++_)u[c++]=t[_]}a&&u.length!=c&&(u.length=c)}(o,0,o.length,s,t,i,r,o),this.changed()}},e.prototype.translate=function(t,e){var n=this.getFlatCoordinates();if(n){var i=this.getStride();!function(t,e,n,i,r,o,s){for(var a=s||[],u=0,l=e;l<n;l+=i){a[u++]=t[l]+r,a[u++]=t[l+1]+o;for(var h=l+2;h<l+i;++h)a[u++]=t[h]}s&&a.length!=u&&(a.length=u)}(n,0,n.length,i,t,e,n),this.changed()}},e}(mi);function Oi(t,e,n,i){for(var r=0,o=t[n-i],s=t[n-i+1];e<n;e+=i){var a=t[e],u=t[e+1];r+=s*a-o*u,o=a,s=u}return r/2}function Ti(t,e,n,i){for(var r=0,o=0,s=n.length;o<s;++o){var a=n[o];r+=Oi(t,e,a,i),e=a}return r}function bi(t,e,n,i,r,o,s){var a,u=t[e],l=t[e+1],h=t[n]-u,c=t[n+1]-l;if(0===h&&0===c)a=e;else{var p=((r-u)*h+(o-l)*c)/(h*h+c*c);if(p>1)a=n;else{if(p>0){for(var f=0;f<i;++f)s[f]=Re(t[e+f],t[n+f],p);return void(s.length=i)}a=e}}for(f=0;f<i;++f)s[f]=t[a+f];s.length=i}function Ci(t,e,n,i,r){var o=t[e],s=t[e+1];for(e+=i;e<n;e+=i){var a=t[e],u=t[e+1],l=be(o,s,a,u);l>r&&(r=l),o=a,s=u}return r}function Si(t,e,n,i,r){for(var o=0,s=n.length;o<s;++o){var a=n[o];r=Ci(t,e,a,i,r),e=a}return r}function Ri(t,e,n,i,r,o,s,a,u,l,h){if(e==n)return l;var c,p;if(0===r){if((p=be(s,a,t[e],t[e+1]))<l){for(c=0;c<i;++c)u[c]=t[e+c];return u.length=i,p}return l}for(var f=h||[NaN,NaN],d=e+i;d<n;)if(bi(t,d-i,d,i,s,a,f),(p=be(s,a,f[0],f[1]))<l){for(l=p,c=0;c<i;++c)u[c]=f[c];u.length=i,d+=i}else d+=i*Math.max((Math.sqrt(p)-Math.sqrt(l))/r|0,1);if(o&&(bi(t,n-i,e,i,s,a,f),(p=be(s,a,f[0],f[1]))<l)){for(l=p,c=0;c<i;++c)u[c]=f[c];u.length=i}return l}function Ii(t,e,n,i,r,o,s,a,u,l,h){for(var c=h||[NaN,NaN],p=0,f=n.length;p<f;++p){var d=n[p];l=Ri(t,e,d,i,r,o,s,a,u,l,c),e=d}return l}function Pi(t,e,n,i){for(var r=0,o=n.length;r<o;++r)for(var s=n[r],a=0;a<i;++a)t[e++]=s[a];return e}function Fi(t,e,n,i,r){for(var o=r||[],s=0,a=0,u=n.length;a<u;++a){var l=Pi(t,e,n[a],i);o[s++]=l,e=l}return o.length=s,o}function Li(t,e,n,i,r){for(var o=void 0!==r?r:[],s=0,a=e;a<n;a+=i)o[s++]=t.slice(a,a+i);return o.length=s,o}function Mi(t,e,n,i,r){for(var o=void 0!==r?r:[],s=0,a=0,u=n.length;a<u;++a){var l=n[a];o[s++]=Li(t,e,l,i,o[s]),e=l}return o.length=s,o}function Ai(t,e,n,i,r){for(var o=void 0!==r?r:[],s=0,a=0,u=n.length;a<u;++a){var l=n[a];o[s++]=Mi(t,e,l,i,o[s]),e=l[l.length-1]}return o.length=s,o}function Di(t,e,n,i,r,o,s){var a=(n-e)/i;if(a<3){for(;e<n;e+=i)o[s++]=t[e],o[s++]=t[e+1];return s}var u=new Array(a);u[0]=1,u[a-1]=1;for(var l=[e,n-i],h=0;l.length>0;){for(var c=l.pop(),p=l.pop(),f=0,d=t[p],_=t[p+1],g=t[c],y=t[c+1],v=p+i;v<c;v+=i){var m=Te(t[v],t[v+1],d,_,g,y);m>f&&(h=v,f=m)}f>r&&(u[(h-e)/i]=1,p+i<h&&l.push(p,h),h+i<c&&l.push(h,c))}for(v=0;v<a;++v)u[v]&&(o[s++]=t[e+v*i],o[s++]=t[e+v*i+1]);return s}function ki(t,e,n,i,r,o,s,a){for(var u=0,l=n.length;u<l;++u){var h=n[u];s=Di(t,e,h,i,r,o,s),a.push(s),e=h}return s}function Ni(t,e){return e*Math.round(t/e)}function Gi(t,e,n,i,r,o,s){if(e==n)return s;var a,u,l=Ni(t[e],r),h=Ni(t[e+1],r);e+=i,o[s++]=l,o[s++]=h;do{if(a=Ni(t[e],r),u=Ni(t[e+1],r),(e+=i)==n)return o[s++]=a,o[s++]=u,s}while(a==l&&u==h);for(;e<n;){var c=Ni(t[e],r),p=Ni(t[e+1],r);if(e+=i,c!=a||p!=u){var f=a-l,d=u-h,_=c-l,g=p-h;f*g==d*_&&(f<0&&_<f||f==_||f>0&&_>f)&&(d<0&&g<d||d==g||d>0&&g>d)?(a=c,u=p):(o[s++]=a,o[s++]=u,l=a,h=u,a=c,u=p)}}return o[s++]=a,o[s++]=u,s}function ji(t,e,n,i,r,o,s,a){for(var u=0,l=n.length;u<l;++u){var h=n[u];s=Gi(t,e,h,i,r,o,s),a.push(s),e=h}return s}var zi=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Yi=function(t){function e(e,n){var i=t.call(this)||this;return i.maxDelta_=-1,i.maxDeltaRevision_=-1,void 0===n||Array.isArray(e[0])?i.setCoordinates(e,n):i.setFlatCoordinates(n,e),i}return zi(e,t),e.prototype.clone=function(){return new e(this.flatCoordinates.slice(),this.layout)},e.prototype.closestPointXY=function(t,e,n,i){return i<De(this.getExtent(),t,e)?i:(this.maxDeltaRevision_!=this.getRevision()&&(this.maxDelta_=Math.sqrt(Ci(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,0)),this.maxDeltaRevision_=this.getRevision()),Ri(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,this.maxDelta_,!0,t,e,n,i))},e.prototype.getArea=function(){return Oi(this.flatCoordinates,0,this.flatCoordinates.length,this.stride)},e.prototype.getCoordinates=function(){return Li(this.flatCoordinates,0,this.flatCoordinates.length,this.stride)},e.prototype.getSimplifiedGeometryInternal=function(t){var n=[];return n.length=Di(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,t,n,0),new e(n,Sn.XY)},e.prototype.getType=function(){return Cn.LINEAR_RING},e.prototype.intersectsExtent=function(t){return!1},e.prototype.setCoordinates=function(t,e){this.setLayout(e,t,1),this.flatCoordinates||(this.flatCoordinates=[]),this.flatCoordinates.length=Pi(this.flatCoordinates,0,t,this.stride),this.changed()},e}(wi),Xi=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Ui=function(t){function e(e,n){var i=t.call(this)||this;return i.setCoordinates(e,n),i}return Xi(e,t),e.prototype.clone=function(){return new e(this.flatCoordinates.slice(),this.layout)},e.prototype.closestPointXY=function(t,e,n,i){var r=this.flatCoordinates,o=be(t,e,r[0],r[1]);if(o<i){for(var s=this.stride,a=0;a<s;++a)n[a]=r[a];return n.length=s,o}return i},e.prototype.getCoordinates=function(){return this.flatCoordinates?this.flatCoordinates.slice():[]},e.prototype.computeExtent=function(t){return e=this.flatCoordinates,n=t,i=e[0],r=e[1],Ye(i,r,i,r,n);var e,n,i,r},e.prototype.getType=function(){return Cn.POINT},e.prototype.intersectsExtent=function(t){return Ge(t,this.flatCoordinates[0],this.flatCoordinates[1])},e.prototype.setCoordinates=function(t,e){this.setLayout(e,t,0),this.flatCoordinates||(this.flatCoordinates=[]),this.flatCoordinates.length=function(t,e,n,i){for(var r=0,o=n.length;r<o;++r)t[e++]=n[r];return e}(this.flatCoordinates,0,t,this.stride),this.changed()},e}(wi);function Ki(t,e,n,i,r){return!function(t,e){var n;return(n=e(Je(t)))?n:(n=e(Qe(t)))?n:(n=e(sn(t)))?n:(n=e(on(t)))||!1}(r,function(r){return!Wi(t,e,n,i,r[0],r[1])})}function Wi(t,e,n,i,r,o){for(var s=0,a=t[n-i],u=t[n-i+1];e<n;e+=i){var l=t[e],h=t[e+1];u<=o?h>o&&(l-a)*(o-u)-(r-a)*(h-u)>0&&s++:h<=o&&(l-a)*(o-u)-(r-a)*(h-u)<0&&s--,a=l,u=h}return 0!==s}function Bi(t,e,n,i,r,o){if(0===n.length)return!1;if(!Wi(t,e,n[0],i,r,o))return!1;for(var s=1,a=n.length;s<a;++s)if(Wi(t,n[s-1],n[s],i,r,o))return!1;return!0}function Zi(t,e,n,i,r,o,s){for(var a,u,l,h,c,p,f,d=r[o+1],_=[],g=0,y=n.length;g<y;++g){var v=n[g];for(h=t[v-i],p=t[v-i+1],a=e;a<v;a+=i)c=t[a],f=t[a+1],(d<=p&&f<=d||p<=d&&d<=f)&&(l=(d-p)/(f-p)*(c-h)+h,_.push(l)),h=c,p=f}var m=NaN,E=-1/0;for(_.sort(Ut),h=_[0],a=1,u=_.length;a<u;++a){c=_[a];var x=Math.abs(c-h);x>E&&Bi(t,e,n,i,l=(h+c)/2,d)&&(m=l,E=x),h=c}return isNaN(m)&&(m=r[o]),s?(s.push(m,d,E),s):[m,d,E]}function Vi(t,e,n,i,r){for(var o,s=[t[e],t[e+1]],a=[];e+i<n;e+=i){if(a[0]=t[e+i],a[1]=t[e+i+1],o=r(s,a))return o;s[0]=a[0],s[1]=a[1]}return!1}function Hi(t,e,n,i,r){var o=Ve([1/0,1/0,-1/0,-1/0],t,e,n,i);return!!un(r,o)&&(!!Ne(r,o)||(o[0]>=r[0]&&o[2]<=r[2]||(o[1]>=r[1]&&o[3]<=r[3]||Vi(t,e,n,i,function(t,e){return function(t,e,n){var i=!1,r=je(t,e),o=je(t,n);if(r===Fe.INTERSECTING||o===Fe.INTERSECTING)i=!0;else{var s=t[0],a=t[1],u=t[2],l=t[3],h=e[0],c=e[1],p=n[0],f=n[1],d=(f-c)/(p-h),_=void 0,g=void 0;o&Fe.ABOVE&&!(r&Fe.ABOVE)&&(i=(_=p-(f-l)/d)>=s&&_<=u),i||!(o&Fe.RIGHT)||r&Fe.RIGHT||(i=(g=f-(p-u)*d)>=a&&g<=l),i||!(o&Fe.BELOW)||r&Fe.BELOW||(i=(_=p-(f-a)/d)>=s&&_<=u),i||!(o&Fe.LEFT)||r&Fe.LEFT||(i=(g=f-(p-s)*d)>=a&&g<=l)}return i}(r,t,e)}))))}function qi(t,e,n,i,r){if(!function(t,e,n,i,r){return!!(Hi(t,e,n,i,r)||Wi(t,e,n,i,r[0],r[1])||Wi(t,e,n,i,r[0],r[3])||Wi(t,e,n,i,r[2],r[1])||Wi(t,e,n,i,r[2],r[3]))}(t,e,n[0],i,r))return!1;if(1===n.length)return!0;for(var o=1,s=n.length;o<s;++o)if(Ki(t,n[o-1],n[o],i,r)&&!Hi(t,n[o-1],n[o],i,r))return!1;return!0}function Ji(t,e,n,i){for(;e<n-i;){for(var r=0;r<i;++r){var o=t[e+r];t[e+r]=t[n-i+r],t[n-i+r]=o}e+=i,n-=i}}function Qi(t,e,n,i){for(var r=0,o=t[n-i],s=t[n-i+1];e<n;e+=i){var a=t[e],u=t[e+1];r+=(a-o)*(u+s),o=a,s=u}return r>0}function $i(t,e,n,i,r){for(var o=void 0!==r&&r,s=0,a=n.length;s<a;++s){var u=n[s],l=Qi(t,e,u,i);if(0===s){if(o&&l||!o&&!l)return!1}else if(o&&!l||!o&&l)return!1;e=u}return!0}function tr(t,e,n,i,r){for(var o=void 0!==r&&r,s=0,a=n.length;s<a;++s){var u=n[s],l=Qi(t,e,u,i);(0===s?o&&l||!o&&!l:o&&!l||!o&&l)&&Ji(t,e,u,i),e=u}return e}function er(t,e,n,i,r){for(var o=0,s=n.length;o<s;++o)e=tr(t,e,n[o],i,r);return e}var nr=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),ir=function(t){function e(e,n,i){var r=t.call(this)||this;return r.ends_=[],r.flatInteriorPointRevision_=-1,r.flatInteriorPoint_=null,r.maxDelta_=-1,r.maxDeltaRevision_=-1,r.orientedRevision_=-1,r.orientedFlatCoordinates_=null,void 0!==n&&i?(r.setFlatCoordinates(n,e),r.ends_=i):r.setCoordinates(e,n),r}return nr(e,t),e.prototype.appendLinearRing=function(t){this.flatCoordinates?Zt(this.flatCoordinates,t.getFlatCoordinates()):this.flatCoordinates=t.getFlatCoordinates().slice(),this.ends_.push(this.flatCoordinates.length),this.changed()},e.prototype.clone=function(){return new e(this.flatCoordinates.slice(),this.layout,this.ends_.slice())},e.prototype.closestPointXY=function(t,e,n,i){return i<De(this.getExtent(),t,e)?i:(this.maxDeltaRevision_!=this.getRevision()&&(this.maxDelta_=Math.sqrt(Si(this.flatCoordinates,0,this.ends_,this.stride,0)),this.maxDeltaRevision_=this.getRevision()),Ii(this.flatCoordinates,0,this.ends_,this.stride,this.maxDelta_,!0,t,e,n,i))},e.prototype.containsXY=function(t,e){return Bi(this.getOrientedFlatCoordinates(),0,this.ends_,this.stride,t,e)},e.prototype.getArea=function(){return Ti(this.getOrientedFlatCoordinates(),0,this.ends_,this.stride)},e.prototype.getCoordinates=function(t){var e;return void 0!==t?tr(e=this.getOrientedFlatCoordinates().slice(),0,this.ends_,this.stride,t):e=this.flatCoordinates,Mi(e,0,this.ends_,this.stride)},e.prototype.getEnds=function(){return this.ends_},e.prototype.getFlatInteriorPoint=function(){if(this.flatInteriorPointRevision_!=this.getRevision()){var t=$e(this.getExtent());this.flatInteriorPoint_=Zi(this.getOrientedFlatCoordinates(),0,this.ends_,this.stride,t,0),this.flatInteriorPointRevision_=this.getRevision()}return this.flatInteriorPoint_},e.prototype.getInteriorPoint=function(){return new Ui(this.getFlatInteriorPoint(),Sn.XYM)},e.prototype.getLinearRingCount=function(){return this.ends_.length},e.prototype.getLinearRing=function(t){return t<0||this.ends_.length<=t?null:new Yi(this.flatCoordinates.slice(0===t?0:this.ends_[t-1],this.ends_[t]),this.layout)},e.prototype.getLinearRings=function(){for(var t=this.layout,e=this.flatCoordinates,n=this.ends_,i=[],r=0,o=0,s=n.length;o<s;++o){var a=n[o],u=new Yi(e.slice(r,a),t);i.push(u),r=a}return i},e.prototype.getOrientedFlatCoordinates=function(){if(this.orientedRevision_!=this.getRevision()){var t=this.flatCoordinates;$i(t,0,this.ends_,this.stride)?this.orientedFlatCoordinates_=t:(this.orientedFlatCoordinates_=t.slice(),this.orientedFlatCoordinates_.length=tr(this.orientedFlatCoordinates_,0,this.ends_,this.stride)),this.orientedRevision_=this.getRevision()}return this.orientedFlatCoordinates_},e.prototype.getSimplifiedGeometryInternal=function(t){var n=[],i=[];return n.length=ji(this.flatCoordinates,0,this.ends_,this.stride,Math.sqrt(t),n,0,i),new e(n,Sn.XY,i)},e.prototype.getType=function(){return Cn.POLYGON},e.prototype.intersectsExtent=function(t){return qi(this.getOrientedFlatCoordinates(),0,this.ends_,this.stride,t)},e.prototype.setCoordinates=function(t,e){this.setLayout(e,t,2),this.flatCoordinates||(this.flatCoordinates=[]);var n=Fi(this.flatCoordinates,0,t,this.stride,this.ends_);this.flatCoordinates.length=0===n.length?0:n[n.length-1],this.changed()},e}(wi),rr=ir;function or(t){var e=t[0],n=t[1],i=t[2],r=t[3],o=[e,n,e,r,i,r,i,n,e,n];return new ir(o,Sn.XY,[o.length])}var sr=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),ar=0;function ur(t,e){setTimeout(function(){t(e)},0)}function lr(t){return!(t.sourceCenter&&t.targetCenter&&!En(t.sourceCenter,t.targetCenter))&&(t.sourceResolution===t.targetResolution&&t.sourceRotation===t.targetRotation)}var hr=function(t){function e(e){var n=t.call(this)||this,i=p({},e);return n.hints_=[0,0],n.animations_=[],n.updateAnimationKey_,n.projection_=ai(i.projection,\"EPSG:3857\"),n.targetCenter_=null,n.targetResolution_,n.targetRotation_,n.applyOptions_(i),n}return sr(e,t),e.prototype.applyOptions_=function(t){var e=function(t){var e,n,i,r=void 0!==t.minZoom?t.minZoom:ar,o=void 0!==t.maxZoom?t.maxZoom:28,s=void 0!==t.zoomFactor?t.zoomFactor:2,a=void 0!==t.multiWorld&&t.multiWorld,u=void 0===t.smoothResolutionConstraint||t.smoothResolutionConstraint;if(void 0!==t.resolutions){var l=t.resolutions;n=l[r],i=void 0!==l[o]?l[o]:l[l.length-1],e=t.constrainResolution?function(t,e,n){return function(i,r,o,s){if(void 0!==i){var a=t[0],u=t[t.length-1],l=n?hn(a,n,o):a;if(s)return void 0===e||e?cn(i,l,u):we(i,u,l);var h=Math.min(l,i),c=Math.floor(Wt(t,h,r));return t[c]}}}(l,u,!t.constrainOnlyCenter&&t.extent):pn(n,i,u,!t.constrainOnlyCenter&&t.extent)}else{var h=ai(t.projection,\"EPSG:3857\"),c=h.getExtent(),p=c?Math.max(an(c),nn(c)):360*Ln[Mn.DEGREES]/h.getMetersPerUnit(),f=p/xe/Math.pow(2,ar),d=f/Math.pow(2,28-ar);if(void 0!==(n=t.maxResolution)?r=0:n=f/Math.pow(s,r),void 0===(i=t.minResolution)&&(i=void 0!==t.maxZoom?void 0!==t.maxResolution?n/Math.pow(s,o):f/Math.pow(s,o):d),o=r+Math.floor(Math.log(n/i)/Math.log(s)),i=n/Math.pow(s,o-r),t.constrainResolution)e=function(t,e,n,i,r){return function(o,s,a,u){if(void 0!==o){var l=r?hn(e,r,a):e,h=void 0!==n?n:0;if(u)return void 0===i||i?cn(o,l,h):we(o,h,l);var c=-s*(.5-1e-9)+.5,p=Math.min(l,o),f=Math.floor(Math.log(e/p)/Math.log(t)+c);return we(e/Math.pow(t,f),h,l)}}}(s,n,i,u,!t.constrainOnlyCenter&&t.extent);else{var _=t.constrainOnlyCenter,g=t.extent;a||g||!h.isGlobal()||(_=!1,g=h.getExtent()),e=pn(n,i,u,!_&&g)}}return{constraint:e,maxResolution:n,minResolution:i,minZoom:r,zoomFactor:s}}(t);this.maxResolution_=e.maxResolution,this.minResolution_=e.minResolution,this.zoomFactor_=e.zoomFactor,this.resolutions_=t.resolutions,this.minZoom_=e.minZoom;var n=function(t){return void 0!==t.extent?(e=t.extent,n=t.constrainOnlyCenter,i=void 0===t.smoothExtentConstraint||t.smoothExtentConstraint,function(t,r,o,s){if(t){var a=n?0:o[0]*r,u=n?0:o[1]*r,l=e[0]+a/2,h=e[2]-a/2,c=e[1]+u/2,p=e[3]-u/2;l>h&&(l=h=(h+l)/2),c>p&&(c=p=(p+c)/2);var f=we(t[0],l,h),d=we(t[1],c,p),_=30*r;return s&&i&&(f+=-_*Math.log(1+Math.max(0,l-t[0])/_)+_*Math.log(1+Math.max(0,t[0]-h)/_),d+=-_*Math.log(1+Math.max(0,c-t[1])/_)+_*Math.log(1+Math.max(0,t[1]-p)/_)),[f,d]}}):Ie;var e,n,i}(t),i=e.constraint,r=function(t){if(void 0===t.enableRotation||t.enableRotation){var e=t.constrainRotation;return void 0===e||!0===e?(o=r||Ce(5),function(t,e){return e?t:void 0!==t?Math.abs(t)<=o?0:t:void 0}):!1===e?dn:\"number\"==typeof e?(n=e,i=2*Math.PI/n,function(t,e){return e?t:void 0!==t?t=Math.floor(t/i+.5)*i:void 0}):dn}return fn;var n,i;var r,o}(t);this.constraints_={center:n,resolution:i,rotation:r},this.setRotation(void 0!==t.rotation?t.rotation:0),this.setCenter(void 0!==t.center?t.center:null),void 0!==t.resolution?this.setResolution(t.resolution):void 0!==t.zoom&&this.setZoom(t.zoom),this.resolveConstraints(0),this.setProperties({}),this.options_=t},e.prototype.getUpdatedOptions_=function(t){var e=p({},this.options_);return void 0!==e.resolution?e.resolution=this.getResolution():e.zoom=this.getZoom(),e.center=this.getCenter(),e.rotation=this.getRotation(),p({},e,t)},e.prototype.animate=function(t){this.isDef()&&!this.getAnimating()&&this.resolveConstraints(0),this.animate_.apply(this,arguments)},e.prototype.animate_=function(t){var e,n=arguments.length;if(n>1&&\"function\"==typeof arguments[n-1]&&(e=arguments[n-1],--n),!this.isDef()){var i=arguments[n-1];return i.center&&this.setCenter(i.center),void 0!==i.zoom&&this.setZoom(i.zoom),void 0!==i.rotation&&this.setRotation(i.rotation),void(e&&ur(e,!0))}for(var r=Date.now(),o=this.targetCenter_.slice(),s=this.targetResolution_,a=this.targetRotation_,u=[],l=0;l<n;++l){var h=arguments[l],c={start:r,complete:!1,anchor:h.anchor,duration:void 0!==h.duration?h.duration:1e3,easing:h.easing||Tn,callback:e};if(h.center&&(c.sourceCenter=o,c.targetCenter=h.center.slice(),o=c.targetCenter),void 0!==h.zoom?(c.sourceResolution=s,c.targetResolution=this.getResolutionForZoom(h.zoom),s=c.targetResolution):h.resolution&&(c.sourceResolution=s,c.targetResolution=h.resolution,s=c.targetResolution),void 0!==h.rotation){c.sourceRotation=a;var p=Se(h.rotation-a+Math.PI,2*Math.PI)-Math.PI;c.targetRotation=a+p,a=c.targetRotation}lr(c)?c.complete=!0:r+=c.duration,u.push(c)}this.animations_.push(u),this.setHint(_n,1),this.updateAnimations_()},e.prototype.getAnimating=function(){return this.hints_[_n]>0},e.prototype.getInteracting=function(){return this.hints_[gn]>0},e.prototype.cancelAnimations=function(){this.setHint(_n,-this.hints_[_n]);for(var t=0,e=this.animations_.length;t<e;++t){var n=this.animations_[t];n[0].callback&&ur(n[0].callback,!1)}this.animations_.length=0},e.prototype.updateAnimations_=function(){if(void 0!==this.updateAnimationKey_&&(cancelAnimationFrame(this.updateAnimationKey_),this.updateAnimationKey_=void 0),this.getAnimating()){for(var t=Date.now(),e=!1,n=this.animations_.length-1;n>=0;--n){for(var i=this.animations_[n],r=!0,o=0,s=i.length;o<s;++o){var a=i[o];if(!a.complete){var u=t-a.start,l=a.duration>0?u/a.duration:1;l>=1?(a.complete=!0,l=1):r=!1;var h=a.easing(l);if(a.sourceCenter){var c=a.sourceCenter[0],p=a.sourceCenter[1],f=c+h*(a.targetCenter[0]-c),d=p+h*(a.targetCenter[1]-p);this.targetCenter_=[f,d]}if(a.sourceResolution&&a.targetResolution){var _=1===h?a.targetResolution:a.sourceResolution+h*(a.targetResolution-a.sourceResolution);if(a.anchor){var g=this.getSizeFromViewport_(this.getRotation()),y=this.constraints_.resolution(_,0,g,!0);this.targetCenter_=this.calculateCenterZoom(y,a.anchor)}this.targetResolution_=_,this.applyTargetState_(!0)}if(void 0!==a.sourceRotation&&void 0!==a.targetRotation){var v=1===h?Se(a.targetRotation+Math.PI,2*Math.PI)-Math.PI:a.sourceRotation+h*(a.targetRotation-a.sourceRotation);if(a.anchor){var m=this.constraints_.rotation(v,!0);this.targetCenter_=this.calculateCenterRotate(m,a.anchor)}this.targetRotation_=v}if(this.applyTargetState_(!0),e=!0,!a.complete)break}}if(r){this.animations_[n]=null,this.setHint(_n,-1);var E=i[0].callback;E&&ur(E,!0)}}this.animations_=this.animations_.filter(Boolean),e&&void 0===this.updateAnimationKey_&&(this.updateAnimationKey_=requestAnimationFrame(this.updateAnimations_.bind(this)))}},e.prototype.calculateCenterRotate=function(t,e){var n,i,r,o=this.getCenter();return void 0!==o&&(xn(n=[o[0]-e[0],o[1]-e[1]],t-this.getRotation()),r=e,(i=n)[0]+=+r[0],i[1]+=+r[1]),n},e.prototype.calculateCenterZoom=function(t,e){var n,i=this.getCenter(),r=this.getResolution();void 0!==i&&void 0!==r&&(n=[e[0]-t*(e[0]-i[0])/r,e[1]-t*(e[1]-i[1])/r]);return n},e.prototype.getSizeFromViewport_=function(t){var e=[100,100],n='.ol-viewport[data-view=\"'+o(this)+'\"]',i=document.querySelector(n);if(i){var r=getComputedStyle(i);e[0]=parseInt(r.width,10),e[1]=parseInt(r.height,10)}if(t){var s=e[0],a=e[1];e[0]=Math.abs(s*Math.cos(t))+Math.abs(a*Math.sin(t)),e[1]=Math.abs(s*Math.sin(t))+Math.abs(a*Math.cos(t))}return e},e.prototype.getCenter=function(){return this.get(yn)},e.prototype.getConstraints=function(){return this.constraints_},e.prototype.getHints=function(t){return void 0!==t?(t[0]=this.hints_[0],t[1]=this.hints_[1],t):this.hints_.slice()},e.prototype.calculateExtent=function(t){var e=t||this.getSizeFromViewport_(),n=this.getCenter();ge(n,1);var i=this.getResolution();ge(void 0!==i,2);var r=this.getRotation();return ge(void 0!==r,3),en(n,i,r,e)},e.prototype.getMaxResolution=function(){return this.maxResolution_},e.prototype.getMinResolution=function(){return this.minResolution_},e.prototype.getMaxZoom=function(){return this.getZoomForResolution(this.minResolution_)},e.prototype.setMaxZoom=function(t){this.applyOptions_(this.getUpdatedOptions_({maxZoom:t}))},e.prototype.getMinZoom=function(){return this.getZoomForResolution(this.maxResolution_)},e.prototype.setMinZoom=function(t){this.applyOptions_(this.getUpdatedOptions_({minZoom:t}))},e.prototype.setConstrainResolution=function(t){this.applyOptions_(this.getUpdatedOptions_({constrainResolution:t}))},e.prototype.getProjection=function(){return this.projection_},e.prototype.getResolution=function(){return this.get(vn)},e.prototype.getResolutions=function(){return this.resolutions_},e.prototype.getResolutionForExtent=function(t,e){var n=e||this.getSizeFromViewport_(),i=an(t)/n[0],r=nn(t)/n[1];return Math.max(i,r)},e.prototype.getResolutionForValueFunction=function(t){var e=t||2,n=this.maxResolution_,i=this.minResolution_,r=Math.log(n/i)/Math.log(e);return function(t){return n/Math.pow(e,t*r)}},e.prototype.getRotation=function(){return this.get(mn)},e.prototype.getValueForResolutionFunction=function(t){var e=t||2,n=this.maxResolution_,i=this.minResolution_,r=Math.log(n/i)/Math.log(e);return function(t){return Math.log(n/t)/Math.log(e)/r}},e.prototype.getState=function(t){var e=this.getCenter(),n=this.getProjection(),i=this.getResolution(),r=this.getRotation();return{center:e.slice(0),projection:void 0!==n?n:null,resolution:i,rotation:r,zoom:this.getZoom()}},e.prototype.getZoom=function(){var t,e=this.getResolution();return void 0!==e&&(t=this.getZoomForResolution(e)),t},e.prototype.getZoomForResolution=function(t){var e,n,i=this.minZoom_||0;if(this.resolutions_){var r=Wt(this.resolutions_,t,1);i=r,e=this.resolutions_[r],n=r==this.resolutions_.length-1?2:e/this.resolutions_[r+1]}else e=this.maxResolution_,n=this.zoomFactor_;return i+Math.log(e/t)/Math.log(n)},e.prototype.getResolutionForZoom=function(t){if(this.resolutions_){if(this.resolutions_.length<=1)return 0;var e=we(Math.floor(t),0,this.resolutions_.length-2),n=this.resolutions_[e]/this.resolutions_[e+1];return this.resolutions_[e]/Math.pow(n,we(t-e,0,1))}return this.maxResolution_/Math.pow(this.zoomFactor_,t-this.minZoom_)},e.prototype.fit=function(t,e){var n,i=e||{},r=i.size;r||(r=this.getSizeFromViewport_()),ge(Array.isArray(t)||\"function\"==typeof t.getSimplifiedGeometry,24),Array.isArray(t)?(ge(!ln(t),25),n=or(t)):t.getType()===Cn.CIRCLE?(n=or(t=t.getExtent())).rotate(this.getRotation(),$e(t)):n=t;var o,s=void 0!==i.padding?i.padding:[0,0,0,0],a=void 0!==i.nearest&&i.nearest;o=void 0!==i.minResolution?i.minResolution:void 0!==i.maxZoom?this.getResolutionForZoom(i.maxZoom):0;for(var u=n.getFlatCoordinates(),l=this.getRotation(),h=Math.cos(-l),c=Math.sin(-l),p=1/0,f=1/0,d=-1/0,_=-1/0,g=n.getStride(),y=0,v=u.length;y<v;y+=g){var m=u[y]*h-u[y+1]*c,E=u[y]*c+u[y+1]*h;p=Math.min(p,m),f=Math.min(f,E),d=Math.max(d,m),_=Math.max(_,E)}var x=this.getResolutionForExtent([p,f,d,_],[r[0]-s[1]-s[3],r[1]-s[0]-s[2]]);x=isNaN(x)?o:Math.max(x,o),x=this.getConstrainedResolution(x,a?0:1),c=-c;var w=(p+d)/2,O=(f+_)/2,T=[(w+=(s[1]-s[3])/2*x)*h-(O+=(s[0]-s[2])/2*x)*c,O*h+w*c],b=i.callback?i.callback:S;void 0!==i.duration?this.animate_({resolution:x,center:this.getConstrainedCenter(T,x),duration:i.duration,easing:i.easing},b):(this.targetResolution_=x,this.targetCenter_=T,this.applyTargetState_(!1,!0),ur(b,!0))},e.prototype.centerOn=function(t,e,n){var i=this.getRotation(),r=Math.cos(-i),o=Math.sin(-i),s=t[0]*r-t[1]*o,a=t[1]*r+t[0]*o,u=this.getResolution(),l=(s+=(e[0]/2-n[0])*u)*r-(a+=(n[1]-e[1]/2)*u)*(o=-o),h=a*r+s*o;this.setCenter([l,h])},e.prototype.isDef=function(){return!!this.getCenter()&&void 0!==this.getResolution()},e.prototype.adjustCenter=function(t){var e=this.targetCenter_;this.setCenter([e[0]+t[0],e[1]+t[1]])},e.prototype.adjustResolution=function(t,e){var n=this.getAnimating()||this.getInteracting(),i=this.getSizeFromViewport_(this.getRotation()),r=this.constraints_.resolution(this.targetResolution_*t,0,i,n);void 0!==e&&(this.targetCenter_=this.calculateCenterZoom(r,e)),this.targetResolution_*=t,this.applyTargetState_()},e.prototype.adjustZoom=function(t,e){this.adjustResolution(Math.pow(this.zoomFactor_,-t),e)},e.prototype.adjustRotation=function(t,e){var n=this.getAnimating()||this.getInteracting(),i=this.constraints_.rotation(this.targetRotation_+t,n);void 0!==e&&(this.targetCenter_=this.calculateCenterRotate(i,e)),this.targetRotation_+=t,this.applyTargetState_()},e.prototype.setCenter=function(t){this.targetCenter_=t,this.applyTargetState_()},e.prototype.setHint=function(t,e){return this.hints_[t]+=e,this.changed(),this.hints_[t]},e.prototype.setResolution=function(t){this.targetResolution_=t,this.applyTargetState_()},e.prototype.setRotation=function(t){this.targetRotation_=t,this.applyTargetState_()},e.prototype.setZoom=function(t){this.setResolution(this.getResolutionForZoom(t))},e.prototype.applyTargetState_=function(t,e){var n=this.getAnimating()||this.getInteracting()||e,i=this.constraints_.rotation(this.targetRotation_,n),r=this.getSizeFromViewport_(i),o=this.constraints_.resolution(this.targetResolution_,0,r,n),s=this.constraints_.center(this.targetCenter_,o,r,n);this.get(mn)!==i&&this.set(mn,i),this.get(vn)!==o&&this.set(vn,o),this.get(yn)&&En(this.get(yn),s)||this.set(yn,s),this.getAnimating()&&!t&&this.cancelAnimations()},e.prototype.resolveConstraints=function(t,e,n){var i=void 0!==t?t:200,r=e||0,o=this.constraints_.rotation(this.targetRotation_),s=this.getSizeFromViewport_(o),a=this.constraints_.resolution(this.targetResolution_,r,s),u=this.constraints_.center(this.targetCenter_,a,s);if(0===i)return this.targetResolution_=a,this.targetRotation_=o,this.targetCenter_=u,void this.applyTargetState_();this.getResolution()===a&&this.getRotation()===o&&this.getCenter()&&En(this.getCenter(),u)||(this.getAnimating()&&this.cancelAnimations(),this.animate_({rotation:o,center:u,resolution:a,duration:i,easing:On,anchor:n}))},e.prototype.beginInteraction=function(){this.resolveConstraints(0),this.setHint(gn,1)},e.prototype.endInteraction=function(t,e,n){this.setHint(gn,-1),this.resolveConstraints(t,e,n)},e.prototype.getConstrainedCenter=function(t,e){var n=this.getSizeFromViewport_(this.getRotation());return this.constraints_.center(t,e||this.getResolution(),n)},e.prototype.getConstrainedZoom=function(t,e){var n=this.getResolutionForZoom(t);return this.getZoomForResolution(this.getConstrainedResolution(n))},e.prototype.getConstrainedResolution=function(t,e){var n=e||0,i=this.getSizeFromViewport_(this.getRotation());return this.constraints_.resolution(t,n,i)},e}(j);function cr(t,e){var n=document.createElement(\"canvas\");return t&&(n.width=t),e&&(n.height=e),n.getContext(\"2d\")}function pr(t,e){var n=e.parentNode;n&&n.replaceChild(t,e)}function fr(t){return t&&t.parentNode?t.parentNode.removeChild(t):null}var dr={OPACITY:\"opacity\",VISIBLE:\"visible\",EXTENT:\"extent\",Z_INDEX:\"zIndex\",MAX_RESOLUTION:\"maxResolution\",MIN_RESOLUTION:\"minResolution\",SOURCE:\"source\"},_r=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),gr=function(t){function e(e){var n=t.call(this)||this,i=p({},e);return i[dr.OPACITY]=void 0!==e.opacity?e.opacity:1,i[dr.VISIBLE]=void 0===e.visible||e.visible,i[dr.Z_INDEX]=e.zIndex,i[dr.MAX_RESOLUTION]=void 0!==e.maxResolution?e.maxResolution:1/0,i[dr.MIN_RESOLUTION]=void 0!==e.minResolution?e.minResolution:0,n.className_=void 0!==i.className?e.className:\"ol-layer\",delete i.className,n.setProperties(i),n.state_=null,n}return _r(e,t),e.prototype.getClassName=function(){return this.className_},e.prototype.getLayerState=function(){var t=this.state_||{layer:this,managed:!0};return t.opacity=we(Math.round(100*this.getOpacity())/100,0,1),t.sourceState=this.getSourceState(),t.visible=this.getVisible(),t.extent=this.getExtent(),t.zIndex=this.getZIndex()||0,t.maxResolution=this.getMaxResolution(),t.minResolution=Math.max(this.getMinResolution(),0),this.state_=t,t},e.prototype.getLayersArray=function(t){return i()},e.prototype.getLayerStatesArray=function(t){return i()},e.prototype.getExtent=function(){return this.get(dr.EXTENT)},e.prototype.getMaxResolution=function(){return this.get(dr.MAX_RESOLUTION)},e.prototype.getMinResolution=function(){return this.get(dr.MIN_RESOLUTION)},e.prototype.getOpacity=function(){return this.get(dr.OPACITY)},e.prototype.getSourceState=function(){return i()},e.prototype.getVisible=function(){return this.get(dr.VISIBLE)},e.prototype.getZIndex=function(){return this.get(dr.Z_INDEX)},e.prototype.setExtent=function(t){this.set(dr.EXTENT,t)},e.prototype.setMaxResolution=function(t){this.set(dr.MAX_RESOLUTION,t)},e.prototype.setMinResolution=function(t){this.set(dr.MIN_RESOLUTION,t)},e.prototype.setOpacity=function(t){this.set(dr.OPACITY,t)},e.prototype.setVisible=function(t){this.set(dr.VISIBLE,t)},e.prototype.setZIndex=function(t){this.set(dr.Z_INDEX,t)},e}(j),yr={UNDEFINED:\"undefined\",LOADING:\"loading\",READY:\"ready\",ERROR:\"error\"},vr=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),mr={LAYERS:\"layers\"},Er=function(t){function e(e){var n=this,i=e||{},r=p({},i);delete r.layers;var o=i.layers;return(n=t.call(this,r)||this).layersListenerKeys_=[],n.listenerKeys_={},E(n,G(mr.LAYERS),n.handleLayersChanged_,n),o?Array.isArray(o)?o=new U(o.slice(),{unique:!0}):ge(\"function\"==typeof o.getArray,43):o=new U(void 0,{unique:!0}),n.setLayers(o),n}return vr(e,t),e.prototype.handleLayerChange_=function(){this.changed()},e.prototype.handleLayersChanged_=function(){this.layersListenerKeys_.forEach(O),this.layersListenerKeys_.length=0;var t=this.getLayers();for(var e in this.layersListenerKeys_.push(E(t,h.ADD,this.handleLayersAdd_,this),E(t,h.REMOVE,this.handleLayersRemove_,this)),this.listenerKeys_)this.listenerKeys_[e].forEach(O);f(this.listenerKeys_);for(var n=t.getArray(),i=0,r=n.length;i<r;i++){var s=n[i];this.listenerKeys_[o(s)]=[E(s,c,this.handleLayerChange_,this),E(s,F.CHANGE,this.handleLayerChange_,this)]}this.changed()},e.prototype.handleLayersAdd_=function(t){var e=t.element;this.listenerKeys_[o(e)]=[E(e,c,this.handleLayerChange_,this),E(e,F.CHANGE,this.handleLayerChange_,this)],this.changed()},e.prototype.handleLayersRemove_=function(t){var e=o(t.element);this.listenerKeys_[e].forEach(O),delete this.listenerKeys_[e],this.changed()},e.prototype.getLayers=function(){return this.get(mr.LAYERS)},e.prototype.setLayers=function(t){this.set(mr.LAYERS,t)},e.prototype.getLayersArray=function(t){var e=void 0!==t?t:[];return this.getLayers().forEach(function(t){t.getLayersArray(e)}),e},e.prototype.getLayerStatesArray=function(t){var e=void 0!==t?t:[],n=e.length;this.getLayers().forEach(function(t){t.getLayerStatesArray(e)});for(var i=this.getLayerState(),r=n,o=e.length;r<o;r++){var s=e[r];s.opacity*=i.opacity,s.visible=s.visible&&i.visible,s.maxResolution=Math.min(s.maxResolution,i.maxResolution),s.minResolution=Math.max(s.minResolution,i.minResolution),void 0!==i.extent&&(void 0!==s.extent?s.extent=rn(s.extent,i.extent):s.extent=i.extent)}return e},e.prototype.getSourceState=function(){return yr.READY},e}(gr);function xr(t,e){return Array.isArray(t)?t:(void 0===e?e=[t,t]:e[0]=e[1]=t,e)}var wr=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();var Or=function(t){function e(e){var n=t.call(this)||this,i=function(t){var e=null;void 0!==t.keyboardEventTarget&&(e=\"string\"==typeof t.keyboardEventTarget?document.getElementById(t.keyboardEventTarget):t.keyboardEventTarget);var n,i,r,o={},s=t.layers&&\"function\"==typeof t.layers.getLayers?t.layers:new Er({layers:t.layers});o[le.LAYERGROUP]=s,o[le.TARGET]=t.target,o[le.VIEW]=void 0!==t.view?t.view:new hr,void 0!==t.controls&&(Array.isArray(t.controls)?n=new U(t.controls.slice()):(ge(\"function\"==typeof t.controls.getArray,47),n=t.controls));void 0!==t.interactions&&(Array.isArray(t.interactions)?i=new U(t.interactions.slice()):(ge(\"function\"==typeof t.interactions.getArray,48),i=t.interactions));void 0!==t.overlays?Array.isArray(t.overlays)?r=new U(t.overlays.slice()):(ge(\"function\"==typeof t.overlays.getArray,49),r=t.overlays):r=new U;return{controls:n,interactions:i,keyboardEventTarget:e,overlays:r,values:o}}(e);for(var r in n.maxTilesLoading_=void 0!==e.maxTilesLoading?e.maxTilesLoading:16,n.pixelRatio_=void 0!==e.pixelRatio?e.pixelRatio:$,n.animationDelayKey_,n.animationDelay_=function(){this.animationDelayKey_=void 0,this.renderFrame_(Date.now())}.bind(n),n.coordinateToPixelTransform_=[1,0,0,1,0,0],n.pixelToCoordinateTransform_=[1,0,0,1,0,0],n.frameIndex_=0,n.frameState_=null,n.previousExtent_=null,n.viewPropertyListenerKey_=null,n.viewChangeListenerKey_=null,n.layerGroupPropertyListenerKeys_=null,n.viewport_=document.createElement(\"div\"),n.viewport_.className=\"ol-viewport\"+(tt?\" ol-touch\":\"\"),n.viewport_.style.position=\"relative\",n.viewport_.style.overflow=\"hidden\",n.viewport_.style.width=\"100%\",n.viewport_.style.height=\"100%\",n.viewport_.style.msTouchAction=\"none\",n.viewport_.style.touchAction=\"none\",n.overlayContainer_=document.createElement(\"div\"),n.overlayContainer_.style.position=\"absolute\",n.overlayContainer_.style.zIndex=\"0\",n.overlayContainer_.style.width=\"100%\",n.overlayContainer_.style.height=\"100%\",n.overlayContainer_.className=\"ol-overlaycontainer\",n.viewport_.appendChild(n.overlayContainer_),n.overlayContainerStopEvent_=document.createElement(\"div\"),n.overlayContainerStopEvent_.style.position=\"absolute\",n.overlayContainerStopEvent_.style.zIndex=\"0\",n.overlayContainerStopEvent_.style.width=\"100%\",n.overlayContainerStopEvent_.style.height=\"100%\",n.overlayContainerStopEvent_.className=\"ol-overlaycontainer-stopevent\",n.viewport_.appendChild(n.overlayContainerStopEvent_),n.mapBrowserEventHandler_=new oe(n,e.moveTolerance),it)E(n.mapBrowserEventHandler_,it[r],n.handleMapBrowserEvent,n);return n.keyboardEventTarget_=i.keyboardEventTarget,n.keyHandlerKeys_=null,E(n.viewport_,F.CONTEXTMENU,n.handleBrowserEvent,n),E(n.viewport_,F.WHEEL,n.handleBrowserEvent,n),E(n.viewport_,F.MOUSEWHEEL,n.handleBrowserEvent,n),n.controls=i.controls||new U,n.interactions=i.interactions||new U,n.overlays_=i.overlays,n.overlayIdIndex_={},n.renderer_=n.createRenderer(),n.handleResize_,n.focus_=null,n.postRenderFunctions_=[],n.tileQueue_=new me(n.getTilePriority.bind(n),n.handleTileChange_.bind(n)),n.skippedFeatureUids_={},E(n,G(le.LAYERGROUP),n.handleLayerGroupChanged_,n),E(n,G(le.VIEW),n.handleViewChanged_,n),E(n,G(le.SIZE),n.handleSizeChanged_,n),E(n,G(le.TARGET),n.handleTargetChanged_,n),n.setProperties(i.values),n.controls.forEach(function(t){t.setMap(this)}.bind(n)),E(n.controls,h.ADD,function(t){t.element.setMap(this)},n),E(n.controls,h.REMOVE,function(t){t.element.setMap(null)},n),n.interactions.forEach(function(t){t.setMap(this)}.bind(n)),E(n.interactions,h.ADD,function(t){t.element.setMap(this)},n),E(n.interactions,h.REMOVE,function(t){t.element.setMap(null)},n),n.overlays_.forEach(n.addOverlayInternal_.bind(n)),E(n.overlays_,h.ADD,function(t){this.addOverlayInternal_(t.element)},n),E(n.overlays_,h.REMOVE,function(t){var e=t.element.getId();void 0!==e&&delete this.overlayIdIndex_[e.toString()],t.element.setMap(null)},n),n}return wr(e,t),e.prototype.createRenderer=function(){throw new Error(\"Use a map type that has a createRenderer method\")},e.prototype.addControl=function(t){this.getControls().push(t)},e.prototype.addInteraction=function(t){this.getInteractions().push(t)},e.prototype.addLayer=function(t){this.getLayerGroup().getLayers().push(t)},e.prototype.addOverlay=function(t){this.getOverlays().push(t)},e.prototype.addOverlayInternal_=function(t){var e=t.getId();void 0!==e&&(this.overlayIdIndex_[e.toString()]=t),t.setMap(this)},e.prototype.disposeInternal=function(){this.mapBrowserEventHandler_.dispose(),w(this.viewport_,F.CONTEXTMENU,this.handleBrowserEvent,this),w(this.viewport_,F.WHEEL,this.handleBrowserEvent,this),w(this.viewport_,F.MOUSEWHEEL,this.handleBrowserEvent,this),void 0!==this.handleResize_&&(removeEventListener(F.RESIZE,this.handleResize_,!1),this.handleResize_=void 0),this.animationDelayKey_&&(cancelAnimationFrame(this.animationDelayKey_),this.animationDelayKey_=void 0),this.setTarget(null),t.prototype.disposeInternal.call(this)},e.prototype.forEachFeatureAtPixel=function(t,e,n){if(this.frameState_){var i=this.getCoordinateFromPixel(t),r=void 0!==(n=void 0!==n?n:{}).hitTolerance?n.hitTolerance*this.frameState_.pixelRatio:0,o=void 0!==n.layerFilter?n.layerFilter:b;return this.renderer_.forEachFeatureAtCoordinate(i,this.frameState_,r,e,null,o,null)}},e.prototype.getFeaturesAtPixel=function(t,e){var n=null;return this.forEachFeatureAtPixel(t,function(t){n||(n=[]),n.push(t)},e),n},e.prototype.forEachLayerAtPixel=function(t,e,n){if(this.frameState_){var i=n||{},r=void 0!==i.hitTolerance?n.hitTolerance*this.frameState_.pixelRatio:0,o=i.layerFilter||b;return this.renderer_.forEachLayerAtPixel(t,this.frameState_,r,e,o)}},e.prototype.hasFeatureAtPixel=function(t,e){if(!this.frameState_)return!1;var n=this.getCoordinateFromPixel(t),i=void 0!==(e=void 0!==e?e:{}).layerFilter?e.layerFilter:b,r=void 0!==e.hitTolerance?e.hitTolerance*this.frameState_.pixelRatio:0;return this.renderer_.hasFeatureAtCoordinate(n,this.frameState_,r,i,null)},e.prototype.getEventCoordinate=function(t){return this.getCoordinateFromPixel(this.getEventPixel(t))},e.prototype.getEventPixel=function(t){var e=this.viewport_.getBoundingClientRect(),n=\"changedTouches\"in t?t.changedTouches[0]:t;return[n.clientX-e.left,n.clientY-e.top]},e.prototype.getTarget=function(){return this.get(le.TARGET)},e.prototype.getTargetElement=function(){var t=this.getTarget();return void 0!==t?\"string\"==typeof t?document.getElementById(t):t:null},e.prototype.getCoordinateFromPixel=function(t){var e=this.frameState_;return e?fi(e.pixelToCoordinateTransform,t.slice()):null},e.prototype.getControls=function(){return this.controls},e.prototype.getOverlays=function(){return this.overlays_},e.prototype.getOverlayById=function(t){var e=this.overlayIdIndex_[t.toString()];return void 0!==e?e:null},e.prototype.getInteractions=function(){return this.interactions},e.prototype.getLayerGroup=function(){return this.get(le.LAYERGROUP)},e.prototype.getLayers=function(){return this.getLayerGroup().getLayers()},e.prototype.getPixelFromCoordinate=function(t){var e=this.frameState_;return e?fi(e.coordinateToPixelTransform,t.slice(0,2)):null},e.prototype.getRenderer=function(){return this.renderer_},e.prototype.getSize=function(){return this.get(le.SIZE)},e.prototype.getView=function(){return this.get(le.VIEW)},e.prototype.getViewport=function(){return this.viewport_},e.prototype.getOverlayContainer=function(){return this.overlayContainer_},e.prototype.getOverlayContainerStopEvent=function(){return this.overlayContainerStopEvent_},e.prototype.getTilePriority=function(t,e,n,i){var r=this.frameState_;if(!(r&&e in r.wantedTiles))return 1/0;if(!r.wantedTiles[e][t.getKey()])return 1/0;var o=n[0]-r.focus[0],s=n[1]-r.focus[1];return 65536*Math.log(i)+Math.sqrt(o*o+s*s)/i},e.prototype.handleBrowserEvent=function(t,e){var n=e||t.type,i=new Z(n,this,t);this.handleMapBrowserEvent(i)},e.prototype.handleMapBrowserEvent=function(t){if(this.frameState_){for(var e=t.originalEvent.target;e instanceof HTMLElement;){if(e.parentElement===this.overlayContainerStopEvent_)return;e=e.parentElement}this.focus_=t.coordinate,t.frameState=this.frameState_;var n=this.getInteractions().getArray();if(!1!==this.dispatchEvent(t))for(var i=n.length-1;i>=0;i--){var r=n[i];if(r.getActive())if(!r.handleEvent(t))break}}},e.prototype.handlePostRender=function(){var t=this.frameState_,e=this.tileQueue_;if(!e.isEmpty()){var n=this.maxTilesLoading_,i=n;if(t){var r=t.viewHints;if(r[_n]||r[gn]){var o=Date.now()-t.time>8;n=o?0:8,i=o?0:2}}e.getTilesLoading()<n&&(e.reprioritize(),e.loadMoreTiles(n,i))}!t||!this.hasListener(de)||t.animate||this.tileQueue_.getTilesLoading()||function t(e){for(var n=0,i=e.length;n<i;++n){var r=e[n];if(\"function\"==typeof r.getLayers)return t(r.getLayers().getArray());var o=r.getSource();if(o&&o.loading)return!0}return!1}(this.getLayers().getArray())||this.renderer_.dispatchRenderEvent(de,t);for(var s=this.postRenderFunctions_,a=0,u=s.length;a<u;++a)s[a](this,t);s.length=0},e.prototype.handleSizeChanged_=function(){this.getView()&&this.getView().resolveConstraints(0),this.render()},e.prototype.handleTargetChanged_=function(){var t;if(this.getTarget()&&(t=this.getTargetElement()),this.keyHandlerKeys_){for(var e=0,n=this.keyHandlerKeys_.length;e<n;++e)O(this.keyHandlerKeys_[e]);this.keyHandlerKeys_=null}if(t){t.appendChild(this.viewport_);var i=this.keyboardEventTarget_?this.keyboardEventTarget_:t;this.keyHandlerKeys_=[E(i,F.KEYDOWN,this.handleBrowserEvent,this),E(i,F.KEYPRESS,this.handleBrowserEvent,this)],this.handleResize_||(this.handleResize_=this.updateSize.bind(this),addEventListener(F.RESIZE,this.handleResize_,!1))}else this.renderer_.removeLayerRenderers(),fr(this.viewport_),void 0!==this.handleResize_&&(removeEventListener(F.RESIZE,this.handleResize_,!1),this.handleResize_=void 0);this.updateSize()},e.prototype.handleTileChange_=function(){this.render()},e.prototype.handleViewPropertyChanged_=function(){this.render()},e.prototype.handleViewChanged_=function(){this.viewPropertyListenerKey_&&(O(this.viewPropertyListenerKey_),this.viewPropertyListenerKey_=null),this.viewChangeListenerKey_&&(O(this.viewChangeListenerKey_),this.viewChangeListenerKey_=null);var t=this.getView();t&&(this.viewport_.setAttribute(\"data-view\",o(t)),this.viewPropertyListenerKey_=E(t,c,this.handleViewPropertyChanged_,this),this.viewChangeListenerKey_=E(t,F.CHANGE,this.handleViewPropertyChanged_,this),t.resolveConstraints(0)),this.render()},e.prototype.handleLayerGroupChanged_=function(){this.layerGroupPropertyListenerKeys_&&(this.layerGroupPropertyListenerKeys_.forEach(O),this.layerGroupPropertyListenerKeys_=null);var t=this.getLayerGroup();t&&(this.layerGroupPropertyListenerKeys_=[E(t,c,this.render,this),E(t,F.CHANGE,this.render,this)]),this.render()},e.prototype.isRendered=function(){return!!this.frameState_},e.prototype.renderSync=function(){this.animationDelayKey_&&cancelAnimationFrame(this.animationDelayKey_),this.animationDelay_()},e.prototype.render=function(){void 0===this.animationDelayKey_&&(this.animationDelayKey_=requestAnimationFrame(this.animationDelay_))},e.prototype.removeControl=function(t){return this.getControls().remove(t)},e.prototype.removeInteraction=function(t){return this.getInteractions().remove(t)},e.prototype.removeLayer=function(t){return this.getLayerGroup().getLayers().remove(t)},e.prototype.removeOverlay=function(t){return this.getOverlays().remove(t)},e.prototype.renderFrame_=function(t){var e,n=this.getSize(),i=this.getView(),r=[1/0,1/0,-1/0,-1/0],o=this.frameState_,s=null;if(void 0!==n&&function(t){return t[0]>0&&t[1]>0}(n)&&i&&i.isDef()){var a=i.getHints(this.frameState_?this.frameState_.viewHints:void 0);e=i.getState(this.pixelRatio_),s={animate:!1,coordinateToPixelTransform:this.coordinateToPixelTransform_,extent:r,focus:this.focus_?this.focus_:e.center,index:this.frameIndex_++,layerStatesArray:this.getLayerGroup().getLayerStatesArray(),pixelRatio:this.pixelRatio_,pixelToCoordinateTransform:this.pixelToCoordinateTransform_,postRenderFunctions:[],size:n,skippedFeatureUids:this.skippedFeatureUids_,tileQueue:this.tileQueue_,time:t,usedTiles:{},viewState:e,viewHints:a,wantedTiles:{}}}if(s&&(s.extent=en(e.center,e.resolution,e.rotation,s.size,r)),this.frameState_=s,this.renderer_.renderFrame(s),s){if(s.animate&&this.render(),Array.prototype.push.apply(this.postRenderFunctions_,s.postRenderFunctions),o)(!this.previousExtent_||!ln(this.previousExtent_)&&!Ke(s.extent,this.previousExtent_))&&(this.dispatchEvent(new W(ae,this,o)),this.previousExtent_=Xe(this.previousExtent_));this.previousExtent_&&!s.viewHints[_n]&&!s.viewHints[gn]&&!Ke(s.extent,this.previousExtent_)&&(this.dispatchEvent(new W(ue,this,s)),Ae(s.extent,this.previousExtent_))}this.dispatchEvent(new W(se,this,s)),setTimeout(this.handlePostRender.bind(this),0)},e.prototype.setLayerGroup=function(t){this.set(le.LAYERGROUP,t)},e.prototype.setSize=function(t){this.set(le.SIZE,t)},e.prototype.setTarget=function(t){this.set(le.TARGET,t)},e.prototype.setView=function(t){this.set(le.VIEW,t)},e.prototype.skipFeature=function(t){this.skippedFeatureUids_[o(t)]=!0,this.render()},e.prototype.updateSize=function(){var t=this.getTargetElement();if(t){var e=getComputedStyle(t);this.setSize([t.offsetWidth-parseFloat(e.borderLeftWidth)-parseFloat(e.paddingLeft)-parseFloat(e.paddingRight)-parseFloat(e.borderRightWidth),t.offsetHeight-parseFloat(e.borderTopWidth)-parseFloat(e.paddingTop)-parseFloat(e.paddingBottom)-parseFloat(e.borderBottomWidth)])}else this.setSize(void 0)},e.prototype.unskipFeature=function(t){delete this.skippedFeatureUids_[o(t)],this.render()},e}(j);var Tr,br,Cr=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Sr=function(t){function e(e){var n=t.call(this)||this;return n.element=e.element?e.element:null,n.target_=null,n.map_=null,n.listenerKeys=[],n.render=e.render?e.render:S,e.target&&n.setTarget(e.target),n}return Cr(e,t),e.prototype.disposeInternal=function(){fr(this.element),t.prototype.disposeInternal.call(this)},e.prototype.getMap=function(){return this.map_},e.prototype.setMap=function(t){this.map_&&fr(this.element);for(var e=0,n=this.listenerKeys.length;e<n;++e)O(this.listenerKeys[e]);(this.listenerKeys.length=0,this.map_=t,this.map_)&&((this.target_?this.target_:t.getOverlayContainerStopEvent()).appendChild(this.element),this.render!==S&&this.listenerKeys.push(E(t,se,this.render,this)),t.render())},e.prototype.setTarget=function(t){this.target_=\"string\"==typeof t?document.getElementById(t):t},e}(j),Rr=\"ol-hidden\",Ir=\"ol-unselectable\",Pr=\"ol-control\",Fr=\"ol-collapsed\",Lr=(br={},function(t){if(Tr||(Tr=document.createElement(\"div\").style),!(t in br)){Tr.font=t;var e=Tr.fontFamily;if(Tr.font=\"\",!e)return null;br[t]=e.split(/,\\s?/)}return br[t]}),Mr=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();function Ar(t,e){return t.visible&&e>=t.minResolution&&e<t.maxResolution}var Dr=function(t){function e(e){var n=this,i=p({},e);delete i.source,(n=t.call(this,i)||this).mapPrecomposeKey_=null,n.mapRenderKey_=null,n.sourceChangeKey_=null,n.renderer_=null,e.map&&n.setMap(e.map),E(n,G(dr.SOURCE),n.handleSourcePropertyChange_,n);var r=e.source?e.source:null;return n.setSource(r),n}return Mr(e,t),e.prototype.getLayersArray=function(t){var e=t||[];return e.push(this),e},e.prototype.getLayerStatesArray=function(t){var e=t||[];return e.push(this.getLayerState()),e},e.prototype.getSource=function(){return this.get(dr.SOURCE)||null},e.prototype.getSourceState=function(){var t=this.getSource();return t?t.getState():yr.UNDEFINED},e.prototype.handleSourceChange_=function(){this.changed()},e.prototype.handleSourcePropertyChange_=function(){this.sourceChangeKey_&&(O(this.sourceChangeKey_),this.sourceChangeKey_=null);var t=this.getSource();t&&(this.sourceChangeKey_=E(t,F.CHANGE,this.handleSourceChange_,this)),this.changed()},e.prototype.render=function(t){var e=this.getRenderer(),n=this.getLayerState();if(e.prepareFrame(t,n))return e.renderFrame(t,n)},e.prototype.setMap=function(t){this.mapPrecomposeKey_&&(O(this.mapPrecomposeKey_),this.mapPrecomposeKey_=null),t||this.changed(),this.mapRenderKey_&&(O(this.mapRenderKey_),this.mapRenderKey_=null),t&&(this.mapPrecomposeKey_=E(t,pe,function(t){var e=t,n=this.getLayerState();n.managed=!1,void 0===this.getZIndex()&&(n.zIndex=1/0),e.frameState.layerStatesArray.push(n)},this),this.mapRenderKey_=E(this,F.CHANGE,t.render,t),this.changed())},e.prototype.setSource=function(t){this.set(dr.SOURCE,t)},e.prototype.getRenderer=function(){return this.renderer_||(this.renderer_=this.createRenderer()),this.renderer_},e.prototype.createRenderer=function(){return null},e}(gr),kr=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();function Nr(t){this.updateElement_(t.frameState)}var Gr=function(t){function e(e){var n=this,i=e||{};(n=t.call(this,{element:document.createElement(\"div\"),render:i.render||Nr,target:i.target})||this).ulElement_=document.createElement(\"ul\"),n.collapsed_=void 0===i.collapsed||i.collapsed,n.overrideCollapsible_=void 0!==i.collapsible,n.collapsible_=void 0===i.collapsible||i.collapsible,n.collapsible_||(n.collapsed_=!1);var r=void 0!==i.className?i.className:\"ol-attribution\",o=void 0!==i.tipLabel?i.tipLabel:\"Attributions\",s=void 0!==i.collapseLabel?i.collapseLabel:\"»\";\"string\"==typeof s?(n.collapseLabel_=document.createElement(\"span\"),n.collapseLabel_.textContent=s):n.collapseLabel_=s;var a=void 0!==i.label?i.label:\"i\";\"string\"==typeof a?(n.label_=document.createElement(\"span\"),n.label_.textContent=a):n.label_=a;var u=n.collapsible_&&!n.collapsed_?n.collapseLabel_:n.label_,l=document.createElement(\"button\");l.setAttribute(\"type\",\"button\"),l.title=o,l.appendChild(u),E(l,F.CLICK,n.handleClick_,n);var h=r+\" \"+Ir+\" \"+Pr+(n.collapsed_&&n.collapsible_?\" \"+Fr:\"\")+(n.collapsible_?\"\":\" ol-uncollapsible\"),c=n.element;return c.className=h,c.appendChild(n.ulElement_),c.appendChild(l),n.renderedAttributions_=[],n.renderedVisible_=!0,n}return kr(e,t),e.prototype.collectSourceAttributions_=function(t){for(var e={},n=[],i=t.layerStatesArray,r=t.viewState.resolution,o=0,s=i.length;o<s;++o){var a=i[o];if(Ar(a,r)){var u=a.layer.getSource();if(u){var l=u.getAttributions();if(l){var h=l(t);if(h)if(this.overrideCollapsible_||!1!==u.getAttributionsCollapsible()||this.setCollapsible(!1),Array.isArray(h))for(var c=0,p=h.length;c<p;++c)h[c]in e||(n.push(h[c]),e[h[c]]=!0);else h in e||(n.push(h),e[h]=!0)}}}}return n},e.prototype.updateElement_=function(t){if(t){var e=this.collectSourceAttributions_(t),n=e.length>0;if(this.renderedVisible_!=n&&(this.element.style.display=n?\"\":\"none\",this.renderedVisible_=n),!Vt(e,this.renderedAttributions_)){!function(t){for(;t.lastChild;)t.removeChild(t.lastChild)}(this.ulElement_);for(var i=0,r=e.length;i<r;++i){var o=document.createElement(\"li\");o.innerHTML=e[i],this.ulElement_.appendChild(o)}this.renderedAttributions_=e}}else this.renderedVisible_&&(this.element.style.display=\"none\",this.renderedVisible_=!1)},e.prototype.handleClick_=function(t){t.preventDefault(),this.handleToggle_()},e.prototype.handleToggle_=function(){this.element.classList.toggle(Fr),this.collapsed_?pr(this.collapseLabel_,this.label_):pr(this.label_,this.collapseLabel_),this.collapsed_=!this.collapsed_},e.prototype.getCollapsible=function(){return this.collapsible_},e.prototype.setCollapsible=function(t){this.collapsible_!==t&&(this.collapsible_=t,this.element.classList.toggle(\"ol-uncollapsible\"),!t&&this.collapsed_&&this.handleToggle_())},e.prototype.setCollapsed=function(t){this.collapsible_&&this.collapsed_!==t&&this.handleToggle_()},e.prototype.getCollapsed=function(){return this.collapsed_},e}(Sr),jr=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();function zr(t){var e=t.frameState;if(e){var n=e.viewState.rotation;if(n!=this.rotation_){var i=\"rotate(\"+n+\"rad)\";if(this.autoHide_){var r=this.element.classList.contains(Rr);r||0!==n?r&&0!==n&&this.element.classList.remove(Rr):this.element.classList.add(Rr)}this.label_.style.transform=i}this.rotation_=n}}var Yr=function(t){function e(e){var n=this,i=e||{};n=t.call(this,{element:document.createElement(\"div\"),render:i.render||zr,target:i.target})||this;var r=void 0!==i.className?i.className:\"ol-rotate\",o=void 0!==i.label?i.label:\"⇧\";n.label_=null,\"string\"==typeof o?(n.label_=document.createElement(\"span\"),n.label_.className=\"ol-compass\",n.label_.textContent=o):(n.label_=o,n.label_.classList.add(\"ol-compass\"));var s=i.tipLabel?i.tipLabel:\"Reset rotation\",a=document.createElement(\"button\");a.className=r+\"-reset\",a.setAttribute(\"type\",\"button\"),a.title=s,a.appendChild(n.label_),E(a,F.CLICK,n.handleClick_,n);var u=r+\" \"+Ir+\" \"+Pr,l=n.element;return l.className=u,l.appendChild(a),n.callResetNorth_=i.resetNorth?i.resetNorth:void 0,n.duration_=void 0!==i.duration?i.duration:250,n.autoHide_=void 0===i.autoHide||i.autoHide,n.rotation_=void 0,n.autoHide_&&n.element.classList.add(Rr),n}return jr(e,t),e.prototype.handleClick_=function(t){t.preventDefault(),void 0!==this.callResetNorth_?this.callResetNorth_():this.resetNorth_()},e.prototype.resetNorth_=function(){var t=this.getMap().getView();t&&void 0!==t.getRotation()&&(this.duration_>0?t.animate({rotation:0,duration:this.duration_,easing:On}):t.setRotation(0))},e}(Sr),Xr=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Ur=function(t){function e(e){var n=this,i=e||{};n=t.call(this,{element:document.createElement(\"div\"),target:i.target})||this;var r=void 0!==i.className?i.className:\"ol-zoom\",o=void 0!==i.delta?i.delta:1,s=void 0!==i.zoomInLabel?i.zoomInLabel:\"+\",a=void 0!==i.zoomOutLabel?i.zoomOutLabel:\"−\",u=void 0!==i.zoomInTipLabel?i.zoomInTipLabel:\"Zoom in\",l=void 0!==i.zoomOutTipLabel?i.zoomOutTipLabel:\"Zoom out\",h=document.createElement(\"button\");h.className=r+\"-in\",h.setAttribute(\"type\",\"button\"),h.title=u,h.appendChild(\"string\"==typeof s?document.createTextNode(s):s),E(h,F.CLICK,n.handleClick_.bind(n,o));var c=document.createElement(\"button\");c.className=r+\"-out\",c.setAttribute(\"type\",\"button\"),c.title=l,c.appendChild(\"string\"==typeof a?document.createTextNode(a):a),E(c,F.CLICK,n.handleClick_.bind(n,-o));var p=r+\" \"+Ir+\" \"+Pr,f=n.element;return f.className=p,f.appendChild(h),f.appendChild(c),n.duration_=void 0!==i.duration?i.duration:250,n}return Xr(e,t),e.prototype.handleClick_=function(t,e){e.preventDefault(),this.zoomByDelta_(t)},e.prototype.zoomByDelta_=function(t){var e=this.getMap().getView();if(e){var n=e.getZoom();if(void 0!==n){var i=e.getConstrainedZoom(n+t);this.duration_>0?(e.getAnimating()&&e.cancelAnimations(),e.animate({zoom:i,duration:this.duration_,easing:On})):e.setZoom(i)}}},e}(Sr);var Kr=function(){function t(t,e,n){this.decay_=t,this.minVelocity_=e,this.delay_=n,this.points_=[],this.angle_=0,this.initialVelocity_=0}return t.prototype.begin=function(){this.points_.length=0,this.angle_=0,this.initialVelocity_=0},t.prototype.update=function(t,e){this.points_.push(t,e,Date.now())},t.prototype.end=function(){if(this.points_.length<6)return!1;var t=Date.now()-this.delay_,e=this.points_.length-3;if(this.points_[e+2]<t)return!1;for(var n=e-3;n>0&&this.points_[n+2]>t;)n-=3;var i=this.points_[e+2]-this.points_[n+2];if(i<1e3/60)return!1;var r=this.points_[e]-this.points_[n],o=this.points_[e+1]-this.points_[n+1];return this.angle_=Math.atan2(o,r),this.initialVelocity_=Math.sqrt(r*r+o*o)/i,this.initialVelocity_>this.minVelocity_},t.prototype.getDistance=function(){return(this.minVelocity_-this.initialVelocity_)/this.decay_},t.prototype.getAngle=function(){return this.angle_},t}(),Wr=\"active\",Br=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();function Zr(t,e,n,i){var r=t.getZoom();if(void 0!==r){var o=t.getConstrainedZoom(r+e),s=t.getResolutionForZoom(o);t.getAnimating()&&t.cancelAnimations(),t.animate({resolution:s,anchor:n,duration:void 0!==i?i:250,easing:On})}}var Vr=function(t){function e(e){var n=t.call(this)||this;return e.handleEvent&&(n.handleEvent=e.handleEvent),n.map_=null,n.setActive(!0),n}return Br(e,t),e.prototype.getActive=function(){return this.get(Wr)},e.prototype.getMap=function(){return this.map_},e.prototype.handleEvent=function(t){return!0},e.prototype.setActive=function(t){this.set(Wr,t)},e.prototype.setMap=function(t){this.map_=t},e}(j),Hr=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();function qr(t){var e=!1;if(t.type==it.DBLCLICK){var n=t.originalEvent,i=t.map,r=t.coordinate,o=n.shiftKey?-this.delta_:this.delta_;Zr(i.getView(),o,r,this.duration_),t.preventDefault(),e=!0}return!e}var Jr=function(t){function e(e){var n=t.call(this,{handleEvent:qr})||this,i=e||{};return n.delta_=i.delta?i.delta:1,n.duration_=void 0!==i.duration?i.duration:250,n}return Hr(e,t),e}(Vr),Qr=function(t){var e=t.originalEvent;return e.altKey&&!(e.metaKey||e.ctrlKey)&&e.shiftKey},$r=function(t){return t.target.getTargetElement()===document.activeElement},to=b,eo=function(t){var e=t.originalEvent;return 0==e.button&&!(J&&Q&&e.ctrlKey)},no=function(t){var e=t.originalEvent;return!e.altKey&&!(e.metaKey||e.ctrlKey)&&!e.shiftKey},io=function(t){var e=t.originalEvent;return!e.altKey&&!(e.metaKey||e.ctrlKey)&&e.shiftKey},ro=function(t){var e=t.originalEvent.target.tagName;return\"INPUT\"!==e&&\"SELECT\"!==e&&\"TEXTAREA\"!==e},oo=function(t){var e=t.pointerEvent;return ge(void 0!==e,56),\"mouse\"==e.pointerType},so=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();function ao(t){for(var e=t.length,n=0,i=0,r=0;r<e;r++)n+=t[r].clientX,i+=t[r].clientY;return[n/e,i/e]}var uo=function(t){function e(e){var n=this,i=e||{};return n=t.call(this,i)||this,i.handleDownEvent&&(n.handleDownEvent=i.handleDownEvent),i.handleDragEvent&&(n.handleDragEvent=i.handleDragEvent),i.handleMoveEvent&&(n.handleMoveEvent=i.handleMoveEvent),i.handleUpEvent&&(n.handleUpEvent=i.handleUpEvent),i.stopDown&&(n.stopDown=i.stopDown),n.handlingDownUpSequence=!1,n.trackedPointers_={},n.targetPointers=[],n}return so(e,t),e.prototype.handleDownEvent=function(t){return!1},e.prototype.handleDragEvent=function(t){},e.prototype.handleEvent=function(t){if(!t.pointerEvent)return!0;var e=!1;if(this.updateTrackedPointers_(t),this.handlingDownUpSequence){if(t.type==it.POINTERDRAG)this.handleDragEvent(t);else if(t.type==it.POINTERUP){var n=this.handleUpEvent(t);this.handlingDownUpSequence=n&&this.targetPointers.length>0}}else if(t.type==it.POINTERDOWN){var i=this.handleDownEvent(t);i&&t.preventDefault(),this.handlingDownUpSequence=i,e=this.stopDown(i)}else t.type==it.POINTERMOVE&&this.handleMoveEvent(t);return!e},e.prototype.handleMoveEvent=function(t){},e.prototype.handleUpEvent=function(t){return!1},e.prototype.stopDown=function(t){return t},e.prototype.updateTrackedPointers_=function(t){if(function(t){var e=t.type;return e===it.POINTERDOWN||e===it.POINTERDRAG||e===it.POINTERUP}(t)){var e=t.pointerEvent,n=e.pointerId.toString();t.type==it.POINTERUP?delete this.trackedPointers_[n]:t.type==it.POINTERDOWN?this.trackedPointers_[n]=e:n in this.trackedPointers_&&(this.trackedPointers_[n]=e),this.targetPointers=d(this.trackedPointers_)}},e}(Vr),lo=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),ho=function(t){function e(e){var n=t.call(this,{stopDown:C})||this,i=e||{};return n.kinetic_=i.kinetic,n.lastCentroid=null,n.lastPointersCount_,n.panning_=!1,n.condition_=i.condition?i.condition:no,n.noKinetic_=!1,n}return lo(e,t),e.prototype.handleDragEvent=function(t){var e,n,i=this.targetPointers,r=ao(i);if(i.length==this.lastPointersCount_){if(this.kinetic_&&this.kinetic_.update(r[0],r[1]),this.lastCentroid){var o=[this.lastCentroid[0]-r[0],r[1]-this.lastCentroid[1]],s=t.map.getView();e=o,n=s.getResolution(),e[0]*=n,e[1]*=n,xn(o,s.getRotation()),s.adjustCenter(o)}}else this.kinetic_&&this.kinetic_.begin();this.lastCentroid=r,this.lastPointersCount_=i.length},e.prototype.handleUpEvent=function(t){var e=t.map,n=e.getView();if(0===this.targetPointers.length){if(!this.noKinetic_&&this.kinetic_&&this.kinetic_.end()){var i=this.kinetic_.getDistance(),r=this.kinetic_.getAngle(),o=n.getCenter(),s=e.getPixelFromCoordinate(o),a=e.getCoordinateFromPixel([s[0]-i*Math.cos(r),s[1]-i*Math.sin(r)]);n.animate({center:n.getConstrainedCenter(a),duration:500,easing:On})}return this.panning_&&(this.panning_=!1,n.endInteraction()),!1}return this.kinetic_&&this.kinetic_.begin(),this.lastCentroid=null,!0},e.prototype.handleDownEvent=function(t){if(this.targetPointers.length>0&&this.condition_(t)){var e=t.map.getView();return this.lastCentroid=null,e.getAnimating()&&e.cancelAnimations(),this.panning_||(this.panning_=!0,this.getMap().getView().beginInteraction()),this.kinetic_&&this.kinetic_.begin(),this.noKinetic_=this.targetPointers.length>1,!0}return!1},e}(uo),co=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),po=function(t){function e(e){var n=this,i=e||{};return(n=t.call(this,{stopDown:C})||this).condition_=i.condition?i.condition:Qr,n.lastAngle_=void 0,n.duration_=void 0!==i.duration?i.duration:250,n}return co(e,t),e.prototype.handleDragEvent=function(t){if(oo(t)){var e=t.map,n=e.getView();if(n.getConstraints().rotation!==fn){var i=e.getSize(),r=t.pixel,o=Math.atan2(i[1]/2-r[1],r[0]-i[0]/2);if(void 0!==this.lastAngle_){var s=o-this.lastAngle_;n.adjustRotation(-s)}this.lastAngle_=o}}},e.prototype.handleUpEvent=function(t){return!oo(t)||(t.map.getView().endInteraction(this.duration_),!1)},e.prototype.handleDownEvent=function(t){return!!oo(t)&&(!(!eo(t)||!this.condition_(t))&&(t.map.getView().beginInteraction(),this.lastAngle_=void 0,!0))},e}(uo),fo=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),_o=function(t){function e(e){var n=t.call(this)||this;return n.geometry_=null,n.element_=document.createElement(\"div\"),n.element_.style.position=\"absolute\",n.element_.className=\"ol-box \"+e,n.map_=null,n.startPixel_=null,n.endPixel_=null,n}return fo(e,t),e.prototype.disposeInternal=function(){this.setMap(null)},e.prototype.render_=function(){var t=this.startPixel_,e=this.endPixel_,n=this.element_.style;n.left=Math.min(t[0],e[0])+\"px\",n.top=Math.min(t[1],e[1])+\"px\",n.width=Math.abs(e[0]-t[0])+\"px\",n.height=Math.abs(e[1]-t[1])+\"px\"},e.prototype.setMap=function(t){if(this.map_){this.map_.getOverlayContainer().removeChild(this.element_);var e=this.element_.style;e.left=e.top=e.width=e.height=\"inherit\"}this.map_=t,this.map_&&this.map_.getOverlayContainer().appendChild(this.element_)},e.prototype.setPixels=function(t,e){this.startPixel_=t,this.endPixel_=e,this.createOrUpdateGeometry(),this.render_()},e.prototype.createOrUpdateGeometry=function(){var t=this.startPixel_,e=this.endPixel_,n=[t,[t[0],e[1]],e,[e[0],t[1]]].map(this.map_.getCoordinateFromPixel,this.map_);n[4]=n[0].slice(),this.geometry_?this.geometry_.setCoordinates([n]):this.geometry_=new rr([n])},e.prototype.getGeometry=function(){return this.geometry_},e}(T),go=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),yo=\"boxstart\",vo=\"boxdrag\",mo=\"boxend\",Eo=function(t){function e(e,n,i){var r=t.call(this,e)||this;return r.coordinate=n,r.mapBrowserEvent=i,r}return go(e,t),e}(R),xo=function(t){function e(e){var n=t.call(this)||this,i=e||{};return n.box_=new _o(i.className||\"ol-dragbox\"),n.minArea_=void 0!==i.minArea?i.minArea:64,n.onBoxEnd_=i.onBoxEnd?i.onBoxEnd:S,n.startPixel_=null,n.condition_=i.condition?i.condition:to,n.boxEndCondition_=i.boxEndCondition?i.boxEndCondition:n.defaultBoxEndCondition,n}return go(e,t),e.prototype.defaultBoxEndCondition=function(t,e,n){var i=n[0]-e[0],r=n[1]-e[1];return i*i+r*r>=this.minArea_},e.prototype.getGeometry=function(){return this.box_.getGeometry()},e.prototype.handleDragEvent=function(t){oo(t)&&(this.box_.setPixels(this.startPixel_,t.pixel),this.dispatchEvent(new Eo(vo,t.coordinate,t)))},e.prototype.handleUpEvent=function(t){return!oo(t)||(this.box_.setMap(null),this.boxEndCondition_(t,this.startPixel_,t.pixel)&&(this.onBoxEnd_(t),this.dispatchEvent(new Eo(mo,t.coordinate,t))),!1)},e.prototype.handleDownEvent=function(t){return!!oo(t)&&(!(!eo(t)||!this.condition_(t))&&(this.startPixel_=t.pixel,this.box_.setMap(t.map),this.box_.setPixels(this.startPixel_,this.startPixel_),this.dispatchEvent(new Eo(yo,t.coordinate,t)),!0))},e}(uo),wo=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();function Oo(){var t,e,n=this.getMap(),i=n.getView(),r=n.getSize(),o=this.getGeometry().getExtent();if(this.out_){var s=i.calculateExtent(r),a=(t=[n.getPixelFromCoordinate(Je(o)),n.getPixelFromCoordinate(sn(o))],Ze(Xe(e),t));!function(t,e){var n=(t[2]-t[0])/2*(e-1),i=(t[3]-t[1])/2*(e-1);t[0]-=n,t[2]+=n,t[1]-=i,t[3]+=i}(s,1/i.getResolutionForExtent(a,r)),o=s}var u=i.getConstrainedResolution(i.getResolutionForExtent(o,r)),l=i.getConstrainedCenter($e(o),u);i.animate({resolution:u,center:l,duration:this.duration_,easing:On})}var To=function(t){function e(e){var n=this,i=e||{},r=i.condition?i.condition:io;return(n=t.call(this,{condition:r,className:i.className||\"ol-dragzoom\",onBoxEnd:Oo})||this).duration_=void 0!==i.duration?i.duration:200,n.out_=void 0!==i.out&&i.out,n}return wo(e,t),e}(xo),bo={LEFT:37,UP:38,RIGHT:39,DOWN:40},Co=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();function So(t){var e=!1;if(t.type==F.KEYDOWN){var n=t.originalEvent.keyCode;if(this.condition_(t)&&(n==bo.DOWN||n==bo.LEFT||n==bo.RIGHT||n==bo.UP)){var i=t.map.getView(),r=i.getResolution()*this.pixelDelta_,o=0,s=0;n==bo.DOWN?s=-r:n==bo.LEFT?o=-r:n==bo.RIGHT?o=r:s=r;var a=[o,s];xn(a,i.getRotation()),function(t,e,n){var i=t.getCenter();if(i){var r=[i[0]+e[0],i[1]+e[1]];t.animate_({duration:void 0!==n?n:250,easing:bn,center:t.getConstrainedCenter(r)})}}(i,a,this.duration_),t.preventDefault(),e=!0}}return!e}var Ro=function(t){function e(e){var n=t.call(this,{handleEvent:So})||this,i=e||{};return n.defaultCondition_=function(t){return no(t)&&ro(t)},n.condition_=void 0!==i.condition?i.condition:n.defaultCondition_,n.duration_=void 0!==i.duration?i.duration:100,n.pixelDelta_=void 0!==i.pixelDelta?i.pixelDelta:128,n}return Co(e,t),e}(Vr),Io=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();function Po(t){var e=!1;if(t.type==F.KEYDOWN||t.type==F.KEYPRESS){var n=t.originalEvent.charCode;if(this.condition_(t)&&(n==\"+\".charCodeAt(0)||n==\"-\".charCodeAt(0))){var i=t.map,r=n==\"+\".charCodeAt(0)?this.delta_:-this.delta_;Zr(i.getView(),r,void 0,this.duration_),t.preventDefault(),e=!0}}return!e}var Fo=function(t){function e(e){var n=t.call(this,{handleEvent:Po})||this,i=e||{};return n.condition_=i.condition?i.condition:ro,n.delta_=i.delta?i.delta:1,n.duration_=void 0!==i.duration?i.duration:100,n}return Io(e,t),e}(Vr),Lo=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Mo=\"trackpad\",Ao=\"wheel\",Do=function(t){function e(e){var n=this,i=e||{};return(n=t.call(this,i)||this).totalDelta_=0,n.lastDelta_=0,n.maxDelta_=void 0!==i.maxDelta?i.maxDelta:1,n.duration_=void 0!==i.duration?i.duration:250,n.timeout_=void 0!==i.timeout?i.timeout:80,n.useAnchor_=void 0===i.useAnchor||i.useAnchor,n.condition_=i.condition?i.condition:to,n.lastAnchor_=null,n.startTime_=void 0,n.timeoutId_,n.mode_=void 0,n.trackpadEventGap_=400,n.trackpadTimeoutId_,n.trackpadDeltaPerZoom_=300,n}return Lo(e,t),e.prototype.endInteraction_=function(){this.trackpadTimeoutId_=void 0,this.getMap().getView().endInteraction(void 0,Math.sign(this.lastDelta_),this.lastAnchor_)},e.prototype.handleEvent=function(t){if(!this.condition_(t))return!0;var e=t.type;if(e!==F.WHEEL&&e!==F.MOUSEWHEEL)return!0;t.preventDefault();var n,i=t.map,r=t.originalEvent;if(this.useAnchor_&&(this.lastAnchor_=t.coordinate),t.type==F.WHEEL?(n=r.deltaY,H&&r.deltaMode===WheelEvent.DOM_DELTA_PIXEL&&(n/=$),r.deltaMode===WheelEvent.DOM_DELTA_LINE&&(n*=40)):t.type==F.MOUSEWHEEL&&(n=-r.wheelDeltaY,q&&(n/=3)),0===n)return!1;this.lastDelta_=n;var o=Date.now();if(void 0===this.startTime_&&(this.startTime_=o),(!this.mode_||o-this.startTime_>this.trackpadEventGap_)&&(this.mode_=Math.abs(n)<4?Mo:Ao),this.mode_===Mo){var s=i.getView();return this.trackpadTimeoutId_?clearTimeout(this.trackpadTimeoutId_):s.beginInteraction(),this.trackpadTimeoutId_=setTimeout(this.endInteraction_.bind(this),this.trackpadEventGap_),s.adjustZoom(-n/this.trackpadDeltaPerZoom_,this.lastAnchor_),this.startTime_=o,!1}this.totalDelta_+=n;var a=Math.max(this.timeout_-(o-this.startTime_),0);return clearTimeout(this.timeoutId_),this.timeoutId_=setTimeout(this.handleWheelZoom_.bind(this,i),a),!1},e.prototype.handleWheelZoom_=function(t){var e=t.getView();e.getAnimating()&&e.cancelAnimations(),Zr(e,-we(this.totalDelta_,-this.maxDelta_,this.maxDelta_),this.lastAnchor_,this.duration_),this.mode_=void 0,this.totalDelta_=0,this.lastAnchor_=null,this.startTime_=void 0,this.timeoutId_=void 0},e.prototype.setMouseAnchor=function(t){this.useAnchor_=t,t||(this.lastAnchor_=null)},e}(Vr),ko=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),No=function(t){function e(e){var n=this,i=e||{},r=i;return r.stopDown||(r.stopDown=C),(n=t.call(this,r)||this).anchor_=null,n.lastAngle_=void 0,n.rotating_=!1,n.rotationDelta_=0,n.threshold_=void 0!==i.threshold?i.threshold:.3,n.duration_=void 0!==i.duration?i.duration:250,n}return ko(e,t),e.prototype.handleDragEvent=function(t){var e=0,n=this.targetPointers[0],i=this.targetPointers[1],r=Math.atan2(i.clientY-n.clientY,i.clientX-n.clientX);if(void 0!==this.lastAngle_){var o=r-this.lastAngle_;this.rotationDelta_+=o,!this.rotating_&&Math.abs(this.rotationDelta_)>this.threshold_&&(this.rotating_=!0),e=o}this.lastAngle_=r;var s=t.map,a=s.getView();if(a.getConstraints().rotation!==fn){var u=s.getViewport().getBoundingClientRect(),l=ao(this.targetPointers);l[0]-=u.left,l[1]-=u.top,this.anchor_=s.getCoordinateFromPixel(l),this.rotating_&&(s.render(),a.adjustRotation(e,this.anchor_))}},e.prototype.handleUpEvent=function(t){return!(this.targetPointers.length<2)||(t.map.getView().endInteraction(this.duration_),!1)},e.prototype.handleDownEvent=function(t){if(this.targetPointers.length>=2){var e=t.map;return this.anchor_=null,this.lastAngle_=void 0,this.rotating_=!1,this.rotationDelta_=0,this.handlingDownUpSequence||e.getView().beginInteraction(),!0}return!1},e}(uo),Go=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),jo=function(t){function e(e){var n=this,i=e||{},r=i;return r.stopDown||(r.stopDown=C),(n=t.call(this,r)||this).anchor_=null,n.duration_=void 0!==i.duration?i.duration:400,n.lastDistance_=void 0,n.lastScaleDelta_=1,n}return Go(e,t),e.prototype.handleDragEvent=function(t){var e=1,n=this.targetPointers[0],i=this.targetPointers[1],r=n.clientX-i.clientX,o=n.clientY-i.clientY,s=Math.sqrt(r*r+o*o);void 0!==this.lastDistance_&&(e=this.lastDistance_/s),this.lastDistance_=s;var a=t.map,u=a.getView();1!=e&&(this.lastScaleDelta_=e);var l=a.getViewport().getBoundingClientRect(),h=ao(this.targetPointers);h[0]-=l.left,h[1]-=l.top,this.anchor_=a.getCoordinateFromPixel(h),a.render(),u.adjustResolution(e,this.anchor_)},e.prototype.handleUpEvent=function(t){if(this.targetPointers.length<2){var e=t.map.getView(),n=this.lastScaleDelta_>1?1:-1;return e.endInteraction(this.duration_,n),!1}return!0},e.prototype.handleDownEvent=function(t){if(this.targetPointers.length>=2){var e=t.map;return this.anchor_=null,this.lastDistance_=void 0,this.lastScaleDelta_=1,this.handlingDownUpSequence||e.getView().beginInteraction(),!0}return!1},e}(uo);var zo=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Yo=function(t){function e(e,n,i,r,o){var s=t.call(this,e)||this;return s.inversePixelTransform=n,s.frameState=i,s.context=r,s.glContext=o,s}return zo(e,t),e}(R),Xo=/^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i,Uo=/^([a-z]*)$/i;var Ko=function(){var t={},e=0;return function(n){var i;if(t.hasOwnProperty(n))i=t[n];else{if(e>=1024){var r=0;for(var o in t)0==(3&r++)&&(delete t[o],--e)}i=function(t){var e,n,i,r,o;Uo.exec(t)&&(t=function(t){var e=document.createElement(\"div\");if(e.style.color=t,\"\"!==e.style.color){document.body.appendChild(e);var n=getComputedStyle(e).color;return document.body.removeChild(e),n}return\"\"}(t));if(Xo.exec(t)){var s=t.length-1,a=void 0;a=s<=4?1:2;var u=4===s||8===s;e=parseInt(t.substr(1+0*a,a),16),n=parseInt(t.substr(1+1*a,a),16),i=parseInt(t.substr(1+2*a,a),16),r=u?parseInt(t.substr(1+3*a,a),16):255,1==a&&(e=(e<<4)+e,n=(n<<4)+n,i=(i<<4)+i,u&&(r=(r<<4)+r)),o=[e,n,i,r/255]}else 0==t.indexOf(\"rgba(\")?Bo(o=t.slice(5,-1).split(\",\").map(Number)):0==t.indexOf(\"rgb(\")?((o=t.slice(4,-1).split(\",\").map(Number)).push(1),Bo(o)):ge(!1,14);return o}(n),t[n]=i,++e}return i}}();function Wo(t){return Array.isArray(t)?t:Ko(t)}function Bo(t){return t[0]=we(t[0]+.5|0,0,255),t[1]=we(t[1]+.5|0,0,255),t[2]=we(t[2]+.5|0,0,255),t[3]=we(t[3],0,1),t}function Zo(t){var e=t[0];e!=(0|e)&&(e=e+.5|0);var n=t[1];n!=(0|n)&&(n=n+.5|0);var i=t[2];return i!=(0|i)&&(i=i+.5|0),\"rgba(\"+e+\",\"+n+\",\"+i+\",\"+(void 0===t[3]?1:t[3])+\")\"}var Vo=function(){function t(){this.cache_={},this.cacheSize_=0,this.maxCacheSize_=32}return t.prototype.clear=function(){this.cache_={},this.cacheSize_=0},t.prototype.canExpireCache=function(){return this.cacheSize_>this.maxCacheSize_},t.prototype.expire=function(){if(this.canExpireCache()){var t=0;for(var e in this.cache_){var n=this.cache_[e];0!=(3&t++)||n.hasListener()||(delete this.cache_[e],--this.cacheSize_)}}},t.prototype.get=function(t,e,n){var i=Ho(t,e,n);return i in this.cache_?this.cache_[i]:null},t.prototype.set=function(t,e,n,i){var r=Ho(t,e,n);this.cache_[r]=i,++this.cacheSize_},t.prototype.setSize=function(t){this.maxCacheSize_=t,this.expire()},t}();function Ho(t,e,n){return e+\":\"+t+\":\"+(n?function(t){return\"string\"==typeof t?t:Zo(t)}(n):\"null\")}var qo=new Vo,Jo=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();function Qo(t,e){qo.expire()}var $o=function(t){function e(e){var n=t.call(this)||this;return n.map_=e,n.layerRenderers_={},n.layerRendererListeners_={},n}return Jo(e,t),e.prototype.dispatchRenderEvent=function(t,e){i()},e.prototype.calculateMatrices2D=function(t){var e=t.viewState,n=t.coordinateToPixelTransform,i=t.pixelToCoordinateTransform;di(n,t.size[0]/2,t.size[1]/2,1/e.resolution,-1/e.resolution,-e.rotation,-e.center[0],-e.center[1]),_i(i,n)},e.prototype.removeLayerRenderers=function(){for(var t in this.layerRenderers_)this.removeLayerRendererByKey_(t).dispose()},e.prototype.forEachFeatureAtCoordinate=function(t,e,n,i,r,s,a){var u,l=e.viewState,h=l.resolution;function c(t,n,s){if(!(o(n)in e.skippedFeatureUids)||t)return i.call(r,n,t?s:null)}var p=l.projection,f=t;if(p.canWrapX()){var d=p.getExtent(),_=an(d),g=t[0];if(g<d[0]||g>d[2])f=[g+_*Math.ceil((d[0]-g)/_),t[1]]}var y,v=e.layerStatesArray;for(y=v.length-1;y>=0;--y){var m=v[y],E=m.layer;if(Ar(m,h)&&s.call(a,E)){var x=this.getLayerRenderer(E),w=E.getSource();if(x&&w){var O=c.bind(null,m.managed);u=x.forEachFeatureAtCoordinate(w.getWrapX()?f:t,e,n,O)}if(u)return u}}},e.prototype.forEachLayerAtPixel=function(t,e,n,r,o){return i()},e.prototype.hasFeatureAtCoordinate=function(t,e,n,i,r){return void 0!==this.forEachFeatureAtCoordinate(t,e,n,b,this,i,r)},e.prototype.getLayerRenderer=function(t){var e=o(t);if(e in this.layerRenderers_)return this.layerRenderers_[e];var n=t.getRenderer();return n?(this.layerRenderers_[e]=n,this.layerRendererListeners_[e]=E(n,F.CHANGE,this.handleLayerRendererChange_,this),n):null},e.prototype.getLayerRenderers=function(){return this.layerRenderers_},e.prototype.getMap=function(){return this.map_},e.prototype.handleLayerRendererChange_=function(){this.map_.render()},e.prototype.removeLayerRendererByKey_=function(t){var e=this.layerRenderers_[t];return delete this.layerRenderers_[t],O(this.layerRendererListeners_[t]),delete this.layerRendererListeners_[t],e},e.prototype.renderFrame=function(t){i()},e.prototype.scheduleExpireIconCache=function(t){qo.canExpireCache()&&t.postRenderFunctions.push(Qo)},e.prototype.scheduleRemoveUnusedLayerRenderers=function(t){var e=t.layerStatesArray.reduce(function(t,e){return t[o(e.layer)]=e,t},{}),n=function(n){n in e||t.postRenderFunctions.push(function(){this.removeLayerRendererByKey_(n).dispose()}.bind(i))},i=this;for(var r in this.layerRenderers_)n(r)},e}(T),ts=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),es=function(t){function e(e){var n=t.call(this,e)||this;n.element_=document.createElement(\"div\");var i=n.element_.style;i.position=\"absolute\",i.width=\"100%\",i.height=\"100%\",i.zIndex=\"0\",n.element_.className=Ir+\" ol-layers\";var r=e.getViewport();return r.insertBefore(n.element_,r.firstChild||null),n.children_=[],n.renderedVisible_=!0,n}return ts(e,t),e.prototype.dispatchRenderEvent=function(t,e){var n=this.getMap();if(n.hasListener(t)){var i=new Yo(t,void 0,e);n.dispatchEvent(i)}},e.prototype.renderFrame=function(t){if(t){this.calculateMatrices2D(t),this.dispatchRenderEvent(pe,t);var e=t.layerStatesArray,n=t.viewState.resolution;this.children_.length=0;for(var i=0,r=e.length;i<r;++i){var o=e[i];if(Ar(o,n)&&o.sourceState==yr.READY){var s=o.layer.render(t);if(s){var a=o.zIndex;a!==s.style.zIndex&&(s.style.zIndex=a),this.children_.push(s)}}}!function(t,e){for(var n=t.childNodes,i=0;;++i){var r=n[i],o=e[i];if(!r&&!o)break;r!==o&&(r?o?t.insertBefore(o,r):(t.removeChild(r),--i):t.appendChild(o))}}(this.element_,this.children_),this.dispatchRenderEvent(fe,t),this.renderedVisible_||(this.element_.style.display=\"\",this.renderedVisible_=!0),this.scheduleRemoveUnusedLayerRenderers(t),this.scheduleExpireIconCache(t)}else this.renderedVisible_&&(this.element_.style.display=\"none\",this.renderedVisible_=!1)},e.prototype.forEachLayerAtPixel=function(t,e,n,i,r){for(var o=e.viewState.resolution,s=e.layerStatesArray,a=s.length-1;a>=0;--a){var u=s[a],l=u.layer;if(Ar(u,o)&&r(l)){var h=this.getLayerRenderer(l);if(!h)continue;var c=h.getDataAtPixel(t,e,n);if(c){var p=i(l,c);if(p)return p}}}},e}($o),ns=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),is=function(t){function e(e){return(e=p({},e)).controls||(e.controls=function(t){var e=t||{},n=new U;return(void 0===e.zoom||e.zoom)&&n.push(new Ur(e.zoomOptions)),(void 0===e.rotate||e.rotate)&&n.push(new Yr(e.rotateOptions)),(void 0===e.attribution||e.attribution)&&n.push(new Gr(e.attributionOptions)),n}()),e.interactions||(e.interactions=function(t){var e=t||{},n=new U,i=new Kr(-.005,.05,100);return(void 0===e.altShiftDragRotate||e.altShiftDragRotate)&&n.push(new po),(void 0===e.doubleClickZoom||e.doubleClickZoom)&&n.push(new Jr({delta:e.zoomDelta,duration:e.zoomDuration})),(void 0===e.dragPan||e.dragPan)&&n.push(new ho({condition:e.onFocusOnly?$r:void 0,kinetic:i})),(void 0===e.pinchRotate||e.pinchRotate)&&n.push(new No),(void 0===e.pinchZoom||e.pinchZoom)&&n.push(new jo({duration:e.zoomDuration})),(void 0===e.keyboard||e.keyboard)&&(n.push(new Ro),n.push(new Fo({delta:e.zoomDelta,duration:e.zoomDuration}))),(void 0===e.mouseWheelZoom||e.mouseWheelZoom)&&n.push(new Do({condition:e.onFocusOnly?$r:void 0,duration:e.zoomDuration})),(void 0===e.shiftDragZoom||e.shiftDragZoom)&&n.push(new To({duration:e.zoomDuration})),n}()),t.call(this,e)||this}return ns(e,t),e.prototype.createRenderer=function(){return new es(this)},e}(Or),rs=\"preload\",os=\"useInterimTilesOnError\",ss=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),as=function(t){function e(e){var n=this,i=e||{},r=p({},i);return delete r.preload,delete r.useInterimTilesOnError,(n=t.call(this,r)||this).setPreload(void 0!==i.preload?i.preload:0),n.setUseInterimTilesOnError(void 0===i.useInterimTilesOnError||i.useInterimTilesOnError),n}return ss(e,t),e.prototype.getPreload=function(){return this.get(rs)},e.prototype.setPreload=function(t){this.set(rs,t)},e.prototype.getUseInterimTilesOnError=function(){return this.get(os)},e.prototype.setUseInterimTilesOnError=function(t){this.set(os,t)},e}(Dr),us=function(){function t(t,e,n,i){this.minX=t,this.maxX=e,this.minY=n,this.maxY=i}return t.prototype.contains=function(t){return this.containsXY(t[1],t[2])},t.prototype.containsTileRange=function(t){return this.minX<=t.minX&&t.maxX<=this.maxX&&this.minY<=t.minY&&t.maxY<=this.maxY},t.prototype.containsXY=function(t,e){return this.minX<=t&&t<=this.maxX&&this.minY<=e&&e<=this.maxY},t.prototype.equals=function(t){return this.minX==t.minX&&this.minY==t.minY&&this.maxX==t.maxX&&this.maxY==t.maxY},t.prototype.extend=function(t){t.minX<this.minX&&(this.minX=t.minX),t.maxX>this.maxX&&(this.maxX=t.maxX),t.minY<this.minY&&(this.minY=t.minY),t.maxY>this.maxY&&(this.maxY=t.maxY)},t.prototype.getHeight=function(){return this.maxY-this.minY+1},t.prototype.getSize=function(){return[this.getWidth(),this.getHeight()]},t.prototype.getWidth=function(){return this.maxX-this.minX+1},t.prototype.intersects=function(t){return this.minX<=t.maxX&&this.maxX>=t.minX&&this.minY<=t.maxY&&this.maxY>=t.minY},t}();function ls(t,e,n,i,r){return void 0!==r?(r.minX=t,r.maxX=e,r.minY=n,r.maxY=i,r):new us(t,e,n,i)}var hs=us,cs=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),ps=function(t){function e(e){var n=t.call(this)||this;return n.highWaterMark=void 0!==e?e:2048,n.count_=0,n.entries_={},n.oldest_=null,n.newest_=null,n}return cs(e,t),e.prototype.canExpireCache=function(){return this.getCount()>this.highWaterMark},e.prototype.clear=function(){this.count_=0,this.entries_={},this.oldest_=null,this.newest_=null,this.dispatchEvent(F.CLEAR)},e.prototype.containsKey=function(t){return this.entries_.hasOwnProperty(t)},e.prototype.forEach=function(t){for(var e=this.oldest_;e;)t(e.value_,e.key_,this),e=e.newer},e.prototype.get=function(t,e){var n=this.entries_[t];return ge(void 0!==n,15),n===this.newest_?n.value_:(n===this.oldest_?(this.oldest_=this.oldest_.newer,this.oldest_.older=null):(n.newer.older=n.older,n.older.newer=n.newer),n.newer=null,n.older=this.newest_,this.newest_.newer=n,this.newest_=n,n.value_)},e.prototype.remove=function(t){var e=this.entries_[t];return ge(void 0!==e,15),e===this.newest_?(this.newest_=e.older,this.newest_&&(this.newest_.newer=null)):e===this.oldest_?(this.oldest_=e.newer,this.oldest_&&(this.oldest_.older=null)):(e.newer.older=e.older,e.older.newer=e.newer),delete this.entries_[t],--this.count_,e.value_},e.prototype.getCount=function(){return this.count_},e.prototype.getKeys=function(){var t,e=new Array(this.count_),n=0;for(t=this.newest_;t;t=t.older)e[n++]=t.key_;return e},e.prototype.getValues=function(){var t,e=new Array(this.count_),n=0;for(t=this.newest_;t;t=t.older)e[n++]=t.value_;return e},e.prototype.peekLast=function(){return this.oldest_.value_},e.prototype.peekLastKey=function(){return this.oldest_.key_},e.prototype.peekFirstKey=function(){return this.newest_.key_},e.prototype.pop=function(){var t=this.oldest_;return delete this.entries_[t.key_],t.newer&&(t.newer.older=null),this.oldest_=t.newer,this.oldest_||(this.newest_=null),--this.count_,t.value_},e.prototype.replace=function(t,e){this.get(t),this.entries_[t].value_=e},e.prototype.set=function(t,e){ge(!(t in this.entries_),16);var n={key_:t,newer:null,older:this.newest_,value_:e};this.newest_?this.newest_.newer=n:this.oldest_=n,this.newest_=n,this.entries_[t]=n,++this.count_},e.prototype.setSize=function(t){this.highWaterMark=t},e}(P),fs=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),ds=function(t){function e(e){var n=t.call(this,e)||this;return n.consumers={},n}return fs(e,t),e.prototype.clear=function(){t.prototype.clear.call(this),this.consumers={}},e.prototype.get=function(e,n){var i=t.prototype.get.call(this,e),r=o(n);return r in this.consumers||(this.consumers[r]={}),this.consumers[r][e]=!0,i},e.prototype.prune=function(){t:for(;this.canExpireCache();){var t=this.peekLastKey();for(var e in this.consumers)if(t in this.consumers[e])break t;var n=this.pop();for(var e in n.width=n.height=0,this.consumers)delete this.consumers[e][t]}},e.prototype.release=function(t){delete this.consumers[o(t)]},e}(ps),_s=[],gs=[0,0,0,0],ys=new ds,vs={},ms=null,Es={},xs=function(){var t,e,n=60,i=vs,r=\"32px \",o=[\"monospace\",\"serif\"],s=o.length,a=\"wmytzilWMYTZIL@#/&?$%10\";function u(t){for(var n=ws(),i=100;i<=700;i+=300){for(var u=i+\" \",l=!0,h=0;h<s;++h){var c=o[h];if(n.font=u+r+c,e=n.measureText(a).width,t!=c){n.font=u+r+t+\",\"+c;var p=n.measureText(a).width;l=l&&p!=e}}if(l)return!0}return!1}function l(){var e=!0;for(var r in i)i[r]<n&&(u(r)?(i[r]=n,f(Es),ms=null,ys.clear()):(++i[r],e=!1));e&&(clearInterval(t),t=void 0)}return function(e){var r=Lr(e);if(r)for(var o=0,s=r.length;o<s;++o){var a=r[o];a in i||(i[a]=n,u(a)||(i[a]=0,void 0===t&&(t=setInterval(l,32))))}}}();function ws(){return ms||(ms=cr(1,1)),ms}var Os,Ts,bs=(Ts=Es,function(t){var e=Ts[t];return null==e&&(Os||((Os=document.createElement(\"div\")).innerHTML=\"M\",Os.style.margin=Os.style.padding=\"0 !important\",Os.style.position=\"absolute !important\",Os.style.left=\"-99999px !important\"),Os.style.font=t,document.body.appendChild(Os),e=Ts[t]=Os.offsetHeight,document.body.removeChild(Os)),e});function Cs(t,e){var n=ws();return t!=n.font&&(n.font=t),n.measureText(e).width}function Ss(t,e,n){return e in n?n[e]:n[e]=Cs(t,e)}function Rs(t,e,n,i){0!==e&&(t.translate(n,i),t.rotate(e),t.translate(-n,-i))}var Is=[1,0,0,1,0,0];function Ps(t,e,n,i,r,o,s,a,u,l,h){var c;1!=n&&(c=t.globalAlpha,t.globalAlpha=c*n),e&&t.setTransform.apply(t,e),t.drawImage(i,r,o,s,a,u,l,s*h,a*h),c&&(t.globalAlpha=c),e&&t.setTransform.apply(t,Is)}var Fs={IDLE:0,LOADING:1,LOADED:2,ERROR:3},Ls=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Ms=function(t){function e(e){var n=t.call(this)||this;return n.layer_=e,n}return Ls(e,t),e.prototype.prepareFrame=function(t,e){return i()},e.prototype.renderFrame=function(t,e){return i()},e.prototype.loadedTileCallback=function(t,e,n){t[e]||(t[e]={}),t[e][n.tileCoord.toString()]=n},e.prototype.createLoadedTileFinder=function(t,e,n){return function(i,r){var o=this.loadedTileCallback.bind(this,n,i);return t.forEachLoadedTile(e,i,r,o)}.bind(this)},e.prototype.forEachFeatureAtCoordinate=function(t,e,n,i){},e.prototype.getDataAtPixel=function(t,e,n){return i()},e.prototype.getLayer=function(){return this.layer_},e.prototype.handleImageChange_=function(t){t.target.getState()===Fs.LOADED&&this.renderIfReadyAndVisible()},e.prototype.hasFeatureAtCoordinate=function(t,e){return!1},e.prototype.loadImage=function(t){var e=t.getState();return e!=Fs.LOADED&&e!=Fs.ERROR&&E(t,F.CHANGE,this.handleImageChange_,this),e==Fs.IDLE&&(t.load(),e=t.getState()),e==Fs.LOADED},e.prototype.renderIfReadyAndVisible=function(){var t=this.getLayer();t.getVisible()&&t.getSourceState()==yr.READY&&t.changed()},e}(M),As=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Ds=function(t){function e(e){var n=t.call(this,e)||this;n.renderedResolution,n.tempTransform_=[1,0,0,1,0,0],n.pixelTransform_=[1,0,0,1,0,0],n.inversePixelTransform_=[1,0,0,1,0,0],n.context=cr();var i=n.context.canvas;return i.style.position=\"absolute\",i.style.transformOrigin=\"top left\",i.className=n.getLayer().getClassName(),n}return As(e,t),e.prototype.disposeInternal=function(){this.context.canvas.width=this.context.canvas.height=0,t.prototype.disposeInternal.call(this)},e.prototype.clip=function(t,e,n){var i=e.pixelRatio,r=e.size[0]*i/2,o=e.size[1]*i/2,s=e.viewState.rotation,a=on(n),u=sn(n),l=Qe(n),h=Je(n);fi(e.coordinateToPixelTransform,a),fi(e.coordinateToPixelTransform,u),fi(e.coordinateToPixelTransform,l),fi(e.coordinateToPixelTransform,h),t.save(),Rs(t,-s,r,o),t.beginPath(),t.moveTo(a[0]*i,a[1]*i),t.lineTo(u[0]*i,u[1]*i),t.lineTo(l[0]*i,l[1]*i),t.lineTo(h[0]*i,h[1]*i),t.clip(),Rs(t,s,r,o)},e.prototype.clipUnrotated=function(t,e,n){var i=on(n),r=sn(n),o=Qe(n),s=Je(n);fi(e.coordinateToPixelTransform,i),fi(e.coordinateToPixelTransform,r),fi(e.coordinateToPixelTransform,o),fi(e.coordinateToPixelTransform,s);var a=this.inversePixelTransform_;fi(a,i),fi(a,r),fi(a,o),fi(a,s),t.save(),t.beginPath(),t.moveTo(Math.round(i[0]),Math.round(i[1])),t.lineTo(Math.round(r[0]),Math.round(r[1])),t.lineTo(Math.round(o[0]),Math.round(o[1])),t.lineTo(Math.round(s[0]),Math.round(s[1])),t.clip()},e.prototype.dispatchRenderEvent_=function(t,e,n){var i=this.getLayer();if(i.hasListener(t)){var r=new Yo(t,this.inversePixelTransform_,n,e,null);i.dispatchEvent(r)}},e.prototype.preRender=function(t,e){this.dispatchRenderEvent_(he,t,e)},e.prototype.postRender=function(t,e){this.dispatchRenderEvent_(ce,t,e)},e.prototype.getRenderTransform=function(t,e,n,i){var r=t.viewState,o=e/2,s=n/2,a=t.pixelRatio/r.resolution,u=-a,l=-r.center[0]+i,h=-r.center[1];return di(this.tempTransform_,o,s,a,u,-r.rotation,l,h)},e.prototype.getDataAtPixel=function(t,e,n){var i,r=fi(this.inversePixelTransform_,t.slice()),o=this.context;try{i=o.getImageData(Math.round(r[0]),Math.round(r[1]),1,1).data}catch(t){return\"SecurityError\"===t.name?new Uint8Array:i}return 0===i[3]?null:i},e}(Ms),ks=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Ns=function(t){function e(e){var n=t.call(this,e)||this;return n.extentChanged=!0,n.renderedExtent_=null,n.renderedRevision,n.renderedTiles=[],n.newTiles_=!1,n.tmpExtent=[1/0,1/0,-1/0,-1/0],n.tmpTileRange_=new hs(0,0,0,0),n.zDirection=0,n}return ks(e,t),e.prototype.isDrawableTile=function(t){var e=this.getLayer(),n=t.getState(),i=e.getUseInterimTilesOnError();return n==_e.LOADED||n==_e.EMPTY||n==_e.ERROR&&!i},e.prototype.getTile=function(t,e,n,i){var r=i.pixelRatio,o=i.viewState.projection,s=this.getLayer(),a=s.getSource().getTile(t,e,n,r,o);return a.getState()==_e.ERROR&&(s.getUseInterimTilesOnError()?s.getPreload()>0&&(this.newTiles_=!0):a.setState(_e.LOADED)),this.isDrawableTile(a)||(a=a.getInterimTile()),a},e.prototype.loadedTileCallback=function(e,n,i){return!!this.isDrawableTile(i)&&t.prototype.loadedTileCallback.call(this,e,n,i)},e.prototype.prepareFrame=function(t,e){return!0},e.prototype.renderFrame=function(t,e){var n=this.context,i=t.viewState,r=i.projection,s=i.resolution,a=i.center,u=i.rotation,l=t.pixelRatio,h=this.getLayer(),c=h.getSource(),p=c.getRevision(),f=c.getTileGridForProjection(r),d=void 0===c.zDirection?this.zDirection:c.zDirection,_=f.getZForResolution(s,d),g=f.getResolution(_),y=t.extent;e.extent&&(y=rn(y,e.extent));var v=c.getTilePixelRatio(l),m=Math.round(t.size[0]*v),E=Math.round(t.size[1]*v);u&&(m=E=Math.round(Math.sqrt(m*m+E*E)));var x=g*m/2/v,w=g*E/2/v,O=[a[0]-x,a[1]-w,a[0]+x,a[1]+w],T=f.getTileRangeForExtentAndZ(y,_),b={};b[_]={};var C=this.createLoadedTileFinder(c,r,b),S=this.tmpExtent,R=this.tmpTileRange_;this.newTiles_=!1;for(var I=T.minX;I<=T.maxX;++I)for(var P=T.minY;P<=T.maxY;++P){var F=this.getTile(_,I,P,t);if(this.isDrawableTile(F)){var L=o(this);if(F.getState()==_e.LOADED){b[_][F.tileCoord.toString()]=F;var M=F.inTransition(L);this.newTiles_||!M&&-1!==this.renderedTiles.indexOf(F)||(this.newTiles_=!0)}if(1===F.getAlpha(L,t.time))continue}var A=f.getTileCoordChildTileRange(F.tileCoord,R,S),D=!1;A&&(D=C(_+1,A)),D||f.forEachTileCoordParentTileRange(F.tileCoord,C,R,S)}var k=n.canvas,N=g/s;di(this.pixelTransform_,t.size[0]/2,t.size[1]/2,1/v,1/v,u,-m/2,-E/2),_i(this.inversePixelTransform_,this.pixelTransform_),di(this.tempTransform_,m/2,E/2,N,N,0,-m/2,-E/2),k.width!=m||k.height!=E?(k.width=m,k.height=E):n.clearRect(0,0,m,E),e.extent&&this.clipUnrotated(n,t,e.extent),this.preRender(n,t),this.renderedTiles.length=0;var G=Object.keys(b).map(Number);G.sort(function(t,e){return t===_?1:e===_?-1:t>e?1:t<e?-1:0});for(var j=0,z=G.length;j<z;++j){var Y=G[j],X=c.getTilePixelSize(Y,l,r),U=f.getResolution(Y)/g,K=X[0]*U*N,W=X[1]*U*N,B=f.getTileCoordForCoordAndZ(on(O),Y),Z=f.getTileCoordExtent(B),V=fi(this.tempTransform_,[v*(Z[0]-O[0])/g,v*(O[3]-Z[3])/g]),H=v*c.getGutterForProjection(r),q=b[Y];for(var J in q){var Q=(F=q[J]).tileCoord,$=V[0]-(B[1]-Q[1])*K,tt=Math.round($+K),et=V[1]-(B[2]-Q[2])*W,nt=Math.round(et+W),it=tt-(I=Math.round($)),rt=nt-(P=Math.round(et));this.drawTileImage(F,t,I,P,it,rt,H,_===Y),this.renderedTiles.push(F),this.updateUsedTiles(t.usedTiles,c,F)}}this.renderedRevision=p,this.renderedResolution=g,this.extentChanged=!this.renderedExtent_||!Ke(this.renderedExtent_,O),this.renderedExtent_=O,this.manageTilePyramid(t,c,f,l,r,y,_,h.getPreload()),this.updateCacheSize_(t,c),this.scheduleExpireCache(t,c),this.postRender(n,t),e.extent&&n.restore();var ot=e.opacity;ot!==parseFloat(k.style.opacity)&&(k.style.opacity=ot);var st=gi(this.pixelTransform_);return st!==k.style.transform&&(k.style.transform=st),k},e.prototype.drawTileImage=function(t,e,n,i,r,s,a,u){var l=this.getTileImage(t);if(l){var h=o(this),c=u?t.getAlpha(h,e.time):1,p=this.getLayer().getSource();1!==c||p.getOpaque(e.viewState.projection)||this.context.clearRect(n,i,r,s);var f=c!==this.context.globalAlpha;f&&(this.context.save(),this.context.globalAlpha=c),this.context.drawImage(l,a,a,l.width-2*a,l.height-2*a,n,i,r,s),f&&this.context.restore(),1!==c?e.animate=!0:u&&t.endTransition(h)}},e.prototype.getImage=function(){var t=this.context;return t?t.canvas:null},e.prototype.getTileImage=function(t){return t.getImage()},e.prototype.scheduleExpireCache=function(t,e){if(e.canExpireCache()){var n=function(t,e,n){var i=o(t);i in n.usedTiles&&t.expireCache(n.viewState.projection,n.usedTiles[i])}.bind(null,e);t.postRenderFunctions.push(n)}},e.prototype.updateUsedTiles=function(t,e,n){var i=o(e);i in t||(t[i]={}),t[i][n.getKey()]=!0},e.prototype.updateCacheSize_=function(t,e){var n=o(e),i=0;n in t.usedTiles&&(i+=Object.keys(t.usedTiles[n]).length),n in t.wantedTiles&&(i+=Object.keys(t.wantedTiles[n]).length);var r=e.tileCache;r.highWaterMark<i&&(r.highWaterMark=i)},e.prototype.manageTilePyramid=function(t,e,n,i,r,s,a,u,l){var h=o(e);h in t.wantedTiles||(t.wantedTiles[h]={});var c,p,f,d,_,g,y=t.wantedTiles[h],v=t.tileQueue;for(g=n.getMinZoom();g<=a;++g)for(p=n.getTileRangeForExtentAndZ(s,g,p),f=n.getResolution(g),d=p.minX;d<=p.maxX;++d)for(_=p.minY;_<=p.maxY;++_)a-g<=u?((c=e.getTile(g,d,_,i,r)).getState()==_e.IDLE&&(y[c.getKey()]=!0,v.isKeyQueued(c.getKey())||v.enqueue([c,h,n.getTileCoordCenter(c.tileCoord),f])),void 0!==l&&l(c)):e.useTile(g,d,_,r)},e}(Ds);Ns.prototype.getLayer;var Gs=Ns,js=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),zs=function(t){function e(e){return t.call(this,e)||this}return js(e,t),e.prototype.createRenderer=function(){return new Gs(this)},e}(as);function Ys(t){return Array.isArray(t)?Zo(t):t}var Xs=function(){function t(t){this.opacity_=t.opacity,this.rotateWithView_=t.rotateWithView,this.rotation_=t.rotation,this.scale_=t.scale}return t.prototype.clone=function(){return new t({opacity:this.getOpacity(),scale:this.getScale(),rotation:this.getRotation(),rotateWithView:this.getRotateWithView()})},t.prototype.getOpacity=function(){return this.opacity_},t.prototype.getRotateWithView=function(){return this.rotateWithView_},t.prototype.getRotation=function(){return this.rotation_},t.prototype.getScale=function(){return this.scale_},t.prototype.getAnchor=function(){return i()},t.prototype.getImage=function(t){return i()},t.prototype.getHitDetectionImage=function(t){return i()},t.prototype.getImageState=function(){return i()},t.prototype.getImageSize=function(){return i()},t.prototype.getHitDetectionImageSize=function(){return i()},t.prototype.getOrigin=function(){return i()},t.prototype.getSize=function(){return i()},t.prototype.setOpacity=function(t){this.opacity_=t},t.prototype.setRotateWithView=function(t){this.rotateWithView_=t},t.prototype.setRotation=function(t){this.rotation_=t},t.prototype.setScale=function(t){this.scale_=t},t.prototype.listenImageChange=function(t,e){return i()},t.prototype.load=function(){i()},t.prototype.unlistenImageChange=function(t,e){i()},t}(),Us=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Ks=function(t){function e(e){var n=this,i=void 0!==e.rotateWithView&&e.rotateWithView;return(n=t.call(this,{opacity:1,rotateWithView:i,rotation:void 0!==e.rotation?e.rotation:0,scale:1})||this).canvas_=null,n.hitDetectionCanvas_=null,n.fill_=void 0!==e.fill?e.fill:null,n.origin_=[0,0],n.points_=e.points,n.radius_=void 0!==e.radius?e.radius:e.radius1,n.radius2_=e.radius2,n.angle_=void 0!==e.angle?e.angle:0,n.stroke_=void 0!==e.stroke?e.stroke:null,n.anchor_=null,n.size_=null,n.imageSize_=null,n.hitDetectionImageSize_=null,n.render_(),n}return Us(e,t),e.prototype.clone=function(){var t=new e({fill:this.getFill()?this.getFill().clone():void 0,points:this.getPoints(),radius:this.getRadius(),radius2:this.getRadius2(),angle:this.getAngle(),stroke:this.getStroke()?this.getStroke().clone():void 0,rotation:this.getRotation(),rotateWithView:this.getRotateWithView()});return t.setOpacity(this.getOpacity()),t.setScale(this.getScale()),t},e.prototype.getAnchor=function(){return this.anchor_},e.prototype.getAngle=function(){return this.angle_},e.prototype.getFill=function(){return this.fill_},e.prototype.getHitDetectionImage=function(t){return this.hitDetectionCanvas_},e.prototype.getImage=function(t){return this.canvas_},e.prototype.getImageSize=function(){return this.imageSize_},e.prototype.getHitDetectionImageSize=function(){return this.hitDetectionImageSize_},e.prototype.getImageState=function(){return Fs.LOADED},e.prototype.getOrigin=function(){return this.origin_},e.prototype.getPoints=function(){return this.points_},e.prototype.getRadius=function(){return this.radius_},e.prototype.getRadius2=function(){return this.radius2_},e.prototype.getSize=function(){return this.size_},e.prototype.getStroke=function(){return this.stroke_},e.prototype.listenImageChange=function(t,e){},e.prototype.load=function(){},e.prototype.unlistenImageChange=function(t,e){},e.prototype.render_=function(){var t,e=\"\",n=\"\",i=0,r=null,o=0,s=0;this.stroke_&&(null===(t=this.stroke_.getColor())&&(t=\"#000\"),t=Ys(t),void 0===(s=this.stroke_.getWidth())&&(s=1),r=this.stroke_.getLineDash(),o=this.stroke_.getLineDashOffset(),void 0===(n=this.stroke_.getLineJoin())&&(n=\"round\"),void 0===(e=this.stroke_.getLineCap())&&(e=\"round\"),void 0===(i=this.stroke_.getMiterLimit())&&(i=10));var a=2*(this.radius_+s)+1,u={strokeStyle:t,strokeWidth:s,size:a,lineCap:e,lineDash:r,lineDashOffset:o,lineJoin:n,miterLimit:i},l=cr(a,a);this.canvas_=l.canvas;var h=a=this.canvas_.width;this.draw_(u,l,0,0),this.createHitDetectionCanvas_(u),this.anchor_=[a/2,a/2],this.size_=[a,a],this.imageSize_=[h,h]},e.prototype.draw_=function(t,e,n,i){var r,o,s;e.setTransform(1,0,0,1,0,0),e.translate(n,i),e.beginPath();var a=this.points_;if(a===1/0)e.arc(t.size/2,t.size/2,this.radius_,0,2*Math.PI,!0);else{var u=void 0!==this.radius2_?this.radius2_:this.radius_;for(u!==this.radius_&&(a*=2),r=0;r<=a;r++)o=2*r*Math.PI/a-Math.PI/2+this.angle_,s=r%2==0?this.radius_:u,e.lineTo(t.size/2+s*Math.cos(o),t.size/2+s*Math.sin(o))}if(this.fill_){var l=this.fill_.getColor();null===l&&(l=\"#000\"),e.fillStyle=Ys(l),e.fill()}this.stroke_&&(e.strokeStyle=t.strokeStyle,e.lineWidth=t.strokeWidth,e.setLineDash&&t.lineDash&&(e.setLineDash(t.lineDash),e.lineDashOffset=t.lineDashOffset),e.lineCap=t.lineCap,e.lineJoin=t.lineJoin,e.miterLimit=t.miterLimit,e.stroke()),e.closePath()},e.prototype.createHitDetectionCanvas_=function(t){if(this.hitDetectionImageSize_=[t.size,t.size],this.fill_)this.hitDetectionCanvas_=this.canvas_;else{var e=cr(t.size,t.size);this.hitDetectionCanvas_=e.canvas,this.drawHitDetectionCanvas_(t,e,0,0)}},e.prototype.drawHitDetectionCanvas_=function(t,e,n,i){e.setTransform(1,0,0,1,0,0),e.translate(n,i),e.beginPath();var r=this.points_;if(r===1/0)e.arc(t.size/2,t.size/2,this.radius_,0,2*Math.PI,!0);else{var o=void 0!==this.radius2_?this.radius2_:this.radius_;o!==this.radius_&&(r*=2);var s=void 0,a=void 0,u=void 0;for(s=0;s<=r;s++)u=2*s*Math.PI/r-Math.PI/2+this.angle_,a=s%2==0?this.radius_:o,e.lineTo(t.size/2+a*Math.cos(u),t.size/2+a*Math.sin(u))}e.fillStyle=\"#000\",e.fill(),this.stroke_&&(e.strokeStyle=t.strokeStyle,e.lineWidth=t.strokeWidth,t.lineDash&&(e.setLineDash(t.lineDash),e.lineDashOffset=t.lineDashOffset),e.stroke()),e.closePath()},e}(Xs),Ws=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Bs=function(t){function e(e){var n=e||{};return t.call(this,{points:1/0,fill:n.fill,radius:n.radius,stroke:n.stroke})||this}return Ws(e,t),e.prototype.clone=function(){var t=new e({fill:this.getFill()?this.getFill().clone():void 0,stroke:this.getStroke()?this.getStroke().clone():void 0,radius:this.getRadius()});return t.setOpacity(this.getOpacity()),t.setScale(this.getScale()),t},e.prototype.setRadius=function(t){this.radius_=t},e}(Ks),Zs=function(){function t(t){var e=t||{};this.color_=void 0!==e.color?e.color:null}return t.prototype.clone=function(){var e=this.getColor();return new t({color:Array.isArray(e)?e.slice():e||void 0})},t.prototype.getColor=function(){return this.color_},t.prototype.setColor=function(t){this.color_=t},t}(),Vs=function(){function t(t){var e=t||{};this.color_=void 0!==e.color?e.color:null,this.lineCap_=e.lineCap,this.lineDash_=void 0!==e.lineDash?e.lineDash:null,this.lineDashOffset_=e.lineDashOffset,this.lineJoin_=e.lineJoin,this.miterLimit_=e.miterLimit,this.width_=e.width}return t.prototype.clone=function(){var e=this.getColor();return new t({color:Array.isArray(e)?e.slice():e||void 0,lineCap:this.getLineCap(),lineDash:this.getLineDash()?this.getLineDash().slice():void 0,lineDashOffset:this.getLineDashOffset(),lineJoin:this.getLineJoin(),miterLimit:this.getMiterLimit(),width:this.getWidth()})},t.prototype.getColor=function(){return this.color_},t.prototype.getLineCap=function(){return this.lineCap_},t.prototype.getLineDash=function(){return this.lineDash_},t.prototype.getLineDashOffset=function(){return this.lineDashOffset_},t.prototype.getLineJoin=function(){return this.lineJoin_},t.prototype.getMiterLimit=function(){return this.miterLimit_},t.prototype.getWidth=function(){return this.width_},t.prototype.setColor=function(t){this.color_=t},t.prototype.setLineCap=function(t){this.lineCap_=t},t.prototype.setLineDash=function(t){this.lineDash_=t},t.prototype.setLineDashOffset=function(t){this.lineDashOffset_=t},t.prototype.setLineJoin=function(t){this.lineJoin_=t},t.prototype.setMiterLimit=function(t){this.miterLimit_=t},t.prototype.setWidth=function(t){this.width_=t},t}(),Hs=function(){function t(t){var e=t||{};this.geometry_=null,this.geometryFunction_=Qs,void 0!==e.geometry&&this.setGeometry(e.geometry),this.fill_=void 0!==e.fill?e.fill:null,this.image_=void 0!==e.image?e.image:null,this.renderer_=void 0!==e.renderer?e.renderer:null,this.stroke_=void 0!==e.stroke?e.stroke:null,this.text_=void 0!==e.text?e.text:null,this.zIndex_=e.zIndex}return t.prototype.clone=function(){var e=this.getGeometry();return e&&\"object\"==typeof e&&(e=e.clone()),new t({geometry:e,fill:this.getFill()?this.getFill().clone():void 0,image:this.getImage()?this.getImage().clone():void 0,stroke:this.getStroke()?this.getStroke().clone():void 0,text:this.getText()?this.getText().clone():void 0,zIndex:this.getZIndex()})},t.prototype.getRenderer=function(){return this.renderer_},t.prototype.setRenderer=function(t){this.renderer_=t},t.prototype.getGeometry=function(){return this.geometry_},t.prototype.getGeometryFunction=function(){return this.geometryFunction_},t.prototype.getFill=function(){return this.fill_},t.prototype.setFill=function(t){this.fill_=t},t.prototype.getImage=function(){return this.image_},t.prototype.setImage=function(t){this.image_=t},t.prototype.getStroke=function(){return this.stroke_},t.prototype.setStroke=function(t){this.stroke_=t},t.prototype.getText=function(){return this.text_},t.prototype.setText=function(t){this.text_=t},t.prototype.getZIndex=function(){return this.zIndex_},t.prototype.setGeometry=function(t){\"function\"==typeof t?this.geometryFunction_=t:\"string\"==typeof t?this.geometryFunction_=function(e){return e.get(t)}:t?void 0!==t&&(this.geometryFunction_=function(){return t}):this.geometryFunction_=Qs,this.geometry_=t},t.prototype.setZIndex=function(t){this.zIndex_=t},t}();var qs=null;function Js(t,e){if(!qs){var n=new Zs({color:\"rgba(255,255,255,0.4)\"}),i=new Vs({color:\"#3399CC\",width:1.25});qs=[new Hs({image:new Bs({fill:n,stroke:i,radius:5}),fill:n,stroke:i})]}return qs}function Qs(t){return t.getGeometry()}var $s=Hs,ta=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),ea=\"renderOrder\",na=function(t){function e(e){var n=this,i=e||{},r=p({},i);return delete r.style,delete r.renderBuffer,delete r.updateWhileAnimating,delete r.updateWhileInteracting,(n=t.call(this,r)||this).declutter_=void 0!==i.declutter&&i.declutter,n.renderBuffer_=void 0!==i.renderBuffer?i.renderBuffer:100,n.style_=null,n.styleFunction_=void 0,n.setStyle(i.style),n.updateWhileAnimating_=void 0!==i.updateWhileAnimating&&i.updateWhileAnimating,n.updateWhileInteracting_=void 0!==i.updateWhileInteracting&&i.updateWhileInteracting,n}return ta(e,t),e.prototype.getDeclutter=function(){return this.declutter_},e.prototype.getRenderBuffer=function(){return this.renderBuffer_},e.prototype.getRenderOrder=function(){return this.get(ea)},e.prototype.getStyle=function(){return this.style_},e.prototype.getStyleFunction=function(){return this.styleFunction_},e.prototype.getUpdateWhileAnimating=function(){return this.updateWhileAnimating_},e.prototype.getUpdateWhileInteracting=function(){return this.updateWhileInteracting_},e.prototype.setRenderOrder=function(t){this.set(ea,t)},e.prototype.setStyle=function(t){this.style_=void 0!==t?t:Js,this.styleFunction_=null===t?void 0:function(t){var e;if(\"function\"==typeof t)e=t;else{var n;Array.isArray(t)?n=t:(ge(\"function\"==typeof t.getZIndex,41),n=[t]),e=function(){return n}}return e}(this.style_),this.changed()},e}(Dr),ia=n(1),ra=n.n(ia),oa=function(){function t(){}return t.prototype.drawCustom=function(t,e,n){},t.prototype.drawGeometry=function(t){},t.prototype.setStyle=function(t){},t.prototype.drawCircle=function(t,e){},t.prototype.drawFeature=function(t,e){},t.prototype.drawGeometryCollection=function(t,e){},t.prototype.drawLineString=function(t,e){},t.prototype.drawMultiLineString=function(t,e){},t.prototype.drawMultiPoint=function(t,e){},t.prototype.drawMultiPolygon=function(t,e){},t.prototype.drawPoint=function(t,e){},t.prototype.drawPolygon=function(t,e){},t.prototype.drawText=function(t,e){},t.prototype.setFillStrokeStyle=function(t,e){},t.prototype.setImageStyle=function(t,e){},t.prototype.setTextStyle=function(t,e){},t}(),sa={BEGIN_GEOMETRY:0,BEGIN_PATH:1,CIRCLE:2,CLOSE_PATH:3,CUSTOM:4,DRAW_CHARS:5,DRAW_IMAGE:6,END_GEOMETRY:7,FILL:8,MOVE_TO_LINE_TO:9,SET_FILL_STYLE:10,SET_STROKE_STYLE:11,STROKE:12},aa=[sa.FILL],ua=[sa.STROKE],la=[sa.BEGIN_PATH],ha=[sa.CLOSE_PATH],ca=sa,pa=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),fa=function(t){function e(e,n,i,r){var o=t.call(this)||this;return o.tolerance=e,o.maxExtent=n,o.pixelRatio=r,o.maxLineWidth=0,o.resolution=i,o.beginGeometryInstruction1_=null,o.beginGeometryInstruction2_=null,o.bufferedMaxExtent_=null,o.instructions=[],o.coordinates=[],o.tmpCoordinate_=[],o.hitDetectionInstructions=[],o.state={},o}return pa(e,t),e.prototype.applyPixelRatio=function(t){var e=this.pixelRatio;return 1==e?t:t.map(function(t){return t*e})},e.prototype.appendFlatCoordinates=function(t,e,n,i,r,o){var s=this.coordinates.length,a=this.getBufferedMaxExtent();o&&(e+=i);var u,l,h,c=t[e],p=t[e+1],f=this.tmpCoordinate_,d=!0;for(u=e+i;u<n;u+=i)f[0]=t[u],f[1]=t[u+1],(h=je(a,f))!==l?(d&&(this.coordinates[s++]=c,this.coordinates[s++]=p),this.coordinates[s++]=f[0],this.coordinates[s++]=f[1],d=!1):h===Fe.INTERSECTING?(this.coordinates[s++]=f[0],this.coordinates[s++]=f[1],d=!1):d=!0,c=f[0],p=f[1],l=h;return(r&&d||u===e+i)&&(this.coordinates[s++]=c,this.coordinates[s++]=p),s},e.prototype.drawCustomCoordinates_=function(t,e,n,i,r){for(var o=0,s=n.length;o<s;++o){var a=n[o],u=this.appendFlatCoordinates(t,e,a,i,!1,!1);r.push(u),e=a}return e},e.prototype.drawCustom=function(t,e,n){this.beginGeometry(e);var i,r,o,s,a,u=t.getType(),l=t.getStride(),h=this.coordinates.length;if(u==Cn.MULTI_POLYGON){i=(t=t).getOrientedFlatCoordinates(),s=[];var c=t.getEndss();a=0;for(var p=0,f=c.length;p<f;++p){var d=[];a=this.drawCustomCoordinates_(i,a,c[p],l,d),s.push(d)}this.instructions.push([ca.CUSTOM,h,s,t,n,Ai])}else u==Cn.POLYGON||u==Cn.MULTI_LINE_STRING?(o=[],i=u==Cn.POLYGON?t.getOrientedFlatCoordinates():t.getFlatCoordinates(),a=this.drawCustomCoordinates_(i,0,t.getEnds(),l,o),this.instructions.push([ca.CUSTOM,h,o,t,n,Mi])):u==Cn.LINE_STRING||u==Cn.MULTI_POINT?(i=t.getFlatCoordinates(),r=this.appendFlatCoordinates(i,0,i.length,l,!1,!1),this.instructions.push([ca.CUSTOM,h,r,t,n,Li])):u==Cn.POINT&&(i=t.getFlatCoordinates(),this.coordinates.push(i[0],i[1]),r=this.coordinates.length,this.instructions.push([ca.CUSTOM,h,r,t,n]));this.endGeometry(e)},e.prototype.beginGeometry=function(t){this.beginGeometryInstruction1_=[ca.BEGIN_GEOMETRY,t,0],this.instructions.push(this.beginGeometryInstruction1_),this.beginGeometryInstruction2_=[ca.BEGIN_GEOMETRY,t,0],this.hitDetectionInstructions.push(this.beginGeometryInstruction2_)},e.prototype.finish=function(){return{instructions:this.instructions,hitDetectionInstructions:this.hitDetectionInstructions,coordinates:this.coordinates}},e.prototype.reverseHitDetectionInstructions=function(){var t,e=this.hitDetectionInstructions;e.reverse();var n,i,r=e.length,o=-1;for(t=0;t<r;++t)(i=(n=e[t])[0])==ca.END_GEOMETRY?o=t:i==ca.BEGIN_GEOMETRY&&(n[2]=t,Bt(this.hitDetectionInstructions,o,t),o=-1)},e.prototype.setFillStrokeStyle=function(t,e){var n=this.state;if(t){var i=t.getColor();n.fillStyle=Ys(i||\"#000\")}else n.fillStyle=void 0;if(e){var r=e.getColor();n.strokeStyle=Ys(r||\"#000\");var o=e.getLineCap();n.lineCap=void 0!==o?o:\"round\";var s=e.getLineDash();n.lineDash=s?s.slice():_s;var a=e.getLineDashOffset();n.lineDashOffset=a||0;var u=e.getLineJoin();n.lineJoin=void 0!==u?u:\"round\";var l=e.getWidth();n.lineWidth=void 0!==l?l:1;var h=e.getMiterLimit();n.miterLimit=void 0!==h?h:10,n.lineWidth>this.maxLineWidth&&(this.maxLineWidth=n.lineWidth,this.bufferedMaxExtent_=null)}else n.strokeStyle=void 0,n.lineCap=void 0,n.lineDash=null,n.lineDashOffset=void 0,n.lineJoin=void 0,n.lineWidth=void 0,n.miterLimit=void 0},e.prototype.createFill=function(t){var e=t.fillStyle,n=[ca.SET_FILL_STYLE,e];return\"string\"!=typeof e&&n.push(!0),n},e.prototype.applyStroke=function(t){this.instructions.push(this.createStroke(t))},e.prototype.createStroke=function(t){return[ca.SET_STROKE_STYLE,t.strokeStyle,t.lineWidth*this.pixelRatio,t.lineCap,t.lineJoin,t.miterLimit,this.applyPixelRatio(t.lineDash),t.lineDashOffset*this.pixelRatio]},e.prototype.updateFillStyle=function(t,e){var n=t.fillStyle;\"string\"==typeof n&&t.currentFillStyle==n||(void 0!==n&&this.instructions.push(e.call(this,t)),t.currentFillStyle=n)},e.prototype.updateStrokeStyle=function(t,e){var n=t.strokeStyle,i=t.lineCap,r=t.lineDash,o=t.lineDashOffset,s=t.lineJoin,a=t.lineWidth,u=t.miterLimit;(t.currentStrokeStyle!=n||t.currentLineCap!=i||r!=t.currentLineDash&&!Vt(t.currentLineDash,r)||t.currentLineDashOffset!=o||t.currentLineJoin!=s||t.currentLineWidth!=a||t.currentMiterLimit!=u)&&(void 0!==n&&e.call(this,t),t.currentStrokeStyle=n,t.currentLineCap=i,t.currentLineDash=r,t.currentLineDashOffset=o,t.currentLineJoin=s,t.currentLineWidth=a,t.currentMiterLimit=u)},e.prototype.endGeometry=function(t){this.beginGeometryInstruction1_[2]=this.instructions.length,this.beginGeometryInstruction1_=null,this.beginGeometryInstruction2_[2]=this.hitDetectionInstructions.length,this.beginGeometryInstruction2_=null;var e=[ca.END_GEOMETRY,t];this.instructions.push(e),this.hitDetectionInstructions.push(e)},e.prototype.getBufferedMaxExtent=function(){if(!this.bufferedMaxExtent_&&(this.bufferedMaxExtent_=Ae(this.maxExtent),this.maxLineWidth>0)){var t=this.resolution*(this.maxLineWidth+1)/2;Me(this.bufferedMaxExtent_,t,this.bufferedMaxExtent_)}return this.bufferedMaxExtent_},e}(oa),da=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),_a=function(t){function e(e,n,i,r){var o=t.call(this,e,n,i,r)||this;return o.declutterGroup_=null,o.hitDetectionImage_=null,o.image_=null,o.anchorX_=void 0,o.anchorY_=void 0,o.height_=void 0,o.opacity_=void 0,o.originX_=void 0,o.originY_=void 0,o.rotateWithView_=void 0,o.rotation_=void 0,o.scale_=void 0,o.width_=void 0,o}return da(e,t),e.prototype.drawCoordinates_=function(t,e,n,i){return this.appendFlatCoordinates(t,e,n,i,!1,!1)},e.prototype.drawPoint=function(t,e){if(this.image_){this.beginGeometry(e);var n=t.getFlatCoordinates(),i=t.getStride(),r=this.coordinates.length,o=this.drawCoordinates_(n,0,n.length,i);this.instructions.push([ca.DRAW_IMAGE,r,o,this.image_,this.anchorX_,this.anchorY_,this.declutterGroup_,this.height_,this.opacity_,this.originX_,this.originY_,this.rotateWithView_,this.rotation_,this.scale_*this.pixelRatio,this.width_]),this.hitDetectionInstructions.push([ca.DRAW_IMAGE,r,o,this.hitDetectionImage_,this.anchorX_,this.anchorY_,this.declutterGroup_,this.height_,this.opacity_,this.originX_,this.originY_,this.rotateWithView_,this.rotation_,this.scale_,this.width_]),this.endGeometry(e)}},e.prototype.drawMultiPoint=function(t,e){if(this.image_){this.beginGeometry(e);var n=t.getFlatCoordinates(),i=t.getStride(),r=this.coordinates.length,o=this.drawCoordinates_(n,0,n.length,i);this.instructions.push([ca.DRAW_IMAGE,r,o,this.image_,this.anchorX_,this.anchorY_,this.declutterGroup_,this.height_,this.opacity_,this.originX_,this.originY_,this.rotateWithView_,this.rotation_,this.scale_*this.pixelRatio,this.width_]),this.hitDetectionInstructions.push([ca.DRAW_IMAGE,r,o,this.hitDetectionImage_,this.anchorX_,this.anchorY_,this.declutterGroup_,this.height_,this.opacity_,this.originX_,this.originY_,this.rotateWithView_,this.rotation_,this.scale_,this.width_]),this.endGeometry(e)}},e.prototype.finish=function(){return this.reverseHitDetectionInstructions(),this.anchorX_=void 0,this.anchorY_=void 0,this.hitDetectionImage_=null,this.image_=null,this.height_=void 0,this.scale_=void 0,this.opacity_=void 0,this.originX_=void 0,this.originY_=void 0,this.rotateWithView_=void 0,this.rotation_=void 0,this.width_=void 0,t.prototype.finish.call(this)},e.prototype.setImageStyle=function(t,e){var n=t.getAnchor(),i=t.getSize(),r=t.getHitDetectionImage(1),o=t.getImage(1),s=t.getOrigin();this.anchorX_=n[0],this.anchorY_=n[1],this.declutterGroup_=e,this.hitDetectionImage_=r,this.image_=o,this.height_=i[1],this.opacity_=t.getOpacity(),this.originX_=s[0],this.originY_=s[1],this.rotateWithView_=t.getRotateWithView(),this.rotation_=t.getRotation(),this.scale_=t.getScale(),this.width_=i[0]},e}(fa),ga=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),ya=function(t){function e(e,n,i,r){return t.call(this,e,n,i,r)||this}return ga(e,t),e.prototype.drawFlatCoordinates_=function(t,e,n,i){var r=this.coordinates.length,o=this.appendFlatCoordinates(t,e,n,i,!1,!1),s=[ca.MOVE_TO_LINE_TO,r,o];return this.instructions.push(s),this.hitDetectionInstructions.push(s),n},e.prototype.drawLineString=function(t,e){var n=this.state,i=n.strokeStyle,r=n.lineWidth;if(void 0!==i&&void 0!==r){this.updateStrokeStyle(n,this.applyStroke),this.beginGeometry(e),this.hitDetectionInstructions.push([ca.SET_STROKE_STYLE,n.strokeStyle,n.lineWidth,n.lineCap,n.lineJoin,n.miterLimit,n.lineDash,n.lineDashOffset],la);var o=t.getFlatCoordinates(),s=t.getStride();this.drawFlatCoordinates_(o,0,o.length,s),this.hitDetectionInstructions.push(ua),this.endGeometry(e)}},e.prototype.drawMultiLineString=function(t,e){var n=this.state,i=n.strokeStyle,r=n.lineWidth;if(void 0!==i&&void 0!==r){this.updateStrokeStyle(n,this.applyStroke),this.beginGeometry(e),this.hitDetectionInstructions.push([ca.SET_STROKE_STYLE,n.strokeStyle,n.lineWidth,n.lineCap,n.lineJoin,n.miterLimit,n.lineDash,n.lineDashOffset],la);for(var o=t.getEnds(),s=t.getFlatCoordinates(),a=t.getStride(),u=0,l=0,h=o.length;l<h;++l)u=this.drawFlatCoordinates_(s,u,o[l],a);this.hitDetectionInstructions.push(ua),this.endGeometry(e)}},e.prototype.finish=function(){var e=this.state;return null!=e.lastStroke&&e.lastStroke!=this.coordinates.length&&this.instructions.push(ua),this.reverseHitDetectionInstructions(),this.state=null,t.prototype.finish.call(this)},e.prototype.applyStroke=function(e){null!=e.lastStroke&&e.lastStroke!=this.coordinates.length&&(this.instructions.push(ua),e.lastStroke=this.coordinates.length),e.lastStroke=0,t.prototype.applyStroke.call(this,e),this.instructions.push(la)},e}(fa),va=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),ma=function(t){function e(e,n,i,r){return t.call(this,e,n,i,r)||this}return va(e,t),e.prototype.drawFlatCoordinatess_=function(t,e,n,i){var r=this.state,o=void 0!==r.fillStyle,s=null!=r.strokeStyle,a=n.length;this.instructions.push(la),this.hitDetectionInstructions.push(la);for(var u=0;u<a;++u){var l=n[u],h=this.coordinates.length,c=this.appendFlatCoordinates(t,e,l,i,!0,!s),p=[ca.MOVE_TO_LINE_TO,h,c];this.instructions.push(p),this.hitDetectionInstructions.push(p),s&&(this.instructions.push(ha),this.hitDetectionInstructions.push(ha)),e=l}return o&&(this.instructions.push(aa),this.hitDetectionInstructions.push(aa)),s&&(this.instructions.push(ua),this.hitDetectionInstructions.push(ua)),e},e.prototype.drawCircle=function(t,e){var n=this.state,i=n.fillStyle,r=n.strokeStyle;if(void 0!==i||void 0!==r){this.setFillStrokeStyles_(),this.beginGeometry(e),void 0!==n.fillStyle&&this.hitDetectionInstructions.push([ca.SET_FILL_STYLE,\"#000\"]),void 0!==n.strokeStyle&&this.hitDetectionInstructions.push([ca.SET_STROKE_STYLE,n.strokeStyle,n.lineWidth,n.lineCap,n.lineJoin,n.miterLimit,n.lineDash,n.lineDashOffset]);var o=t.getFlatCoordinates(),s=t.getStride(),a=this.coordinates.length;this.appendFlatCoordinates(o,0,o.length,s,!1,!1);var u=[ca.CIRCLE,a];this.instructions.push(la,u),this.hitDetectionInstructions.push(la,u),this.hitDetectionInstructions.push(aa),void 0!==n.fillStyle&&this.instructions.push(aa),void 0!==n.strokeStyle&&(this.instructions.push(ua),this.hitDetectionInstructions.push(ua)),this.endGeometry(e)}},e.prototype.drawPolygon=function(t,e){var n=this.state,i=n.fillStyle,r=n.strokeStyle;if(void 0!==i||void 0!==r){this.setFillStrokeStyles_(),this.beginGeometry(e),void 0!==n.fillStyle&&this.hitDetectionInstructions.push([ca.SET_FILL_STYLE,\"#000\"]),void 0!==n.strokeStyle&&this.hitDetectionInstructions.push([ca.SET_STROKE_STYLE,n.strokeStyle,n.lineWidth,n.lineCap,n.lineJoin,n.miterLimit,n.lineDash,n.lineDashOffset]);var o=t.getEnds(),s=t.getOrientedFlatCoordinates(),a=t.getStride();this.drawFlatCoordinatess_(s,0,o,a),this.endGeometry(e)}},e.prototype.drawMultiPolygon=function(t,e){var n=this.state,i=n.fillStyle,r=n.strokeStyle;if(void 0!==i||void 0!==r){this.setFillStrokeStyles_(),this.beginGeometry(e),void 0!==n.fillStyle&&this.hitDetectionInstructions.push([ca.SET_FILL_STYLE,\"#000\"]),void 0!==n.strokeStyle&&this.hitDetectionInstructions.push([ca.SET_STROKE_STYLE,n.strokeStyle,n.lineWidth,n.lineCap,n.lineJoin,n.miterLimit,n.lineDash,n.lineDashOffset]);for(var o=t.getEndss(),s=t.getOrientedFlatCoordinates(),a=t.getStride(),u=0,l=0,h=o.length;l<h;++l)u=this.drawFlatCoordinatess_(s,u,o[l],a);this.endGeometry(e)}},e.prototype.finish=function(){this.reverseHitDetectionInstructions(),this.state=null;var e=this.tolerance;if(0!==e)for(var n=this.coordinates,i=0,r=n.length;i<r;++i)n[i]=Ni(n[i],e);return t.prototype.finish.call(this)},e.prototype.setFillStrokeStyles_=function(){var t=this.state;void 0!==t.fillStyle&&this.updateFillStyle(t,this.createFill),void 0!==t.strokeStyle&&this.updateStrokeStyle(t,this.applyStroke)},e}(fa);function Ea(t,e,n,i,r){var o,s,a,u,l,h,c,p,f,d=n,_=n,g=0,y=0,v=n;for(o=n;o<i;o+=r){var m=e[o],E=e[o+1];void 0!==u&&(p=m-u,f=E-l,a=Math.sqrt(p*p+f*f),void 0!==h&&(y+=s,Math.acos((h*p+c*f)/(s*a))>t&&(y>g&&(g=y,d=v,_=o),y=0,v=o-r)),s=a,h=p,c=f),u=m,l=E}return(y+=a)>g?[v,o]:[d,_]}var xa={POINT:\"point\",LINE:\"line\"},wa=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Oa={left:0,end:0,center:.5,right:1,start:1,top:0,middle:.5,hanging:.2,alphabetic:.8,ideographic:.8,bottom:1},Ta={Circle:ma,Default:fa,Image:_a,LineString:ya,Polygon:ma,Text:function(t){function e(e,n,i,r){var o=t.call(this,e,n,i,r)||this;return o.declutterGroup_,o.labels_=null,o.text_=\"\",o.textOffsetX_=0,o.textOffsetY_=0,o.textRotateWithView_=void 0,o.textRotation_=0,o.textFillState_=null,o.fillStates={},o.textStrokeState_=null,o.strokeStates={},o.textState_={},o.textStates={},o.textKey_=\"\",o.fillKey_=\"\",o.strokeKey_=\"\",ys.prune(),o}return wa(e,t),e.prototype.finish=function(){var e=t.prototype.finish.call(this);return e.textStates=this.textStates,e.fillStates=this.fillStates,e.strokeStates=this.strokeStates,e},e.prototype.drawText=function(t,e){var n=this.textFillState_,i=this.textStrokeState_,r=this.textState_;if(\"\"!==this.text_&&r&&(n||i)){var o,s,a=this.coordinates.length,u=t.getType(),l=null,h=2,c=2;if(r.placement===xa.LINE){if(!un(this.getBufferedMaxExtent(),t.getExtent()))return;var p=void 0;if(l=t.getFlatCoordinates(),c=t.getStride(),u==Cn.LINE_STRING)p=[l.length];else if(u==Cn.MULTI_LINE_STRING)p=t.getEnds();else if(u==Cn.POLYGON)p=t.getEnds().slice(0,1);else if(u==Cn.MULTI_POLYGON){var f=t.getEndss();for(p=[],o=0,s=f.length;o<s;++o)p.push(f[o][0])}this.beginGeometry(e);for(var d=r.textAlign,_=0,g=void 0,y=0,v=p.length;y<v;++y){if(null==d){var m=Ea(r.maxAngle,l,_,p[y],c);_=m[0],g=m[1]}else g=p[y];for(o=_;o<g;o+=c)this.coordinates.push(l[o],l[o+1]);h=this.coordinates.length,_=p[y],this.drawChars_(a,h,this.declutterGroup_),a=h}this.endGeometry(e)}else{var E=null;switch(r.overflow||(E=[]),u){case Cn.POINT:case Cn.MULTI_POINT:h=(l=t.getFlatCoordinates()).length;break;case Cn.LINE_STRING:l=t.getFlatMidpoint();break;case Cn.CIRCLE:l=t.getCenter();break;case Cn.MULTI_LINE_STRING:h=(l=t.getFlatMidpoints()).length;break;case Cn.POLYGON:l=t.getFlatInteriorPoint(),r.overflow||E.push(l[2]/this.resolution),c=3;break;case Cn.MULTI_POLYGON:var x=t.getFlatInteriorPoints();for(l=[],o=0,s=x.length;o<s;o+=3)r.overflow||E.push(x[o+2]/this.resolution),l.push(x[o],x[o+1]);if(0==(h=l.length))return}h=this.appendFlatCoordinates(l,0,h,c,!1,!1),this.saveTextStates_(),(r.backgroundFill||r.backgroundStroke)&&(this.setFillStrokeStyle(r.backgroundFill,r.backgroundStroke),r.backgroundFill&&(this.updateFillStyle(this.state,this.createFill),this.hitDetectionInstructions.push(this.createFill(this.state))),r.backgroundStroke&&(this.updateStrokeStyle(this.state,this.applyStroke),this.hitDetectionInstructions.push(this.createStroke(this.state)))),this.beginGeometry(e);var w=this.pixelRatio;this.instructions.push([ca.DRAW_IMAGE,a,h,null,NaN,NaN,this.declutterGroup_,NaN,1,0,0,this.textRotateWithView_,this.textRotation_,1,NaN,r.padding==gs?gs:r.padding.map(function(t){return t*w}),!!r.backgroundFill,!!r.backgroundStroke,this.text_,this.textKey_,this.strokeKey_,this.fillKey_,this.textOffsetX_,this.textOffsetY_,E]),this.hitDetectionInstructions.push([ca.DRAW_IMAGE,a,h,null,NaN,NaN,this.declutterGroup_,NaN,1,0,0,this.textRotateWithView_,this.textRotation_,1/this.pixelRatio,NaN,r.padding,!!r.backgroundFill,!!r.backgroundStroke,this.text_,this.textKey_,this.strokeKey_,this.fillKey_,this.textOffsetX_,this.textOffsetY_,E]),this.endGeometry(e)}}},e.prototype.saveTextStates_=function(){var t=this.textStrokeState_,e=this.textState_,n=this.textFillState_,i=this.strokeKey_;t&&(i in this.strokeStates||(this.strokeStates[i]={strokeStyle:t.strokeStyle,lineCap:t.lineCap,lineDashOffset:t.lineDashOffset,lineWidth:t.lineWidth,lineJoin:t.lineJoin,miterLimit:t.miterLimit,lineDash:t.lineDash}));var r=this.textKey_;r in this.textStates||(this.textStates[r]={font:e.font,textAlign:e.textAlign||\"center\",textBaseline:e.textBaseline||\"middle\",scale:e.scale});var o=this.fillKey_;n&&(o in this.fillStates||(this.fillStates[o]={fillStyle:n.fillStyle}))},e.prototype.drawChars_=function(t,e,n){var i=this.textStrokeState_,r=this.textState_,o=this.strokeKey_,s=this.textKey_,a=this.fillKey_;this.saveTextStates_();var u=this.pixelRatio,l=Oa[r.textBaseline],h=this.textOffsetY_*u,c=this.text_,p=r.scale,f=i?i.lineWidth*p/2:0;this.instructions.push([ca.DRAW_CHARS,t,e,l,n,r.overflow,a,r.maxAngle,u,h,o,f*u,c,s,1]),this.hitDetectionInstructions.push([ca.DRAW_CHARS,t,e,l,n,r.overflow,a,r.maxAngle,1,h,o,f,c,s,1/u])},e.prototype.setTextStyle=function(t,e){var n,i,r;if(t){this.declutterGroup_=e;var s=t.getFill();s?((i=this.textFillState_)||(i=this.textFillState_={}),i.fillStyle=Ys(s.getColor()||\"#000\")):i=this.textFillState_=null;var a=t.getStroke();if(a){(r=this.textStrokeState_)||(r=this.textStrokeState_={});var u=a.getLineDash(),l=a.getLineDashOffset(),h=a.getWidth(),c=a.getMiterLimit();r.lineCap=a.getLineCap()||\"round\",r.lineDash=u?u.slice():_s,r.lineDashOffset=void 0===l?0:l,r.lineJoin=a.getLineJoin()||\"round\",r.lineWidth=void 0===h?1:h,r.miterLimit=void 0===c?10:c,r.strokeStyle=Ys(a.getColor()||\"#000\")}else r=this.textStrokeState_=null;n=this.textState_;var p=t.getFont()||\"10px sans-serif\";xs(p);var f=t.getScale();n.overflow=t.getOverflow(),n.font=p,n.maxAngle=t.getMaxAngle(),n.placement=t.getPlacement(),n.textAlign=t.getTextAlign(),n.textBaseline=t.getTextBaseline()||\"middle\",n.backgroundFill=t.getBackgroundFill(),n.backgroundStroke=t.getBackgroundStroke(),n.padding=t.getPadding()||gs,n.scale=void 0===f?1:f;var d=t.getOffsetX(),_=t.getOffsetY(),g=t.getRotateWithView(),y=t.getRotation();this.text_=t.getText()||\"\",this.textOffsetX_=void 0===d?0:d,this.textOffsetY_=void 0===_?0:_,this.textRotateWithView_=void 0!==g&&g,this.textRotation_=void 0===y?0:y,this.strokeKey_=r?(\"string\"==typeof r.strokeStyle?r.strokeStyle:o(r.strokeStyle))+r.lineCap+r.lineDashOffset+\"|\"+r.lineWidth+r.lineJoin+r.miterLimit+\"[\"+r.lineDash.join()+\"]\":\"\",this.textKey_=n.font+n.scale+(n.textAlign||\"?\"),this.fillKey_=i?\"string\"==typeof i.fillStyle?i.fillStyle:\"|\"+o(i.fillStyle):\"\"}else this.text_=\"\"},e}(fa)},ba=function(){function t(t,e,n,i,r){this.declutter_=r,this.declutterGroup_=null,this.tolerance_=t,this.maxExtent_=e,this.pixelRatio_=i,this.resolution_=n,this.buildersByZIndex_={}}return t.prototype.addDeclutter=function(t){var e=null;return this.declutter_&&(t?(e=this.declutterGroup_)[4]++:(e=this.declutterGroup_=[1/0,1/0,-1/0,-1/0]).push(1)),e},t.prototype.finish=function(){var t={};for(var e in this.buildersByZIndex_){t[e]=t[e]||{};var n=this.buildersByZIndex_[e];for(var i in n){var r=n[i].finish();t[e][i]=r}}return t},t.prototype.getBuilder=function(t,e){var n=void 0!==t?t.toString():\"0\",i=this.buildersByZIndex_[n];void 0===i&&(i={},this.buildersByZIndex_[n]=i);var r=i[e];void 0===r&&(r=new(0,Ta[e])(this.tolerance_,this.maxExtent_,this.resolution_,this.pixelRatio_),i[e]=r);return r},t}(),Ca={CIRCLE:\"Circle\",DEFAULT:\"Default\",IMAGE:\"Image\",LINE_STRING:\"LineString\",POLYGON:\"Polygon\",TEXT:\"Text\"};function Sa(t,e,n,i){for(var r=t[e],o=t[e+1],s=0,a=e+i;a<n;a+=i){var u=t[a],l=t[a+1];s+=Math.sqrt((u-r)*(u-r)+(l-o)*(l-o)),r=u,o=l}return s}function Ra(t,e,n,i,r,o,s,a,u,l,h){for(var c,p,f,d=[],_=t[e]>t[n-i],g=r.length,y=t[e],v=t[e+1],m=t[e+=i],E=t[e+1],x=0,w=Math.sqrt(Math.pow(m-y,2)+Math.pow(E-v,2)),O=\"\",T=0,b=0;b<g;++b){p=_?g-b-1:b;var C=r.charAt(p),S=a*u(l,O=_?C+O:O+C,h)-T;T+=S;for(var R=o+S/2;e<n-i&&x+w<R;)y=m,v=E,m=t[e+=i],E=t[e+1],x+=w,w=Math.sqrt(Math.pow(m-y,2)+Math.pow(E-v,2));var I=R-x,P=Math.atan2(E-v,m-y);if(_&&(P+=P>0?-Math.PI:Math.PI),void 0!==f){var F=P-f;if(F+=F>Math.PI?-2*Math.PI:F<-Math.PI?2*Math.PI:0,Math.abs(F)>s)return null}var L=I/w,M=Re(y,m,L),A=Re(v,E,L);f==P?(_&&(c[0]=M,c[1]=A,c[2]=S/2),c[4]=O):(T=S,c=[M,A,S/2,P,O=C],_?d.unshift(c):d.push(c),f=P),o+=S}return d}var Ia=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Pa=[1/0,1/0,-1/0,-1/0],Fa=[1,0,0,1,0,0],La=[],Ma=[],Aa=[],Da=[],ka=function(t){function e(e,n,i,r,o){var s=t.call(this)||this;return s.declutterTree=r,s.overlaps=i,s.pixelRatio=n,s.resolution=e,s.alignFill_,s.instructions=o.instructions,s.coordinates=o.coordinates,s.coordinateCache_={},s.renderedTransform_=[1,0,0,1,0,0],s.hitDetectionInstructions=o.hitDetectionInstructions,s.pixelCoordinates_=null,s.viewRotation_=0,s.fillStates=o.fillStates||{},s.strokeStates=o.strokeStates||{},s.textStates=o.textStates||{},s.widths_={},s}return Ia(e,t),e.prototype.disposeInternal=function(){ys.release(this),t.prototype.disposeInternal.call(this)},e.prototype.getTextImage=function(t,e,n,i){var r,o=i+e+t+n+this.pixelRatio;if(!ys.containsKey(o)){var s=i?this.strokeStates[i]:null,a=n?this.fillStates[n]:null,u=this.textStates[e],l=this.pixelRatio,h=u.scale*l,c=Oa[u.textAlign||\"center\"],p=i&&s.lineWidth?s.lineWidth:0,f=t.split(\"\\n\"),d=f.length,_=[],g=function(t,e,n){for(var i=e.length,r=0,o=0;o<i;++o){var s=Cs(t,e[o]);r=Math.max(r,s),n.push(s)}return r}(u.font,f,_),y=bs(u.font),v=y*d,m=g+p,E=cr(Math.ceil(m*h),Math.ceil((v+p)*h));r=E.canvas,ys.set(o,r),1!=h&&E.scale(h,h),E.font=u.font,i&&(E.strokeStyle=s.strokeStyle,E.lineWidth=p,E.lineCap=s.lineCap,E.lineJoin=s.lineJoin,E.miterLimit=s.miterLimit,E.setLineDash&&s.lineDash.length&&(E.setLineDash(s.lineDash),E.lineDashOffset=s.lineDashOffset)),n&&(E.fillStyle=a.fillStyle),E.textBaseline=\"middle\",E.textAlign=\"center\";var x=.5-c,w=c*r.width/h+x*p,O=void 0;if(i)for(O=0;O<d;++O)E.strokeText(f[O],w+x*_[O],.5*(p+y)+O*y);if(n)for(O=0;O<d;++O)E.fillText(f[O],w+x*_[O],.5*(p+y)+O*y)}return ys.get(o,this)},e.prototype.replayTextBackground_=function(t,e,n,i,r,o,s){t.beginPath(),t.moveTo.apply(t,e),t.lineTo.apply(t,n),t.lineTo.apply(t,i),t.lineTo.apply(t,r),t.lineTo.apply(t,e),o&&(this.alignFill_=o[2],this.fill_(t)),s&&(this.setStrokeStyle_(t,s),t.stroke())},e.prototype.replayImage_=function(t,e,n,i,r,o,s,a,u,l,h,c,p,f,d,_,g,y){var v=g||y;e-=r*=p,n-=o*=p;var m=d+l>i.width?i.width-l:d,E=a+h>i.height?i.height-h:a,x=_[3]+m*p+_[1],w=_[0]+E*p+_[2],O=e-_[3],T=n-_[0];(v||0!==c)&&(La[0]=Da[0]=O,La[1]=Ma[1]=T,Ma[0]=Aa[0]=O+x,Aa[1]=Da[1]=T+w);var b=null;if(0!==c){var C=e+r,S=n+o;b=di(Fa,C,S,1,1,c,-C,-S),fi(Fa,La),fi(Fa,Ma),fi(Fa,Aa),fi(Fa,Da),Ye(Math.min(La[0],Ma[0],Aa[0],Da[0]),Math.min(La[1],Ma[1],Aa[1],Da[1]),Math.max(La[0],Ma[0],Aa[0],Da[0]),Math.max(La[1],Ma[1],Aa[1],Da[1]),Pa)}else Ye(O,T,O+x,T+w,Pa);var R=t.canvas,I=y?y[2]*p/2:0,P=Pa[0]-I<=R.width&&Pa[2]+I>=0&&Pa[1]-I<=R.height&&Pa[3]+I>=0;if(f&&(e=Math.round(e),n=Math.round(n)),s){if(!P&&1==s[4])return;We(s,Pa);var F=P?[t,b?b.slice(0):null,u,i,l,h,m,E,e,n,p]:null;F&&v&&F.push(g,y,La,Ma,Aa,Da),s.push(F)}else P&&(v&&this.replayTextBackground_(t,La,Ma,Aa,Da,g,y),Ps(t,b,u,i,l,h,m,E,e,n,p))},e.prototype.fill_=function(t){if(this.alignFill_){var e=fi(this.renderedTransform_,[0,0]),n=512*this.pixelRatio;t.save(),t.translate(e[0]%n,e[1]%n),t.rotate(this.viewRotation_)}t.fill(),this.alignFill_&&t.restore()},e.prototype.setStrokeStyle_=function(t,e){t.strokeStyle=e[1],t.lineWidth=e[2],t.lineCap=e[3],t.lineJoin=e[4],t.miterLimit=e[5],t.setLineDash&&(t.lineDashOffset=e[7],t.setLineDash(e[6]))},e.prototype.renderDeclutter_=function(t,e){if(t&&t.length>5){var n=t[4];if(1==n||n==t.length-5){var i={minX:t[0],minY:t[1],maxX:t[2],maxY:t[3],value:e};if(!this.declutterTree.collides(i)){this.declutterTree.insert(i);for(var r=5,o=t.length;r<o;++r){var s=t[r];s&&(s.length>11&&this.replayTextBackground_(s[0],s[13],s[14],s[15],s[16],s[11],s[12]),Ps.apply(void 0,s))}}t.length=5,Xe(t)}}},e.prototype.drawTextImageWithPointPlacement_=function(t,e,n,i){var r=this.textStates[e],o=this.getTextImage(t,e,i,n),s=this.strokeStates[n],a=this.pixelRatio,u=Oa[r.textAlign||\"center\"],l=Oa[r.textBaseline||\"middle\"],h=s&&s.lineWidth?s.lineWidth:0;return{label:o,anchorX:u*o.width/a+2*(.5-u)*h,anchorY:l*o.height/a+2*(.5-l)*h}},e.prototype.execute_=function(t,e,n,i,r,s,a){var u,l,h;this.pixelCoordinates_&&Vt(e,this.renderedTransform_)?u=this.pixelCoordinates_:(this.pixelCoordinates_||(this.pixelCoordinates_=[]),u=Rn(this.coordinates,0,this.coordinates.length,2,e,this.pixelCoordinates_),l=this.renderedTransform_,h=e,l[0]=h[0],l[1]=h[1],l[2]=h[2],l[3]=h[3],l[4]=h[4],l[5]=h[5]);for(var c,p,f,d,g,y,v,m,E,x,w,O,T,b,C,S,R=!_(n),I=0,P=i.length,F=0,L=0,M=0,A=null,D=null,k=this.coordinateCache_,N=this.viewRotation_,G={context:t,pixelRatio:this.pixelRatio,resolution:this.resolution,rotation:N},j=this.instructions!=i||this.overlaps?0:200;I<P;){var z=i[I];switch(z[0]){case ca.BEGIN_GEOMETRY:b=z[1],R&&n[o(b)]||!b.getGeometry()?I=z[2]:void 0===a||un(a,b.getGeometry().getExtent())?++I:I=z[2]+1;break;case ca.BEGIN_PATH:L>j&&(this.fill_(t),L=0),M>j&&(t.stroke(),M=0),L||M||(t.beginPath(),d=g=NaN),++I;break;case ca.CIRCLE:var Y=u[F=z[1]],X=u[F+1],U=u[F+2]-Y,K=u[F+3]-X,W=Math.sqrt(U*U+K*K);t.moveTo(Y+W,X),t.arc(Y,X,W,0,2*Math.PI,!0),++I;break;case ca.CLOSE_PATH:t.closePath(),++I;break;case ca.CUSTOM:F=z[1],c=z[2];var B=z[3],Z=z[4],V=6==z.length?z[5]:void 0;G.geometry=B,G.feature=b,I in k||(k[I]=[]);var H=k[I];V?V(u,F,c,2,H):(H[0]=u[F],H[1]=u[F+1],H.length=2),Z(H,G),++I;break;case ca.DRAW_IMAGE:F=z[1],c=z[2],E=z[3],p=z[4],f=z[5],m=s?null:z[6];var q=z[7],J=z[8],Q=z[9],$=z[10],tt=z[11],et=z[12],nt=z[13],it=z[14];if(!E&&z.length>=19){x=z[18],w=z[19],O=z[20],T=z[21];var rt=this.drawTextImageWithPointPlacement_(x,w,O,T);E=z[3]=rt.label;var ot=z[22];p=z[4]=(rt.anchorX-ot)*this.pixelRatio;var st=z[23];f=z[5]=(rt.anchorY-st)*this.pixelRatio,q=z[7]=E.height,it=z[14]=E.width}var at=void 0;z.length>24&&(at=z[24]);var ut=void 0,lt=void 0,ht=void 0;z.length>16?(ut=z[15],lt=z[16],ht=z[17]):(ut=gs,lt=ht=!1),tt&&(et+=N);for(var ct=0;F<c;F+=2)at&&at[ct++]<it/this.pixelRatio||this.replayImage_(t,u[F],u[F+1],E,p,f,m,q,J,Q,$,et,nt,r,it,ut,lt?A:null,ht?D:null);this.renderDeclutter_(m,b),++I;break;case ca.DRAW_CHARS:var pt=z[1],ft=z[2],dt=z[3];m=s?null:z[4];var _t=z[5];T=z[6];var gt=z[7],yt=z[8],vt=z[9];O=z[10];var mt=z[11];x=z[12],w=z[13];var Et=z[14],xt=this.textStates[w],wt=xt.font,Ot=xt.scale*yt,Tt=void 0;Tt=wt in this.widths_?this.widths_[wt]:this.widths_[wt]={};var bt=Sa(u,pt,ft,2),Ct=Ot*Ss(wt,x,Tt);if(_t||Ct<=bt){var St=this.textStates[w].textAlign,Rt=Ra(u,pt,ft,2,x,(bt-Ct)*Oa[St],gt,Ot,Ss,wt,Tt);if(Rt){var It=void 0,Pt=void 0,Ft=void 0,Lt=void 0,Mt=void 0;if(O)for(It=0,Pt=Rt.length;It<Pt;++It)Ft=(Mt=Rt[It])[4],Lt=this.getTextImage(Ft,w,\"\",O),p=Mt[2]+mt,f=dt*Lt.height+2*(.5-dt)*mt-vt,this.replayImage_(t,Mt[0],Mt[1],Lt,p,f,m,Lt.height,1,0,0,Mt[3],Et,!1,Lt.width,gs,null,null);if(T)for(It=0,Pt=Rt.length;It<Pt;++It)Ft=(Mt=Rt[It])[4],Lt=this.getTextImage(Ft,w,T,\"\"),p=Mt[2],f=dt*Lt.height-vt,this.replayImage_(t,Mt[0],Mt[1],Lt,p,f,m,Lt.height,1,0,0,Mt[3],Et,!1,Lt.width,gs,null,null)}}this.renderDeclutter_(m,b),++I;break;case ca.END_GEOMETRY:if(void 0!==s){var At=s(b=z[1]);if(At)return At}++I;break;case ca.FILL:j?L++:this.fill_(t),++I;break;case ca.MOVE_TO_LINE_TO:for(F=z[1],c=z[2],C=u[F],v=(S=u[F+1])+.5|0,(y=C+.5|0)===d&&v===g||(t.moveTo(C,S),d=y,g=v),F+=2;F<c;F+=2)y=(C=u[F])+.5|0,v=(S=u[F+1])+.5|0,F!=c-2&&y===d&&v===g||(t.lineTo(C,S),d=y,g=v);++I;break;case ca.SET_FILL_STYLE:A=z,this.alignFill_=z[2],L&&(this.fill_(t),L=0,M&&(t.stroke(),M=0)),t.fillStyle=z[1],++I;break;case ca.SET_STROKE_STYLE:D=z,M&&(t.stroke(),M=0),this.setStrokeStyle_(t,z),++I;break;case ca.STROKE:j?M++:t.stroke(),++I;break;default:++I}}L&&this.fill_(t),M&&t.stroke()},e.prototype.execute=function(t,e,n,i,r){this.viewRotation_=n,this.execute_(t,e,i,this.instructions,r,void 0,void 0)},e.prototype.executeHitDetection=function(t,e,n,i,r,o){return this.viewRotation_=n,this.execute_(t,e,i,this.hitDetectionInstructions,!0,r,o)},e}(T),Na=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Ga=[Ca.POLYGON,Ca.CIRCLE,Ca.LINE_STRING,Ca.IMAGE,Ca.TEXT,Ca.DEFAULT],ja=function(t){function e(e,n,i,r,o,s,a){var u=t.call(this)||this;return u.declutterTree_=o,u.maxExtent_=e,u.overlaps_=r,u.pixelRatio_=i,u.resolution_=n,u.renderBuffer_=a,u.executorsByZIndex_={},u.hitDetectionContext_=cr(1,1),u.hitDetectionTransform_=[1,0,0,1,0,0],u.createExecutors_(s),u}return Na(e,t),e.prototype.clip=function(t,e){var n=this.getClipCoords(e);t.beginPath(),t.moveTo(n[0],n[1]),t.lineTo(n[2],n[3]),t.lineTo(n[4],n[5]),t.lineTo(n[6],n[7]),t.clip()},e.prototype.createExecutors_=function(t){for(var e in t){var n=this.executorsByZIndex_[e];void 0===n&&(this.executorsByZIndex_[e]=n={});var i=t[e];for(var r in i){var o=i[r];n[r]=new ka(this.resolution_,this.pixelRatio_,this.overlaps_,this.declutterTree_,o)}}},e.prototype.disposeInternal=function(){for(var e in this.executorsByZIndex_){var n=this.executorsByZIndex_[e];for(var i in n)n[i].disposeInternal()}var r=this.hitDetectionContext_.canvas;r.width=r.height=0,t.prototype.disposeInternal.call(this)},e.prototype.hasExecutors=function(t){for(var e in this.executorsByZIndex_)for(var n=this.executorsByZIndex_[e],i=0,r=t.length;i<r;++i)if(t[i]in n)return!0;return!1},e.prototype.forEachFeatureAtCoordinate=function(t,e,n,i,r,o,s){var a,u=2*(i=Math.round(i))+1,l=di(this.hitDetectionTransform_,i+.5,i+.5,1/e,-1/e,-n,-t[0],-t[1]),h=this.hitDetectionContext_;h.canvas.width!==u||h.canvas.height!==u?(h.canvas.width=u,h.canvas.height=u):h.clearRect(0,0,u,u),void 0!==this.renderBuffer_&&(Be(a=[1/0,1/0,-1/0,-1/0],t),Me(a,e*(this.renderBuffer_+i),a));var c,p,f=function(t){if(void 0!==za[t])return za[t];for(var e=2*t+1,n=new Array(e),i=0;i<e;i++)n[i]=new Array(e);var r=t,o=0,s=0;for(;r>=o;)Ya(n,t+r,t+o),Ya(n,t+o,t+r),Ya(n,t-o,t+r),Ya(n,t-r,t+o),Ya(n,t-r,t-o),Ya(n,t-o,t-r),Ya(n,t+o,t-r),Ya(n,t+r,t-o),2*((s+=1+2*++o)-r)+1>0&&(s+=1-2*(r-=1));return za[t]=n,n}(i);function d(t){for(var e=h.getImageData(0,0,u,u).data,n=0;n<u;n++)for(var i=0;i<u;i++)if(f[n][i]&&e[4*(i*u+n)+3]>0){var r=void 0;return(!c||p!=Ca.IMAGE&&p!=Ca.TEXT||-1!==c.indexOf(t))&&(r=o(t)),r||void h.clearRect(0,0,u,u)}}this.declutterTree_&&(c=this.declutterTree_.all().map(function(t){return t.value}));var _,g,y,v,m,E=Object.keys(this.executorsByZIndex_).map(Number);for(E.sort(Ut),_=E.length-1;_>=0;--_){var x=E[_].toString();for(y=this.executorsByZIndex_[x],g=Ga.length-1;g>=0;--g)if(void 0!==(v=y[p=Ga[g]]))if(!s||p!=Ca.IMAGE&&p!=Ca.TEXT){if(m=v.executeHitDetection(h,l,n,r,d,a))return m}else{var w=s[x];w?w.push(v,l.slice(0)):s[x]=[v,l.slice(0)]}}},e.prototype.getClipCoords=function(t){var e=this.maxExtent_;if(!e)return null;var n=e[0],i=e[1],r=e[2],o=e[3],s=[n,i,n,o,r,o,r,i];return Rn(s,0,8,2,t,s),s},e.prototype.isEmpty=function(){return _(this.executorsByZIndex_)},e.prototype.execute=function(t,e,n,i,r,o,s){var a=Object.keys(this.executorsByZIndex_).map(Number);a.sort(Ut),this.maxExtent_&&(t.save(),this.clip(t,e));var u,l,h,c,p,f,d=o||Ga;for(u=0,l=a.length;u<l;++u){var _=a[u].toString();for(p=this.executorsByZIndex_[_],h=0,c=d.length;h<c;++h){var g=d[h];if(void 0!==(f=p[g]))if(!s||g!=Ca.IMAGE&&g!=Ca.TEXT)f.execute(t,e,n,i,r);else{var y=s[_];y?y.push(f,e.slice(0)):s[_]=[f,e.slice(0)]}}}this.maxExtent_&&t.restore()},e}(T),za={0:[[!0]]};function Ya(t,e,n){var i,r=Math.floor(t.length/2);if(e>=r)for(i=r;i<e;i++)t[i][n]=!0;else if(e<r)for(i=e+1;i<r;i++)t[i][n]=!0}var Xa=ja,Ua=.5,Ka={Point:function(t,e,n,i){var r=n.getImage();if(r){if(r.getImageState()!=Fs.LOADED)return;var o=t.getBuilder(n.getZIndex(),Ca.IMAGE);o.setImageStyle(r,t.addDeclutter(!1)),o.drawPoint(e,i)}var s=n.getText();if(s){var a=t.getBuilder(n.getZIndex(),Ca.TEXT);a.setTextStyle(s,t.addDeclutter(!!r)),a.drawText(e,i)}},LineString:function(t,e,n,i){var r=n.getStroke();if(r){var o=t.getBuilder(n.getZIndex(),Ca.LINE_STRING);o.setFillStrokeStyle(null,r),o.drawLineString(e,i)}var s=n.getText();if(s){var a=t.getBuilder(n.getZIndex(),Ca.TEXT);a.setTextStyle(s,t.addDeclutter(!1)),a.drawText(e,i)}},Polygon:function(t,e,n,i){var r=n.getFill(),o=n.getStroke();if(r||o){var s=t.getBuilder(n.getZIndex(),Ca.POLYGON);s.setFillStrokeStyle(r,o),s.drawPolygon(e,i)}var a=n.getText();if(a){var u=t.getBuilder(n.getZIndex(),Ca.TEXT);u.setTextStyle(a,t.addDeclutter(!1)),u.drawText(e,i)}},MultiPoint:function(t,e,n,i){var r=n.getImage();if(r){if(r.getImageState()!=Fs.LOADED)return;var o=t.getBuilder(n.getZIndex(),Ca.IMAGE);o.setImageStyle(r,t.addDeclutter(!1)),o.drawMultiPoint(e,i)}var s=n.getText();if(s){var a=t.getBuilder(n.getZIndex(),Ca.TEXT);a.setTextStyle(s,t.addDeclutter(!!r)),a.drawText(e,i)}},MultiLineString:function(t,e,n,i){var r=n.getStroke();if(r){var o=t.getBuilder(n.getZIndex(),Ca.LINE_STRING);o.setFillStrokeStyle(null,r),o.drawMultiLineString(e,i)}var s=n.getText();if(s){var a=t.getBuilder(n.getZIndex(),Ca.TEXT);a.setTextStyle(s,t.addDeclutter(!1)),a.drawText(e,i)}},MultiPolygon:function(t,e,n,i){var r=n.getFill(),o=n.getStroke();if(o||r){var s=t.getBuilder(n.getZIndex(),Ca.POLYGON);s.setFillStrokeStyle(r,o),s.drawMultiPolygon(e,i)}var a=n.getText();if(a){var u=t.getBuilder(n.getZIndex(),Ca.TEXT);u.setTextStyle(a,t.addDeclutter(!1)),u.drawText(e,i)}},GeometryCollection:function(t,e,n,i){var r,o,s=e.getGeometriesArray();for(r=0,o=s.length;r<o;++r){var a=Ka[s[r].getType()];a(t,s[r],n,i)}},Circle:function(t,e,n,i){var r=n.getFill(),o=n.getStroke();if(r||o){var s=t.getBuilder(n.getZIndex(),Ca.CIRCLE);s.setFillStrokeStyle(r,o),s.drawCircle(e,i)}var a=n.getText();if(a){var u=t.getBuilder(n.getZIndex(),Ca.TEXT);u.setTextStyle(a,t.addDeclutter(!1)),u.drawText(e,i)}}};function Wa(t,e){return parseInt(o(t),10)-parseInt(o(e),10)}function Ba(t,e){var n=Za(t,e);return n*n}function Za(t,e){return Ua*t/e}function Va(t,e,n,i,r,o){var s=!1,a=n.getImage();if(a){var u=a.getImageState();u==Fs.LOADED||u==Fs.ERROR?a.unlistenImageChange(r,o):(u==Fs.IDLE&&a.load(),u=a.getImageState(),a.listenImageChange(r,o),s=!0)}return function(t,e,n,i){var r=n.getGeometryFunction()(e);if(!r)return;var o=r.getSimplifiedGeometry(i);if(n.getRenderer())!function t(e,n,i,r){if(n.getType()==Cn.GEOMETRY_COLLECTION){for(var o=n.getGeometries(),s=0,a=o.length;s<a;++s)t(e,o[s],i,r);return}var u=e.getBuilder(i.getZIndex(),Ca.DEFAULT);u.drawCustom(n,r,i.getRenderer())}(t,o,n,e);else{var s=Ka[o.getType()];s(t,o,n,e)}}(t,e,n,i),s}var Ha=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),qa=function(t){function e(e){var n=t.call(this,e)||this;return n.declutterTree_=e.getDeclutter()?ra()(9,void 0):null,n.dirty_=!1,n.renderedRevision_=-1,n.renderedResolution_=NaN,n.renderedExtent_=[1/0,1/0,-1/0,-1/0],n.renderedRenderOrder_=null,n.replayGroup_=null,n.replayGroupChanged=!0,E(ys,F.CLEAR,n.handleFontsChanged_,n),n}return Ha(e,t),e.prototype.disposeInternal=function(){w(ys,F.CLEAR,this.handleFontsChanged_,this),t.prototype.disposeInternal.call(this)},e.prototype.renderFrame=function(t,e){var n=this.context,i=n.canvas,r=this.replayGroup_;if(!r||r.isEmpty())return i.width>0&&(i.width=0),i;var o=t.pixelRatio;pi(this.pixelTransform_,1/o,0,0,1/o,0,0),_i(this.inversePixelTransform_,this.pixelTransform_);var s=Math.round(t.size[0]*o),a=Math.round(t.size[1]*o);if(i.width!=s||i.height!=a){i.width=s,i.height=a;var u=gi(this.pixelTransform_);i.style.transform!==u&&(i.style.transform=u)}else n.clearRect(0,0,s,a);this.preRender(n,t);var l=t.extent,h=t.viewState,c=h.projection,p=h.rotation,f=c.getExtent(),d=this.getLayer().getSource(),_=e.extent,g=void 0!==_;g&&this.clip(n,t,_),this.declutterTree_&&this.declutterTree_.clear();var y=t.viewHints,v=!(y[_n]||y[gn]),m=this.getRenderTransform(t,s,a,0),E=e.managed?t.skippedFeatureUids:{};if(r.execute(n,m,p,E,v),d.getWrapX()&&c.canWrapX()&&!Ne(f,l)){for(var x=l[0],w=an(f),O=0,T=void 0;x<f[0];){T=w*--O;var b=this.getRenderTransform(t,s,a,T);r.execute(n,b,p,E,v),x+=w}for(O=0,x=l[2];x>f[2];){T=w*++O;var C=this.getRenderTransform(t,s,a,T);r.execute(n,C,p,E,v),x-=w}}g&&n.restore(),this.postRender(n,t);var S=e.opacity;return S!==parseFloat(i.style.opacity)&&(i.style.opacity=S),i},e.prototype.forEachFeatureAtCoordinate=function(t,e,n,i,r){if(this.replayGroup_){var s=e.viewState.resolution,a=e.viewState.rotation,u=this.getLayer(),l={};return this.replayGroup_.forEachFeatureAtCoordinate(t,s,a,n,{},function(t){var e=o(t);if(!(e in l))return l[e]=!0,i.call(r,t,u)},null)}},e.prototype.handleFontsChanged_=function(t){var e=this.getLayer();e.getVisible()&&this.replayGroup_&&e.changed()},e.prototype.handleStyleImageChange_=function(t){this.renderIfReadyAndVisible()},e.prototype.prepareFrame=function(t,e){var n=this.getLayer(),i=n.getSource(),r=t.viewHints[_n],o=t.viewHints[gn],s=n.getUpdateWhileAnimating(),a=n.getUpdateWhileInteracting();if(!this.dirty_&&!s&&r||!a&&o)return!0;var u=t.extent,l=t.viewState,h=l.projection,c=l.resolution,p=t.pixelRatio,f=n.getRevision(),d=n.getRenderBuffer(),_=n.getRenderOrder();void 0===_&&(_=Wa);var g=Me(u,d*c),y=l.projection.getExtent();if(i.getWrapX()&&l.projection.canWrapX()&&!Ne(y,t.extent)){var v=an(y),m=Math.max(an(g)/2,v);g[0]=y[0]-m,g[2]=y[2]+m}if(!this.dirty_&&this.renderedResolution_==c&&this.renderedRevision_==f&&this.renderedRenderOrder_==_&&Ne(this.renderedExtent_,g))return this.replayGroupChanged=!1,!0;this.replayGroup_&&this.replayGroup_.dispose(),this.replayGroup_=null,this.dirty_=!1;var E=new ba(Za(c,p),g,c,p,!!this.declutterTree_);i.loadFeatures(g,c,h);var x=function(t){var e,i=t.getStyleFunction()||n.getStyleFunction();if(i&&(e=i(t,c)),e){var r=this.renderFeature(t,c,p,e,E);this.dirty_=this.dirty_||r}}.bind(this);if(_){var w=[];i.forEachFeatureInExtent(g,function(t){w.push(t)}),w.sort(_);for(var O=0,T=w.length;O<T;++O)x(w[O])}else i.forEachFeatureInExtent(g,x);var b=E.finish(),C=new Xa(g,c,p,i.getOverlaps(),this.declutterTree_,b,n.getRenderBuffer());return this.renderedResolution_=c,this.renderedRevision_=f,this.renderedRenderOrder_=_,this.renderedExtent_=g,this.replayGroup_=C,this.replayGroupChanged=!0,!0},e.prototype.renderFeature=function(t,e,n,i,r){if(!i)return!1;var o=!1;if(Array.isArray(i))for(var s=0,a=i.length;s<a;++s)o=Va(r,t,i[s],Ba(e,n),this.handleStyleImageChange_,this)||o;else o=Va(r,t,i,Ba(e,n),this.handleStyleImageChange_,this);return o},e}(Ds),Ja=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Qa=function(t){function e(e){return t.call(this,e)||this}return Ja(e,t),e.prototype.createRenderer=function(){return new qa(this)},e}(na),$a=.5,tu=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),eu=function(t){function e(e,n,i){var r=t.call(this)||this,o=i||{};return r.tileCoord=e,r.state=n,r.interimTile=null,r.hifi=!0,r.key=\"\",r.transition_=void 0===o.transition?250:o.transition,r.transitionStarts_={},r}return tu(e,t),e.prototype.changed=function(){this.dispatchEvent(F.CHANGE)},e.prototype.getKey=function(){return this.key+\"/\"+this.tileCoord},e.prototype.getInterimTile=function(){if(!this.interimTile)return this;var t=this.interimTile;do{if(t.getState()==_e.LOADED)return this.transition_=0,t;t=t.interimTile}while(t);return this},e.prototype.refreshInterimChain=function(){if(this.interimTile){var t=this.interimTile,e=this;do{if(t.getState()==_e.LOADED){t.interimTile=null;break}t.getState()==_e.LOADING?e=t:t.getState()==_e.IDLE?e.interimTile=t.interimTile:e=t,t=e.interimTile}while(t)}},e.prototype.getTileCoord=function(){return this.tileCoord},e.prototype.getState=function(){return this.state},e.prototype.setState=function(t){this.state=t,this.changed()},e.prototype.load=function(){i()},e.prototype.getAlpha=function(t,e){if(!this.transition_)return 1;var n=this.transitionStarts_[t];if(n){if(-1===n)return 1}else n=e,this.transitionStarts_[t]=n;var i=e-n+1e3/60;return i>=this.transition_?1:wn(i/this.transition_)},e.prototype.inTransition=function(t){return!!this.transition_&&-1!==this.transitionStarts_[t]},e.prototype.endTransition=function(t){this.transition_&&(this.transitionStarts_[t]=-1)},e}(P),nu=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();function iu(){var t=cr(1,1);return t.fillStyle=\"rgba(0,0,0,0)\",t.fillRect(0,0,1,1),t.canvas}var ru=function(t){function e(e,n,i,r,o,s){var a=t.call(this,e,n,s)||this;return a.crossOrigin_=r,a.src_=i,a.image_=new Image,null!==r&&(a.image_.crossOrigin=r),a.imageListenerKeys_=null,a.tileLoadFunction_=o,a}return nu(e,t),e.prototype.disposeInternal=function(){this.state==_e.LOADING&&(this.unlistenImage_(),this.image_=iu()),this.interimTile&&this.interimTile.dispose(),this.state=_e.ABORT,this.changed(),t.prototype.disposeInternal.call(this)},e.prototype.getImage=function(){return this.image_},e.prototype.getKey=function(){return this.src_},e.prototype.handleImageError_=function(){this.state=_e.ERROR,this.unlistenImage_(),this.image_=iu(),this.changed()},e.prototype.handleImageLoad_=function(){var t=this.image_;t.naturalWidth&&t.naturalHeight?this.state=_e.LOADED:this.state=_e.EMPTY,this.unlistenImage_(),this.changed()},e.prototype.load=function(){this.state==_e.ERROR&&(this.state=_e.IDLE,this.image_=new Image,null!==this.crossOrigin_&&(this.image_.crossOrigin=this.crossOrigin_)),this.state==_e.IDLE&&(this.state=_e.LOADING,this.changed(),this.imageListenerKeys_=[x(this.image_,F.ERROR,this.handleImageError_,this),x(this.image_,F.LOAD,this.handleImageLoad_,this)],this.tileLoadFunction_(this,this.src_))},e.prototype.unlistenImage_=function(){this.imageListenerKeys_.forEach(O),this.imageListenerKeys_=null},e}(eu);function ou(t,e,n,i){return void 0!==i?(i[0]=t,i[1]=e,i[2]=n,i):[t,e,n]}function su(t,e,n){return t+\"/\"+e+\"/\"+n}function au(t){return su(t[0],t[1],t[2])}var uu=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),lu=function(t){function e(e){return t.call(this,e)||this}return uu(e,t),e.prototype.expireCache=function(t){for(;this.canExpireCache();){if(this.peekLast().getKey()in t)break;this.pop().dispose()}},e.prototype.pruneExceptNewestZ=function(){if(0!==this.getCount()){var t=function(t){return t.split(\"/\").map(Number)}(this.peekFirstKey())[0];this.forEach(function(e){e.tileCoord[0]!==t&&(this.remove(au(e.tileCoord)),e.dispose())}.bind(this))}},e}(ps);function hu(t,e,n,i){var r=n-t,o=i-e,s=Math.sqrt(r*r+o*o);return[Math.round(n+r/s),Math.round(i+o/s)]}function cu(t,e,n,i,r,o,s,a,u,l,h){var c=cr(Math.round(n*t),Math.round(n*e));if(0===u.length)return c.canvas;c.scale(n,n);var p=[1/0,1/0,-1/0,-1/0];u.forEach(function(t,e,n){We(p,t.extent)});var f=an(p),d=nn(p),_=cr(Math.round(n*f/i),Math.round(n*d/i)),g=n/i;u.forEach(function(t,e,n){var i=t.extent[0]-p[0],r=-(t.extent[3]-p[3]),o=an(t.extent),s=nn(t.extent);_.drawImage(t.image,l,l,t.image.width-2*l,t.image.height-2*l,i*g,r*g,o*g,s*g)});var y=on(s);return a.getTriangles().forEach(function(t,e,r){var s=t.source,a=t.target,u=s[0][0],l=s[0][1],h=s[1][0],f=s[1][1],d=s[2][0],g=s[2][1],v=(a[0][0]-y[0])/o,m=-(a[0][1]-y[1])/o,E=(a[1][0]-y[0])/o,x=-(a[1][1]-y[1])/o,w=(a[2][0]-y[0])/o,O=-(a[2][1]-y[1])/o,T=u,b=l;u=0,l=0;var C=function(t){for(var e=t.length,n=0;n<e;n++){for(var i=n,r=Math.abs(t[n][n]),o=n+1;o<e;o++){var s=Math.abs(t[o][n]);s>r&&(r=s,i=o)}if(0===r)return null;var a=t[i];t[i]=t[n],t[n]=a;for(var u=n+1;u<e;u++)for(var l=-t[u][n]/t[n][n],h=n;h<e+1;h++)n==h?t[u][h]=0:t[u][h]+=l*t[n][h]}for(var c=new Array(e),p=e-1;p>=0;p--){c[p]=t[p][e]/t[p][p];for(var f=p-1;f>=0;f--)t[f][e]-=t[f][p]*c[p]}return c}([[h-=T,f-=b,0,0,E-v],[d-=T,g-=b,0,0,w-v],[0,0,h,f,x-m],[0,0,d,g,O-m]]);if(C){c.save(),c.beginPath();var S=(v+E+w)/3,R=(m+x+O)/3,I=hu(S,R,v,m),P=hu(S,R,E,x),F=hu(S,R,w,O);c.moveTo(P[0],P[1]),c.lineTo(I[0],I[1]),c.lineTo(F[0],F[1]),c.clip(),c.transform(C[0],C[2],C[1],C[3],v,m),c.translate(p[0]-T,p[3]-b),c.scale(i/n,-i/n),c.drawImage(_.canvas,0,0),c.restore()}}),h&&(c.save(),c.strokeStyle=\"black\",c.lineWidth=1,a.getTriangles().forEach(function(t,e,n){var i=t.target,r=(i[0][0]-y[0])/o,s=-(i[0][1]-y[1])/o,a=(i[1][0]-y[0])/o,u=-(i[1][1]-y[1])/o,l=(i[2][0]-y[0])/o,h=-(i[2][1]-y[1])/o;c.beginPath(),c.moveTo(a,u),c.lineTo(r,s),c.lineTo(l,h),c.closePath(),c.stroke()}),c.restore()),c.canvas}var pu=10,fu=function(){function t(t,e,n,i,r){this.sourceProj_=t,this.targetProj_=e;var o={},s=hi(this.targetProj_,this.sourceProj_);this.transformInv_=function(t){var e=t[0]+\"/\"+t[1];return o[e]||(o[e]=s(t)),o[e]},this.maxSourceExtent_=i,this.errorThresholdSquared_=r*r,this.triangles_=[],this.wrapsXInSource_=!1,this.canWrapXInSource_=this.sourceProj_.canWrapX()&&!!i&&!!this.sourceProj_.getExtent()&&an(i)==an(this.sourceProj_.getExtent()),this.sourceWorldWidth_=this.sourceProj_.getExtent()?an(this.sourceProj_.getExtent()):null,this.targetWorldWidth_=this.targetProj_.getExtent()?an(this.targetProj_.getExtent()):null;var a=on(n),u=sn(n),l=Qe(n),h=Je(n),c=this.transformInv_(a),p=this.transformInv_(u),f=this.transformInv_(l),d=this.transformInv_(h);if(this.addQuad_(a,u,l,h,c,p,f,d,pu),this.wrapsXInSource_){var _=1/0;this.triangles_.forEach(function(t,e,n){_=Math.min(_,t.source[0][0],t.source[1][0],t.source[2][0])}),this.triangles_.forEach(function(t){if(Math.max(t.source[0][0],t.source[1][0],t.source[2][0])-_>this.sourceWorldWidth_/2){var e=[[t.source[0][0],t.source[0][1]],[t.source[1][0],t.source[1][1]],[t.source[2][0],t.source[2][1]]];e[0][0]-_>this.sourceWorldWidth_/2&&(e[0][0]-=this.sourceWorldWidth_),e[1][0]-_>this.sourceWorldWidth_/2&&(e[1][0]-=this.sourceWorldWidth_),e[2][0]-_>this.sourceWorldWidth_/2&&(e[2][0]-=this.sourceWorldWidth_);var n=Math.min(e[0][0],e[1][0],e[2][0]);Math.max(e[0][0],e[1][0],e[2][0])-n<this.sourceWorldWidth_/2&&(t.source=e)}}.bind(this))}o={}}return t.prototype.addTriangle_=function(t,e,n,i,r,o){this.triangles_.push({source:[i,r,o],target:[t,e,n]})},t.prototype.addQuad_=function(t,e,n,i,r,o,s,a,u){var l=Le([r,o,s,a]),h=this.sourceWorldWidth_?an(l)/this.sourceWorldWidth_:null,c=this.sourceWorldWidth_,p=this.sourceProj_.canWrapX()&&h>.5&&h<1,f=!1;if(u>0){if(this.targetProj_.isGlobal()&&this.targetWorldWidth_)f=an(Le([t,e,n,i]))/this.targetWorldWidth_>.25||f;!p&&this.sourceProj_.isGlobal()&&h&&(f=h>.25||f)}if(f||!this.maxSourceExtent_||un(l,this.maxSourceExtent_)){if(!(f||isFinite(r[0])&&isFinite(r[1])&&isFinite(o[0])&&isFinite(o[1])&&isFinite(s[0])&&isFinite(s[1])&&isFinite(a[0])&&isFinite(a[1]))){if(!(u>0))return;f=!0}if(u>0){if(!f){var d=[(t[0]+n[0])/2,(t[1]+n[1])/2],_=this.transformInv_(d),g=void 0;if(p)g=(Se(r[0],c)+Se(s[0],c))/2-Se(_[0],c);else g=(r[0]+s[0])/2-_[0];var y=(r[1]+s[1])/2-_[1];f=g*g+y*y>this.errorThresholdSquared_}if(f){if(Math.abs(t[0]-n[0])<=Math.abs(t[1]-n[1])){var v=[(e[0]+n[0])/2,(e[1]+n[1])/2],m=this.transformInv_(v),E=[(i[0]+t[0])/2,(i[1]+t[1])/2],x=this.transformInv_(E);this.addQuad_(t,e,v,E,r,o,m,x,u-1),this.addQuad_(E,v,n,i,x,m,s,a,u-1)}else{var w=[(t[0]+e[0])/2,(t[1]+e[1])/2],O=this.transformInv_(w),T=[(n[0]+i[0])/2,(n[1]+i[1])/2],b=this.transformInv_(T);this.addQuad_(t,w,T,i,r,O,b,a,u-1),this.addQuad_(w,e,n,T,O,o,s,b,u-1)}return}}if(p){if(!this.canWrapXInSource_)return;this.wrapsXInSource_=!0}this.addTriangle_(t,n,i,r,s,a),this.addTriangle_(t,e,n,r,o,s)}},t.prototype.calculateSourceExtent=function(){var t=[1/0,1/0,-1/0,-1/0];return this.triangles_.forEach(function(e,n,i){var r=e.source;Be(t,r[0]),Be(t,r[1]),Be(t,r[2])}),t},t.prototype.getTriangles=function(){return this.triangles_},t}(),du=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),_u=function(t){function e(e,n,i,r,o,s,a,u,l,h,c){var p=t.call(this,o,_e.IDLE)||this;p.renderEdges_=void 0!==c&&c,p.pixelRatio_=a,p.gutter_=u,p.canvas_=null,p.sourceTileGrid_=n,p.targetTileGrid_=r,p.wrappedTileCoord_=s||o,p.sourceTiles_=[],p.sourcesListenerKeys_=null,p.sourceZ_=0;var f=r.getTileCoordExtent(p.wrappedTileCoord_),d=p.targetTileGrid_.getExtent(),_=p.sourceTileGrid_.getExtent(),g=d?rn(f,d):f;if(0===qe(g))return p.state=_e.EMPTY,p;var y=e.getExtent();y&&(_=_?rn(_,y):y);var v=r.getResolution(p.wrappedTileCoord_[0]),m=function(t,e,n,i){var r=ci(n,e,t),o=oi(e,i,n),s=e.getMetersPerUnit();void 0!==s&&(o*=s);var a=t.getMetersPerUnit();void 0!==a&&(o/=a);var u=t.getExtent();if(!u||ke(u,r)){var l=oi(t,o,r)/o;isFinite(l)&&l>0&&(o/=l)}return o}(e,i,$e(g),v);if(!isFinite(m)||m<=0)return p.state=_e.EMPTY,p;var E=void 0!==h?h:$a;if(p.triangulation_=new fu(e,i,g,_,m*E),0===p.triangulation_.getTriangles().length)return p.state=_e.EMPTY,p;p.sourceZ_=n.getZForResolution(m);var x=p.triangulation_.calculateSourceExtent();if(_&&(e.canWrapX()?(x[1]=we(x[1],_[1],_[3]),x[3]=we(x[3],_[1],_[3])):x=rn(x,_)),qe(x)){for(var w=n.getTileRangeForExtentAndZ(x,p.sourceZ_),O=w.minX;O<=w.maxX;O++)for(var T=w.minY;T<=w.maxY;T++){var b=l(p.sourceZ_,O,T,a);b&&p.sourceTiles_.push(b)}0===p.sourceTiles_.length&&(p.state=_e.EMPTY)}else p.state=_e.EMPTY;return p}return du(e,t),e.prototype.disposeInternal=function(){this.state==_e.LOADING&&this.unlistenSources_(),t.prototype.disposeInternal.call(this)},e.prototype.getImage=function(){return this.canvas_},e.prototype.reproject_=function(){var t=[];if(this.sourceTiles_.forEach(function(e,n,i){e&&e.getState()==_e.LOADED&&t.push({extent:this.sourceTileGrid_.getTileCoordExtent(e.tileCoord),image:e.getImage()})}.bind(this)),this.sourceTiles_.length=0,0===t.length)this.state=_e.ERROR;else{var e=this.wrappedTileCoord_[0],n=this.targetTileGrid_.getTileSize(e),i=\"number\"==typeof n?n:n[0],r=\"number\"==typeof n?n:n[1],o=this.targetTileGrid_.getResolution(e),s=this.sourceTileGrid_.getResolution(this.sourceZ_),a=this.targetTileGrid_.getTileCoordExtent(this.wrappedTileCoord_);this.canvas_=cu(i,r,this.pixelRatio_,s,this.sourceTileGrid_.getExtent(),o,a,this.triangulation_,t,this.gutter_,this.renderEdges_),this.state=_e.LOADED}this.changed()},e.prototype.load=function(){if(this.state==_e.IDLE){this.state=_e.LOADING,this.changed();var t=0;this.sourcesListenerKeys_=[],this.sourceTiles_.forEach(function(e,n,i){var r=e.getState();if(r==_e.IDLE||r==_e.LOADING){t++;var o=E(e,F.CHANGE,function(n){var i=e.getState();i!=_e.LOADED&&i!=_e.ERROR&&i!=_e.EMPTY||(O(o),0===--t&&(this.unlistenSources_(),this.reproject_()))},this);this.sourcesListenerKeys_.push(o)}}.bind(this)),this.sourceTiles_.forEach(function(t,e,n){t.getState()==_e.IDLE&&t.load()}),0===t&&setTimeout(this.reproject_.bind(this),0)}},e.prototype.unlistenSources_=function(){this.sourcesListenerKeys_.forEach(O),this.sourcesListenerKeys_=null},e}(eu);function gu(t,e){var n=/\\{z\\}/g,i=/\\{x\\}/g,r=/\\{y\\}/g,o=/\\{-y\\}/g;return function(s,a,u){return s?t.replace(n,s[0].toString()).replace(i,s[1].toString()).replace(r,s[2].toString()).replace(o,function(){var t=s[0],n=e.getFullTileRange(t);return ge(n,55),(n.getHeight()-s[2]-1).toString()}):void 0}}function yu(t,e){for(var n=t.length,i=new Array(n),r=0;r<n;++r)i[r]=gu(t[r],e);return function(t){if(1===t.length)return t[0];return function(e,n,i){if(e){var r=function(t){return(t[1]<<t[0])+t[2]}(e),o=Se(r,t.length);return t[o](e,n,i)}}}(i)}function vu(t,e,n){}var mu=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();function Eu(t){return t?Array.isArray(t)?function(e){return t}:\"function\"==typeof t?t:function(e){return[t]}:null}var xu=function(t){function e(e){var n=t.call(this)||this;return n.projection_=ri(e.projection),n.attributions_=Eu(e.attributions),n.attributionsCollapsible_=void 0===e.attributionsCollapsible||e.attributionsCollapsible,n.loading=!1,n.state_=void 0!==e.state?e.state:yr.READY,n.wrapX_=void 0!==e.wrapX&&e.wrapX,n}return mu(e,t),e.prototype.getAttributions=function(){return this.attributions_},e.prototype.getAttributionsCollapsible=function(){return this.attributionsCollapsible_},e.prototype.getProjection=function(){return this.projection_},e.prototype.getResolutions=function(){return i()},e.prototype.getState=function(){return this.state_},e.prototype.getWrapX=function(){return this.wrapX_},e.prototype.refresh=function(){this.changed()},e.prototype.setAttributions=function(t){this.attributions_=Eu(t),this.changed()},e.prototype.setState=function(t){this.state_=t,this.changed()},e}(j),wu=[0,0,0],Ou=function(){function t(t){var e,n,i,r;if(this.minZoom=void 0!==t.minZoom?t.minZoom:0,this.resolutions_=t.resolutions,ge((e=this.resolutions_,n=!0,i=function(t,e){return e-t}||Ut,e.every(function(t,r){if(0===r)return!0;var o=i(e[r-1],t);return!(o>0||n&&0===o)})),17),!t.origins)for(var o=0,s=this.resolutions_.length-1;o<s;++o)if(r){if(this.resolutions_[o]/this.resolutions_[o+1]!==r){r=void 0;break}}else r=this.resolutions_[o]/this.resolutions_[o+1];this.zoomFactor_=r,this.maxZoom=this.resolutions_.length-1,this.origin_=void 0!==t.origin?t.origin:null,this.origins_=null,void 0!==t.origins&&(this.origins_=t.origins,ge(this.origins_.length==this.resolutions_.length,20));var a=t.extent;void 0===a||this.origin_||this.origins_||(this.origin_=on(a)),ge(!this.origin_&&this.origins_||this.origin_&&!this.origins_,18),this.tileSizes_=null,void 0!==t.tileSizes&&(this.tileSizes_=t.tileSizes,ge(this.tileSizes_.length==this.resolutions_.length,19)),this.tileSize_=void 0!==t.tileSize?t.tileSize:this.tileSizes_?null:xe,ge(!this.tileSize_&&this.tileSizes_||this.tileSize_&&!this.tileSizes_,22),this.extent_=void 0!==a?a:null,this.fullTileRanges_=null,this.tmpSize_=[0,0],void 0!==t.sizes?this.fullTileRanges_=t.sizes.map(function(t,e){return new hs(Math.min(0,t[0]),Math.max(t[0]-1,-1),Math.min(0,t[1]),Math.max(t[1]-1,-1))},this):a&&this.calculateTileRanges_(a)}return t.prototype.forEachTileCoord=function(t,e,n){for(var i=this.getTileRangeForExtentAndZ(t,e),r=i.minX,o=i.maxX;r<=o;++r)for(var s=i.minY,a=i.maxY;s<=a;++s)n([e,r,s])},t.prototype.forEachTileCoordParentTileRange=function(t,e,n,i){var r,o,s=null,a=t[0]-1;for(2===this.zoomFactor_?(r=t[1],o=t[2]):s=this.getTileCoordExtent(t,i);a>=this.minZoom;){if(e(a,2===this.zoomFactor_?ls(r=Math.floor(r/2),r,o=Math.floor(o/2),o,n):this.getTileRangeForExtentAndZ(s,a,n)))return!0;--a}return!1},t.prototype.getExtent=function(){return this.extent_},t.prototype.getMaxZoom=function(){return this.maxZoom},t.prototype.getMinZoom=function(){return this.minZoom},t.prototype.getOrigin=function(t){return this.origin_?this.origin_:this.origins_[t]},t.prototype.getResolution=function(t){return this.resolutions_[t]},t.prototype.getResolutions=function(){return this.resolutions_},t.prototype.getTileCoordChildTileRange=function(t,e,n){if(t[0]<this.maxZoom){if(2===this.zoomFactor_){var i=2*t[1],r=2*t[2];return ls(i,i+1,r,r+1,e)}var o=this.getTileCoordExtent(t,n);return this.getTileRangeForExtentAndZ(o,t[0]+1,e)}return null},t.prototype.getTileRangeExtent=function(t,e,n){var i=this.getOrigin(t),r=this.getResolution(t),o=xr(this.getTileSize(t),this.tmpSize_),s=i[0]+e.minX*o[0]*r,a=i[0]+(e.maxX+1)*o[0]*r;return Ye(s,i[1]+e.minY*o[1]*r,a,i[1]+(e.maxY+1)*o[1]*r,n)},t.prototype.getTileRangeForExtentAndZ=function(t,e,n){var i=wu;this.getTileCoordForXYAndZ_(t[0],t[3],e,!1,i);var r=i[1],o=i[2];return this.getTileCoordForXYAndZ_(t[2],t[1],e,!0,i),ls(r,i[1],o,i[2],n)},t.prototype.getTileCoordCenter=function(t){var e=this.getOrigin(t[0]),n=this.getResolution(t[0]),i=xr(this.getTileSize(t[0]),this.tmpSize_);return[e[0]+(t[1]+.5)*i[0]*n,e[1]-(t[2]+.5)*i[1]*n]},t.prototype.getTileCoordExtent=function(t,e){var n=this.getOrigin(t[0]),i=this.getResolution(t[0]),r=xr(this.getTileSize(t[0]),this.tmpSize_),o=n[0]+t[1]*r[0]*i,s=n[1]-(t[2]+1)*r[1]*i;return Ye(o,s,o+r[0]*i,s+r[1]*i,e)},t.prototype.getTileCoordForCoordAndResolution=function(t,e,n){return this.getTileCoordForXYAndResolution_(t[0],t[1],e,!1,n)},t.prototype.getTileCoordForXYAndResolution_=function(t,e,n,i,r){var o=this.getZForResolution(n),s=n/this.getResolution(o),a=this.getOrigin(o),u=xr(this.getTileSize(o),this.tmpSize_),l=i?.5:0,h=i?.5:0,c=Math.floor((t-a[0])/n+l),p=Math.floor((a[1]-e)/n+h),f=s*c/u[0],d=s*p/u[1];return i?(f=Math.ceil(f)-1,d=Math.ceil(d)-1):(f=Math.floor(f),d=Math.floor(d)),ou(o,f,d,r)},t.prototype.getTileCoordForXYAndZ_=function(t,e,n,i,r){var o=this.getOrigin(n),s=this.getResolution(n),a=xr(this.getTileSize(n),this.tmpSize_),u=i?.5:0,l=i?.5:0,h=Math.floor((t-o[0])/s+u),c=Math.floor((o[1]-e)/s+l),p=h/a[0],f=c/a[1];return i?(p=Math.ceil(p)-1,f=Math.ceil(f)-1):(p=Math.floor(p),f=Math.floor(f)),ou(n,p,f,r)},t.prototype.getTileCoordForCoordAndZ=function(t,e,n){return this.getTileCoordForXYAndZ_(t[0],t[1],e,!1,n)},t.prototype.getTileCoordResolution=function(t){return this.resolutions_[t[0]]},t.prototype.getTileSize=function(t){return this.tileSize_?this.tileSize_:this.tileSizes_[t]},t.prototype.getFullTileRange=function(t){return this.fullTileRanges_?this.fullTileRanges_[t]:null},t.prototype.getZForResolution=function(t,e){return we(Wt(this.resolutions_,t,e||0),this.minZoom,this.maxZoom)},t.prototype.calculateTileRanges_=function(t){for(var e=this.resolutions_.length,n=new Array(e),i=this.minZoom;i<e;++i)n[i]=this.getTileRangeForExtentAndZ(t,i);this.fullTileRanges_=n},t}();function Tu(t){var e=t.getDefaultTileGrid();return e||(e=function(t,e,n,i){return function(t,e,n,i){var r=void 0!==i?i:Pe.TOP_LEFT,o=bu(t,e,n);return new Ou({extent:t,origin:tn(t,r),resolutions:o,tileSize:n})}(Cu(t),e,n,i)}(t),t.setDefaultTileGrid(e)),e}function bu(t,e,n){for(var i=void 0!==e?e:Ee,r=nn(t),o=an(t),s=xr(void 0!==n?n:xe),a=Math.max(o/s[0],r/s[1]),u=i+1,l=new Array(u),h=0;h<u;++h)l[h]=a/Math.pow(2,h);return l}function Cu(t){var e=(t=ri(t)).getExtent();if(!e){var n=180*Ln[Mn.DEGREES]/t.getMetersPerUnit();e=Ye(-n,-n,n,n)}return e}var Su=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Ru=function(t){function e(e){var n=t.call(this,{attributions:e.attributions,attributionsCollapsible:e.attributionsCollapsible,projection:e.projection,state:e.state,wrapX:e.wrapX})||this;n.opaque_=void 0!==e.opaque&&e.opaque,n.tilePixelRatio_=void 0!==e.tilePixelRatio?e.tilePixelRatio:1,n.tileGrid=void 0!==e.tileGrid?e.tileGrid:null;var i=e.cacheSize;if(void 0===i){var r=[256,256],o=e.tileGrid;o&&xr(o.getTileSize(o.getMinZoom()),r);var s=\"screen\"in self,a=s?screen.availWidth||screen.width:1920,u=s?screen.availHeight||screen.height:1080;i=4*Math.ceil(a/r[0])*Math.ceil(u/r[1])}return n.tileCache=new lu(i),n.tmpSize=[0,0],n.key_=e.key||\"\",n.tileOptions={transition:e.transition},n.zDirection,n}return Su(e,t),e.prototype.canExpireCache=function(){return this.tileCache.canExpireCache()},e.prototype.expireCache=function(t,e){var n=this.getTileCacheForProjection(t);n&&n.expireCache(e)},e.prototype.forEachLoadedTile=function(t,e,n,i){var r=this.getTileCacheForProjection(t);if(!r)return!1;for(var o,s,a,u=!0,l=n.minX;l<=n.maxX;++l)for(var h=n.minY;h<=n.maxY;++h)s=su(e,l,h),a=!1,r.containsKey(s)&&(a=(o=r.get(s)).getState()===_e.LOADED)&&(a=!1!==i(o)),a||(u=!1);return u},e.prototype.getGutterForProjection=function(t){return 0},e.prototype.getKey=function(){return this.key_},e.prototype.setKey=function(t){this.key_!==t&&(this.key_=t,this.changed())},e.prototype.getOpaque=function(t){return this.opaque_},e.prototype.getResolutions=function(){return this.tileGrid.getResolutions()},e.prototype.getTile=function(t,e,n,r,o){return i()},e.prototype.getTileGrid=function(){return this.tileGrid},e.prototype.getTileGridForProjection=function(t){return this.tileGrid?this.tileGrid:Tu(t)},e.prototype.getTileCacheForProjection=function(t){var e=this.getProjection();return e&&!ui(e,t)?null:this.tileCache},e.prototype.getTilePixelRatio=function(t){return this.tilePixelRatio_},e.prototype.getTilePixelSize=function(t,e,n){var i,r,o,s=this.getTileGridForProjection(n),a=this.getTilePixelRatio(e),u=xr(s.getTileSize(t),this.tmpSize);return 1==a?u:(i=u,r=a,void 0===(o=this.tmpSize)&&(o=[0,0]),o[0]=i[0]*r+.5|0,o[1]=i[1]*r+.5|0,o)},e.prototype.getTileCoordForTileUrlFunction=function(t,e){var n=void 0!==e?e:this.getProjection(),i=this.getTileGridForProjection(n);return this.getWrapX()&&n.isGlobal()&&(t=function(t,e,n){var i=e[0],r=t.getTileCoordCenter(e),o=Cu(n);if(ke(o,r))return e;var s=an(o),a=Math.ceil((o[0]-r[0])/s);return r[0]+=s*a,t.getTileCoordForCoordAndZ(r,i)}(i,t,n)),function(t,e){var n=t[0],i=t[1],r=t[2];if(e.getMinZoom()>n||n>e.getMaxZoom())return!1;var o,s=e.getExtent();return!(o=s?e.getTileRangeForExtentAndZ(s,n):e.getFullTileRange(n))||o.containsXY(i,r)}(t,i)?t:null},e.prototype.clear=function(){this.tileCache.clear()},e.prototype.refresh=function(){this.clear(),t.prototype.refresh.call(this)},e.prototype.useTile=function(t,e,n,i){},e}(xu),Iu=function(t){function e(e,n){var i=t.call(this,e)||this;return i.tile=n,i}return Su(e,t),e}(R),Pu=Ru,Fu=\"tileloadstart\",Lu=\"tileloadend\",Mu=\"tileloaderror\",Au=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Du=function(t){function e(e){var n=t.call(this,{attributions:e.attributions,cacheSize:e.cacheSize,opaque:e.opaque,projection:e.projection,state:e.state,tileGrid:e.tileGrid,tilePixelRatio:e.tilePixelRatio,wrapX:e.wrapX,transition:e.transition,key:e.key,attributionsCollapsible:e.attributionsCollapsible})||this;return n.generateTileUrlFunction_=!e.tileUrlFunction,n.tileLoadFunction=e.tileLoadFunction,n.tileUrlFunction=e.tileUrlFunction?e.tileUrlFunction.bind(n):vu,n.urls=null,e.urls?n.setUrls(e.urls):e.url&&n.setUrl(e.url),n.tileLoadingKeys_={},n}return Au(e,t),e.prototype.getTileLoadFunction=function(){return this.tileLoadFunction},e.prototype.getTileUrlFunction=function(){return this.tileUrlFunction},e.prototype.getUrls=function(){return this.urls},e.prototype.handleTileChange=function(t){var e,n=t.target,i=o(n),r=n.getState();r==_e.LOADING?(this.tileLoadingKeys_[i]=!0,e=Fu):i in this.tileLoadingKeys_&&(delete this.tileLoadingKeys_[i],e=r==_e.ERROR?Mu:r==_e.LOADED||r==_e.ABORT?Lu:void 0),null!=e&&this.dispatchEvent(new Iu(e,n))},e.prototype.setTileLoadFunction=function(t){this.tileCache.clear(),this.tileLoadFunction=t,this.changed()},e.prototype.setTileUrlFunction=function(t,e){this.tileUrlFunction=t,this.tileCache.pruneExceptNewestZ(),void 0!==e?this.setKey(e):this.changed()},e.prototype.setUrl=function(t){var e=this.urls=function(t){var e=[],n=/\\{([a-z])-([a-z])\\}/.exec(t);if(n){var i=n[1].charCodeAt(0),r=n[2].charCodeAt(0),o=void 0;for(o=i;o<=r;++o)e.push(t.replace(n[0],String.fromCharCode(o)));return e}if(n=n=/\\{(\\d+)-(\\d+)\\}/.exec(t)){for(var s=parseInt(n[2],10),a=parseInt(n[1],10);a<=s;a++)e.push(t.replace(n[0],a.toString()));return e}return e.push(t),e}(t);this.setUrls(e)},e.prototype.setUrls=function(t){this.urls=t;var e=t.join(\"\\n\");this.generateTileUrlFunction_?this.setTileUrlFunction(yu(t,this.tileGrid),e):this.setKey(e)},e.prototype.useTile=function(t,e,n){var i=su(t,e,n);this.tileCache.containsKey(i)&&this.tileCache.get(i)},e}(Pu),ku=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();function Nu(t,e){t.getImage().src=e}var Gu=function(t){function e(e){var n=t.call(this,{attributions:e.attributions,cacheSize:e.cacheSize,opaque:e.opaque,projection:e.projection,state:e.state,tileGrid:e.tileGrid,tileLoadFunction:e.tileLoadFunction?e.tileLoadFunction:Nu,tilePixelRatio:e.tilePixelRatio,tileUrlFunction:e.tileUrlFunction,url:e.url,urls:e.urls,wrapX:e.wrapX,transition:e.transition,key:e.key,attributionsCollapsible:e.attributionsCollapsible})||this;return n.crossOrigin=void 0!==e.crossOrigin?e.crossOrigin:null,n.tileClass=void 0!==e.tileClass?e.tileClass:ru,n.tileCacheForProjection={},n.tileGridForProjection={},n.reprojectionErrorThreshold_=e.reprojectionErrorThreshold,n.renderReprojectionEdges_=!1,n}return ku(e,t),e.prototype.canExpireCache=function(){if(this.tileCache.canExpireCache())return!0;for(var t in this.tileCacheForProjection)if(this.tileCacheForProjection[t].canExpireCache())return!0;return!1},e.prototype.expireCache=function(t,e){var n=this.getTileCacheForProjection(t);for(var i in this.tileCache.expireCache(this.tileCache==n?e:{}),this.tileCacheForProjection){var r=this.tileCacheForProjection[i];r.expireCache(r==n?e:{})}},e.prototype.getGutterForProjection=function(t){return this.getProjection()&&t&&!ui(this.getProjection(),t)?0:this.getGutter()},e.prototype.getGutter=function(){return 0},e.prototype.getOpaque=function(e){return!(this.getProjection()&&e&&!ui(this.getProjection(),e))&&t.prototype.getOpaque.call(this,e)},e.prototype.getTileGridForProjection=function(t){var e=this.getProjection();if(!this.tileGrid||e&&!ui(e,t)){var n=o(t);return n in this.tileGridForProjection||(this.tileGridForProjection[n]=Tu(t)),this.tileGridForProjection[n]}return this.tileGrid},e.prototype.getTileCacheForProjection=function(t){var e=this.getProjection();if(!e||ui(e,t))return this.tileCache;var n=o(t);return n in this.tileCacheForProjection||(this.tileCacheForProjection[n]=new lu(this.tileCache.highWaterMark)),this.tileCacheForProjection[n]},e.prototype.createTile_=function(t,e,n,i,r,o){var s=[t,e,n],a=this.getTileCoordForTileUrlFunction(s,r),u=a?this.tileUrlFunction(a,i,r):void 0,l=new this.tileClass(s,void 0!==u?_e.IDLE:_e.EMPTY,void 0!==u?u:\"\",this.crossOrigin,this.tileLoadFunction,this.tileOptions);return l.key=o,E(l,F.CHANGE,this.handleTileChange,this),l},e.prototype.getTile=function(t,e,n,i,r){var o=this.getProjection();if(o&&r&&!ui(o,r)){var s=this.getTileCacheForProjection(r),a=[t,e,n],u=void 0,l=au(a);s.containsKey(l)&&(u=s.get(l));var h=this.getKey();if(u&&u.key==h)return u;var c=this.getTileGridForProjection(o),p=this.getTileGridForProjection(r),f=this.getTileCoordForTileUrlFunction(a,r),d=new _u(o,c,r,p,a,f,this.getTilePixelRatio(i),this.getGutter(),function(t,e,n,i){return this.getTileInternal(t,e,n,i,o)}.bind(this),this.reprojectionErrorThreshold_,this.renderReprojectionEdges_);return d.key=h,u?(d.interimTile=u,d.refreshInterimChain(),s.replace(l,d)):s.set(l,d),d}return this.getTileInternal(t,e,n,i,o||r)},e.prototype.getTileInternal=function(t,e,n,i,r){var o=null,s=su(t,e,n),a=this.getKey();if(this.tileCache.containsKey(s)){if((o=this.tileCache.get(s)).key!=a){var u=o;o=this.createTile_(t,e,n,i,r,a),u.getState()==_e.IDLE?o.interimTile=u.interimTile:o.interimTile=u,o.refreshInterimChain(),this.tileCache.replace(s,o)}}else o=this.createTile_(t,e,n,i,r,a),this.tileCache.set(s,o);return o},e.prototype.setRenderReprojectionEdges=function(t){if(this.renderReprojectionEdges_!=t){for(var e in this.renderReprojectionEdges_=t,this.tileCacheForProjection)this.tileCacheForProjection[e].clear();this.changed()}},e.prototype.setTileGridForProjection=function(t,e){var n=ri(t);if(n){var i=o(n);i in this.tileGridForProjection||(this.tileGridForProjection[i]=e)}},e}(Du),ju=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),zu=function(t){function e(e){var n=e||{},i=void 0!==n.projection?n.projection:\"EPSG:3857\",r=void 0!==n.tileGrid?n.tileGrid:function(t){var e=t||{},n=e.extent||ri(\"EPSG:3857\").getExtent(),i={extent:n,minZoom:e.minZoom,tileSize:e.tileSize,resolutions:bu(n,e.maxZoom,e.tileSize)};return new Ou(i)}({extent:Cu(i),maxZoom:n.maxZoom,minZoom:n.minZoom,tileSize:n.tileSize});return t.call(this,{attributions:n.attributions,cacheSize:n.cacheSize,crossOrigin:n.crossOrigin,opaque:n.opaque,projection:i,reprojectionErrorThreshold:n.reprojectionErrorThreshold,tileGrid:r,tileLoadFunction:n.tileLoadFunction,tilePixelRatio:n.tilePixelRatio,tileUrlFunction:n.tileUrlFunction,url:n.url,urls:n.urls,wrapX:void 0===n.wrapX||n.wrapX,transition:n.transition,attributionsCollapsible:n.attributionsCollapsible})||this}return ju(e,t),e}(Gu),Yu={ARRAY_BUFFER:\"arraybuffer\",JSON:\"json\",TEXT:\"text\",XML:\"xml\"};function Xu(t,e){return function(t,e,n,i){return function(r,o,s){var a=new XMLHttpRequest;a.open(\"GET\",\"function\"==typeof t?t(r,o,s):t,!0),e.getType()==Yu.ARRAY_BUFFER&&(a.responseType=\"arraybuffer\"),a.onload=function(t){if(!a.status||a.status>=200&&a.status<300){var o=e.getType(),u=void 0;o==Yu.JSON||o==Yu.TEXT?u=a.responseText:o==Yu.XML?(u=a.responseXML)||(u=(new DOMParser).parseFromString(a.responseText,\"application/xml\")):o==Yu.ARRAY_BUFFER&&(u=a.response),u?n.call(this,e.readFeatures(u,{extent:r,featureProjection:s}),e.readProjection(u)):i.call(this)}else i.call(this)}.bind(this),a.onerror=function(){i.call(this)}.bind(this),a.send()}}(t,e,function(t,e){\"function\"==typeof this.addFeatures&&this.addFeatures(t)},S)}function Uu(t,e){return[[-1/0,-1/0,1/0,1/0]]}var Ku=\"addfeature\",Wu=\"changefeature\",Bu=\"clear\",Zu=\"removefeature\",Vu=function(){function t(t){this.rbush_=ra()(t,void 0),this.items_={}}return t.prototype.insert=function(t,e){var n={minX:t[0],minY:t[1],maxX:t[2],maxY:t[3],value:e};this.rbush_.insert(n),this.items_[o(e)]=n},t.prototype.load=function(t,e){for(var n=new Array(e.length),i=0,r=e.length;i<r;i++){var s=t[i],a=e[i],u={minX:s[0],minY:s[1],maxX:s[2],maxY:s[3],value:a};n[i]=u,this.items_[o(a)]=u}this.rbush_.load(n)},t.prototype.remove=function(t){var e=o(t),n=this.items_[e];return delete this.items_[e],null!==this.rbush_.remove(n)},t.prototype.update=function(t,e){var n=this.items_[o(e)];Ke([n.minX,n.minY,n.maxX,n.maxY],t)||(this.remove(e),this.insert(t,e))},t.prototype.getAll=function(){return this.rbush_.all().map(function(t){return t.value})},t.prototype.getInExtent=function(t){var e={minX:t[0],minY:t[1],maxX:t[2],maxY:t[3]};return this.rbush_.search(e).map(function(t){return t.value})},t.prototype.forEach=function(t){return this.forEach_(this.getAll(),t)},t.prototype.forEachInExtent=function(t,e){return this.forEach_(this.getInExtent(t),e)},t.prototype.forEach_=function(t,e){for(var n,i=0,r=t.length;i<r;i++)if(n=e(t[i]))return n;return n},t.prototype.isEmpty=function(){return _(this.items_)},t.prototype.clear=function(){this.rbush_.clear(),this.items_={}},t.prototype.getExtent=function(t){var e=this.rbush_.toJSON();return Ye(e.minX,e.minY,e.maxX,e.maxY,t)},t.prototype.concat=function(t){for(var e in this.rbush_.load(t.rbush_.all()),t.items_)this.items_[e]=t.items_[e]},t}(),Hu=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),qu=function(t){function e(e,n){var i=t.call(this,e)||this;return i.feature=n,i}return Hu(e,t),e}(R),Ju=function(t){function e(e){var n=this,i=e||{};(n=t.call(this,{attributions:i.attributions,projection:void 0,state:yr.READY,wrapX:void 0===i.wrapX||i.wrapX})||this).loader_=S,n.format_=i.format,n.overlaps_=null==i.overlaps||i.overlaps,n.url_=i.url,void 0!==i.loader?n.loader_=i.loader:void 0!==n.url_&&(ge(n.format_,7),n.loader_=Xu(n.url_,n.format_)),n.strategy_=void 0!==i.strategy?i.strategy:Uu;var r,o,s=void 0===i.useSpatialIndex||i.useSpatialIndex;return n.featuresRtree_=s?new Vu:null,n.loadedExtentsRtree_=new Vu,n.nullGeometryFeatures_={},n.idIndex_={},n.undefIdIndex_={},n.featureChangeKeys_={},n.featuresCollection_=null,Array.isArray(i.features)?o=i.features:i.features&&(o=(r=i.features).getArray()),s||void 0!==r||(r=new U(o)),void 0!==o&&n.addFeaturesInternal(o),void 0!==r&&n.bindFeaturesCollection_(r),n}return Hu(e,t),e.prototype.addFeature=function(t){this.addFeatureInternal(t),this.changed()},e.prototype.addFeatureInternal=function(t){var e=o(t);if(this.addToIndex_(e,t)){this.setupChangeEvents_(e,t);var n=t.getGeometry();if(n){var i=n.getExtent();this.featuresRtree_&&this.featuresRtree_.insert(i,t)}else this.nullGeometryFeatures_[e]=t;this.dispatchEvent(new qu(Ku,t))}},e.prototype.setupChangeEvents_=function(t,e){this.featureChangeKeys_[t]=[E(e,F.CHANGE,this.handleFeatureChange_,this),E(e,c,this.handleFeatureChange_,this)]},e.prototype.addToIndex_=function(t,e){var n=!0,i=e.getId();return void 0!==i?i.toString()in this.idIndex_?n=!1:this.idIndex_[i.toString()]=e:(ge(!(t in this.undefIdIndex_),30),this.undefIdIndex_[t]=e),n},e.prototype.addFeatures=function(t){this.addFeaturesInternal(t),this.changed()},e.prototype.addFeaturesInternal=function(t){for(var e=[],n=[],i=[],r=0,s=t.length;r<s;r++){var a=o(l=t[r]);this.addToIndex_(a,l)&&n.push(l)}r=0;for(var u=n.length;r<u;r++){var l;a=o(l=n[r]);this.setupChangeEvents_(a,l);var h=l.getGeometry();if(h){var c=h.getExtent();e.push(c),i.push(l)}else this.nullGeometryFeatures_[a]=l}this.featuresRtree_&&this.featuresRtree_.load(e,i);r=0;for(var p=n.length;r<p;r++)this.dispatchEvent(new qu(Ku,n[r]))},e.prototype.bindFeaturesCollection_=function(t){var e=!1;E(this,Ku,function(n){e||(e=!0,t.push(n.feature),e=!1)}),E(this,Zu,function(n){e||(e=!0,t.remove(n.feature),e=!1)}),E(t,h.ADD,function(t){e||(e=!0,this.addFeature(t.element),e=!1)},this),E(t,h.REMOVE,function(t){e||(e=!0,this.removeFeature(t.element),e=!1)},this),this.featuresCollection_=t},e.prototype.clear=function(t){if(t){for(var e in this.featureChangeKeys_){this.featureChangeKeys_[e].forEach(O)}this.featuresCollection_||(this.featureChangeKeys_={},this.idIndex_={},this.undefIdIndex_={})}else if(this.featuresRtree_)for(var n in this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this)),this.nullGeometryFeatures_)this.removeFeatureInternal(this.nullGeometryFeatures_[n]);this.featuresCollection_&&this.featuresCollection_.clear(),this.featuresRtree_&&this.featuresRtree_.clear(),this.nullGeometryFeatures_={};var i=new qu(Bu);this.dispatchEvent(i),this.changed()},e.prototype.forEachFeature=function(t){if(this.featuresRtree_)return this.featuresRtree_.forEach(t);this.featuresCollection_&&this.featuresCollection_.forEach(t)},e.prototype.forEachFeatureAtCoordinateDirect=function(t,e){var n=[t[0],t[1],t[0],t[1]];return this.forEachFeatureInExtent(n,function(n){return n.getGeometry().intersectsCoordinate(t)?e(n):void 0})},e.prototype.forEachFeatureInExtent=function(t,e){if(this.featuresRtree_)return this.featuresRtree_.forEachInExtent(t,e);this.featuresCollection_&&this.featuresCollection_.forEach(e)},e.prototype.forEachFeatureIntersectingExtent=function(t,e){return this.forEachFeatureInExtent(t,function(n){if(n.getGeometry().intersectsExtent(t)){var i=e(n);if(i)return i}})},e.prototype.getFeaturesCollection=function(){return this.featuresCollection_},e.prototype.getFeatures=function(){var t;return this.featuresCollection_?t=this.featuresCollection_.getArray():this.featuresRtree_&&(t=this.featuresRtree_.getAll(),_(this.nullGeometryFeatures_)||Zt(t,d(this.nullGeometryFeatures_))),t},e.prototype.getFeaturesAtCoordinate=function(t){var e=[];return this.forEachFeatureAtCoordinateDirect(t,function(t){e.push(t)}),e},e.prototype.getFeaturesInExtent=function(t){return this.featuresRtree_.getInExtent(t)},e.prototype.getClosestFeatureToCoordinate=function(t,e){var n=t[0],i=t[1],r=null,o=[NaN,NaN],s=1/0,a=[-1/0,-1/0,1/0,1/0],u=e||b;return this.featuresRtree_.forEachInExtent(a,function(t){if(u(t)){var e=t.getGeometry(),l=s;if((s=e.closestPointXY(n,i,o,s))<l){r=t;var h=Math.sqrt(s);a[0]=n-h,a[1]=i-h,a[2]=n+h,a[3]=i+h}}}),r},e.prototype.getExtent=function(t){return this.featuresRtree_.getExtent(t)},e.prototype.getFeatureById=function(t){var e=this.idIndex_[t.toString()];return void 0!==e?e:null},e.prototype.getFormat=function(){return this.format_},e.prototype.getOverlaps=function(){return this.overlaps_},e.prototype.getUrl=function(){return this.url_},e.prototype.handleFeatureChange_=function(t){var e=t.target,n=o(e),i=e.getGeometry();if(i){var r=i.getExtent();n in this.nullGeometryFeatures_?(delete this.nullGeometryFeatures_[n],this.featuresRtree_&&this.featuresRtree_.insert(r,e)):this.featuresRtree_&&this.featuresRtree_.update(r,e)}else n in this.nullGeometryFeatures_||(this.featuresRtree_&&this.featuresRtree_.remove(e),this.nullGeometryFeatures_[n]=e);var s=e.getId();if(void 0!==s){var a=s.toString();n in this.undefIdIndex_?(delete this.undefIdIndex_[n],this.idIndex_[a]=e):this.idIndex_[a]!==e&&(this.removeFromIdIndex_(e),this.idIndex_[a]=e)}else n in this.undefIdIndex_||(this.removeFromIdIndex_(e),this.undefIdIndex_[n]=e);this.changed(),this.dispatchEvent(new qu(Wu,e))},e.prototype.hasFeature=function(t){var e=t.getId();return void 0!==e?e in this.idIndex_:o(t)in this.undefIdIndex_},e.prototype.isEmpty=function(){return this.featuresRtree_.isEmpty()&&_(this.nullGeometryFeatures_)},e.prototype.loadFeatures=function(t,e,n){var i=this.loadedExtentsRtree_,r=this.strategy_(t,e);this.loading=!1;for(var o=function(t,o){var a=r[t];i.forEachInExtent(a,function(t){return Ne(t.extent,a)})||(s.loader_.call(s,a,e,n),i.insert(a,{extent:a.slice()}),s.loading=s.loader_!==S)},s=this,a=0,u=r.length;a<u;++a)o(a)},e.prototype.refresh=function(){this.clear(!0),this.loadedExtentsRtree_.clear(),t.prototype.refresh.call(this)},e.prototype.removeLoadedExtent=function(t){var e,n=this.loadedExtentsRtree_;n.forEachInExtent(t,function(n){if(Ke(n.extent,t))return e=n,!0}),e&&n.remove(e)},e.prototype.removeFeature=function(t){var e=o(t);e in this.nullGeometryFeatures_?delete this.nullGeometryFeatures_[e]:this.featuresRtree_&&this.featuresRtree_.remove(t),this.removeFeatureInternal(t),this.changed()},e.prototype.removeFeatureInternal=function(t){var e=o(t);this.featureChangeKeys_[e].forEach(O),delete this.featureChangeKeys_[e];var n=t.getId();void 0!==n?delete this.idIndex_[n.toString()]:delete this.undefIdIndex_[e],this.dispatchEvent(new qu(Zu,t))},e.prototype.removeFromIdIndex_=function(t){var e=!1;for(var n in this.idIndex_)if(this.idIndex_[n]===t){delete this.idIndex_[n],e=!0;break}return e},e.prototype.setLoader=function(t){this.loader_=t},e.prototype.setUrl=function(t){ge(this.format_,7),this.setLoader(Xu(t,this.format_))},e}(xu),Qu=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();var $u=function(t){function e(e){var n=t.call(this)||this;if(n.id_=void 0,n.geometryName_=\"geometry\",n.style_=null,n.styleFunction_=void 0,n.geometryChangeKey_=null,E(n,G(n.geometryName_),n.handleGeometryChanged_,n),e)if(\"function\"==typeof e.getSimplifiedGeometry){var i=e;n.setGeometry(i)}else{var r=e;n.setProperties(r)}return n}return Qu(e,t),e.prototype.clone=function(){var t=new e(this.getProperties());t.setGeometryName(this.getGeometryName());var n=this.getGeometry();n&&t.setGeometry(n.clone());var i=this.getStyle();return i&&t.setStyle(i),t},e.prototype.getGeometry=function(){return this.get(this.geometryName_)},e.prototype.getId=function(){return this.id_},e.prototype.getGeometryName=function(){return this.geometryName_},e.prototype.getStyle=function(){return this.style_},e.prototype.getStyleFunction=function(){return this.styleFunction_},e.prototype.handleGeometryChange_=function(){this.changed()},e.prototype.handleGeometryChanged_=function(){this.geometryChangeKey_&&(O(this.geometryChangeKey_),this.geometryChangeKey_=null);var t=this.getGeometry();t&&(this.geometryChangeKey_=E(t,F.CHANGE,this.handleGeometryChange_,this)),this.changed()},e.prototype.setGeometry=function(t){this.set(this.geometryName_,t)},e.prototype.setStyle=function(t){this.style_=t,this.styleFunction_=t?function(t){if(\"function\"==typeof t)return t;var e;if(Array.isArray(t))e=t;else{ge(\"function\"==typeof t.getZIndex,41);var n=t;e=[n]}return function(){return e}}(t):void 0,this.changed()},e.prototype.setId=function(t){this.id_=t,this.changed()},e.prototype.setGeometryName=function(t){w(this,G(this.geometryName_),this.handleGeometryChanged_,this),this.geometryName_=t,E(this,G(this.geometryName_),this.handleGeometryChanged_,this),this.handleGeometryChanged_()},e}(j),tl=function(){function t(){this.dataProjection=null,this.defaultFeatureProjection=null}return t.prototype.getReadOptions=function(t,e){var n;return e&&(n={dataProjection:e.dataProjection?e.dataProjection:this.readProjection(t),featureProjection:e.featureProjection}),this.adaptOptions(n)},t.prototype.adaptOptions=function(t){return p({dataProjection:this.dataProjection,featureProjection:this.defaultFeatureProjection},t)},t.prototype.getType=function(){return i()},t.prototype.readFeature=function(t,e){return i()},t.prototype.readFeatures=function(t,e){return i()},t.prototype.readGeometry=function(t,e){return i()},t.prototype.readProjection=function(t){return i()},t.prototype.writeFeature=function(t,e){return i()},t.prototype.writeFeatures=function(t,e){return i()},t.prototype.writeGeometry=function(t,e){return i()},t}();function el(t,e,n){var i,r=n?ri(n.featureProjection):null,o=n?ri(n.dataProjection):null;if(i=r&&o&&!ui(r,o)?(e?t.clone():t).transform(e?r:o,e?o:r):t,e&&n&&void 0!==n.decimals){var s=Math.pow(10,n.decimals);i===t&&(i=t.clone()),i.applyTransform(function(t){for(var e=0,n=t.length;e<n;++e)t[e]=Math.round(t[e]*s)/s;return t})}return i}var nl=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();function il(t){if(\"string\"==typeof t){var e=JSON.parse(t);return e||null}return null!==t?t:null}var rl=function(t){function e(){return t.call(this)||this}return nl(e,t),e.prototype.getType=function(){return Yu.JSON},e.prototype.readFeature=function(t,e){return this.readFeatureFromObject(il(t),this.getReadOptions(t,e))},e.prototype.readFeatures=function(t,e){return this.readFeaturesFromObject(il(t),this.getReadOptions(t,e))},e.prototype.readFeatureFromObject=function(t,e){return i()},e.prototype.readFeaturesFromObject=function(t,e){return i()},e.prototype.readGeometry=function(t,e){return this.readGeometryFromObject(il(t),this.getReadOptions(t,e))},e.prototype.readGeometryFromObject=function(t,e){return i()},e.prototype.readProjection=function(t){return this.readProjectionFromObject(il(t))},e.prototype.readProjectionFromObject=function(t){return i()},e.prototype.writeFeature=function(t,e){return JSON.stringify(this.writeFeatureObject(t,e))},e.prototype.writeFeatureObject=function(t,e){return i()},e.prototype.writeFeatures=function(t,e){return JSON.stringify(this.writeFeaturesObject(t,e))},e.prototype.writeFeaturesObject=function(t,e){return i()},e.prototype.writeGeometry=function(t,e){return JSON.stringify(this.writeGeometryObject(t,e))},e.prototype.writeGeometryObject=function(t,e){return i()},e}(tl),ol=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();function sl(t){for(var e=[],n=0,i=t.length;n<i;++n)e.push(t[n].clone());return e}var al=function(t){function e(e){var n=t.call(this)||this;return n.geometries_=e||null,n.listenGeometriesChange_(),n}return ol(e,t),e.prototype.unlistenGeometriesChange_=function(){if(this.geometries_)for(var t=0,e=this.geometries_.length;t<e;++t)w(this.geometries_[t],F.CHANGE,this.changed,this)},e.prototype.listenGeometriesChange_=function(){if(this.geometries_)for(var t=0,e=this.geometries_.length;t<e;++t)E(this.geometries_[t],F.CHANGE,this.changed,this)},e.prototype.clone=function(){var t=new e(null);return t.setGeometries(this.geometries_),t},e.prototype.closestPointXY=function(t,e,n,i){if(i<De(this.getExtent(),t,e))return i;for(var r=this.geometries_,o=0,s=r.length;o<s;++o)i=r[o].closestPointXY(t,e,n,i);return i},e.prototype.containsXY=function(t,e){for(var n=this.geometries_,i=0,r=n.length;i<r;++i)if(n[i].containsXY(t,e))return!0;return!1},e.prototype.computeExtent=function(t){Xe(t);for(var e=this.geometries_,n=0,i=e.length;n<i;++n)We(t,e[n].getExtent());return t},e.prototype.getGeometries=function(){return sl(this.geometries_)},e.prototype.getGeometriesArray=function(){return this.geometries_},e.prototype.getSimplifiedGeometry=function(t){if(this.simplifiedGeometryRevision!=this.getRevision()&&(f(this.simplifiedGeometryCache),this.simplifiedGeometryMaxMinSquaredTolerance=0,this.simplifiedGeometryRevision=this.getRevision()),t<0||0!==this.simplifiedGeometryMaxMinSquaredTolerance&&t<this.simplifiedGeometryMaxMinSquaredTolerance)return this;var n=t.toString();if(this.simplifiedGeometryCache.hasOwnProperty(n))return this.simplifiedGeometryCache[n];for(var i=[],r=this.geometries_,o=!1,s=0,a=r.length;s<a;++s){var u=r[s],l=u.getSimplifiedGeometry(t);i.push(l),l!==u&&(o=!0)}if(o){var h=new e(null);return h.setGeometriesArray(i),this.simplifiedGeometryCache[n]=h,h}return this.simplifiedGeometryMaxMinSquaredTolerance=t,this},e.prototype.getType=function(){return Cn.GEOMETRY_COLLECTION},e.prototype.intersectsExtent=function(t){for(var e=this.geometries_,n=0,i=e.length;n<i;++n)if(e[n].intersectsExtent(t))return!0;return!1},e.prototype.isEmpty=function(){return 0===this.geometries_.length},e.prototype.rotate=function(t,e){for(var n=this.geometries_,i=0,r=n.length;i<r;++i)n[i].rotate(t,e);this.changed()},e.prototype.scale=function(t,e,n){var i=n;i||(i=$e(this.getExtent()));for(var r=this.geometries_,o=0,s=r.length;o<s;++o)r[o].scale(t,e,i);this.changed()},e.prototype.setGeometries=function(t){this.setGeometriesArray(sl(t))},e.prototype.setGeometriesArray=function(t){this.unlistenGeometriesChange_(),this.geometries_=t,this.listenGeometriesChange_(),this.changed()},e.prototype.applyTransform=function(t){for(var e=this.geometries_,n=0,i=e.length;n<i;++n)e[n].applyTransform(t);this.changed()},e.prototype.translate=function(t,e){for(var n=this.geometries_,i=0,r=n.length;i<r;++i)n[i].translate(t,e);this.changed()},e.prototype.disposeInternal=function(){this.unlistenGeometriesChange_(),t.prototype.disposeInternal.call(this)},e}(mi);function ul(t,e,n,i,r,o){var s=NaN,a=NaN,u=(n-e)/i;if(1===u)s=t[e],a=t[e+1];else if(2==u)s=(1-r)*t[e]+r*t[e+i],a=(1-r)*t[e+1]+r*t[e+i+1];else if(0!==u){for(var l=t[e],h=t[e+1],c=0,p=[0],f=e+i;f<n;f+=i){var d=t[f],_=t[f+1];c+=Math.sqrt((d-l)*(d-l)+(_-h)*(_-h)),p.push(c),l=d,h=_}var g=r*c,y=function(t,e,n){for(var i,r,o=n||Ut,s=0,a=t.length,u=!1;s<a;)(r=+o(t[i=s+(a-s>>1)],e))<0?s=i+1:(a=i,u=!r);return u?s:~s}(p,g);if(y<0){var v=(g-p[-y-2])/(p[-y-1]-p[-y-2]),m=e+(-y-2)*i;s=Re(t[m],t[m+i],v),a=Re(t[m+1],t[m+i+1],v)}else s=t[e+y*i],a=t[e+y*i+1]}return o?(o[0]=s,o[1]=a,o):[s,a]}function ll(t,e,n,i,r,o){if(n==e)return null;var s;if(r<t[e+i-1])return o?((s=t.slice(e,e+i))[i-1]=r,s):null;if(t[n-1]<r)return o?((s=t.slice(n-i,n))[i-1]=r,s):null;if(r==t[e+i-1])return t.slice(e,e+i);for(var a=e/i,u=n/i;a<u;){var l=a+u>>1;r<t[(l+1)*i-1]?u=l:a=l+1}var h=t[a*i-1];if(r==h)return t.slice((a-1)*i,(a-1)*i+i);var c=(r-h)/(t[(a+1)*i-1]-h);s=[];for(var p=0;p<i-1;++p)s.push(Re(t[(a-1)*i+p],t[a*i+p],c));return s.push(r),s}var hl=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),cl=function(t){function e(e,n){var i=t.call(this)||this;return i.flatMidpoint_=null,i.flatMidpointRevision_=-1,i.maxDelta_=-1,i.maxDeltaRevision_=-1,void 0===n||Array.isArray(e[0])?i.setCoordinates(e,n):i.setFlatCoordinates(n,e),i}return hl(e,t),e.prototype.appendCoordinate=function(t){this.flatCoordinates?Zt(this.flatCoordinates,t):this.flatCoordinates=t.slice(),this.changed()},e.prototype.clone=function(){return new e(this.flatCoordinates.slice(),this.layout)},e.prototype.closestPointXY=function(t,e,n,i){return i<De(this.getExtent(),t,e)?i:(this.maxDeltaRevision_!=this.getRevision()&&(this.maxDelta_=Math.sqrt(Ci(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,0)),this.maxDeltaRevision_=this.getRevision()),Ri(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,this.maxDelta_,!1,t,e,n,i))},e.prototype.forEachSegment=function(t){return Vi(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,t)},e.prototype.getCoordinateAtM=function(t,e){if(this.layout!=Sn.XYM&&this.layout!=Sn.XYZM)return null;var n=void 0!==e&&e;return ll(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,t,n)},e.prototype.getCoordinates=function(){return Li(this.flatCoordinates,0,this.flatCoordinates.length,this.stride)},e.prototype.getCoordinateAt=function(t,e){return ul(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,t,e)},e.prototype.getLength=function(){return Sa(this.flatCoordinates,0,this.flatCoordinates.length,this.stride)},e.prototype.getFlatMidpoint=function(){return this.flatMidpointRevision_!=this.getRevision()&&(this.flatMidpoint_=this.getCoordinateAt(.5,this.flatMidpoint_),this.flatMidpointRevision_=this.getRevision()),this.flatMidpoint_},e.prototype.getSimplifiedGeometryInternal=function(t){var n=[];return n.length=Di(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,t,n,0),new e(n,Sn.XY)},e.prototype.getType=function(){return Cn.LINE_STRING},e.prototype.intersectsExtent=function(t){return Hi(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,t)},e.prototype.setCoordinates=function(t,e){this.setLayout(e,t,1),this.flatCoordinates||(this.flatCoordinates=[]),this.flatCoordinates.length=Pi(this.flatCoordinates,0,t,this.stride),this.changed()},e}(wi),pl=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),fl=function(t){function e(e,n,i){var r=t.call(this)||this;if(r.ends_=[],r.maxDelta_=-1,r.maxDeltaRevision_=-1,Array.isArray(e[0]))r.setCoordinates(e,n);else if(void 0!==n&&i)r.setFlatCoordinates(n,e),r.ends_=i;else{for(var o=r.getLayout(),s=e,a=[],u=[],l=0,h=s.length;l<h;++l){var c=s[l];0===l&&(o=c.getLayout()),Zt(a,c.getFlatCoordinates()),u.push(a.length)}r.setFlatCoordinates(o,a),r.ends_=u}return r}return pl(e,t),e.prototype.appendLineString=function(t){this.flatCoordinates?Zt(this.flatCoordinates,t.getFlatCoordinates().slice()):this.flatCoordinates=t.getFlatCoordinates().slice(),this.ends_.push(this.flatCoordinates.length),this.changed()},e.prototype.clone=function(){return new e(this.flatCoordinates.slice(),this.layout,this.ends_.slice())},e.prototype.closestPointXY=function(t,e,n,i){return i<De(this.getExtent(),t,e)?i:(this.maxDeltaRevision_!=this.getRevision()&&(this.maxDelta_=Math.sqrt(Si(this.flatCoordinates,0,this.ends_,this.stride,0)),this.maxDeltaRevision_=this.getRevision()),Ii(this.flatCoordinates,0,this.ends_,this.stride,this.maxDelta_,!1,t,e,n,i))},e.prototype.getCoordinateAtM=function(t,e,n){if(this.layout!=Sn.XYM&&this.layout!=Sn.XYZM||0===this.flatCoordinates.length)return null;var i=void 0!==e&&e,r=void 0!==n&&n;return function(t,e,n,i,r,o,s){if(s)return ll(t,e,n[n.length-1],i,r,o);var a;if(r<t[i-1])return o?((a=t.slice(0,i))[i-1]=r,a):null;if(t[t.length-1]<r)return o?((a=t.slice(t.length-i))[i-1]=r,a):null;for(var u=0,l=n.length;u<l;++u){var h=n[u];if(e!=h){if(r<t[e+i-1])return null;if(r<=t[h-1])return ll(t,e,h,i,r,!1);e=h}}return null}(this.flatCoordinates,0,this.ends_,this.stride,t,i,r)},e.prototype.getCoordinates=function(){return Mi(this.flatCoordinates,0,this.ends_,this.stride)},e.prototype.getEnds=function(){return this.ends_},e.prototype.getLineString=function(t){return t<0||this.ends_.length<=t?null:new cl(this.flatCoordinates.slice(0===t?0:this.ends_[t-1],this.ends_[t]),this.layout)},e.prototype.getLineStrings=function(){for(var t=this.flatCoordinates,e=this.ends_,n=this.layout,i=[],r=0,o=0,s=e.length;o<s;++o){var a=e[o],u=new cl(t.slice(r,a),n);i.push(u),r=a}return i},e.prototype.getFlatMidpoints=function(){for(var t=[],e=this.flatCoordinates,n=0,i=this.ends_,r=this.stride,o=0,s=i.length;o<s;++o){var a=i[o];Zt(t,ul(e,n,a,r,.5)),n=a}return t},e.prototype.getSimplifiedGeometryInternal=function(t){var n=[],i=[];return n.length=ki(this.flatCoordinates,0,this.ends_,this.stride,t,n,0,i),new e(n,Sn.XY,i)},e.prototype.getType=function(){return Cn.MULTI_LINE_STRING},e.prototype.intersectsExtent=function(t){return function(t,e,n,i,r){for(var o=0,s=n.length;o<s;++o){if(Hi(t,e,n[o],i,r))return!0;e=n[o]}return!1}(this.flatCoordinates,0,this.ends_,this.stride,t)},e.prototype.setCoordinates=function(t,e){this.setLayout(e,t,2),this.flatCoordinates||(this.flatCoordinates=[]);var n=Fi(this.flatCoordinates,0,t,this.stride,this.ends_);this.flatCoordinates.length=0===n.length?0:n[n.length-1],this.changed()},e}(wi),dl=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),_l=function(t){function e(e,n){var i=t.call(this)||this;return n&&!Array.isArray(e[0])?i.setFlatCoordinates(n,e):i.setCoordinates(e,n),i}return dl(e,t),e.prototype.appendPoint=function(t){this.flatCoordinates?Zt(this.flatCoordinates,t.getFlatCoordinates()):this.flatCoordinates=t.getFlatCoordinates().slice(),this.changed()},e.prototype.clone=function(){return new e(this.flatCoordinates.slice(),this.layout)},e.prototype.closestPointXY=function(t,e,n,i){if(i<De(this.getExtent(),t,e))return i;for(var r=this.flatCoordinates,o=this.stride,s=0,a=r.length;s<a;s+=o){var u=be(t,e,r[s],r[s+1]);if(u<i){i=u;for(var l=0;l<o;++l)n[l]=r[s+l];n.length=o}}return i},e.prototype.getCoordinates=function(){return Li(this.flatCoordinates,0,this.flatCoordinates.length,this.stride)},e.prototype.getPoint=function(t){var e=this.flatCoordinates?this.flatCoordinates.length/this.stride:0;return t<0||e<=t?null:new Ui(this.flatCoordinates.slice(t*this.stride,(t+1)*this.stride),this.layout)},e.prototype.getPoints=function(){for(var t=this.flatCoordinates,e=this.layout,n=this.stride,i=[],r=0,o=t.length;r<o;r+=n){var s=new Ui(t.slice(r,r+n),e);i.push(s)}return i},e.prototype.getType=function(){return Cn.MULTI_POINT},e.prototype.intersectsExtent=function(t){for(var e=this.flatCoordinates,n=this.stride,i=0,r=e.length;i<r;i+=n){if(Ge(t,e[i],e[i+1]))return!0}return!1},e.prototype.setCoordinates=function(t,e){this.setLayout(e,t,1),this.flatCoordinates||(this.flatCoordinates=[]),this.flatCoordinates.length=Pi(this.flatCoordinates,0,t,this.stride),this.changed()},e}(wi);var gl=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),yl=function(t){function e(e,n,i){var r=t.call(this)||this;if(r.endss_=[],r.flatInteriorPointsRevision_=-1,r.flatInteriorPoints_=null,r.maxDelta_=-1,r.maxDeltaRevision_=-1,r.orientedRevision_=-1,r.orientedFlatCoordinates_=null,!i&&!Array.isArray(e[0])){for(var o=r.getLayout(),s=e,a=[],u=[],l=0,h=s.length;l<h;++l){var c=s[l];0===l&&(o=c.getLayout());for(var p=a.length,f=c.getEnds(),d=0,_=f.length;d<_;++d)f[d]+=p;Zt(a,c.getFlatCoordinates()),u.push(f)}n=o,e=a,i=u}return void 0!==n&&i?(r.setFlatCoordinates(n,e),r.endss_=i):r.setCoordinates(e,n),r}return gl(e,t),e.prototype.appendPolygon=function(t){var e;if(this.flatCoordinates){var n=this.flatCoordinates.length;Zt(this.flatCoordinates,t.getFlatCoordinates());for(var i=0,r=(e=t.getEnds().slice()).length;i<r;++i)e[i]+=n}else this.flatCoordinates=t.getFlatCoordinates().slice(),e=t.getEnds().slice(),this.endss_.push();this.endss_.push(e),this.changed()},e.prototype.clone=function(){for(var t=this.endss_.length,n=new Array(t),i=0;i<t;++i)n[i]=this.endss_[i].slice();return new e(this.flatCoordinates.slice(),this.layout,n)},e.prototype.closestPointXY=function(t,e,n,i){return i<De(this.getExtent(),t,e)?i:(this.maxDeltaRevision_!=this.getRevision()&&(this.maxDelta_=Math.sqrt(function(t,e,n,i,r){for(var o=0,s=n.length;o<s;++o){var a=n[o];r=Si(t,e,a,i,r),e=a[a.length-1]}return r}(this.flatCoordinates,0,this.endss_,this.stride,0)),this.maxDeltaRevision_=this.getRevision()),function(t,e,n,i,r,o,s,a,u,l,h){for(var c=h||[NaN,NaN],p=0,f=n.length;p<f;++p){var d=n[p];l=Ii(t,e,d,i,r,o,s,a,u,l,c),e=d[d.length-1]}return l}(this.getOrientedFlatCoordinates(),0,this.endss_,this.stride,this.maxDelta_,!0,t,e,n,i))},e.prototype.containsXY=function(t,e){return function(t,e,n,i,r,o){if(0===n.length)return!1;for(var s=0,a=n.length;s<a;++s){var u=n[s];if(Bi(t,e,u,i,r,o))return!0;e=u[u.length-1]}return!1}(this.getOrientedFlatCoordinates(),0,this.endss_,this.stride,t,e)},e.prototype.getArea=function(){return function(t,e,n,i){for(var r=0,o=0,s=n.length;o<s;++o){var a=n[o];r+=Ti(t,e,a,i),e=a[a.length-1]}return r}(this.getOrientedFlatCoordinates(),0,this.endss_,this.stride)},e.prototype.getCoordinates=function(t){var e;return void 0!==t?er(e=this.getOrientedFlatCoordinates().slice(),0,this.endss_,this.stride,t):e=this.flatCoordinates,Ai(e,0,this.endss_,this.stride)},e.prototype.getEndss=function(){return this.endss_},e.prototype.getFlatInteriorPoints=function(){if(this.flatInteriorPointsRevision_!=this.getRevision()){var t=function(t,e,n,i){for(var r=[],o=[1/0,1/0,-1/0,-1/0],s=0,a=n.length;s<a;++s){var u=n[s];o=Ue(t,e,u[0],i),r.push((o[0]+o[2])/2,(o[1]+o[3])/2),e=u[u.length-1]}return r}(this.flatCoordinates,0,this.endss_,this.stride);this.flatInteriorPoints_=function(t,e,n,i,r){for(var o=[],s=0,a=n.length;s<a;++s){var u=n[s];o=Zi(t,e,u,i,r,2*s,o),e=u[u.length-1]}return o}(this.getOrientedFlatCoordinates(),0,this.endss_,this.stride,t),this.flatInteriorPointsRevision_=this.getRevision()}return this.flatInteriorPoints_},e.prototype.getInteriorPoints=function(){return new _l(this.getFlatInteriorPoints().slice(),Sn.XYM)},e.prototype.getOrientedFlatCoordinates=function(){if(this.orientedRevision_!=this.getRevision()){var t=this.flatCoordinates;!function(t,e,n,i,r){for(var o=0,s=n.length;o<s;++o){var a=n[o];if(!$i(t,e,a,i,r))return!1;a.length&&(e=a[a.length-1])}return!0}(t,0,this.endss_,this.stride)?(this.orientedFlatCoordinates_=t.slice(),this.orientedFlatCoordinates_.length=er(this.orientedFlatCoordinates_,0,this.endss_,this.stride)):this.orientedFlatCoordinates_=t,this.orientedRevision_=this.getRevision()}return this.orientedFlatCoordinates_},e.prototype.getSimplifiedGeometryInternal=function(t){var n=[],i=[];return n.length=function(t,e,n,i,r,o,s,a){for(var u=0,l=n.length;u<l;++u){var h=n[u],c=[];s=ji(t,e,h,i,r,o,s,c),a.push(c),e=h[h.length-1]}return s}(this.flatCoordinates,0,this.endss_,this.stride,Math.sqrt(t),n,0,i),new e(n,Sn.XY,i)},e.prototype.getPolygon=function(t){if(t<0||this.endss_.length<=t)return null;var e;if(0===t)e=0;else{var n=this.endss_[t-1];e=n[n.length-1]}var i=this.endss_[t].slice(),r=i[i.length-1];if(0!==e)for(var o=0,s=i.length;o<s;++o)i[o]-=e;return new rr(this.flatCoordinates.slice(e,r),this.layout,i)},e.prototype.getPolygons=function(){for(var t=this.layout,e=this.flatCoordinates,n=this.endss_,i=[],r=0,o=0,s=n.length;o<s;++o){var a=n[o].slice(),u=a[a.length-1];if(0!==r)for(var l=0,h=a.length;l<h;++l)a[l]-=r;var c=new rr(e.slice(r,u),t,a);i.push(c),r=u}return i},e.prototype.getType=function(){return Cn.MULTI_POLYGON},e.prototype.intersectsExtent=function(t){return function(t,e,n,i,r){for(var o=0,s=n.length;o<s;++o){var a=n[o];if(qi(t,e,a,i,r))return!0;e=a[a.length-1]}return!1}(this.getOrientedFlatCoordinates(),0,this.endss_,this.stride,t)},e.prototype.setCoordinates=function(t,e){this.setLayout(e,t,3),this.flatCoordinates||(this.flatCoordinates=[]);var n=function(t,e,n,i,r){for(var o=r||[],s=0,a=0,u=n.length;a<u;++a){var l=Fi(t,e,n[a],i,o[s]);o[s++]=l,e=l[l.length-1]}return o.length=s,o}(this.flatCoordinates,0,t,this.stride,this.endss_);if(0===n.length)this.flatCoordinates.length=0;else{var i=n[n.length-1];this.flatCoordinates.length=0===i.length?0:i[i.length-1]}this.changed()},e}(wi),vl=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();function ml(t,e){if(!t)return null;var n;switch(t.type){case Cn.POINT:n=function(t){return new Ui(t.coordinates)}(t);break;case Cn.LINE_STRING:n=function(t){return new cl(t.coordinates)}(t);break;case Cn.POLYGON:n=function(t){return new rr(t.coordinates)}(t);break;case Cn.MULTI_POINT:n=function(t){return new _l(t.coordinates)}(t);break;case Cn.MULTI_LINE_STRING:n=function(t){return new fl(t.coordinates)}(t);break;case Cn.MULTI_POLYGON:n=function(t){return new yl(t.coordinates)}(t);break;case Cn.GEOMETRY_COLLECTION:n=function(t,e){var n=t.geometries.map(function(t){return ml(t,e)});return new al(n)}(t);break;default:throw new Error(\"Unsupported GeoJSON type: \"+t.type)}return el(n,!1,e)}function El(t,e){var n,i=(t=el(t,!0,e)).getType();switch(i){case Cn.POINT:n=function(t,e){return{type:\"Point\",coordinates:t.getCoordinates()}}(t);break;case Cn.LINE_STRING:n=function(t,e){return{type:\"LineString\",coordinates:t.getCoordinates()}}(t);break;case Cn.POLYGON:n=function(t,e){var n;e&&(n=e.rightHanded);return{type:\"Polygon\",coordinates:t.getCoordinates(n)}}(t,e);break;case Cn.MULTI_POINT:n=function(t,e){return{type:\"MultiPoint\",coordinates:t.getCoordinates()}}(t);break;case Cn.MULTI_LINE_STRING:n=function(t,e){return{type:\"MultiLineString\",coordinates:t.getCoordinates()}}(t);break;case Cn.MULTI_POLYGON:n=function(t,e){var n;e&&(n=e.rightHanded);return{type:\"MultiPolygon\",coordinates:t.getCoordinates(n)}}(t,e);break;case Cn.GEOMETRY_COLLECTION:n=function(t,e){return{type:\"GeometryCollection\",geometries:t.getGeometriesArray().map(function(t){var n=p({},e);return delete n.featureProjection,El(t,n)})}}(t,e);break;case Cn.CIRCLE:n={type:\"GeometryCollection\",geometries:[]};break;default:throw new Error(\"Unsupported geometry type: \"+i)}return n}var xl=function(t){function e(e){var n=this,i=e||{};return(n=t.call(this)||this).dataProjection=ri(i.dataProjection?i.dataProjection:\"EPSG:4326\"),i.featureProjection&&(n.defaultFeatureProjection=ri(i.featureProjection)),n.geometryName_=i.geometryName,n.extractGeometryName_=i.extractGeometryName,n}return vl(e,t),e.prototype.readFeatureFromObject=function(t,e){var n=null,i=ml((n=\"Feature\"===t.type?t:{type:\"Feature\",geometry:t,properties:null}).geometry,e),r=new $u;return this.geometryName_?r.setGeometryName(this.geometryName_):this.extractGeometryName_&&\"geometry_name\"in n!==void 0&&r.setGeometryName(n.geometry_name),r.setGeometry(i),\"id\"in n&&r.setId(n.id),n.properties&&r.setProperties(n.properties,!0),r},e.prototype.readFeaturesFromObject=function(t,e){var n=null;if(\"FeatureCollection\"===t.type){n=[];for(var i=t.features,r=0,o=i.length;r<o;++r)n.push(this.readFeatureFromObject(i[r],e))}else n=[this.readFeatureFromObject(t,e)];return n},e.prototype.readGeometryFromObject=function(t,e){return ml(t,e)},e.prototype.readProjectionFromObject=function(t){var e,n=t.crs;return n?\"name\"==n.type?e=ri(n.properties.name):ge(!1,36):e=this.dataProjection,e},e.prototype.writeFeatureObject=function(t,e){e=this.adaptOptions(e);var n={type:\"Feature\",geometry:null,properties:null},i=t.getId();void 0!==i&&(n.id=i);var r=t.getGeometry();r&&(n.geometry=El(r,e));var o=t.getProperties();return delete o[t.getGeometryName()],_(o)||(n.properties=o),n},e.prototype.writeFeaturesObject=function(t,e){e=this.adaptOptions(e);for(var n=[],i=0,r=t.length;i<r;++i)n.push(this.writeFeatureObject(t[i],e));return{type:\"FeatureCollection\",features:n}},e.prototype.writeGeometryObject=function(t,e){return El(t,this.adaptOptions(e))},e}(rl),wl=document.implementation.createDocument(\"\",\"\",null);function Ol(t,e){return wl.createElementNS(t,e)}function Tl(t,e){return function t(e,n,i){if(e.nodeType==Node.CDATA_SECTION_NODE||e.nodeType==Node.TEXT_NODE)n?i.push(String(e.nodeValue).replace(/(\\r\\n|\\r|\\n)/g,\"\")):i.push(e.nodeValue);else{var r=void 0;for(r=e.firstChild;r;r=r.nextSibling)t(r,n,i)}return i}(t,e,[]).join(\"\")}function bl(t){return\"documentElement\"in t}function Cl(t){return(new DOMParser).parseFromString(t,\"application/xml\")}function Sl(t,e){return function(n,i){var r=t.call(void 0!==e?e:this,n,i);void 0!==r&&Zt(i[i.length-1],r)}}function Rl(t,e){return function(n,i){var r=t.call(void 0!==e?e:this,n,i);void 0!==r&&i[i.length-1].push(r)}}function Il(t,e){return function(n,i){var r=t.call(void 0!==e?e:this,n,i);void 0!==r&&(i[i.length-1]=r)}}function Pl(t,e,n){return function(i,r){var o=t.call(void 0!==n?n:this,i,r);void 0!==o&&(r[r.length-1][void 0!==e?e:i.localName]=o)}}function Fl(t,e){return function(n,i,r){t.call(void 0!==e?e:this,n,i,r),r[r.length-1].node.appendChild(n)}}function Ll(t,e){var n=t;return function(t,i,r){var o=i[i.length-1].node,s=n;return void 0===s&&(s=r),Ol(void 0!==e?e:o.namespaceURI,s)}}var Ml=Ll();function Al(t,e){for(var n=e.length,i=new Array(n),r=0;r<n;++r)i[r]=t[e[r]];return i}function Dl(t,e,n){var i,r,o=void 0!==n?n:{};for(i=0,r=t.length;i<r;++i)o[t[i]]=e;return o}function kl(t,e,n,i){var r;for(r=e.firstElementChild;r;r=r.nextElementSibling){var o=t[r.namespaceURI];if(void 0!==o){var s=o[r.localName];void 0!==s&&s.call(i,r,n)}}}function Nl(t,e,n,i,r){return i.push(t),kl(e,n,i,r),i.pop()}function Gl(t,e,n,i,r,o){for(var s,a,u=(void 0!==r?r:n).length,l=0;l<u;++l)void 0!==(s=n[l])&&void 0!==(a=e.call(void 0!==o?o:this,s,i,void 0!==r?r[l]:void 0))&&t[a.namespaceURI][a.localName].call(o,a,s,i)}function jl(t,e,n,i,r,o,s){return r.push(t),Gl(e,n,i,r,o,s),r.pop()}var zl=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),Yl=function(t){function e(){var e=t.call(this)||this;return e.xmlSerializer_=new XMLSerializer,e}return zl(e,t),e.prototype.getType=function(){return Yu.XML},e.prototype.readFeature=function(t,e){if(t){if(\"string\"==typeof t){var n=Cl(t);return this.readFeatureFromDocument(n,e)}return bl(t)?this.readFeatureFromDocument(t,e):this.readFeatureFromNode(t,e)}return null},e.prototype.readFeatureFromDocument=function(t,e){var n=this.readFeaturesFromDocument(t,e);return n.length>0?n[0]:null},e.prototype.readFeatureFromNode=function(t,e){return null},e.prototype.readFeatures=function(t,e){if(t){if(\"string\"==typeof t){var n=Cl(t);return this.readFeaturesFromDocument(n,e)}return bl(t)?this.readFeaturesFromDocument(t,e):this.readFeaturesFromNode(t,e)}return[]},e.prototype.readFeaturesFromDocument=function(t,e){for(var n=[],i=t.firstChild;i;i=i.nextSibling)i.nodeType==Node.ELEMENT_NODE&&Zt(n,this.readFeaturesFromNode(i,e));return n},e.prototype.readFeaturesFromNode=function(t,e){return i()},e.prototype.readGeometry=function(t,e){if(t){if(\"string\"==typeof t){var n=Cl(t);return this.readGeometryFromDocument(n,e)}return bl(t)?this.readGeometryFromDocument(t,e):this.readGeometryFromNode(t,e)}return null},e.prototype.readGeometryFromDocument=function(t,e){return null},e.prototype.readGeometryFromNode=function(t,e){return null},e.prototype.readProjection=function(t){if(t){if(\"string\"==typeof t){var e=Cl(t);return this.readProjectionFromDocument(e)}return bl(t)?this.readProjectionFromDocument(t):this.readProjectionFromNode(t)}return null},e.prototype.readProjectionFromDocument=function(t){return this.dataProjection},e.prototype.readProjectionFromNode=function(t){return this.dataProjection},e.prototype.writeFeature=function(t,e){var n=this.writeFeatureNode(t,e);return this.xmlSerializer_.serializeToString(n)},e.prototype.writeFeatureNode=function(t,e){return null},e.prototype.writeFeatures=function(t,e){var n=this.writeFeaturesNode(t,e);return this.xmlSerializer_.serializeToString(n)},e.prototype.writeFeaturesNode=function(t,e){return null},e.prototype.writeGeometry=function(t,e){var n=this.writeGeometryNode(t,e);return this.xmlSerializer_.serializeToString(n)},e.prototype.writeGeometryNode=function(t,e){return null},e}(tl);function Xl(t){var e,n=Tl(t,!1);return(e=/^\\s*(true|1)|(false|0)\\s*$/.exec(n))?void 0!==e[1]||!1:void 0}function Ul(t){var e,n=Tl(t,!1);return(e=/^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(n))?parseFloat(e[1]):void 0}function Kl(t){return Tl(t,!1).trim()}function Wl(t,e){Zl(t,e?\"1\":\"0\")}function Bl(t,e){var n=e.toPrecision();t.appendChild(wl.createTextNode(n))}function Zl(t,e){t.appendChild(wl.createTextNode(e))}var Vl={FRACTION:\"fraction\",PIXELS:\"pixels\"},Hl=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),ql=function(t){function e(e,n,i,r,o,s){var a=t.call(this)||this;return a.hitDetectionImage_=null,a.image_=e||new Image,null!==r&&(a.image_.crossOrigin=r),a.canvas_=s?document.createElement(\"canvas\"):null,a.color_=s,a.imageListenerKeys_=null,a.imageState_=o,a.size_=i,a.src_=n,a.tainted_,a}return Hl(e,t),e.prototype.isTainted_=function(){if(void 0===this.tainted_&&this.imageState_===Fs.LOADED){this.tainted_=!1;var t=cr(1,1);try{t.drawImage(this.image_,0,0),t.getImageData(0,0,1,1)}catch(t){this.tainted_=!0}}return!0===this.tainted_},e.prototype.dispatchChangeEvent_=function(){this.dispatchEvent(F.CHANGE)},e.prototype.handleImageError_=function(){this.imageState_=Fs.ERROR,this.unlistenImage_(),this.dispatchChangeEvent_()},e.prototype.handleImageLoad_=function(){this.imageState_=Fs.LOADED,this.size_&&(this.image_.width=this.size_[0],this.image_.height=this.size_[1]),this.size_=[this.image_.width,this.image_.height],this.unlistenImage_(),this.replaceColor_(),this.dispatchChangeEvent_()},e.prototype.getImage=function(t){return this.canvas_?this.canvas_:this.image_},e.prototype.getImageState=function(){return this.imageState_},e.prototype.getHitDetectionImage=function(t){if(!this.hitDetectionImage_)if(this.isTainted_()){var e=this.size_[0],n=this.size_[1],i=cr(e,n);i.fillRect(0,0,e,n),this.hitDetectionImage_=i.canvas}else this.hitDetectionImage_=this.image_;return this.hitDetectionImage_},e.prototype.getSize=function(){return this.size_},e.prototype.getSrc=function(){return this.src_},e.prototype.load=function(){if(this.imageState_==Fs.IDLE){this.imageState_=Fs.LOADING,this.imageListenerKeys_=[x(this.image_,F.ERROR,this.handleImageError_,this),x(this.image_,F.LOAD,this.handleImageLoad_,this)];try{this.image_.src=this.src_}catch(t){this.handleImageError_()}}},e.prototype.replaceColor_=function(){if(this.color_&&!this.isTainted_()){this.canvas_.width=this.image_.width,this.canvas_.height=this.image_.height;var t=this.canvas_.getContext(\"2d\");t.drawImage(this.image_,0,0);for(var e=t.getImageData(0,0,this.image_.width,this.image_.height),n=e.data,i=this.color_[0]/255,r=this.color_[1]/255,o=this.color_[2]/255,s=0,a=n.length;s<a;s+=4)n[s]*=i,n[s+1]*=r,n[s+2]*=o;t.putImageData(e,0,0)}},e.prototype.unlistenImage_=function(){this.imageListenerKeys_.forEach(O),this.imageListenerKeys_=null},e}(P);var Jl,Ql,$l,th,eh,nh,ih,rh={BOTTOM_LEFT:\"bottom-left\",BOTTOM_RIGHT:\"bottom-right\",TOP_LEFT:\"top-left\",TOP_RIGHT:\"top-right\"},oh=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),sh=function(t){function e(e){var n=this,i=e||{},r=void 0!==i.opacity?i.opacity:1,s=void 0!==i.rotation?i.rotation:0,a=void 0!==i.scale?i.scale:1,u=void 0!==i.rotateWithView&&i.rotateWithView;(n=t.call(this,{opacity:r,rotation:s,scale:a,rotateWithView:u})||this).anchor_=void 0!==i.anchor?i.anchor:[.5,.5],n.normalizedAnchor_=null,n.anchorOrigin_=void 0!==i.anchorOrigin?i.anchorOrigin:rh.TOP_LEFT,n.anchorXUnits_=void 0!==i.anchorXUnits?i.anchorXUnits:Vl.FRACTION,n.anchorYUnits_=void 0!==i.anchorYUnits?i.anchorYUnits:Vl.FRACTION,n.crossOrigin_=void 0!==i.crossOrigin?i.crossOrigin:null;var l=void 0!==i.img?i.img:null,h=void 0!==i.imgSize?i.imgSize:null,c=i.src;ge(!(void 0!==c&&l),4),ge(!l||l&&h,5),void 0!==c&&0!==c.length||!l||(c=l.src||o(l)),ge(void 0!==c&&c.length>0,6);var p=void 0!==i.src?Fs.IDLE:Fs.LOADED;return n.color_=void 0!==i.color?Wo(i.color):null,n.iconImage_=function(t,e,n,i,r,o){var s=qo.get(e,i,o);return s||(s=new ql(t,e,n,i,r,o),qo.set(e,i,o,s)),s}(l,c,h,n.crossOrigin_,p,n.color_),n.offset_=void 0!==i.offset?i.offset:[0,0],n.offsetOrigin_=void 0!==i.offsetOrigin?i.offsetOrigin:rh.TOP_LEFT,n.origin_=null,n.size_=void 0!==i.size?i.size:null,n}return oh(e,t),e.prototype.clone=function(){return new e({anchor:this.anchor_.slice(),anchorOrigin:this.anchorOrigin_,anchorXUnits:this.anchorXUnits_,anchorYUnits:this.anchorYUnits_,crossOrigin:this.crossOrigin_,color:this.color_&&this.color_.slice?this.color_.slice():this.color_||void 0,src:this.getSrc(),offset:this.offset_.slice(),offsetOrigin:this.offsetOrigin_,size:null!==this.size_?this.size_.slice():void 0,opacity:this.getOpacity(),scale:this.getScale(),rotation:this.getRotation(),rotateWithView:this.getRotateWithView()})},e.prototype.getAnchor=function(){if(this.normalizedAnchor_)return this.normalizedAnchor_;var t=this.anchor_,e=this.getSize();if(this.anchorXUnits_==Vl.FRACTION||this.anchorYUnits_==Vl.FRACTION){if(!e)return null;t=this.anchor_.slice(),this.anchorXUnits_==Vl.FRACTION&&(t[0]*=e[0]),this.anchorYUnits_==Vl.FRACTION&&(t[1]*=e[1])}if(this.anchorOrigin_!=rh.TOP_LEFT){if(!e)return null;t===this.anchor_&&(t=this.anchor_.slice()),this.anchorOrigin_!=rh.TOP_RIGHT&&this.anchorOrigin_!=rh.BOTTOM_RIGHT||(t[0]=-t[0]+e[0]),this.anchorOrigin_!=rh.BOTTOM_LEFT&&this.anchorOrigin_!=rh.BOTTOM_RIGHT||(t[1]=-t[1]+e[1])}return this.normalizedAnchor_=t,this.normalizedAnchor_},e.prototype.setAnchor=function(t){this.anchor_=t,this.normalizedAnchor_=null},e.prototype.getColor=function(){return this.color_},e.prototype.getImage=function(t){return this.iconImage_.getImage(t)},e.prototype.getImageSize=function(){return this.iconImage_.getSize()},e.prototype.getHitDetectionImageSize=function(){return this.getImageSize()},e.prototype.getImageState=function(){return this.iconImage_.getImageState()},e.prototype.getHitDetectionImage=function(t){return this.iconImage_.getHitDetectionImage(t)},e.prototype.getOrigin=function(){if(this.origin_)return this.origin_;var t=this.offset_;if(this.offsetOrigin_!=rh.TOP_LEFT){var e=this.getSize(),n=this.iconImage_.getSize();if(!e||!n)return null;t=t.slice(),this.offsetOrigin_!=rh.TOP_RIGHT&&this.offsetOrigin_!=rh.BOTTOM_RIGHT||(t[0]=n[0]-e[0]-t[0]),this.offsetOrigin_!=rh.BOTTOM_LEFT&&this.offsetOrigin_!=rh.BOTTOM_RIGHT||(t[1]=n[1]-e[1]-t[1])}return this.origin_=t,this.origin_},e.prototype.getSrc=function(){return this.iconImage_.getSrc()},e.prototype.getSize=function(){return this.size_?this.size_:this.iconImage_.getSize()},e.prototype.listenImageChange=function(t,e){return E(this.iconImage_,F.CHANGE,t,e)},e.prototype.load=function(){this.iconImage_.load()},e.prototype.unlistenImageChange=function(t,e){w(this.iconImage_,F.CHANGE,t,e)},e}(Xs),ah=\"#333\",uh=function(){function t(t){var e=t||{};this.font_=e.font,this.rotation_=e.rotation,this.rotateWithView_=e.rotateWithView,this.scale_=e.scale,this.text_=e.text,this.textAlign_=e.textAlign,this.textBaseline_=e.textBaseline,this.fill_=void 0!==e.fill?e.fill:new Zs({color:ah}),this.maxAngle_=void 0!==e.maxAngle?e.maxAngle:Math.PI/4,this.placement_=void 0!==e.placement?e.placement:xa.POINT,this.overflow_=!!e.overflow,this.stroke_=void 0!==e.stroke?e.stroke:null,this.offsetX_=void 0!==e.offsetX?e.offsetX:0,this.offsetY_=void 0!==e.offsetY?e.offsetY:0,this.backgroundFill_=e.backgroundFill?e.backgroundFill:null,this.backgroundStroke_=e.backgroundStroke?e.backgroundStroke:null,this.padding_=void 0===e.padding?null:e.padding}return t.prototype.clone=function(){return new t({font:this.getFont(),placement:this.getPlacement(),maxAngle:this.getMaxAngle(),overflow:this.getOverflow(),rotation:this.getRotation(),rotateWithView:this.getRotateWithView(),scale:this.getScale(),text:this.getText(),textAlign:this.getTextAlign(),textBaseline:this.getTextBaseline(),fill:this.getFill()?this.getFill().clone():void 0,stroke:this.getStroke()?this.getStroke().clone():void 0,offsetX:this.getOffsetX(),offsetY:this.getOffsetY(),backgroundFill:this.getBackgroundFill()?this.getBackgroundFill().clone():void 0,backgroundStroke:this.getBackgroundStroke()?this.getBackgroundStroke().clone():void 0})},t.prototype.getOverflow=function(){return this.overflow_},t.prototype.getFont=function(){return this.font_},t.prototype.getMaxAngle=function(){return this.maxAngle_},t.prototype.getPlacement=function(){return this.placement_},t.prototype.getOffsetX=function(){return this.offsetX_},t.prototype.getOffsetY=function(){return this.offsetY_},t.prototype.getFill=function(){return this.fill_},t.prototype.getRotateWithView=function(){return this.rotateWithView_},t.prototype.getRotation=function(){return this.rotation_},t.prototype.getScale=function(){return this.scale_},t.prototype.getStroke=function(){return this.stroke_},t.prototype.getText=function(){return this.text_},t.prototype.getTextAlign=function(){return this.textAlign_},t.prototype.getTextBaseline=function(){return this.textBaseline_},t.prototype.getBackgroundFill=function(){return this.backgroundFill_},t.prototype.getBackgroundStroke=function(){return this.backgroundStroke_},t.prototype.getPadding=function(){return this.padding_},t.prototype.setOverflow=function(t){this.overflow_=t},t.prototype.setFont=function(t){this.font_=t},t.prototype.setMaxAngle=function(t){this.maxAngle_=t},t.prototype.setOffsetX=function(t){this.offsetX_=t},t.prototype.setOffsetY=function(t){this.offsetY_=t},t.prototype.setPlacement=function(t){this.placement_=t},t.prototype.setRotateWithView=function(t){this.rotateWithView_=t},t.prototype.setFill=function(t){this.fill_=t},t.prototype.setRotation=function(t){this.rotation_=t},t.prototype.setScale=function(t){this.scale_=t},t.prototype.setStroke=function(t){this.stroke_=t},t.prototype.setText=function(t){this.text_=t},t.prototype.setTextAlign=function(t){this.textAlign_=t},t.prototype.setTextBaseline=function(t){this.textBaseline_=t},t.prototype.setBackgroundFill=function(t){this.backgroundFill_=t},t.prototype.setBackgroundStroke=function(t){this.backgroundStroke_=t},t.prototype.setPadding=function(t){this.padding_=t},t}(),lh=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),hh=[\"http://www.google.com/kml/ext/2.2\"],ch=[null,\"http://earth.google.com/kml/2.0\",\"http://earth.google.com/kml/2.1\",\"http://earth.google.com/kml/2.2\",\"http://www.opengis.net/kml/2.2\"],ph={fraction:Vl.FRACTION,pixels:Vl.PIXELS,insetPixels:Vl.PIXELS},fh=Dl(ch,{ExtendedData:sc,Region:ac,MultiGeometry:Pl(Jh,\"geometry\"),LineString:Pl(Vh,\"geometry\"),LinearRing:Pl(Hh,\"geometry\"),Point:Pl(Qh,\"geometry\"),Polygon:Pl(tc,\"geometry\"),Style:Pl(nc),StyleMap:function(t,e){var n=Ah(t,e);if(!n)return;var i=e[e.length-1];Array.isArray(n)?i.Style=n:\"string\"==typeof n?i.styleUrl=n:ge(!1,38)},address:Pl(Kl),description:Pl(Kl),name:Pl(Kl),open:Pl(Xl),phoneNumber:Pl(Kl),styleUrl:Pl(Fh),visibility:Pl(Xl)},Dl(hh,{MultiTrack:Pl(function(t,e){var n=Nl([],Yh,t,e);if(!n)return;return new fl(n)},\"geometry\"),Track:Pl(Uh,\"geometry\")})),dh=Dl(ch,{ExtendedData:sc,Region:ac,Link:function(t,e){kl(_h,t,e)},address:Pl(Kl),description:Pl(Kl),name:Pl(Kl),open:Pl(Xl),phoneNumber:Pl(Kl),visibility:Pl(Xl)}),_h=Dl(ch,{href:Pl(Fh)}),gh=Dl(ch,{LatLonAltBox:function(t,e){var n=Nl({},hc,t,e);if(!n)return;var i=e[e.length-1],r=[parseFloat(n.west),parseFloat(n.south),parseFloat(n.east),parseFloat(n.north)];i.extent=r,i.altitudeMode=n.altitudeMode,i.minAltitude=parseFloat(n.minAltitude),i.maxAltitude=parseFloat(n.maxAltitude)},Lod:function(t,e){var n=Nl({},cc,t,e);if(!n)return;var i=e[e.length-1];i.minLodPixels=parseFloat(n.minLodPixels),i.maxLodPixels=parseFloat(n.maxLodPixels),i.minFadeExtent=parseFloat(n.minFadeExtent),i.maxFadeExtent=parseFloat(n.maxFadeExtent)}}),yh=Dl(ch,[\"Document\",\"Placemark\"]),vh=Dl(ch,{Document:Fl(function(t,e,n){jl({node:t},gc,yc,e,n,void 0,this)}),Placemark:Fl(Yc)}),mh=null;var Eh,xh=null;var wh,Oh=null;var Th=null;var bh=null;var Ch=null;var Sh=function(t){function e(e){var n=t.call(this)||this,i=e||{};return Ch||(mh=new Zs({color:Jl=[255,255,255,1]}),Ql=[20,2],$l=Vl.PIXELS,th=Vl.PIXELS,eh=[64,64],nh=\"https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png\",ih=.5,xh=new sh({anchor:Ql,anchorOrigin:rh.BOTTOM_LEFT,anchorXUnits:$l,anchorYUnits:th,crossOrigin:\"anonymous\",rotation:0,scale:ih,size:eh,src:nh}),Eh=\"NO_IMAGE\",Oh=new Vs({color:Jl,width:1}),wh=new Vs({color:[51,51,51,1],width:2}),Th=new uh({font:\"bold 16px Helvetica\",fill:mh,stroke:wh,scale:.8}),bh=new $s({fill:mh,image:xh,text:Th,stroke:Oh,zIndex:0}),Ch=[bh]),n.dataProjection=ri(\"EPSG:4326\"),n.defaultStyle_=i.defaultStyle?i.defaultStyle:Ch,n.extractStyles_=void 0===i.extractStyles||i.extractStyles,n.writeStyles_=void 0===i.writeStyles||i.writeStyles,n.sharedStyles_={},n.showPointNames_=void 0===i.showPointNames||i.showPointNames,n}return lh(e,t),e.prototype.readDocumentOrFolder_=function(t,e){var n=Nl([],Dl(ch,{Document:Sl(this.readDocumentOrFolder_,this),Folder:Sl(this.readDocumentOrFolder_,this),Placemark:Rl(this.readPlacemark_,this),Style:this.readSharedStyle_.bind(this),StyleMap:this.readSharedStyleMap_.bind(this)}),t,e,this);return n||void 0},e.prototype.readPlacemark_=function(t,e){var n=Nl({geometry:null},fh,t,e);if(n){var i=new $u,r=t.getAttribute(\"id\");null!==r&&i.setId(r);var o=e[0],s=n.geometry;if(s&&el(s,!1,o),i.setGeometry(s),delete n.geometry,this.extractStyles_){var a=function(t,e,n,i,r){return function(o,s){var a,u=r,l=\"\";if(u){var h=o.getGeometry();h&&(u=h.getType()===Cn.POINT)}if(u&&(l=o.get(\"name\"),u=u&&!!l),t)return u?(a=Rh(t[0],l),t.concat(a)):t;if(e){var c=function t(e,n,i){return Array.isArray(e)?e:\"string\"==typeof e?(!(e in i)&&\"#\"+e in i&&(e=\"#\"+e),t(i[e],n,i)):n}(e,n,i);return u?(a=Rh(c[0],l),c.concat(a)):c}return u?(a=Rh(n[0],l),n.concat(a)):n}}(n.Style,n.styleUrl,this.defaultStyle_,this.sharedStyles_,this.showPointNames_);i.setStyle(a)}return delete n.Style,i.setProperties(n,!0),i}},e.prototype.readSharedStyle_=function(t,e){var n=t.getAttribute(\"id\");if(null!==n){var i=nc(t,e);if(i){var r=void 0,o=t.baseURI;if(o&&\"about:blank\"!=o||(o=window.location.href),o)r=new URL(\"#\"+n,o).href;else r=\"#\"+n;this.sharedStyles_[r]=i}}},e.prototype.readSharedStyleMap_=function(t,e){var n=t.getAttribute(\"id\");if(null!==n){var i=Ah(t,e);if(i){var r,o=t.baseURI;if(o&&\"about:blank\"!=o||(o=window.location.href),o)r=new URL(\"#\"+n,o).href;else r=\"#\"+n;this.sharedStyles_[r]=i}}},e.prototype.readFeatureFromNode=function(t,e){if(!Kt(ch,t.namespaceURI))return null;var n=this.readPlacemark_(t,[this.getReadOptions(t,e)]);return n||null},e.prototype.readFeaturesFromNode=function(t,e){if(!Kt(ch,t.namespaceURI))return[];var n,i=t.localName;if(\"Document\"==i||\"Folder\"==i)return(n=this.readDocumentOrFolder_(t,[this.getReadOptions(t,e)]))||[];if(\"Placemark\"==i){var r=this.readPlacemark_(t,[this.getReadOptions(t,e)]);return r?[r]:[]}if(\"kml\"==i){n=[];for(var o=t.firstElementChild;o;o=o.nextElementSibling){var s=this.readFeaturesFromNode(o,e);s&&Zt(n,s)}return n}return[]},e.prototype.readName=function(t){if(t){if(\"string\"==typeof t){var e=Cl(t);return this.readNameFromDocument(e)}return bl(t)?this.readNameFromDocument(t):this.readNameFromNode(t)}},e.prototype.readNameFromDocument=function(t){for(var e=t.firstChild;e;e=e.nextSibling)if(e.nodeType==Node.ELEMENT_NODE){var n=this.readNameFromNode(e);if(n)return n}},e.prototype.readNameFromNode=function(t){for(var e=t.firstElementChild;e;e=e.nextElementSibling)if(Kt(ch,e.namespaceURI)&&\"name\"==e.localName)return Kl(e);for(e=t.firstElementChild;e;e=e.nextElementSibling){var n=e.localName;if(Kt(ch,e.namespaceURI)&&(\"Document\"==n||\"Folder\"==n||\"Placemark\"==n||\"kml\"==n)){var i=this.readNameFromNode(e);if(i)return i}}},e.prototype.readNetworkLinks=function(t){var e=[];if(\"string\"==typeof t){var n=Cl(t);Zt(e,this.readNetworkLinksFromDocument(n))}else bl(t)?Zt(e,this.readNetworkLinksFromDocument(t)):Zt(e,this.readNetworkLinksFromNode(t));return e},e.prototype.readNetworkLinksFromDocument=function(t){for(var e=[],n=t.firstChild;n;n=n.nextSibling)n.nodeType==Node.ELEMENT_NODE&&Zt(e,this.readNetworkLinksFromNode(n));return e},e.prototype.readNetworkLinksFromNode=function(t){for(var e=[],n=t.firstElementChild;n;n=n.nextElementSibling)if(Kt(ch,n.namespaceURI)&&\"NetworkLink\"==n.localName){var i=Nl({},dh,n,[]);e.push(i)}for(n=t.firstElementChild;n;n=n.nextElementSibling){var r=n.localName;!Kt(ch,n.namespaceURI)||\"Document\"!=r&&\"Folder\"!=r&&\"kml\"!=r||Zt(e,this.readNetworkLinksFromNode(n))}return e},e.prototype.readRegion=function(t){var e=[];if(\"string\"==typeof t){var n=Cl(t);Zt(e,this.readRegionFromDocument(n))}else bl(t)?Zt(e,this.readRegionFromDocument(t)):Zt(e,this.readRegionFromNode(t));return e},e.prototype.readRegionFromDocument=function(t){for(var e=[],n=t.firstChild;n;n=n.nextSibling)n.nodeType==Node.ELEMENT_NODE&&Zt(e,this.readRegionFromNode(n));return e},e.prototype.readRegionFromNode=function(t){for(var e=[],n=t.firstElementChild;n;n=n.nextElementSibling)if(Kt(ch,n.namespaceURI)&&\"Region\"==n.localName){var i=Nl({},gh,n,[]);e.push(i)}for(n=t.firstElementChild;n;n=n.nextElementSibling){var r=n.localName;!Kt(ch,n.namespaceURI)||\"Document\"!=r&&\"Folder\"!=r&&\"kml\"!=r||Zt(e,this.readRegionFromNode(n))}return e},e.prototype.writeFeaturesNode=function(t,e){e=this.adaptOptions(e);var n=Ol(ch[4],\"kml\"),i=\"http://www.w3.org/2000/xmlns/\";n.setAttributeNS(i,\"xmlns:gx\",hh[0]),n.setAttributeNS(i,\"xmlns:xsi\",\"http://www.w3.org/2001/XMLSchema-instance\"),n.setAttributeNS(\"http://www.w3.org/2001/XMLSchema-instance\",\"xsi:schemaLocation\",\"http://www.opengis.net/kml/2.2 https://developers.google.com/kml/schema/kml22gx.xsd\");var r={node:n},o={};t.length>1?o.Document=t:1==t.length&&(o.Placemark=t[0]);var s=yh[n.namespaceURI],a=Al(o,s);return jl(r,vh,Ml,a,[e],s,this),n},e}(Yl);function Rh(t,e){var n=null,i=[0,0],r=\"start\";if(t.getImage()){var o=t.getImage().getImageSize();if(null===o&&(o=eh),2==o.length){var s=t.getImage().getScale();i[0]=s*o[0]/2,i[1]=-s*o[1]/2,r=\"left\"}}if(null!==t.getText()){var a=t.getText();(n=a.clone()).setFont(a.getFont()||Th.getFont()),n.setScale(a.getScale()||Th.getScale()),n.setFill(a.getFill()||Th.getFill()),n.setStroke(a.getStroke()||wh)}else n=Th.clone();return n.setText(e),n.setOffsetX(i[0]),n.setOffsetY(i[1]),n.setTextAlign(r),new $s({text:n})}function Ih(t){var e=Tl(t,!1),n=/^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(e);if(n){var i=n[1];return[parseInt(i.substr(6,2),16),parseInt(i.substr(4,2),16),parseInt(i.substr(2,2),16),parseInt(i.substr(0,2),16)/255]}}function Ph(t){for(var e,n=Tl(t,!1),i=[],r=/^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?))?\\s*/i;e=r.exec(n);){var o=parseFloat(e[1]),s=parseFloat(e[2]),a=e[3]?parseFloat(e[3]):0;i.push(o,s,a),n=n.substr(e[0].length)}if(\"\"===n)return i}function Fh(t){var e=Tl(t,!1).trim(),n=t.baseURI;return n&&\"about:blank\"!=n||(n=window.location.href),n?new URL(e,n).href:e}function Lh(t){return Ul(t)}var Mh=Dl(ch,{Pair:function(t,e){var n=Nl({},uc,t,e);if(!n)return;var i=n.key;if(i&&\"normal\"==i){var r=n.styleUrl;r&&(e[e.length-1]=r);var o=n.Style;o&&(e[e.length-1]=o)}}});function Ah(t,e){return Nl(void 0,Mh,t,e)}var Dh=Dl(ch,{Icon:Pl(function(t,e){var n=Nl({},Kh,t,e);return n||null}),heading:Pl(Ul),hotSpot:Pl(function(t){var e,n=t.getAttribute(\"xunits\"),i=t.getAttribute(\"yunits\");return e=\"insetPixels\"!==n?\"insetPixels\"!==i?rh.BOTTOM_LEFT:rh.TOP_LEFT:\"insetPixels\"!==i?rh.BOTTOM_RIGHT:rh.TOP_RIGHT,{x:parseFloat(t.getAttribute(\"x\")),xunits:ph[n],y:parseFloat(t.getAttribute(\"y\")),yunits:ph[i],origin:e}}),scale:Pl(Lh)});var kh=Dl(ch,{color:Pl(Ih),scale:Pl(Lh)});var Nh=Dl(ch,{color:Pl(Ih),width:Pl(Ul)});var Gh=Dl(ch,{color:Pl(Ih),fill:Pl(Xl),outline:Pl(Xl)});var jh=Dl(ch,{coordinates:Il(Ph)});function zh(t,e){return Nl(null,jh,t,e)}var Yh=Dl(hh,{Track:Rl(Uh)});var Xh=Dl(ch,{when:function(t,e){var n=e[e.length-1].whens,i=Tl(t,!1),r=Date.parse(i);n.push(isNaN(r)?0:r)}},Dl(hh,{coord:function(t,e){var n=e[e.length-1].flatCoordinates,i=Tl(t,!1),r=/^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i.exec(i);if(r){var o=parseFloat(r[1]),s=parseFloat(r[2]),a=parseFloat(r[3]);n.push(o,s,a,0)}else n.push(0,0,0,0)}}));function Uh(t,e){var n=Nl({flatCoordinates:[],whens:[]},Xh,t,e);if(n){for(var i=n.flatCoordinates,r=n.whens,o=0,s=Math.min(i.length,r.length);o<s;++o)i[4*o+3]=r[o];return new cl(i,Sn.XYZM)}}var Kh=Dl(ch,{href:Pl(Fh)},Dl(hh,{x:Pl(Ul),y:Pl(Ul),w:Pl(Ul),h:Pl(Ul)}));var Wh=Dl(ch,{coordinates:Il(Ph)});function Bh(t,e){return Nl(null,Wh,t,e)}var Zh=Dl(ch,{extrude:Pl(Xl),tessellate:Pl(Xl),altitudeMode:Pl(Kl)});function Vh(t,e){var n=Nl({},Zh,t,e),i=Bh(t,e);if(i){var r=new cl(i,Sn.XYZ);return r.setProperties(n,!0),r}}function Hh(t,e){var n=Nl({},Zh,t,e),i=Bh(t,e);if(i){var r=new rr(i,Sn.XYZ,[i.length]);return r.setProperties(n,!0),r}}var qh=Dl(ch,{LineString:Rl(Vh),LinearRing:Rl(Hh),MultiGeometry:Rl(Jh),Point:Rl(Qh),Polygon:Rl(tc)});function Jh(t,e){var n,i=Nl([],qh,t,e);if(!i)return null;if(0===i.length)return new al(i);for(var r=!0,o=i[0].getType(),s=1,a=i.length;s<a;++s)if(i[s].getType()!=o){r=!1;break}if(r){var u=void 0,l=void 0;if(o==Cn.POINT){var h=i[0];u=h.getLayout(),l=h.getFlatCoordinates();for(s=1,a=i.length;s<a;++s)Zt(l,i[s].getFlatCoordinates());ic(n=new _l(l,u),i)}else o==Cn.LINE_STRING?ic(n=new fl(i),i):o==Cn.POLYGON?ic(n=new yl(i),i):o==Cn.GEOMETRY_COLLECTION?n=new al(i):ge(!1,37)}else n=new al(i);return n}function Qh(t,e){var n=Nl({},Zh,t,e),i=Bh(t,e);if(i){var r=new Ui(i,Sn.XYZ);return r.setProperties(n,!0),r}}var $h=Dl(ch,{innerBoundaryIs:function(t,e){var n=Nl(void 0,pc,t,e);if(n){var i=e[e.length-1];i.push(n)}},outerBoundaryIs:function(t,e){var n=Nl(void 0,fc,t,e);if(n){var i=e[e.length-1];i[0]=n}}});function tc(t,e){var n=Nl({},Zh,t,e),i=Nl([null],$h,t,e);if(i&&i[0]){for(var r=i[0],o=[r.length],s=1,a=i.length;s<a;++s)Zt(r,i[s]),o.push(r.length);var u=new rr(r,Sn.XYZ,o);return u.setProperties(n,!0),u}}var ec=Dl(ch,{IconStyle:function(t,e){var n=Nl({},Dh,t,e);if(n){var i,r,o,s,a=e[e.length-1],u=\"Icon\"in n?n.Icon:{},l=!(\"Icon\"in n)||Object.keys(u).length>0,h=u.href;h?i=h:l&&(i=nh);var c,p=rh.BOTTOM_LEFT,f=n.hotSpot;f?(r=[f.x,f.y],o=f.xunits,s=f.yunits,p=f.origin):i===nh?(r=Ql,o=$l,s=th):/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(i)&&(r=[.5,0],o=Vl.FRACTION,s=Vl.FRACTION);var d,_=u.x,g=u.y;void 0!==_&&void 0!==g&&(c=[_,g]);var y,v=u.w,m=u.h;void 0!==v&&void 0!==m&&(d=[v,m]);var E=n.heading;void 0!==E&&(y=Ce(E));var x=n.scale;if(l){i==nh&&(d=eh,void 0===x&&(x=ih));var w=new sh({anchor:r,anchorOrigin:p,anchorXUnits:o,anchorYUnits:s,crossOrigin:\"anonymous\",offset:c,offsetOrigin:rh.BOTTOM_LEFT,rotation:y,scale:x,size:d,src:i});a.imageStyle=w}else a.imageStyle=Eh}},LabelStyle:function(t,e){var n=Nl({},kh,t,e);if(n){var i=e[e.length-1],r=new uh({fill:new Zs({color:\"color\"in n?n.color:Jl}),scale:n.scale});i.textStyle=r}},LineStyle:function(t,e){var n=Nl({},Nh,t,e);if(n){var i=e[e.length-1],r=new Vs({color:\"color\"in n?n.color:Jl,width:\"width\"in n?n.width:1});i.strokeStyle=r}},PolyStyle:function(t,e){var n=Nl({},Gh,t,e);if(n){var i=e[e.length-1],r=new Zs({color:\"color\"in n?n.color:Jl});i.fillStyle=r;var o=n.fill;void 0!==o&&(i.fill=o);var s=n.outline;void 0!==s&&(i.outline=s)}}});function nc(t,e){var n=Nl({},ec,t,e);if(!n)return null;var i,r=\"fillStyle\"in n?n.fillStyle:mh,o=n.fill;void 0===o||o||(r=null),\"imageStyle\"in n?n.imageStyle!=Eh&&(i=n.imageStyle):i=xh;var s=\"textStyle\"in n?n.textStyle:Th,a=\"strokeStyle\"in n?n.strokeStyle:Oh,u=n.outline;return void 0===u||u||(a=null),[new $s({fill:r,image:i,stroke:a,text:s,zIndex:void 0})]}function ic(t,e){var n,i,r,o=e.length,s=new Array(e.length),a=new Array(e.length),u=new Array(e.length);n=i=r=!1;for(var l=0;l<o;++l){var h=e[l];s[l]=h.get(\"extrude\"),a[l]=h.get(\"tessellate\"),u[l]=h.get(\"altitudeMode\"),n=n||void 0!==s[l],i=i||void 0!==a[l],r=r||u[l]}n&&t.set(\"extrude\",s),i&&t.set(\"tessellate\",a),r&&t.set(\"altitudeMode\",u)}var rc=Dl(ch,{displayName:Pl(Kl),value:Pl(Kl)});var oc=Dl(ch,{Data:function(t,e){var n=t.getAttribute(\"name\");kl(rc,t,e);var i=e[e.length-1];null!==n?i[n]=i.value:null!==i.displayName&&(i[i.displayName]=i.value),delete i.value},SchemaData:function(t,e){kl(lc,t,e)}});function sc(t,e){kl(oc,t,e)}function ac(t,e){kl(gh,t,e)}var uc=Dl(ch,{Style:Pl(nc),key:Pl(Kl),styleUrl:Pl(Fh)});var lc=Dl(ch,{SimpleData:function(t,e){var n=t.getAttribute(\"name\");if(null!==n){var i=Kl(t),r=e[e.length-1];r[n]=i}}});var hc=Dl(ch,{altitudeMode:Pl(Kl),minAltitude:Pl(Ul),maxAltitude:Pl(Ul),north:Pl(Ul),south:Pl(Ul),east:Pl(Ul),west:Pl(Ul)});var cc=Dl(ch,{minLodPixels:Pl(Ul),maxLodPixels:Pl(Ul),minFadeExtent:Pl(Ul),maxFadeExtent:Pl(Ul)});var pc=Dl(ch,{LinearRing:Il(zh)});var fc=Dl(ch,{LinearRing:Il(zh)});function dc(t,e){for(var n=Wo(e),i=[255*(4==n.length?n[3]:1),n[2],n[1],n[0]],r=0;r<4;++r){var o=Math.floor(i[r]).toString(16);i[r]=1==o.length?\"0\"+o:o}Zl(t,i.join(\"\"))}var _c=Dl(ch,{Data:Fl(function(t,e,n){t.setAttribute(\"name\",e.name);var i={node:t},r=e.value;\"object\"==typeof r?(null!==r&&r.displayName&&jl(i,_c,Ml,[r.displayName],n,[\"displayName\"]),null!==r&&r.value&&jl(i,_c,Ml,[r.value],n,[\"value\"])):jl(i,_c,Ml,[r],n,[\"value\"])}),value:Fl(function(t,e){Zl(t,e)}),displayName:Fl(function(t,e){!function(t,e){t.appendChild(wl.createCDATASection(e))}(t,e)})});var gc=Dl(ch,{Placemark:Fl(Yc)}),yc=function(t,e,n){return Ol(e[e.length-1].node.namespaceURI,\"Placemark\")};var vc=Ll(\"Data\");var mc=Dl(ch,[\"href\"],Dl(hh,[\"x\",\"y\",\"w\",\"h\"])),Ec=Dl(ch,{href:Fl(Zl)},Dl(hh,{x:Fl(Bl),y:Fl(Bl),w:Fl(Bl),h:Fl(Bl)})),xc=function(t,e,n){return Ol(hh[0],\"gx:\"+n)};var wc=Dl(ch,[\"scale\",\"heading\",\"Icon\",\"hotSpot\"]),Oc=Dl(ch,{Icon:Fl(function(t,e,n){var i={node:t},r=n[n.length-1].node,o=mc[r.namespaceURI],s=Al(e,o);jl(i,Ec,Ml,s,n,o),s=Al(e,o=mc[hh[0]]),jl(i,Ec,xc,s,n,o)}),heading:Fl(Bl),hotSpot:Fl(function(t,e){t.setAttribute(\"x\",String(e.x)),t.setAttribute(\"y\",String(e.y)),t.setAttribute(\"xunits\",e.xunits),t.setAttribute(\"yunits\",e.yunits)}),scale:Fl(Jc)});var Tc=Dl(ch,[\"color\",\"scale\"]),bc=Dl(ch,{color:Fl(dc),scale:Fl(Jc)});var Cc=Dl(ch,[\"color\",\"width\"]),Sc=Dl(ch,{color:Fl(dc),width:Fl(Bl)});var Rc={Point:\"Point\",LineString:\"LineString\",LinearRing:\"LinearRing\",Polygon:\"Polygon\",MultiPoint:\"MultiGeometry\",MultiLineString:\"MultiGeometry\",MultiPolygon:\"MultiGeometry\",GeometryCollection:\"MultiGeometry\"},Ic=function(t,e,n){if(t)return Ol(e[e.length-1].node.namespaceURI,Rc[t.getType()])},Pc=Ll(\"Point\"),Fc=Ll(\"LineString\"),Lc=Ll(\"LinearRing\"),Mc=Ll(\"Polygon\"),Ac=Dl(ch,{LineString:Fl(Kc),Point:Fl(Kc),Polygon:Fl(Vc),GeometryCollection:Fl(Dc)});function Dc(t,e,n){var i,r,o={node:t},s=e.getType();s==Cn.GEOMETRY_COLLECTION?(i=e.getGeometries(),r=Ic):s==Cn.MULTI_POINT?(i=e.getPoints(),r=Pc):s==Cn.MULTI_LINE_STRING?(i=e.getLineStrings(),r=Fc):s==Cn.MULTI_POLYGON?(i=e.getPolygons(),r=Mc):ge(!1,39),jl(o,Ac,r,i,n)}var kc=Dl(ch,{LinearRing:Fl(Kc)});function Nc(t,e,n){jl({node:t},kc,Lc,[e],n)}var Gc=Dl(ch,{ExtendedData:Fl(function(t,e,n){for(var i={node:t},r=e.names,o=e.values,s=r.length,a=0;a<s;a++)jl(i,_c,vc,[{name:r[a],value:o[a]}],n)}),MultiGeometry:Fl(Dc),LineString:Fl(Kc),LinearRing:Fl(Kc),Point:Fl(Kc),Polygon:Fl(Vc),Style:Fl(function(t,e,n){var i={node:t},r={},o=e.getFill(),s=e.getStroke(),a=e.getImage(),u=e.getText();a&&\"function\"==typeof a.getSrc&&(r.IconStyle=a);u&&(r.LabelStyle=u);s&&(r.LineStyle=s);o&&(r.PolyStyle=o);var l=n[n.length-1].node,h=Qc[l.namespaceURI],c=Al(r,h);jl(i,$c,Ml,c,n,h)}),address:Fl(Zl),description:Fl(Zl),name:Fl(Zl),open:Fl(Wl),phoneNumber:Fl(Zl),styleUrl:Fl(Zl),visibility:Fl(Wl)}),jc=Dl(ch,[\"name\",\"open\",\"visibility\",\"address\",\"phoneNumber\",\"description\",\"styleUrl\",\"Style\"]),zc=Ll(\"ExtendedData\");function Yc(t,e,n){var i={node:t};e.getId()&&t.setAttribute(\"id\",e.getId());var r=e.getProperties(),o={address:1,description:1,name:1,open:1,phoneNumber:1,styleUrl:1,visibility:1};o[e.getGeometryName()]=1;var s=Object.keys(r||{}).sort().filter(function(t){return!o[t]});if(s.length>0){var a=Al(r,s);jl(i,Gc,zc,[{names:s,values:a}],n)}var u=e.getStyleFunction();if(u){var l=u(e,0);if(l){var h=Array.isArray(l)?l[0]:l;this.writeStyles_&&(r.Style=h);var c=h.getText();c&&(r.name=c.getText())}}var p=n[n.length-1].node,f=jc[p.namespaceURI],d=Al(r,f);jl(i,Gc,Ml,d,n,f);var _=n[0],g=e.getGeometry();g&&(g=el(g,!0,_)),jl(i,Gc,Ic,[g],n)}var Xc=Dl(ch,[\"extrude\",\"tessellate\",\"altitudeMode\",\"coordinates\"]),Uc=Dl(ch,{extrude:Fl(Wl),tessellate:Fl(Wl),altitudeMode:Fl(Zl),coordinates:Fl(function(t,e,n){var i,r=n[n.length-1],o=r.layout,s=r.stride;o==Sn.XY||o==Sn.XYM?i=2:o==Sn.XYZ||o==Sn.XYZM?i=3:ge(!1,34);var a=e.length,u=\"\";if(a>0){u+=e[0];for(var l=1;l<i;++l)u+=\",\"+e[l];for(var h=s;h<a;h+=s)for(u+=\" \"+e[h],l=1;l<i;++l)u+=\",\"+e[h+l]}Zl(t,u)})});function Kc(t,e,n){var i=e.getFlatCoordinates(),r={node:t};r.layout=e.getLayout(),r.stride=e.getStride();var o=e.getProperties();o.coordinates=i;var s=n[n.length-1].node,a=Xc[s.namespaceURI],u=Al(o,a);jl(r,Uc,Ml,u,n,a)}var Wc=Dl(ch,{outerBoundaryIs:Fl(Nc),innerBoundaryIs:Fl(Nc)}),Bc=Ll(\"innerBoundaryIs\"),Zc=Ll(\"outerBoundaryIs\");function Vc(t,e,n){var i=e.getLinearRings(),r=i.shift(),o={node:t};jl(o,Wc,Bc,i,n),jl(o,Wc,Zc,[r],n)}var Hc=Dl(ch,{color:Fl(dc)}),qc=Ll(\"color\");function Jc(t,e){Bl(t,Math.round(1e6*e)/1e6)}var Qc=Dl(ch,[\"IconStyle\",\"LabelStyle\",\"LineStyle\",\"PolyStyle\"]),$c=Dl(ch,{IconStyle:Fl(function(t,e,n){var i={node:t},r={},o=e.getSrc(),s=e.getSize(),a=e.getImageSize(),u={href:o};if(s){u.w=s[0],u.h=s[1];var l=e.getAnchor(),h=e.getOrigin();if(h&&a&&0!==h[0]&&h[1]!==s[1]&&(u.x=h[0],u.y=a[1]-(h[1]+s[1])),l&&(l[0]!==s[0]/2||l[1]!==s[1]/2)){var c={x:l[0],xunits:Vl.PIXELS,y:s[1]-l[1],yunits:Vl.PIXELS};r.hotSpot=c}}r.Icon=u;var p=e.getScale();1!==p&&(r.scale=p);var f=e.getRotation();0!==f&&(r.heading=f);var d=n[n.length-1].node,_=wc[d.namespaceURI],g=Al(r,_);jl(i,Oc,Ml,g,n,_)}),LabelStyle:Fl(function(t,e,n){var i={node:t},r={},o=e.getFill();o&&(r.color=o.getColor());var s=e.getScale();s&&1!==s&&(r.scale=s);var a=n[n.length-1].node,u=Tc[a.namespaceURI],l=Al(r,u);jl(i,bc,Ml,l,n,u)}),LineStyle:Fl(function(t,e,n){var i={node:t},r={color:e.getColor(),width:e.getWidth()},o=n[n.length-1].node,s=Cc[o.namespaceURI],a=Al(r,s);jl(i,Sc,Ml,a,n,s)}),PolyStyle:Fl(function(t,e,n){jl({node:t},Hc,qc,[e.getColor()],n)})});var tp=Sh,ep=n(2),np=n.n(ep);function ip(t,e){const n=Math.pow(10,e);return(Math.round(t*n)/n).toString()}var rp=function(t,e){let n;n=\"animate\"in(e=e||{})?e.animate:{duration:250};const i=t.getView(),r=i.getProjection().getCode();let o,s,a;if(i.isDef())o=i.getZoom(),s=i.getCenter(),a=i.getRotation();else{const e=t.getViewport();o=e?Math.LOG2E*Math.log(e.clientWidth/256):0,s=[0,0],a=0}const u={center:{default:s,serialize:function(t,e){let n;return n=e&&\"zoom\"in e?Math.max(0,Math.ceil(Math.log(e.zoom)/Math.LN2)):3,ip((t=ci(t,r,\"EPSG:4326\"))[0],n)+\",\"+ip(t[1],n)},deserialize:function(t){const e=t.split(\",\");if(2!==e.length)throw new Error(\"Expected lon,lat but got \"+t);return ci([parseFloat(e[0]),parseFloat(e[1])],\"EPSG:4326\",r)}},zoom:{default:o,serialize:function(t){return ip(t,1)},deserialize:Number},rotation:{default:a,serialize:function(t){return ip(t,2)},deserialize:Number}};function l(t){i.isDef()&&n?i.animate(Object.assign({},t,n)):(\"center\"in t&&i.setCenter(t.center),\"zoom\"in t&&i.setZoom(t.zoom),\"rotation\"in t&&i.setRotation(t.rotation))}const h=np.a.register(u,l);function c(){h({center:i.getCenter(),zoom:i.getZoom(),rotation:i.getRotation()})}return t.on(\"moveend\",c),function(){t.un(\"moveend\",c),np.a.unregister(l)}},op=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),sp=\"addfeatures\",ap=function(t){function e(e,n,i,r){var o=t.call(this,e)||this;return o.features=i,o.file=n,o.projection=r,o}return op(e,t),e}(R);function up(t){for(var e=t.dataTransfer.files,n=0,i=e.length;n<i;++n){var r=e.item(n),o=new FileReader;o.addEventListener(F.LOAD,this.handleResult_.bind(this,r)),o.readAsText(r)}}function lp(t){t.stopPropagation(),t.preventDefault(),t.dataTransfer.dropEffect=\"copy\"}var hp=function(t){function e(e){var n=this,i=e||{};return(n=t.call(this,{handleEvent:b})||this).formatConstructors_=i.formatConstructors?i.formatConstructors:[],n.projection_=i.projection?ri(i.projection):null,n.dropListenKeys_=null,n.source_=i.source||null,n.target=i.target?i.target:null,n}return op(e,t),e.prototype.handleResult_=function(t,e){var n=e.target.result,i=this.getMap(),r=this.projection_;r||(r=i.getView().getProjection());for(var o=this.formatConstructors_,s=[],a=0,u=o.length;a<u;++a){var l=new o[a];if((s=this.tryReadFeatures_(l,n,{featureProjection:r}))&&s.length>0)break}this.source_&&(this.source_.clear(),this.source_.addFeatures(s)),this.dispatchEvent(new ap(sp,t,s,r))},e.prototype.registerListeners_=function(){var t=this.getMap();if(t){var e=this.target?this.target:t.getViewport();this.dropListenKeys_=[E(e,F.DROP,up,this),E(e,F.DRAGENTER,lp,this),E(e,F.DRAGOVER,lp,this),E(e,F.DROP,lp,this)]}},e.prototype.setActive=function(e){t.prototype.setActive.call(this,e),e?this.registerListeners_():this.unregisterListeners_()},e.prototype.setMap=function(e){this.unregisterListeners_(),t.prototype.setMap.call(this,e),this.getActive()&&this.registerListeners_()},e.prototype.tryReadFeatures_=function(t,e,n){try{return t.readFeatures(e,n)}catch(t){return null}},e.prototype.unregisterListeners_=function(){this.dropListenKeys_&&(this.dropListenKeys_.forEach(O),this.dropListenKeys_=null)},e}(Vr);const cp=new is({target:\"map-container\",layers:[new zs({source:new zu({url:\"http://tile.stamen.com/terrain/{z}/{x}/{y}.jpg\"})})],view:new hr({center:(pp=[0,0],ci(pp,\"EPSG:4326\",void 0!==fp?fp:\"EPSG:3857\")),zoom:2})});var pp,fp;rp(cp);const dp=new Ju,_p=new Qa({source:dp});cp.addLayer(_p),cp.addInteraction(new hp({source:dp,formatConstructors:[xl,tp]}))}]);","extractedComments":[]}